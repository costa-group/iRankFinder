{
	vars: [x, y],
	initnode: init,
	nodes: {
		exit: { asserts: [[[y == 100]]] },
	    if: {    },
	    init: {    },
    	while: {    },
    },
	transitions: [
		{
			name: t0,
			source: init,
			target: while,
			constraints: [x' = 0, y' = 50]
		},{
			name: t1,
			source: while,
			target: exit,
			constraints: [x >= 100, x' = x, y' = y]
		},{
			name: t2,
			source: while,
			target: if,
			constraints: [x < 100, x' = x + 1, y' = y]
		},{
			name: t3,
			source: if,
			target: while,
			constraints: [x > 50, x' = x, y' = y + 1]
		},{
			name: t4,
			source: if,
			target: while,
			constraints: [x <= 50, x' = x, y' = y]
		}
	],
	c_source:"#include \"assert.h\"
	void foo(){
	int x, y;
		   x=0;
		   y=50;
		   while(x<100) {
		           x=x+1;
		           if (x>50) {
		                   y=y+1;
		           }
		   }
		assert(y==100);
	}"
}