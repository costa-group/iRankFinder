{
  vars: [t,d,s],
  initnode: n0,
  nodes: {
		n5a_assert: { asserts: [[[d<=9]]] },
    	n5b_assert: { asserts: [[[d>=11]]] },
    },
  transitions: [
   {source:n0, target: n1,
    constraints: [t'=0, d'=0,s'=0]
   },
   {source:n1, target: n2,
    constraints: [t'=t, d'=d,s'=s]
   },
   {source:n1, target: n3,
    constraints: [t'=t, d'=d,s'=0]
   },
   {source:n3, target: n6,
    constraints: [t+1=4, t'=t+1, d'=d,s'=0]
   },
   {source:n3, target: n2,
    constraints: [t+1<=3,t'=t+1, d'=d,s'=s]
   },
   {source:n3, target: n2,
    constraints: [t+1>=5,t'=t+1, d'=d,s'=s]
   },
   {source:n2, target: n1,
    constraints: [t'=t, d'=d,s'=s]
   },
   {source:n2, target: n4,
    constraints: [t'=t, d'=d,s'=s]
   },
   {source:n4, target: n6,
    constraints: [s+1=3, t'=t, d'=d,s'=s+1]
   },
   {source:n4, target: n5,
    constraints: [s+1<=2,t'=t, d'=d,s'=s+1]
   },
   {source:n4, target: n5,
    constraints: [s+1>=4,t'=t, d'=d,s'=s+1]
   },
   {source:n5, target: n5a_assert,
    constraints: [d+1>=10, t'=t, d'=d+1,s'=s]
   },
   {source:n5, target: n5b_assert,
    constraints: [d+1<=10, t'=t, d'=d+1,s'=s]
   },
   {source:n5a_assert, target: n1,
    constraints: [t'=t, d'=d,s'=s]
   },
   {source:n5b_assert, target: n1,
    constraints: [t'=t, d'=d,s'=s]
   }
 ],
 c_source: "void m(int sec, int met){
  int t=0,d=0,s=0;
  while(1==1){
    if(sec>0){
      s=0;
      if(t++==4) break;
    }
    if(met>0){
      if(s++==3) break;
      assert(d++ != 10);
    }
  }
}"

}
