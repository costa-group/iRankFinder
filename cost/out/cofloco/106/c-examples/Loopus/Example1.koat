WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb2in___11/9,n_evalfbb3in___9/9]
1. recursive  : [n_evalfbb2in___11_loop_cont/10,n_evalfbb2in___5/9,n_evalfbb3in___13/9,n_evalfbb4in___7/9,n_evalfbb6in___6/9]
2. recursive  : [n_evalfbb2in___15/9,n_evalfbb3in___13_loop_cont/10,n_evalfbb4in___10/9,n_evalfbb6in___2/9]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [n_evalfstop___14/5]
5. non_recursive  : [n_evalfbb6in___1/5]
6. non_recursive  : [n_evalfbb4in___12/5]
7. non_recursive  : [n_evalfbb2in___3/5]
8. non_recursive  : [n_evalfbb6in___4/5]
9. non_recursive  : [n_evalfbb4in___8/5]
10. non_recursive  : [n_evalfbb2in___15_loop_cont/6]
11. non_recursive  : [n_evalfbb6in___16/5]
12. non_recursive  : [n_evalfstart/5]
13. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb2in___11/9
1. SCC is partially evaluated into n_evalfbb3in___13/9
2. SCC is partially evaluated into n_evalfbb2in___15/9
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into n_evalfbb2in___15_loop_cont/6
11. SCC is partially evaluated into n_evalfbb6in___16/5
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb2in___11/9 
* CE 17 is refined into CE [21] 
* CE 20 is refined into CE [22] 
* CE 19 is refined into CE [23] 
* CE 18 is refined into CE [24] 


### Cost equations --> "Loop" of n_evalfbb2in___11/9 
* CEs [24] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [22] --> Loop 21 
* CEs [23] --> Loop 22 

### Ranking functions of CR n_evalfbb2in___11(A,B,C,D,E,F,G,H,I) 
* RF of phase [19]: [-A+B-C-1,B-C-1,B-D]

#### Partial ranking functions of CR n_evalfbb2in___11(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    -A+B-C-1
    B-C-1
    B-D


### Specialization of cost equations n_evalfbb3in___13/9 
* CE 15 is refined into CE [25] 
* CE 12 is refined into CE [26] 
* CE 16 is refined into CE [27] 
* CE 13 is refined into CE [28,29] 
* CE 14 is refined into CE [30,31] 


### Cost equations --> "Loop" of n_evalfbb3in___13/9 
* CEs [30] --> Loop 23 
* CEs [31] --> Loop 24 
* CEs [25] --> Loop 25 
* CEs [26,27] --> Loop 26 
* CEs [29] --> Loop 27 
* CEs [28] --> Loop 28 

### Ranking functions of CR n_evalfbb3in___13(A,B,C,D,E,F,G,H,I) 
* RF of phase [23,24]: [-A+B-2]

#### Partial ranking functions of CR n_evalfbb3in___13(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [23,24]:
  - RF of loop [23:1]:
    -A+B-2
    B-D-1
  - RF of loop [24:1]:
    -A/2+B/2-3/2


### Specialization of cost equations n_evalfbb2in___15/9 
* CE 7 is refined into CE [32] 
* CE 5 is refined into CE [33] 
* CE 8 is refined into CE [34] 
* CE 4 is refined into CE [35,36,37,38] 
* CE 6 is refined into CE [39,40] 


### Cost equations --> "Loop" of n_evalfbb2in___15/9 
* CEs [40] --> Loop 29 
* CEs [39] --> Loop 30 
* CEs [32] --> Loop 31 
* CEs [33,34] --> Loop 32 
* CEs [37] --> Loop 33 
* CEs [38] --> Loop 34 
* CEs [35] --> Loop 35 
* CEs [36] --> Loop 36 

### Ranking functions of CR n_evalfbb2in___15(A,B,C,D,E,F,G,H,I) 
* RF of phase [29,30]: [-A+B-1]

#### Partial ranking functions of CR n_evalfbb2in___15(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [29,30]:
  - RF of loop [29:1]:
    -A/2+B/2-1
  - RF of loop [30:1]:
    -A+B-1
    B-D


### Specialization of cost equations n_evalfbb2in___15_loop_cont/6 
* CE 9 is refined into CE [41] 
* CE 10 is refined into CE [42] 
* CE 11 is refined into CE [43] 


### Cost equations --> "Loop" of n_evalfbb2in___15_loop_cont/6 
* CEs [41] --> Loop 37 
* CEs [42] --> Loop 38 
* CEs [43] --> Loop 39 

### Ranking functions of CR n_evalfbb2in___15_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalfbb2in___15_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalfbb6in___16/5 
* CE 2 is refined into CE [44,45,46,47,48,49,50] 
* CE 3 is refined into CE [51] 


### Cost equations --> "Loop" of n_evalfbb6in___16/5 
* CEs [51] --> Loop 40 
* CEs [45] --> Loop 41 
* CEs [44,46,47,48,49,50] --> Loop 42 

### Ranking functions of CR n_evalfbb6in___16(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb6in___16(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [52,53] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [52] --> Loop 43 
* CEs [53] --> Loop 44 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb2in___11(A,B,C,D,E,F,G,H,I):
* Chain [[19],22]: 2*it(19)+1
  Such that:it(19) =< -C+H

  with precondition: [E=2,A=F,B=G,B=I,B=A+H+1,A+C+1=D,A>=0,D>=A+2,B>=D+1] 

* Chain [[19],21]: 2*it(19)+0
  Such that:it(19) =< B-D

  with precondition: [E=3,D=A+C+1,C>=1,D>=C+1,B>=D+1] 

* Chain [[19],20]: 2*it(19)+2
  Such that:it(19) =< -A-C+I

  with precondition: [E=4,A=F,B=G,A+C+1=D,A+H+1=I,A>=0,D>=A+2,B>=A+H+2,A+H>=D] 

* Chain [22]: 1
  with precondition: [E=2,D=B,A=F,D=G,D=I,D=A+C+1,D=A+H+1,A>=0,D>=A+2] 

* Chain [21]: 0
  with precondition: [E=3,D=A+C+1,A>=0,D>=A+2,B>=D] 

* Chain [20]: 2
  with precondition: [E=4,A=F,B=G,C=H,A+C+1=D,A+C+1=I,A>=0,C>=1,B>=A+C+2] 


#### Cost of chains of n_evalfbb3in___13(A,B,C,D,E,F,G,H,I):
* Chain [[23,24],28]: 6*it(23)+6*it(24)+2*s(4)+2
  Such that:aux(1) =< -D+I+1
s(4) =< -3/2*D+3/2*I
it(24) =< -D/2+I/2
aux(5) =< -D+I
it(23) =< aux(1)
it(24) =< aux(1)
it(23) =< aux(5)
it(24) =< aux(5)

  with precondition: [C=0,E=2,H=1,D=A+1,B=F+2,B=G,B=I,D>=1,B>=D+2] 

* Chain [[23,24],27]: 6*it(23)+6*it(24)+2*s(4)+2*s(5)+2
  Such that:s(4) =< -3/2*A-3/2*H+3/2*I
it(24) =< -A/2-H/2+I/2
s(5) =< H
aux(6) =< -A-H+I
aux(7) =< -A+I
it(23) =< aux(7)
it(24) =< aux(7)
it(23) =< aux(6)
it(24) =< aux(6)

  with precondition: [C=0,E=2,D=A+1,B=G,B=I,B=F+H+1,D>=1,F>=D,B>=F+3] 

* Chain [[23,24],26]: 12*it(23)+4*s(4)+1
  Such that:aux(1) =< B-D+1
aux(8) =< B-D
aux(9) =< 3*B-3*D
it(23) =< aux(8)
s(4) =< aux(9)
it(23) =< aux(1)

  with precondition: [C=0,E=3,D=A+1,D>=1,B>=D+2] 

* Chain [[23,24],25]: 6*it(23)+6*it(24)+2*s(4)+1
  Such that:aux(3) =< -D+G
aux(1) =< -D+G+1
s(4) =< -3/2*D+3/2*I
it(24) =< -D/2+I/2
aux(10) =< -D+I
it(23) =< aux(1)
it(24) =< aux(1)
it(23) =< aux(10)
it(24) =< aux(10)
it(23) =< aux(3)
it(24) =< aux(3)

  with precondition: [C=0,E=5,H=0,D=A+1,I=F+1,B=G,D>=1,I>=D+1,B>=I+1] 

* Chain [28]: 2
  with precondition: [C=0,E=2,H=1,A+2=B,A+1=D,A=F,A+2=G,A+2=I,A>=0] 

* Chain [27]: 2*s(5)+2
  Such that:s(5) =< B-D

  with precondition: [C=0,E=2,D=A+1,D=F+1,B=G,B=I,D+H=B,D>=1,B>=D+2] 

* Chain [26]: 2*s(6)+1
  Such that:s(6) =< B-D

  with precondition: [C=0,E=3,D=A+1,D>=1,B>=D+1] 

* Chain [25]: 1
  with precondition: [C=0,E=5,H=0,D=A+1,D=F+1,B=G,D=I,D>=1,B>=D+1] 


#### Cost of chains of n_evalfbb2in___15(A,B,C,D,E,F,G,H,I):
* Chain [[29,30],36]: 4*it(29)+4*it(30)+2*s(25)+6*s(26)+6*s(27)+3
  Such that:aux(16) =< -D+I+1
aux(18) =< -D+I+3
it(29) =< -D/2+I/2
aux(20) =< -D+I
it(30) =< aux(20)
it(29) =< aux(16)
it(30) =< aux(16)
it(29) =< aux(20)
aux(14) =< aux(18)
it(30) =< aux(18)
aux(14) =< aux(20)
aux(13) =< aux(16)+1
s(26) =< aux(14)* (1/2)
s(25) =< aux(14)* (3/2)
s(28) =< it(29)*aux(16)
s(30) =< it(29)*aux(13)
s(27) =< s(30)
s(26) =< s(30)
s(27) =< aux(14)
s(26) =< aux(14)
s(27) =< s(28)
s(26) =< s(28)

  with precondition: [C=0,E=2,H=1,D=A+1,B=F+2,B=G,B=I,D>=1,B>=D+2] 

* Chain [[29,30],35]: 10*it(29)+4*it(30)+2*s(25)+6*s(26)+6*s(27)+2*s(32)+6*s(35)+3
  Such that:s(32) =< -3*A+3*I
aux(18) =< -A+I+2
aux(21) =< -A+I
aux(22) =< -A/2+I/2
it(30) =< aux(21)
it(29) =< aux(22)
s(35) =< aux(21)
it(29) =< aux(21)
aux(14) =< aux(18)
it(30) =< aux(18)
aux(14) =< aux(21)
aux(13) =< aux(21)+1
s(26) =< aux(14)* (1/2)
s(25) =< aux(14)* (3/2)
s(28) =< it(29)*aux(21)
s(30) =< it(29)*aux(13)
s(27) =< s(30)
s(26) =< s(30)
s(27) =< aux(14)
s(26) =< aux(14)
s(27) =< s(28)
s(26) =< s(28)

  with precondition: [C=0,E=2,H=1,D=A+1,B=F+2,B=G,B=I,D>=1,B>=D+3] 

* Chain [[29,30],34]: 4*it(29)+4*it(30)+2*s(25)+6*s(26)+6*s(27)+2*s(36)+14*s(37)+3
  Such that:aux(18) =< -A+I+2
aux(24) =< -3*A+3*I
aux(25) =< -A+I
it(29) =< aux(24)
s(36) =< aux(24)
it(30) =< aux(25)
s(37) =< aux(25)
it(29) =< aux(25)
it(30) =< aux(24)
aux(14) =< aux(18)
it(30) =< aux(18)
aux(14) =< aux(24)
aux(13) =< aux(25)+1
s(26) =< aux(14)* (1/2)
s(25) =< aux(14)* (3/2)
s(28) =< it(29)*aux(25)
s(30) =< it(29)*aux(13)
s(27) =< s(30)
s(26) =< s(30)
s(27) =< aux(14)
s(26) =< aux(14)
s(27) =< s(28)
s(26) =< s(28)

  with precondition: [C=0,E=2,D=A+1,B=G,B=I,B=F+H+1,D>=1,F>=D+1,B>=F+3] 

* Chain [[29,30],33]: 4*it(29)+4*it(30)+2*s(25)+6*s(26)+6*s(27)+2*s(42)+3
  Such that:aux(18) =< -A+I+2
it(29) =< -A/2-H/2+I/2
s(42) =< H
aux(26) =< -A-H+I
aux(27) =< -A+I
it(30) =< aux(27)
it(29) =< aux(27)
it(29) =< aux(26)
it(30) =< aux(26)
aux(14) =< aux(18)
it(30) =< aux(18)
aux(14) =< aux(26)
aux(13) =< aux(27)+1
s(26) =< aux(14)* (1/2)
s(25) =< aux(14)* (3/2)
s(28) =< it(29)*aux(27)
s(30) =< it(29)*aux(13)
s(27) =< s(30)
s(26) =< s(30)
s(27) =< aux(14)
s(26) =< aux(14)
s(27) =< s(28)
s(26) =< s(28)

  with precondition: [C=0,E=2,D=A+1,B=G,B=I,B=F+H+1,D>=1,F>=D,B>=F+3] 

* Chain [[29,30],32]: 4*it(29)+4*it(30)+2*s(25)+6*s(26)+6*s(27)+2*s(46)+12*s(47)+4*s(48)+2
  Such that:aux(18) =< B-D+3
aux(28) =< B-D
aux(29) =< B-D+1
aux(30) =< 3*B-3*D
it(30) =< aux(28)
it(29) =< aux(30)
s(46) =< aux(28)
s(47) =< aux(28)
s(48) =< aux(30)
s(47) =< aux(29)
it(29) =< aux(29)
it(30) =< aux(29)
it(30) =< aux(30)
aux(14) =< aux(18)
it(30) =< aux(18)
aux(14) =< aux(30)
aux(13) =< aux(29)+1
s(26) =< aux(14)* (1/2)
s(25) =< aux(14)* (3/2)
s(28) =< it(29)*aux(29)
s(30) =< it(29)*aux(13)
s(27) =< s(30)
s(26) =< s(30)
s(27) =< aux(14)
s(26) =< aux(14)
s(27) =< s(28)
s(26) =< s(28)

  with precondition: [C=0,E=3,D=A+1,D>=1,B>=D+1] 

* Chain [[29,30],31]: 4*it(29)+4*it(30)+2*s(25)+6*s(26)+6*s(27)+1
  Such that:aux(16) =< -D+I+1
aux(18) =< -D+I+3
it(29) =< -D/2+I/2
aux(31) =< -D+I
it(30) =< aux(31)
it(29) =< aux(16)
it(30) =< aux(16)
it(29) =< aux(31)
aux(14) =< aux(18)
it(30) =< aux(18)
aux(14) =< aux(31)
aux(13) =< aux(16)+1
s(26) =< aux(14)* (1/2)
s(25) =< aux(14)* (3/2)
s(28) =< it(29)*aux(16)
s(30) =< it(29)*aux(13)
s(27) =< s(30)
s(26) =< s(30)
s(27) =< aux(14)
s(26) =< aux(14)
s(27) =< s(28)
s(26) =< s(28)

  with precondition: [C=0,E=6,H=0,D=A+1,B=F+1,B=G,B=I,D>=1,B>=D+1] 

* Chain [36]: 3
  with precondition: [C=0,E=2,H=1,A+2=B,A+1=D,A=F,A+2=G,A+2=I,A>=0] 

* Chain [35]: 2*s(32)+6*s(33)+6*s(35)+3
  Such that:s(34) =< B-D
s(31) =< B-D+1
s(33) =< B/2-D/2
s(32) =< 3/2*B-3/2*D
s(35) =< s(31)
s(33) =< s(31)
s(35) =< s(34)
s(33) =< s(34)

  with precondition: [C=0,E=2,H=1,D=A+1,B=F+2,B=G,B=I,D>=1,B>=D+2] 

* Chain [34]: 2*s(36)+14*s(37)+3
  Such that:s(36) =< 3*B-3*D+3
aux(23) =< B-D+1
s(37) =< aux(23)

  with precondition: [C=0,E=2,D=A+1,B=G,B=I,B=F+H+1,D>=1,F>=D,B>=F+3] 

* Chain [33]: 2*s(42)+3
  Such that:s(42) =< B-D

  with precondition: [C=0,E=2,D=A+1,D=F+1,B=G,B=I,D+H=B,D>=1,B>=D+2] 

* Chain [32]: 2*s(46)+12*s(47)+4*s(48)+2
  Such that:s(45) =< B-D
s(43) =< B-D+1
s(44) =< 3*B-3*D
s(46) =< s(45)
s(47) =< s(45)
s(48) =< s(44)
s(47) =< s(43)

  with precondition: [C=0,E=3,D=A+1,D>=1,B>=D] 

* Chain [31]: 1
  with precondition: [C=0,E=6,H=0,A+1=B,A+1=D,A=F,A+1=G,A+1=I,A>=0] 


#### Cost of chains of n_evalfbb2in___15_loop_cont(A,B,C,D,E,F):
* Chain [39]: 5
  with precondition: [A=2,C=E,C=B+D+1,B>=0,C>=B+2] 

* Chain [38]: 0
  with precondition: [A=3] 

* Chain [37]: 2
  with precondition: [A=6,D=0,B+1=C,B+1=E,B>=0] 


#### Cost of chains of n_evalfbb6in___16(A,B,C,D,E):
* Chain [42]: 14*s(132)+24*s(138)+2*s(139)+16*s(144)+76*s(146)+18*s(149)+8*s(150)+18*s(153)+6*s(175)+6*s(179)+8*s(180)+8*s(182)+12*s(185)+4*s(186)+12*s(189)+9
  Such that:s(139) =< 3/2*B
aux(44) =< B
aux(45) =< B+2
aux(46) =< 3*B
aux(47) =< B/2
s(146) =< aux(44)
s(132) =< aux(46)
s(138) =< aux(47)
s(144) =< aux(44)
s(147) =< aux(45)
s(144) =< aux(45)
s(147) =< aux(44)
s(148) =< aux(44)+1
s(175) =< s(147)* (1/2)
s(150) =< s(147)* (3/2)
s(177) =< s(146)*aux(44)
s(178) =< s(146)*s(148)
s(179) =< s(178)
s(175) =< s(178)
s(179) =< s(147)
s(175) =< s(147)
s(179) =< s(177)
s(175) =< s(177)
s(180) =< aux(46)
s(182) =< aux(44)
s(180) =< aux(44)
s(182) =< aux(46)
s(184) =< aux(45)
s(182) =< aux(45)
s(184) =< aux(46)
s(185) =< s(184)* (1/2)
s(186) =< s(184)* (3/2)
s(187) =< s(180)*aux(44)
s(188) =< s(180)*s(148)
s(189) =< s(188)
s(185) =< s(188)
s(189) =< s(184)
s(185) =< s(184)
s(189) =< s(187)
s(185) =< s(187)
s(138) =< aux(44)
s(149) =< s(147)* (1/2)
s(151) =< s(138)*aux(44)
s(152) =< s(138)*s(148)
s(153) =< s(152)
s(149) =< s(152)
s(153) =< s(147)
s(149) =< s(147)
s(153) =< s(151)
s(149) =< s(151)

  with precondition: [A=0,B>=1] 

* Chain [41]: 9
  with precondition: [A=0,B=2] 

* Chain [40]: 1
  with precondition: [A=0,0>=B] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [44]: 3
  with precondition: [0>=B] 

* Chain [43]: 2*s(251)+76*s(252)+14*s(253)+24*s(254)+16*s(255)+6*s(258)+8*s(259)+6*s(262)+8*s(263)+8*s(264)+12*s(266)+4*s(267)+12*s(270)+18*s(271)+18*s(274)+11
  Such that:s(247) =< B
s(248) =< B+2
s(249) =< 3*B
s(250) =< B/2
s(251) =< 3/2*B
s(252) =< s(247)
s(253) =< s(249)
s(254) =< s(250)
s(255) =< s(247)
s(256) =< s(248)
s(255) =< s(248)
s(256) =< s(247)
s(257) =< s(247)+1
s(258) =< s(256)* (1/2)
s(259) =< s(256)* (3/2)
s(260) =< s(252)*s(247)
s(261) =< s(252)*s(257)
s(262) =< s(261)
s(258) =< s(261)
s(262) =< s(256)
s(258) =< s(256)
s(262) =< s(260)
s(258) =< s(260)
s(263) =< s(249)
s(264) =< s(247)
s(263) =< s(247)
s(264) =< s(249)
s(265) =< s(248)
s(264) =< s(248)
s(265) =< s(249)
s(266) =< s(265)* (1/2)
s(267) =< s(265)* (3/2)
s(268) =< s(263)*s(247)
s(269) =< s(263)*s(257)
s(270) =< s(269)
s(266) =< s(269)
s(270) =< s(265)
s(266) =< s(265)
s(270) =< s(268)
s(266) =< s(268)
s(254) =< s(247)
s(271) =< s(256)* (1/2)
s(272) =< s(254)*s(247)
s(273) =< s(254)*s(257)
s(274) =< s(273)
s(271) =< s(273)
s(274) =< s(256)
s(271) =< s(256)
s(274) =< s(272)
s(271) =< s(272)

  with precondition: [B>=1] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [44] with precondition: [0>=B] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [43] with precondition: [B>=1] 
    - Upper bound: 253*B+155 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E): nat(B)*100+8+nat(3*B)*22+nat(3/2*B)*2+nat(B+2)*72+nat(B/2)*24+3 
Asymptotic class: n 
* Total analysis performed in 1168 ms.


-- stats
realtime 0:01.32
usertime 1.25
systime 0.01

