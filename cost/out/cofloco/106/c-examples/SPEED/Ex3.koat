MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalEx3bb2in___3/7,n_evalEx3bb3in___4/7]
1. recursive  : [n_evalEx3bb2in___6/7,n_evalEx3bb3in___4_loop_cont/8,n_evalEx3bb4in___2/7]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalEx3stop___5/4]
4. non_recursive  : [n_evalEx3bb4in___1/4]
5. non_recursive  : [n_evalEx3bb2in___6_loop_cont/5]
6. non_recursive  : [n_evalEx3bb4in___7/4]
7. non_recursive  : [n_evalEx3start/4]
8. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalEx3bb3in___4/7
1. SCC is partially evaluated into n_evalEx3bb2in___6/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_evalEx3bb2in___6_loop_cont/5
6. SCC is partially evaluated into n_evalEx3bb4in___7/4
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalEx3bb3in___4/7 
* CE 13 is refined into CE [14] 
* CE 12 is refined into CE [15] 
* CE 10 is refined into CE [16] 
* CE 11 is refined into CE [17] 


### Cost equations --> "Loop" of n_evalEx3bb3in___4/7 
* CEs [17] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR n_evalEx3bb3in___4(A,B,C,D,E,F,G) 
* RF of phase [13]: [C-1]

#### Partial ranking functions of CR n_evalEx3bb3in___4(A,B,C,D,E,F,G) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    C-1


### Specialization of cost equations n_evalEx3bb2in___6/7 
* CE 4 is refined into CE [18] 
* CE 7 is refined into CE [19] 
* CE 5 is refined into CE [20,21] 
* CE 6 is refined into CE [22,23] 


### Cost equations --> "Loop" of n_evalEx3bb2in___6/7 
* CEs [23] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [18,19] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [20] --> Loop 21 

### Ranking functions of CR n_evalEx3bb2in___6(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_evalEx3bb2in___6(A,B,C,D,E,F,G) 
* Partial RF of phase [17,18]:
  - RF of loop [17:1]:
    A-1


### Specialization of cost equations n_evalEx3bb2in___6_loop_cont/5 
* CE 8 is refined into CE [24] 
* CE 9 is refined into CE [25] 


### Cost equations --> "Loop" of n_evalEx3bb2in___6_loop_cont/5 
* CEs [24] --> Loop 22 
* CEs [25] --> Loop 23 

### Ranking functions of CR n_evalEx3bb2in___6_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalEx3bb2in___6_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalEx3bb4in___7/4 
* CE 2 is refined into CE [26,27,28,29,30] 
* CE 3 is refined into CE [31] 


### Cost equations --> "Loop" of n_evalEx3bb4in___7/4 
* CEs [26,27,28] --> Loop 24 
* CEs [31] --> Loop 25 
* CEs [29,30] --> Loop 26 

### Ranking functions of CR n_evalEx3bb4in___7(A,B,C,D) 

#### Partial ranking functions of CR n_evalEx3bb4in___7(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [32,33,34] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [34] --> Loop 27 
* CEs [33] --> Loop 28 
* CEs [32] --> Loop 29 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalEx3bb3in___4(A,B,C,D,E,F,G):
* Chain [[13],16]: 2*it(13)+2
  Such that:it(13) =< C

  with precondition: [D=2,E=0,G=0,B=F,C>=2,A>=C] 

* Chain [[13],15]: 2*it(13)+1
  Such that:it(13) =< C-E

  with precondition: [D=3,B=F,E=G,E>=1,A>=C,C>=E+1] 

* Chain [[13],14]: 2*it(13)+0
  Such that:it(13) =< C

  with precondition: [D=4,C>=2,A>=C] 

* Chain [16]: 2
  with precondition: [C=1,D=2,E=0,G=0,F=B,A>=1] 

* Chain [15]: 1
  with precondition: [D=3,F=B,C=E,C=G,C>=1,A>=C] 

* Chain [14]: 0
  with precondition: [D=4,C>=1,A>=C] 


#### Cost of chains of n_evalEx3bb2in___6(A,B,C,D,E,F,G):
* Chain [[17,18]]...: 5*it(17)+3*it(18)+0
  Such that:aux(3) =< C
it(17) =< aux(3)

  with precondition: [A=C,A>=1] 

* Chain [[17,18],21]: 5*it(17)+3*it(18)+3
  Such that:aux(4) =< C
it(17) =< aux(4)

  with precondition: [D=2,E=0,G=0,A=C,A>=1] 

* Chain [[17,18],20]: 7*it(17)+3*it(18)+3
  Such that:aux(5) =< C
it(17) =< aux(5)

  with precondition: [D=2,E=0,G=0,A=C,A>=2] 

* Chain [[17,18],19]: 7*it(17)+3*it(18)+1
  Such that:aux(6) =< C
it(17) =< aux(6)

  with precondition: [D=4,A=C,A>=1] 

* Chain [21]: 3
  with precondition: [A=1,C=1,D=2,E=0,G=0,F=B] 

* Chain [20]: 2*s(5)+3
  Such that:s(5) =< C

  with precondition: [D=2,E=0,G=0,C=A,F=B,C>=2] 

* Chain [19]: 2*s(6)+1
  Such that:s(6) =< C

  with precondition: [D=4,C=A,C>=1] 


#### Cost of chains of n_evalEx3bb2in___6_loop_cont(A,B,C,D,E):
* Chain [23]: 1
  with precondition: [A=2,B=0,D=0] 

* Chain [22]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalEx3bb4in___7(A,B,C,D):
* Chain [26]...: 10*s(18)+6*s(19)+2
  Such that:aux(9) =< A
s(18) =< aux(9)

  with precondition: [A>=1] 

* Chain [25]: 1
  with precondition: [0>=A] 

* Chain [24]: 23*s(24)+9*s(25)+5
  Such that:aux(10) =< A
s(24) =< aux(10)

  with precondition: [A>=1] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [29]: 3
  with precondition: [0>=A] 

* Chain [28]: 23*s(31)+9*s(32)+7
  Such that:s(30) =< A
s(31) =< s(30)

  with precondition: [A>=1] 

* Chain [27]...: 10*s(34)+6*s(35)+4
  Such that:s(33) =< A
s(34) =< s(33)

  with precondition: [A>=1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [29] with precondition: [0>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [28] with precondition: [A>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [27]... with precondition: [A>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of pyRinit(A,B,C,D): inf 
Asymptotic class: infinity 
* Total analysis performed in 276 ms.


-- stats
realtime 0:00.42
usertime 0.31
systime 0.01

