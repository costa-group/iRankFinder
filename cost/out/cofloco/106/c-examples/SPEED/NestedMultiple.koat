WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalNestedMultiplebb2in___5/11,n_evalNestedMultiplebb3in___3/11]
1. recursive  : [n_evalNestedMultiplebb2in___2/11,n_evalNestedMultiplebb2in___5_loop_cont/12,n_evalNestedMultiplebb3in___7/11,n_evalNestedMultiplebb5in___4/11]
2. non_recursive  : [exit_location/1]
3. recursive  : [n_evalNestedMultiplebb2in___1/11,n_evalNestedMultiplebb5in___6/11]
4. non_recursive  : [n_evalNestedMultiplestop___8/6]
5. non_recursive  : [n_evalNestedMultiplebb5in___6_loop_cont/7]
6. non_recursive  : [n_evalNestedMultiplebb3in___7_loop_cont/7]
7. non_recursive  : [n_evalNestedMultiplebb2in___9/6]
8. non_recursive  : [n_evalNestedMultiplebb5in___10/6]
9. non_recursive  : [n_evalNestedMultiplestart/6]
10. non_recursive  : [pyRinit/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalNestedMultiplebb2in___5/11
1. SCC is partially evaluated into n_evalNestedMultiplebb3in___7/11
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalNestedMultiplebb5in___6/11
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_evalNestedMultiplebb5in___6_loop_cont/7
6. SCC is partially evaluated into n_evalNestedMultiplebb3in___7_loop_cont/7
7. SCC is partially evaluated into n_evalNestedMultiplebb2in___9/6
8. SCC is partially evaluated into n_evalNestedMultiplebb5in___10/6
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into pyRinit/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalNestedMultiplebb2in___5/11 
* CE 21 is refined into CE [25] 
* CE 24 is refined into CE [26] 
* CE 23 is refined into CE [27] 
* CE 22 is refined into CE [28] 


### Cost equations --> "Loop" of n_evalNestedMultiplebb2in___5/11 
* CEs [28] --> Loop 22 
* CEs [25] --> Loop 23 
* CEs [26] --> Loop 24 
* CEs [27] --> Loop 25 

### Ranking functions of CR n_evalNestedMultiplebb2in___5(A,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [22]: [C-E]

#### Partial ranking functions of CR n_evalNestedMultiplebb2in___5(A,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    C-E


### Specialization of cost equations n_evalNestedMultiplebb3in___7/11 
* CE 9 is refined into CE [29,30] 
* CE 10 is refined into CE [31] 
* CE 6 is refined into CE [32] 
* CE 12 is refined into CE [33] 
* CE 7 is refined into CE [34,35] 
* CE 8 is refined into CE [36,37] 
* CE 11 is refined into CE [38] 


### Cost equations --> "Loop" of n_evalNestedMultiplebb3in___7/11 
* CEs [37] --> Loop 26 
* CEs [36] --> Loop 27 
* CEs [38] --> Loop 28 
* CEs [29,30,31] --> Loop 29 
* CEs [32,33] --> Loop 30 
* CEs [35] --> Loop 31 
* CEs [34] --> Loop 32 

### Ranking functions of CR n_evalNestedMultiplebb3in___7(A,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [26,27,28]: [A-B-1]

#### Partial ranking functions of CR n_evalNestedMultiplebb3in___7(A,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [26,27,28]:
  - RF of loop [26:1]:
    C/2-D/2-1
  - RF of loop [26:1,27:1,28:1]:
    A-B-1
  - RF of loop [27:1]:
    C-D-1
    C-E-1


### Specialization of cost equations n_evalNestedMultiplebb5in___6/11 
* CE 17 is refined into CE [39] 
* CE 18 is refined into CE [40] 
* CE 16 is refined into CE [41] 


### Cost equations --> "Loop" of n_evalNestedMultiplebb5in___6/11 
* CEs [41] --> Loop 33 
* CEs [39] --> Loop 34 
* CEs [40] --> Loop 35 

### Ranking functions of CR n_evalNestedMultiplebb5in___6(A,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [33]: [A-B]

#### Partial ranking functions of CR n_evalNestedMultiplebb5in___6(A,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    A-B


### Specialization of cost equations n_evalNestedMultiplebb5in___6_loop_cont/7 
* CE 19 is refined into CE [42] 
* CE 20 is refined into CE [43] 


### Cost equations --> "Loop" of n_evalNestedMultiplebb5in___6_loop_cont/7 
* CEs [42] --> Loop 36 
* CEs [43] --> Loop 37 

### Ranking functions of CR n_evalNestedMultiplebb5in___6_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_evalNestedMultiplebb5in___6_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations n_evalNestedMultiplebb3in___7_loop_cont/7 
* CE 14 is refined into CE [44] 
* CE 13 is refined into CE [45] 
* CE 15 is refined into CE [46,47,48] 


### Cost equations --> "Loop" of n_evalNestedMultiplebb3in___7_loop_cont/7 
* CEs [44] --> Loop 38 
* CEs [45] --> Loop 39 
* CEs [46,47,48] --> Loop 40 

### Ranking functions of CR n_evalNestedMultiplebb3in___7_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_evalNestedMultiplebb3in___7_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations n_evalNestedMultiplebb2in___9/6 
* CE 4 is refined into CE [49,50,51,52,53,54] 
* CE 5 is refined into CE [55,56,57] 


### Cost equations --> "Loop" of n_evalNestedMultiplebb2in___9/6 
* CEs [49] --> Loop 41 
* CEs [50,51,52,53,54] --> Loop 42 
* CEs [55,56,57] --> Loop 43 

### Ranking functions of CR n_evalNestedMultiplebb2in___9(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalNestedMultiplebb2in___9(A,B,C,D,E,F) 


### Specialization of cost equations n_evalNestedMultiplebb5in___10/6 
* CE 2 is refined into CE [58,59] 
* CE 3 is refined into CE [60] 


### Cost equations --> "Loop" of n_evalNestedMultiplebb5in___10/6 
* CEs [58] --> Loop 44 
* CEs [59] --> Loop 45 
* CEs [60] --> Loop 46 

### Ranking functions of CR n_evalNestedMultiplebb5in___10(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalNestedMultiplebb5in___10(A,B,C,D,E,F) 


### Specialization of cost equations pyRinit/6 
* CE 1 is refined into CE [61,62,63] 


### Cost equations --> "Loop" of pyRinit/6 
* CEs [61] --> Loop 47 
* CEs [62] --> Loop 48 
* CEs [63] --> Loop 49 

### Ranking functions of CR pyRinit(A,B,C,D,E,F) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F) 


Computing Bounds
=====================================

#### Cost of chains of n_evalNestedMultiplebb2in___5(A,B,C,D,E,F,G,H,I,J,K):
* Chain [[22],25]: 2*it(22)+1
  Such that:it(22) =< C-E

  with precondition: [F=2,A=G,B+1=H,C=I,C=J,C=K,A>=B+1,E>=D+1,C>=E+1] 

* Chain [[22],24]: 2*it(22)+0
  Such that:it(22) =< C-E

  with precondition: [F=3,A>=B+1,E>=D+1,C>=E+1] 

* Chain [[22],23]: 2*it(22)+2
  Such that:it(22) =< -E+J

  with precondition: [F=4,A=G,B+1=H,C=I,J=K,A>=B+1,E>=D+1,J>=E+1,C>=J+1] 

* Chain [25]: 1
  with precondition: [F=2,E=C,A=G,B+1=H,E=I,E=J,E=K,A>=B+1,E>=D+1] 

* Chain [24]: 0
  with precondition: [F=3,A>=B+1,E>=D+1,C>=E] 

* Chain [23]: 2
  with precondition: [F=4,A=G,B+1=H,C=I,E=J,E=K,A>=B+1,E>=D+1,C>=E+1] 


#### Cost of chains of n_evalNestedMultiplebb3in___7(A,B,C,D,E,F,G,H,I,J,K):
* Chain [[26,27,28],32]: 5*it(26)+5*it(27)+3*it(28)+2*s(4)+2
  Such that:aux(1) =< A-B
aux(2) =< -B+H
it(26) =< C/2-E/2
aux(5) =< C-E
it(27) =< aux(5)
it(26) =< aux(1)
it(27) =< aux(1)
it(28) =< aux(1)
it(26) =< aux(2)
it(27) =< aux(2)
it(28) =< aux(2)
s(4) =< aux(5)

  with precondition: [F=2,D=E,A=G,C=I,C=J,C=K,H>=B+2,C>=D+1,A>=H] 

* Chain [[26,27,28],31]: 10*it(26)+3*it(28)+4*s(4)+2
  Such that:aux(1) =< A-B
aux(2) =< -B+H
aux(6) =< C-E
it(26) =< aux(6)
s(4) =< aux(6)
it(26) =< aux(1)
it(28) =< aux(1)
it(26) =< aux(2)
it(28) =< aux(2)

  with precondition: [F=2,D=E,A=G,C=I,C=J,C=K,H>=B+2,C>=D+2,A>=H] 

* Chain [[26,27,28],30]: 10*it(26)+3*it(28)+4*s(4)+1
  Such that:aux(7) =< A-B
aux(8) =< C-D
it(26) =< aux(8)
s(4) =< aux(8)
it(26) =< aux(7)
it(28) =< aux(7)

  with precondition: [F=3,D=E,A>=B+2,C>=D+1] 

* Chain [[26,27,28],29]: 10*it(26)+3*it(28)+4*s(4)+4
  Such that:aux(9) =< A-B
aux(10) =< C-D
it(26) =< aux(10)
s(4) =< aux(10)
it(26) =< aux(9)
it(28) =< aux(9)

  with precondition: [F=5,D=E,A>=B+2,C>=D+1] 

* Chain [32]: 2
  with precondition: [F=2,D+1=C,D=E,A=G,B+1=H,D+1=I,D+1=J,D+1=K,A>=B+1] 

* Chain [31]: 2*s(5)+2
  Such that:s(5) =< C-D

  with precondition: [F=2,E=D,A=G,B+1=H,C=I,C=J,C=K,A>=B+1,C>=E+2] 

* Chain [30]: 2*s(6)+1
  Such that:s(6) =< C-D

  with precondition: [F=3,E=D,A>=B+1,C>=E+1] 

* Chain [29]: 2*s(7)+4
  Such that:s(7) =< C-E

  with precondition: [F=5,B+1=A,E=D,C>=E+1] 


#### Cost of chains of n_evalNestedMultiplebb5in___6(A,B,C,D,E,F,G,H,I,J,K):
* Chain [[33],35]: 2*it(33)+0
  Such that:it(33) =< A-B

  with precondition: [F=3,D=E,A>=B+1,D>=C] 

* Chain [[33],34]: 2*it(33)+1
  Such that:it(33) =< A-B

  with precondition: [F=5,D=E,A>=B+1,D>=C] 

* Chain [35]: 0
  with precondition: [F=3] 

* Chain [34]: 1
  with precondition: [F=5,B=A,D=E,D>=C] 


#### Cost of chains of n_evalNestedMultiplebb5in___6_loop_cont(A,B,C,D,E,F,G):
* Chain [37]: 0
  with precondition: [A=3] 

* Chain [36]: 0
  with precondition: [A=5] 


#### Cost of chains of n_evalNestedMultiplebb3in___7_loop_cont(A,B,C,D,E,F,G):
* Chain [40]: 4*s(28)+1
  Such that:aux(15) =< B-C
s(28) =< aux(15)

  with precondition: [A=2] 

* Chain [39]: 0
  with precondition: [A=3] 

* Chain [38]: 0
  with precondition: [A=5] 


#### Cost of chains of n_evalNestedMultiplebb2in___9(A,B,C,D,E,F):
* Chain [43]: 4*s(30)+2
  Such that:aux(16) =< A-B
s(30) =< aux(16)

  with precondition: [E=D,A>=B+1,E>=C] 

* Chain [42]: 20*s(32)+20*s(34)+5*s(35)+35*s(39)+5
  Such that:s(35) =< C/2-E/2
aux(18) =< A-B
aux(19) =< C-E
s(32) =< aux(19)
s(34) =< aux(18)
s(39) =< aux(19)
s(39) =< aux(18)
s(35) =< aux(18)

  with precondition: [E=D,A>=B+1,C>=E+1] 

* Chain [41]: 4*s(56)+4
  Such that:s(55) =< A-B
s(56) =< s(55)

  with precondition: [D+1=C,D=E,A>=B+1] 


#### Cost of chains of n_evalNestedMultiplebb5in___10(A,B,C,D,E,F):
* Chain [46]: 1
  with precondition: [B>=A] 

* Chain [45]: 4*s(66)+3
  Such that:s(65) =< A-B
s(66) =< s(65)

  with precondition: [A>=B+1,D>=C] 

* Chain [44]: 5*s(68)+24*s(70)+20*s(71)+35*s(72)+6
  Such that:s(69) =< A-B
s(67) =< C-D
s(68) =< C/2-D/2
s(70) =< s(69)
s(71) =< s(67)
s(72) =< s(67)
s(72) =< s(69)
s(68) =< s(69)

  with precondition: [A>=B+1,C>=D+1] 


#### Cost of chains of pyRinit(A,B,C,D,E,F):
* Chain [49]: 5*s(75)+24*s(76)+20*s(77)+35*s(78)+8
  Such that:s(73) =< -A+B
s(74) =< -C+D
s(75) =< -C/2+D/2
s(76) =< s(73)
s(77) =< s(74)
s(78) =< s(74)
s(78) =< s(73)
s(75) =< s(73)

  with precondition: [B>=A+1,D>=C+1] 

* Chain [48]: 4*s(80)+5
  Such that:s(79) =< -A+B
s(80) =< s(79)

  with precondition: [B>=A+1,C>=D] 

* Chain [47]: 3
  with precondition: [A>=B] 


Closed-form bounds of pyRinit(A,B,C,D,E,F): 
-------------------------------------
* Chain [49] with precondition: [B>=A+1,D>=C+1] 
    - Upper bound: -24*A+24*B-115/2*C+115/2*D+8 
    - Complexity: n 
* Chain [48] with precondition: [B>=A+1,C>=D] 
    - Upper bound: -4*A+4*B+5 
    - Complexity: n 
* Chain [47] with precondition: [A>=B] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C,D,E,F): nat(-A+B)*20+3+nat(-C+D)*55+nat(-C/2+D/2)*5+ (nat(-A+B)*4+2)+3 
Asymptotic class: n 
* Total analysis performed in 847 ms.


-- stats
realtime 0:00.93
usertime 0.90
systime 0.00

