WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalSequentialSinglebb1in___6/5,n_evalSequentialSinglebb2in___5/5]
1. non_recursive  : [exit_location/1]
2. recursive  : [n_evalSequentialSinglebb5in___2/5]
3. non_recursive  : [n_evalSequentialSinglestop___1/3]
4. non_recursive  : [n_evalSequentialSinglebb5in___2_loop_cont/4]
5. non_recursive  : [n_evalSequentialSinglebb5in___3/3]
6. non_recursive  : [n_evalSequentialSinglebb5in___4/3]
7. non_recursive  : [n_evalSequentialSinglebb1in___6_loop_cont/4]
8. non_recursive  : [n_evalSequentialSinglestart/3]
9. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalSequentialSinglebb1in___6/5
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into n_evalSequentialSinglebb5in___2/5
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalSequentialSinglebb5in___2_loop_cont/4
5. SCC is partially evaluated into n_evalSequentialSinglebb5in___3/3
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into n_evalSequentialSinglebb1in___6_loop_cont/4
8. SCC is partially evaluated into n_evalSequentialSinglestart/3
9. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalSequentialSinglebb1in___6/5 
* CE 3 is refined into CE [16] 
* CE 6 is refined into CE [17] 
* CE 5 is refined into CE [18] 
* CE 4 is refined into CE [19] 


### Cost equations --> "Loop" of n_evalSequentialSinglebb1in___6/5 
* CEs [19] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [18] --> Loop 19 

### Ranking functions of CR n_evalSequentialSinglebb1in___6(A,B,C,D,E) 
* RF of phase [16]: [-A+B]

#### Partial ranking functions of CR n_evalSequentialSinglebb1in___6(A,B,C,D,E) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    -A+B


### Specialization of cost equations n_evalSequentialSinglebb5in___2/5 
* CE 12 is refined into CE [20] 
* CE 13 is refined into CE [21] 
* CE 11 is refined into CE [22] 


### Cost equations --> "Loop" of n_evalSequentialSinglebb5in___2/5 
* CEs [22] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [21] --> Loop 22 

### Ranking functions of CR n_evalSequentialSinglebb5in___2(A,B,C,D,E) 
* RF of phase [20]: [-A+B]

#### Partial ranking functions of CR n_evalSequentialSinglebb5in___2(A,B,C,D,E) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    -A+B


### Specialization of cost equations n_evalSequentialSinglebb5in___2_loop_cont/4 
* CE 14 is refined into CE [23] 
* CE 15 is refined into CE [24] 


### Cost equations --> "Loop" of n_evalSequentialSinglebb5in___2_loop_cont/4 
* CEs [23] --> Loop 23 
* CEs [24] --> Loop 24 

### Ranking functions of CR n_evalSequentialSinglebb5in___2_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evalSequentialSinglebb5in___2_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evalSequentialSinglebb5in___3/3 
* CE 10 is refined into CE [25,26,27] 


### Cost equations --> "Loop" of n_evalSequentialSinglebb5in___3/3 
* CEs [25,26,27] --> Loop 25 

### Ranking functions of CR n_evalSequentialSinglebb5in___3(A,B,C) 

#### Partial ranking functions of CR n_evalSequentialSinglebb5in___3(A,B,C) 


### Specialization of cost equations n_evalSequentialSinglebb1in___6_loop_cont/4 
* CE 9 is refined into CE [28] 
* CE 8 is refined into CE [29] 
* CE 7 is refined into CE [30] 


### Cost equations --> "Loop" of n_evalSequentialSinglebb1in___6_loop_cont/4 
* CEs [28] --> Loop 26 
* CEs [29] --> Loop 27 
* CEs [30] --> Loop 28 

### Ranking functions of CR n_evalSequentialSinglebb1in___6_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evalSequentialSinglebb1in___6_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evalSequentialSinglestart/3 
* CE 2 is refined into CE [31,32,33,34,35] 


### Cost equations --> "Loop" of n_evalSequentialSinglestart/3 
* CEs [31,32,33,34,35] --> Loop 29 

### Ranking functions of CR n_evalSequentialSinglestart(A,B,C) 

#### Partial ranking functions of CR n_evalSequentialSinglestart(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [36] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [36] --> Loop 30 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_evalSequentialSinglebb1in___6(A,B,C,D,E):
* Chain [[16],19]: 2*it(16)+1
  Such that:it(16) =< -A+E

  with precondition: [C=2,B=D,B=E,A>=0,B>=A+1] 

* Chain [[16],18]: 2*it(16)+0
  Such that:it(16) =< -A+B

  with precondition: [C=3,A>=0,B>=A+1] 

* Chain [[16],17]: 2*it(16)+2
  Such that:it(16) =< -A+D

  with precondition: [C=4,B=E,A>=0,D>=A+1,B>=D+1] 

* Chain [19]: 1
  with precondition: [C=2,A=D,B=E,A>=0,A>=B] 

* Chain [18]: 0
  with precondition: [C=3,A>=0] 

* Chain [17]: 2
  with precondition: [C=4,A=D,B=E,A>=0,B>=A+1] 


#### Cost of chains of n_evalSequentialSinglebb5in___2(A,B,C,D,E):
* Chain [[20],22]: 1*it(20)+0
  Such that:it(20) =< -A+B

  with precondition: [C=3,A>=1,B>=A+1] 

* Chain [[20],21]: 1*it(20)+1
  Such that:it(20) =< -A+B

  with precondition: [C=5,A>=1,B>=A+1] 

* Chain [22]: 0
  with precondition: [C=3,A>=1,B>=A] 

* Chain [21]: 1
  with precondition: [C=5,B=A,B>=1] 


#### Cost of chains of n_evalSequentialSinglebb5in___2_loop_cont(A,B,C,D):
* Chain [24]: 0
  with precondition: [A=3] 

* Chain [23]: 0
  with precondition: [A=5] 


#### Cost of chains of n_evalSequentialSinglebb5in___3(A,B,C):
* Chain [25]: 2*s(3)+2
  Such that:aux(1) =< -A+B
s(3) =< aux(1)

  with precondition: [A>=0,B>=A+1] 


#### Cost of chains of n_evalSequentialSinglebb1in___6_loop_cont(A,B,C,D):
* Chain [28]: 1
  with precondition: [A=2,B>=0,B>=C] 

* Chain [27]: 0
  with precondition: [A=3] 

* Chain [26]: 2*s(6)+2
  Such that:s(5) =< -B+C
s(6) =< s(5)

  with precondition: [A=4,B>=0,C>=B+1] 


#### Cost of chains of n_evalSequentialSinglestart(A,B,C):
* Chain [29]: 10*s(7)+5
  Such that:aux(3) =< B
s(7) =< aux(3)

  with precondition: [] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [30]: 10*s(15)+6
  Such that:s(14) =< B
s(15) =< s(14)

  with precondition: [] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [30] with precondition: [] 
    - Upper bound: nat(B)*10+6 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C): nat(B)*10+6 
Asymptotic class: n 
* Total analysis performed in 173 ms.


-- stats
realtime 0:00.22
usertime 0.20
systime 0.00

