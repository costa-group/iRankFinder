WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb2in___5/7,n_evalfbb2in___7/7,n_evalfbb4in___2/7]
1. recursive  : [n_evalfbb2in___3/7]
2. recursive  : [n_evalfbb2in___3_loop_cont/8,n_evalfbb2in___7_loop_cont/8,n_evalfbb4in___8/7]
3. non_recursive  : [exit_location/1]
4. recursive  : [n_evalfbb2in___1/7,n_evalfbb4in___4/7]
5. non_recursive  : [n_evalfstop___6/4]
6. non_recursive  : [n_evalfbb4in___4_loop_cont/5]
7. non_recursive  : [n_evalfbb4in___8_loop_cont/5]
8. non_recursive  : [n_evalfstart/4]
9. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb2in___7/7
1. SCC is partially evaluated into n_evalfbb2in___3/7
2. SCC is partially evaluated into n_evalfbb4in___8/7
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalfbb4in___4/7
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into n_evalfbb4in___4_loop_cont/5
7. SCC is partially evaluated into n_evalfbb4in___8_loop_cont/5
8. SCC is partially evaluated into n_evalfstart/4
9. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb2in___7/7 
* CE 16 is refined into CE [26] 
* CE 13 is refined into CE [27] 
* CE 17 is refined into CE [28] 
* CE 15 is refined into CE [29] 
* CE 14 is refined into CE [30] 


### Cost equations --> "Loop" of n_evalfbb2in___7/7 
* CEs [30] --> Loop 24 
* CEs [26] --> Loop 25 
* CEs [27] --> Loop 26 
* CEs [28] --> Loop 27 
* CEs [29] --> Loop 28 

### Ranking functions of CR n_evalfbb2in___7(A,B,C,D,E,F,G) 
* RF of phase [24]: [B-1]

#### Partial ranking functions of CR n_evalfbb2in___7(A,B,C,D,E,F,G) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    B-1


### Specialization of cost equations n_evalfbb2in___3/7 
* CE 20 is refined into CE [31] 
* CE 19 is refined into CE [32] 
* CE 18 is refined into CE [33] 


### Cost equations --> "Loop" of n_evalfbb2in___3/7 
* CEs [33] --> Loop 29 
* CEs [31] --> Loop 30 
* CEs [32] --> Loop 31 

### Ranking functions of CR n_evalfbb2in___3(A,B,C,D,E,F,G) 
* RF of phase [29]: [C]

#### Partial ranking functions of CR n_evalfbb2in___3(A,B,C,D,E,F,G) 
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    C


### Specialization of cost equations n_evalfbb4in___8/7 
* CE 3 is refined into CE [34,35] 
* CE 8 is refined into CE [36] 
* CE 5 is refined into CE [37] 
* CE 4 is refined into CE [38] 
* CE 7 is refined into CE [39] 
* CE 9 is refined into CE [40] 
* CE 6 is refined into CE [41,42] 


### Cost equations --> "Loop" of n_evalfbb4in___8/7 
* CEs [42] --> Loop 32 
* CEs [41] --> Loop 33 
* CEs [36] --> Loop 34 
* CEs [37] --> Loop 35 
* CEs [38,39,40] --> Loop 36 
* CEs [35] --> Loop 37 
* CEs [34] --> Loop 38 

### Ranking functions of CR n_evalfbb4in___8(A,B,C,D,E,F,G) 
* RF of phase [32]: [B]
* RF of phase [33]: [B]

#### Partial ranking functions of CR n_evalfbb4in___8(A,B,C,D,E,F,G) 
* Partial RF of phase [32]:
  - RF of loop [32:1]:
    B
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    B


### Specialization of cost equations n_evalfbb4in___4/7 
* CE 23 is refined into CE [43] 
* CE 22 is refined into CE [44] 
* CE 21 is refined into CE [45] 


### Cost equations --> "Loop" of n_evalfbb4in___4/7 
* CEs [45] --> Loop 39 
* CEs [43] --> Loop 40 
* CEs [44] --> Loop 41 

### Ranking functions of CR n_evalfbb4in___4(A,B,C,D,E,F,G) 
* RF of phase [39]: [B]

#### Partial ranking functions of CR n_evalfbb4in___4(A,B,C,D,E,F,G) 
* Partial RF of phase [39]:
  - RF of loop [39:1]:
    B


### Specialization of cost equations n_evalfbb4in___4_loop_cont/5 
* CE 24 is refined into CE [46] 
* CE 25 is refined into CE [47] 


### Cost equations --> "Loop" of n_evalfbb4in___4_loop_cont/5 
* CEs [46] --> Loop 42 
* CEs [47] --> Loop 43 

### Ranking functions of CR n_evalfbb4in___4_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb4in___4_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalfbb4in___8_loop_cont/5 
* CE 10 is refined into CE [48] 
* CE 12 is refined into CE [49,50,51] 
* CE 11 is refined into CE [52] 


### Cost equations --> "Loop" of n_evalfbb4in___8_loop_cont/5 
* CEs [48] --> Loop 44 
* CEs [49,50,51] --> Loop 45 
* CEs [52] --> Loop 46 

### Ranking functions of CR n_evalfbb4in___8_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb4in___8_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalfstart/4 
* CE 2 is refined into CE [53,54,55,56,57,58,59] 


### Cost equations --> "Loop" of n_evalfstart/4 
* CEs [53,54,55,56,57,58,59] --> Loop 47 

### Ranking functions of CR n_evalfstart(A,B,C,D) 

#### Partial ranking functions of CR n_evalfstart(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [60] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [60] --> Loop 48 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb2in___7(A,B,C,D,E,F,G):
* Chain [[24],28]: 3*it(24)+3
  Such that:it(24) =< B

  with precondition: [A=1,C=1,D=6,B>=2] 

* Chain [[24],27]: 3*it(24)+0
  Such that:it(24) =< B

  with precondition: [A=1,C=1,D=3,B>=2] 

* Chain [28]: 3
  with precondition: [A=1,B=1,C=1,D=6] 

* Chain [27]: 0
  with precondition: [D=3,C=A,B>=1] 

* Chain [26]: 2
  with precondition: [D=4,C=A,C=E,B=F,C=G+2,B>=1,C>=2] 

* Chain [25]: 1
  with precondition: [D=5,C=A,C=E,B=F+1,C=G,0>=C,B>=1] 


#### Cost of chains of n_evalfbb2in___3(A,B,C,D,E,F,G):
* Chain [[29],31]: 1*it(29)+1
  Such that:it(29) =< C

  with precondition: [D=2,G=0,A=E,B=F+1,B>=1,C>=1,A>=C+2] 

* Chain [[29],30]: 1*it(29)+0
  Such that:it(29) =< C

  with precondition: [D=3,B>=1,C>=1,A>=C+2] 

* Chain [31]: 1
  with precondition: [C=0,D=2,G=0,A=E,B=F+1,A>=2,B>=1] 

* Chain [30]: 0
  with precondition: [D=3] 


#### Cost of chains of n_evalfbb4in___8(A,B,C,D,E,F,G):
* Chain [[33],36]: 7*it(33)+1*s(4)+3
  Such that:s(4) =< 2
aux(1) =< B
it(33) =< aux(1)

  with precondition: [A=2,D=3,B>=1] 

* Chain [[33],34]: 4*it(33)+1
  Such that:it(33) =< B

  with precondition: [A=2,D=6,B>=1] 

* Chain [[32],36]: 7*it(32)+1*s(4)+1*s(7)+3
  Such that:aux(3) =< A
aux(4) =< B
s(4) =< aux(3)
it(32) =< aux(4)
s(7) =< it(32)*aux(3)

  with precondition: [D=3,A>=3,B>=1] 

* Chain [[32],34]: 4*it(32)+1*s(7)+1
  Such that:aux(2) =< A
it(32) =< B
s(7) =< it(32)*aux(2)

  with precondition: [D=6,A>=3,B>=1] 

* Chain [38]: 4
  with precondition: [A=1,B=1,D=6] 

* Chain [37]: 3*s(8)+4
  Such that:s(8) =< B

  with precondition: [A=1,D=6,B>=2] 

* Chain [36]: 3*s(3)+1*s(4)+3
  Such that:s(4) =< A
s(3) =< B

  with precondition: [D=3] 

* Chain [35]: 2
  with precondition: [D=5,A=E,B=F+1,A=G,0>=A,B>=1] 

* Chain [34]: 1
  with precondition: [D=6,0>=B] 


#### Cost of chains of n_evalfbb4in___4(A,B,C,D,E,F,G):
* Chain [[39],41]: 2*it(39)+1
  Such that:it(39) =< B

  with precondition: [D=6,A=C,0>=A,B>=1] 

* Chain [[39],40]: 2*it(39)+0
  Such that:it(39) =< B

  with precondition: [D=3,A=C,0>=A,B>=1] 

* Chain [41]: 1
  with precondition: [B=0,D=6,A=C,0>=A] 

* Chain [40]: 0
  with precondition: [D=3] 


#### Cost of chains of n_evalfbb4in___4_loop_cont(A,B,C,D,E):
* Chain [43]: 0
  with precondition: [A=3] 

* Chain [42]: 0
  with precondition: [A=6] 


#### Cost of chains of n_evalfbb4in___8_loop_cont(A,B,C,D,E):
* Chain [46]: 0
  with precondition: [A=3] 

* Chain [45]: 4*s(20)+1
  Such that:aux(7) =< C
s(20) =< aux(7)

  with precondition: [A=5] 

* Chain [44]: 0
  with precondition: [A=6] 


#### Cost of chains of n_evalfstart(A,B,C,D):
* Chain [47]: 32*s(22)+1*s(23)+2*s(26)+2*s(28)+5
  Such that:s(23) =< 2
aux(8) =< A
aux(9) =< B
s(22) =< aux(8)
s(26) =< aux(9)
s(28) =< s(22)*aux(9)

  with precondition: [] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [48]: 1*s(35)+32*s(38)+2*s(39)+2*s(40)+6
  Such that:s(35) =< 2
s(36) =< A
s(37) =< B
s(38) =< s(36)
s(39) =< s(37)
s(40) =< s(38)*s(37)

  with precondition: [] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [48] with precondition: [] 
    - Upper bound: nat(A)*32+8+nat(B)*2+nat(B)*2*nat(A) 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D): nat(A)*32+8+nat(B)*2+nat(B)*2*nat(A) 
Asymptotic class: n^2 
* Total analysis performed in 449 ms.


-- stats
realtime 0:00.55
usertime 0.49
systime 0.00

