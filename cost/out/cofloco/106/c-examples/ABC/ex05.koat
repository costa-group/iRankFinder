WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb2in___1/7]
1. recursive  : [n_evalfbb2in___1_loop_cont/8,n_evalfbb2in___2/7,n_evalfbb4in___3/7]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalfstop___5/4]
4. non_recursive  : [n_evalfbb4in___3_loop_cont/5]
5. non_recursive  : [n_evalfbb2in___4/4]
6. non_recursive  : [n_evalfbb2in___6/4]
7. non_recursive  : [n_evalfbb4in___7/4]
8. non_recursive  : [n_evalfstart/4]
9. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb2in___1/7
1. SCC is partially evaluated into n_evalfbb4in___3/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalfbb4in___3_loop_cont/5
5. SCC is partially evaluated into n_evalfbb2in___4/4
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into n_evalfbb4in___7/4
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb2in___1/7 
* CE 13 is refined into CE [14] 
* CE 12 is refined into CE [15] 
* CE 11 is refined into CE [16] 


### Cost equations --> "Loop" of n_evalfbb2in___1/7 
* CEs [16] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

### Ranking functions of CR n_evalfbb2in___1(A,B,C,D,E,F,G) 
* RF of phase [13]: [A-C+1,B-C+1]

#### Partial ranking functions of CR n_evalfbb2in___1(A,B,C,D,E,F,G) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    A-C+1
    B-C+1


### Specialization of cost equations n_evalfbb4in___3/7 
* CE 7 is refined into CE [17] 
* CE 5 is refined into CE [18] 
* CE 8 is refined into CE [19] 
* CE 6 is refined into CE [20] 


### Cost equations --> "Loop" of n_evalfbb4in___3/7 
* CEs [20] --> Loop 16 
* CEs [17] --> Loop 17 
* CEs [18,19] --> Loop 18 

### Ranking functions of CR n_evalfbb4in___3(A,B,C,D,E,F,G) 
* RF of phase [16]: [-A+B+1,B-C+1]

#### Partial ranking functions of CR n_evalfbb4in___3(A,B,C,D,E,F,G) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    -A+B+1
    B-C+1


### Specialization of cost equations n_evalfbb4in___3_loop_cont/5 
* CE 9 is refined into CE [21] 
* CE 10 is refined into CE [22] 


### Cost equations --> "Loop" of n_evalfbb4in___3_loop_cont/5 
* CEs [21] --> Loop 19 
* CEs [22] --> Loop 20 

### Ranking functions of CR n_evalfbb4in___3_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb4in___3_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalfbb2in___4/4 
* CE 4 is refined into CE [23,24,25] 


### Cost equations --> "Loop" of n_evalfbb2in___4/4 
* CEs [23,24,25] --> Loop 21 

### Ranking functions of CR n_evalfbb2in___4(A,B,C,D) 

#### Partial ranking functions of CR n_evalfbb2in___4(A,B,C,D) 


### Specialization of cost equations n_evalfbb4in___7/4 
* CE 2 is refined into CE [26] 
* CE 3 is refined into CE [27] 


### Cost equations --> "Loop" of n_evalfbb4in___7/4 
* CEs [26] --> Loop 22 
* CEs [27] --> Loop 23 

### Ranking functions of CR n_evalfbb4in___7(A,B,C,D) 

#### Partial ranking functions of CR n_evalfbb4in___7(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [28,29] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [29] --> Loop 24 
* CEs [28] --> Loop 25 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb2in___1(A,B,C,D,E,F,G):
* Chain [[13],15]: 1*it(13)+1
  Such that:it(13) =< -C+G

  with precondition: [D=2,A+1=E,B=F,A+1=G,C>=2,B>=A,A>=C] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< A-C+1

  with precondition: [D=3,C>=2,B>=A,A>=C] 

* Chain [14]: 0
  with precondition: [D=3,A>=2,C>=2,B>=A] 


#### Cost of chains of n_evalfbb4in___3(A,B,C,D,E,F,G):
* Chain [[16],18]: 3*it(16)+1*s(2)+1*s(5)+2
  Such that:it(16) =< B-C+1
aux(2) =< B+1
s(2) =< aux(2)
s(5) =< it(16)*aux(2)

  with precondition: [D=3,A=C,A>=2,B>=A] 

* Chain [[16],17]: 3*it(16)+1*s(5)+1
  Such that:aux(1) =< B+1
it(16) =< B-C+1
s(5) =< it(16)*aux(1)

  with precondition: [D=4,A=C,A>=2,B>=A] 

* Chain [18]: 1*s(2)+2
  Such that:s(2) =< C

  with precondition: [D=3,C=A,C>=2,B+1>=C] 

* Chain [17]: 1
  with precondition: [D=4,A=B+1,A=C,A>=2] 


#### Cost of chains of n_evalfbb4in___3_loop_cont(A,B,C,D,E):
* Chain [20]: 0
  with precondition: [A=3] 

* Chain [19]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalfbb2in___4(A,B,C,D):
* Chain [21]: 6*s(12)+1*s(13)+1*s(14)+2*s(15)+3
  Such that:s(13) =< 2
aux(3) =< B
aux(4) =< B+1
s(12) =< aux(3)
s(14) =< aux(4)
s(15) =< s(12)*aux(4)

  with precondition: [A=1,C=2,B>=1] 


#### Cost of chains of n_evalfbb4in___7(A,B,C,D):
* Chain [23]: 1
  with precondition: [A=1,0>=B] 

* Chain [22]: 1*s(19)+6*s(22)+1*s(23)+2*s(24)+5
  Such that:s(19) =< 2
s(20) =< B
s(21) =< B+1
s(22) =< s(20)
s(23) =< s(21)
s(24) =< s(22)*s(21)

  with precondition: [A=1,B>=1] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [25]: 3
  with precondition: [0>=B] 

* Chain [24]: 1*s(25)+6*s(28)+1*s(29)+2*s(30)+7
  Such that:s(25) =< 2
s(26) =< B
s(27) =< B+1
s(28) =< s(26)
s(29) =< s(27)
s(30) =< s(28)*s(27)

  with precondition: [B>=1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [25] with precondition: [0>=B] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [24] with precondition: [B>=1] 
    - Upper bound: 7*B+10+ (2*B+2)*B 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D): nat(B)*6+6+nat(B+1)+nat(B+1)*2*nat(B)+3 
Asymptotic class: n^2 
* Total analysis performed in 241 ms.


-- stats
realtime 0:00.32
usertime 0.28
systime 0.00

