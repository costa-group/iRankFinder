WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb2in___1/7]
1. recursive  : [n_evalfbb2in___1_loop_cont/8,n_evalfbb2in___3/7,n_evalfbb4in___4/7]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalfstop___2/4]
4. non_recursive  : [n_evalfbb4in___4_loop_cont/5]
5. non_recursive  : [n_evalfstart/4]
6. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb2in___1/7
1. SCC is partially evaluated into n_evalfbb4in___4/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalfbb4in___4_loop_cont/5
5. SCC is partially evaluated into n_evalfstart/4
6. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb2in___1/7 
* CE 11 is refined into CE [12] 
* CE 10 is refined into CE [13] 
* CE 9 is refined into CE [14] 


### Cost equations --> "Loop" of n_evalfbb2in___1/7 
* CEs [14] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

### Ranking functions of CR n_evalfbb2in___1(A,B,C,D,E,F,G) 
* RF of phase [11]: [B-C+1]

#### Partial ranking functions of CR n_evalfbb2in___1(A,B,C,D,E,F,G) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    B-C+1


### Specialization of cost equations n_evalfbb4in___4/7 
* CE 5 is refined into CE [15] 
* CE 3 is refined into CE [16] 
* CE 6 is refined into CE [17] 
* CE 4 is refined into CE [18,19] 


### Cost equations --> "Loop" of n_evalfbb4in___4/7 
* CEs [19] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16,17] --> Loop 17 

### Ranking functions of CR n_evalfbb4in___4(A,B,C,D,E,F,G) 
* RF of phase [14]: [-A+B]

#### Partial ranking functions of CR n_evalfbb4in___4(A,B,C,D,E,F,G) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    -A+B


### Specialization of cost equations n_evalfbb4in___4_loop_cont/5 
* CE 7 is refined into CE [20] 
* CE 8 is refined into CE [21] 


### Cost equations --> "Loop" of n_evalfbb4in___4_loop_cont/5 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 

### Ranking functions of CR n_evalfbb4in___4_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb4in___4_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalfstart/4 
* CE 2 is refined into CE [22,23,24,25] 


### Cost equations --> "Loop" of n_evalfstart/4 
* CEs [22,23,24,25] --> Loop 20 

### Ranking functions of CR n_evalfstart(A,B,C,D) 

#### Partial ranking functions of CR n_evalfstart(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [26] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [26] --> Loop 21 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb2in___1(A,B,C,D,E,F,G):
* Chain [[11],13]: 1*it(11)+1
  Such that:it(11) =< -C+G

  with precondition: [D=2,A+1=E,B=F,B+1=G,A>=1,C>=A+1,B>=C] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< B-C+1

  with precondition: [D=3,A>=1,C>=A+1,B>=C] 

* Chain [13]: 1
  with precondition: [D=2,C=B+1,A+1=E,C=F+1,C=G,A>=1,C>=A+1] 

* Chain [12]: 0
  with precondition: [D=3,A>=1,C>=A+1,B+1>=C] 


#### Cost of chains of n_evalfbb4in___4(A,B,C,D,E,F,G):
* Chain [[14],17]: 4*it(14)+1*s(5)+2
  Such that:aux(3) =< -A+B
it(14) =< aux(3)
s(5) =< it(14)*aux(3)

  with precondition: [D=3,A>=1,B>=A+1] 

* Chain [[14],15,17]: 3*it(14)+1*s(5)+5
  Such that:aux(4) =< -A+B
it(14) =< aux(4)
s(5) =< it(14)*aux(4)

  with precondition: [D=3,A>=1,B>=A+1] 

* Chain [[14],15,16]: 3*it(14)+1*s(5)+4
  Such that:aux(5) =< -A+B
it(14) =< aux(5)
s(5) =< it(14)*aux(5)

  with precondition: [D=4,A>=1,B>=A+1] 

* Chain [17]: 1*s(2)+2
  Such that:s(2) =< -A+B

  with precondition: [D=3,A>=1] 

* Chain [16]: 1
  with precondition: [D=4,A>=1,A>=B+1] 

* Chain [15,17]: 5
  with precondition: [D=3,A=B,A>=1] 

* Chain [15,16]: 4
  with precondition: [D=4,A=B,A>=1] 


#### Cost of chains of n_evalfbb4in___4_loop_cont(A,B,C,D,E):
* Chain [19]: 0
  with precondition: [A=3] 

* Chain [18]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalfstart(A,B,C,D):
* Chain [20]: 11*s(14)+3*s(15)+6
  Such that:aux(7) =< B
s(14) =< aux(7)
s(15) =< s(14)*aux(7)

  with precondition: [] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [21]: 11*s(20)+3*s(21)+7
  Such that:s(19) =< B
s(20) =< s(19)
s(21) =< s(20)*s(19)

  with precondition: [] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [21] with precondition: [] 
    - Upper bound: nat(B)*11+7+nat(B)*3*nat(B) 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D): nat(B)*11+7+nat(B)*3*nat(B) 
Asymptotic class: n^2 
* Total analysis performed in 223 ms.


-- stats
realtime 0:00.35
usertime 0.25
systime 0.00

