WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalrsdbb1in___2/7,n_evalrsdbb4in___1/7]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_evalrsdstop___3/4]
3. non_recursive  : [n_evalrsdbb1in___2_loop_cont/5]
4. non_recursive  : [n_evalrsdbb4in___4/4]
5. non_recursive  : [n_evalrsdentryin___5/4]
6. non_recursive  : [n_evalrsdstart/4]
7. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalrsdbb1in___2/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalrsdbb1in___2_loop_cont/5
4. SCC is partially evaluated into n_evalrsdbb4in___4/4
5. SCC is partially evaluated into n_evalrsdentryin___5/4
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalrsdbb1in___2/7 
* CE 5 is refined into CE [11] 
* CE 8 is refined into CE [12] 
* CE 7 is refined into CE [13] 
* CE 6 is refined into CE [14] 


### Cost equations --> "Loop" of n_evalrsdbb1in___2/7 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [11] --> Loop 13 
* CEs [12] --> Loop 14 

### Ranking functions of CR n_evalrsdbb1in___2(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_evalrsdbb1in___2(A,B,C,D,E,F,G) 
* Partial RF of phase [11,12]:
  - RF of loop [11:1]:
    -A+C depends on loops [12:1] 
    -B/2+C-1/2 depends on loops [12:1] 
    C-1 depends on loops [12:1] 
  - RF of loop [12:1]:
    -A+B
    B-1


### Specialization of cost equations n_evalrsdbb1in___2_loop_cont/5 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


### Cost equations --> "Loop" of n_evalrsdbb1in___2_loop_cont/5 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR n_evalrsdbb1in___2_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalrsdbb1in___2_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalrsdbb4in___4/4 
* CE 4 is refined into CE [17,18,19] 


### Cost equations --> "Loop" of n_evalrsdbb4in___4/4 
* CEs [17,18,19] --> Loop 17 

### Ranking functions of CR n_evalrsdbb4in___4(A,B,C,D) 

#### Partial ranking functions of CR n_evalrsdbb4in___4(A,B,C,D) 


### Specialization of cost equations n_evalrsdentryin___5/4 
* CE 2 is refined into CE [20] 
* CE 3 is refined into CE [21] 


### Cost equations --> "Loop" of n_evalrsdentryin___5/4 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 

### Ranking functions of CR n_evalrsdentryin___5(A,B,C,D) 

#### Partial ranking functions of CR n_evalrsdentryin___5(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [22,23] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [23] --> Loop 20 
* CEs [22] --> Loop 21 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalrsdbb1in___2(A,B,C,D,E,F,G):
* Chain [[11,12],14]: 2*it(11)+2*it(12)+0
  Such that:aux(15) =< A
aux(6) =< -B/2+C
aux(17) =< B/2
aux(2) =< C
aux(20) =< -A+B
aux(21) =< -A+C
it(12) =< aux(20)
aux(3) =< it(12)*aux(17)
aux(5) =< it(12)*aux(15)
aux(1) =< it(12)*aux(20)
it(11) =< aux(5)+aux(6)
it(11) =< aux(3)+aux(21)
it(11) =< aux(1)+aux(2)
it(11) =< aux(5)+aux(21)
it(11) =< aux(1)+aux(21)

  with precondition: [D=2,B>=A+1,C>=A,2*A>=B,B>=C] 

* Chain [[11,12],13]: 2*it(11)+2*it(12)+2
  Such that:aux(15) =< A
aux(6) =< -B/2+C
aux(17) =< B/2
aux(2) =< C
aux(22) =< -A+B
aux(23) =< -A+C
it(12) =< aux(22)
aux(3) =< it(12)*aux(17)
aux(5) =< it(12)*aux(15)
aux(1) =< it(12)*aux(22)
it(11) =< aux(5)+aux(6)
it(11) =< aux(3)+aux(23)
it(11) =< aux(1)+aux(2)
it(11) =< aux(5)+aux(23)
it(11) =< aux(1)+aux(23)

  with precondition: [D=3,B>=A+1,C>=A,2*A>=B,B>=C] 

* Chain [14]: 0
  with precondition: [D=2,C>=A,2*A>=B,B>=C] 

* Chain [13]: 2
  with precondition: [D=3,C=A,2*C>=B,B>=C] 


#### Cost of chains of n_evalrsdbb1in___2_loop_cont(A,B,C,D,E):
* Chain [16]: 0
  with precondition: [A=2] 

* Chain [15]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalrsdbb4in___4(A,B,C,D):
* Chain [17]: 2*s(18)+2*s(22)+2*s(29)+2*s(33)+3
  Such that:aux(24) =< A
s(17) =< 2*A
s(26) =< C
aux(25) =< C/2
s(18) =< aux(24)
s(19) =< s(18)*aux(24)
s(22) =< s(19)+aux(24)
s(22) =< s(19)+s(17)
s(29) =< aux(25)
s(30) =< s(29)*aux(25)
s(33) =< s(30)+aux(25)
s(33) =< s(30)+s(26)

  with precondition: [2*A=B,2*A=C,A>=0] 


#### Cost of chains of n_evalrsdentryin___5(A,B,C,D):
* Chain [19]: 1
  with precondition: [0>=A+1] 

* Chain [18]: 4*s(38)+4*s(40)+4
  Such that:aux(26) =< A
aux(27) =< 2*A
s(38) =< aux(26)
s(39) =< s(38)*aux(26)
s(40) =< s(39)+aux(26)
s(40) =< s(39)+aux(27)

  with precondition: [A>=0] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [21]: 3
  with precondition: [0>=A+1] 

* Chain [20]: 4*s(46)+4*s(48)+6
  Such that:s(44) =< A
s(45) =< 2*A
s(46) =< s(44)
s(47) =< s(46)*s(44)
s(48) =< s(47)+s(44)
s(48) =< s(47)+s(45)

  with precondition: [A>=0] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [21] with precondition: [0>=A+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [20] with precondition: [A>=0] 
    - Upper bound: 8*A+6+4*A*A 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D): nat(A)*8+3+nat(A)*4*nat(A)+3 
Asymptotic class: n^2 
* Total analysis performed in 283 ms.


-- stats
realtime 0:00.33
usertime 0.32
systime 0.00

