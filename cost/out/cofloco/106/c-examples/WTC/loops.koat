WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalloopsbb4in___2/5]
1. recursive  : [n_evalloopsbb1in___5/5,n_evalloopsbb4in___2_loop_cont/6,n_evalloopsbb4in___4/5,n_evalloopsbb6in___7/5]
2. non_recursive  : [exit_location/1]
3. recursive  : [n_evalloopsbb1in___1/5,n_evalloopsbb6in___3/5]
4. non_recursive  : [n_evalloopsstop___6/3]
5. non_recursive  : [n_evalloopsbb6in___3_loop_cont/4]
6. non_recursive  : [n_evalloopsbb6in___7_loop_cont/4]
7. non_recursive  : [n_evalloopsentryin___8/3]
8. non_recursive  : [n_evalloopsstart/3]
9. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalloopsbb4in___2/5
1. SCC is partially evaluated into n_evalloopsbb6in___7/5
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalloopsbb6in___3/5
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_evalloopsbb6in___3_loop_cont/4
6. SCC is partially evaluated into n_evalloopsbb6in___7_loop_cont/4
7. SCC is partially evaluated into n_evalloopsentryin___8/3
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalloopsbb4in___2/5 
* CE 12 is refined into CE [18] 
* CE 11 is refined into CE [19] 
* CE 10 is refined into CE [20] 


### Cost equations --> "Loop" of n_evalloopsbb4in___2/5 
* CEs [20] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [19] --> Loop 19 

### Ranking functions of CR n_evalloopsbb4in___2(A,B,C,D,E) 
* RF of phase [17]: [A-B]

#### Partial ranking functions of CR n_evalloopsbb4in___2(A,B,C,D,E) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    A-B


### Specialization of cost equations n_evalloopsbb6in___7/5 
* CE 4 is refined into CE [21] 
* CE 6 is refined into CE [22] 
* CE 7 is refined into CE [23] 
* CE 5 is refined into CE [24,25] 


### Cost equations --> "Loop" of n_evalloopsbb6in___7/5 
* CEs [25] --> Loop 20 
* CEs [24] --> Loop 21 
* CEs [21] --> Loop 22 
* CEs [22,23] --> Loop 23 

### Ranking functions of CR n_evalloopsbb6in___7(A,B,C,D,E) 
* RF of phase [20]: [A-2]

#### Partial ranking functions of CR n_evalloopsbb6in___7(A,B,C,D,E) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    A-2


### Specialization of cost equations n_evalloopsbb6in___3/5 
* CE 15 is refined into CE [26] 
* CE 14 is refined into CE [27] 
* CE 13 is refined into CE [28] 


### Cost equations --> "Loop" of n_evalloopsbb6in___3/5 
* CEs [28] --> Loop 24 
* CEs [26] --> Loop 25 
* CEs [27] --> Loop 26 

### Ranking functions of CR n_evalloopsbb6in___3(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalloopsbb6in___3(A,B,C,D,E) 


### Specialization of cost equations n_evalloopsbb6in___3_loop_cont/4 
* CE 16 is refined into CE [29] 
* CE 17 is refined into CE [30] 


### Cost equations --> "Loop" of n_evalloopsbb6in___3_loop_cont/4 
* CEs [29] --> Loop 27 
* CEs [30] --> Loop 28 

### Ranking functions of CR n_evalloopsbb6in___3_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evalloopsbb6in___3_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evalloopsbb6in___7_loop_cont/4 
* CE 8 is refined into CE [31,32,33] 
* CE 9 is refined into CE [34] 


### Cost equations --> "Loop" of n_evalloopsbb6in___7_loop_cont/4 
* CEs [31,32,33] --> Loop 29 
* CEs [34] --> Loop 30 

### Ranking functions of CR n_evalloopsbb6in___7_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evalloopsbb6in___7_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evalloopsentryin___8/3 
* CE 2 is refined into CE [35,36,37,38] 
* CE 3 is refined into CE [39] 


### Cost equations --> "Loop" of n_evalloopsentryin___8/3 
* CEs [39] --> Loop 31 
* CEs [38] --> Loop 32 
* CEs [35,36,37] --> Loop 33 

### Ranking functions of CR n_evalloopsentryin___8(A,B,C) 

#### Partial ranking functions of CR n_evalloopsentryin___8(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [40,41] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [40] --> Loop 34 
* CEs [41] --> Loop 35 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_evalloopsbb4in___2(A,B,C,D,E):
* Chain [[17],19]: 1*it(17)+1
  Such that:it(17) =< -B+D+1

  with precondition: [C=2,A=D+1,B>=2,E>=2*B,E>=A,2*A>=E+2] 

* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< A-B

  with precondition: [C=3,B>=2,A>=B+1] 

* Chain [19]: 1
  with precondition: [C=2,A=D+1,B=E,B>=A,2*A>=B+2] 

* Chain [18]: 0
  with precondition: [C=3,B>=2,2*A>=B+2] 


#### Cost of chains of n_evalloopsbb6in___7(A,B,C,D,E):
* Chain [[20],23]: 5*it(20)+1*s(5)+3
  Such that:aux(3) =< A
it(20) =< aux(3)
s(5) =< it(20)*aux(3)

  with precondition: [C=3,A>=3] 

* Chain [[20],21,23]: 4*it(20)+1*s(2)+1*s(5)+7
  Such that:s(2) =< 1
aux(4) =< A
it(20) =< aux(4)
s(5) =< it(20)*aux(4)

  with precondition: [C=3,A>=3] 

* Chain [[20],21,22]: 4*it(20)+1*s(5)+6
  Such that:aux(5) =< A
it(20) =< aux(5)
s(5) =< it(20)*aux(5)

  with precondition: [C=5,D=0,A>=3] 

* Chain [23]: 1*s(2)+3
  Such that:s(2) =< A

  with precondition: [C=3,A>=0] 

* Chain [22]: 2
  with precondition: [C=5,A=D+1,1>=A,A>=0] 

* Chain [21,23]: 1*s(2)+7
  Such that:s(2) =< 1

  with precondition: [A=2,C=3] 

* Chain [21,22]: 6
  with precondition: [A=2,C=5,D=0] 


#### Cost of chains of n_evalloopsbb6in___3(A,B,C,D,E):
* Chain [26]: 1
  with precondition: [A+1=0,C=4] 

* Chain [25]: 0
  with precondition: [C=3] 

* Chain [24,26]: 3
  with precondition: [A=0,C=4] 

* Chain [24,25]: 2
  with precondition: [A=0,C=3] 


#### Cost of chains of n_evalloopsbb6in___3_loop_cont(A,B,C,D):
* Chain [28]: 0
  with precondition: [A=3] 

* Chain [27]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalloopsbb6in___7_loop_cont(A,B,C,D):
* Chain [30]: 0
  with precondition: [A=3] 

* Chain [29]: 3
  with precondition: [A=5] 


#### Cost of chains of n_evalloopsentryin___8(A,B,C):
* Chain [33]: 2*s(17)+14*s(18)+3*s(19)+10
  Such that:s(15) =< 1
aux(8) =< A
s(17) =< s(15)
s(18) =< aux(8)
s(19) =< s(18)*aux(8)

  with precondition: [A>=0] 

* Chain [32]: 6
  with precondition: [1>=A,A>=0] 

* Chain [31]: 1
  with precondition: [0>=A+1] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [35]: 3
  with precondition: [0>=A+1] 

* Chain [34]: 2*s(30)+14*s(31)+3*s(32)+12
  Such that:s(28) =< 1
s(29) =< A
s(30) =< s(28)
s(31) =< s(29)
s(32) =< s(31)*s(29)

  with precondition: [A>=0] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [35] with precondition: [0>=A+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [34] with precondition: [A>=0] 
    - Upper bound: 14*A+14+3*A*A 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C): nat(A)*14+11+nat(A)*3*nat(A)+3 
Asymptotic class: n^2 
* Total analysis performed in 234 ms.


-- stats
realtime 0:00.28
usertime 0.28
systime 0.00

