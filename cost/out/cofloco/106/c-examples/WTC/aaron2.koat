WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalaaron2bb3in___1/7,n_evalaaron2bb6in___3/7]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_evalaaron2stop___2/4]
3. non_recursive  : [n_evalaaron2bb6in___3_loop_cont/5]
4. non_recursive  : [n_evalaaron2entryin___4/4]
5. non_recursive  : [n_evalaaron2start/4]
6. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalaaron2bb6in___3/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalaaron2bb6in___3_loop_cont/5
4. SCC is partially evaluated into n_evalaaron2entryin___4/4
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalaaron2bb6in___3/7 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 
* CE 4 is refined into CE [12] 
* CE 5 is refined into CE [13] 


### Cost equations --> "Loop" of n_evalaaron2bb6in___3/7 
* CEs [12] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [10] --> Loop 12 
* CEs [11] --> Loop 13 

### Ranking functions of CR n_evalaaron2bb6in___3(A,B,C,D,E,F,G) 
* RF of phase [10,11]: [-B+C+1]

#### Partial ranking functions of CR n_evalaaron2bb6in___3(A,B,C,D,E,F,G) 
* Partial RF of phase [10,11]:
  - RF of loop [10:1,11:1]:
    -B+C+1


### Specialization of cost equations n_evalaaron2bb6in___3_loop_cont/5 
* CE 9 is refined into CE [14] 
* CE 8 is refined into CE [15] 


### Cost equations --> "Loop" of n_evalaaron2bb6in___3_loop_cont/5 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

### Ranking functions of CR n_evalaaron2bb6in___3_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalaaron2bb6in___3_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalaaron2entryin___4/4 
* CE 2 is refined into CE [16,17,18] 
* CE 3 is refined into CE [19] 


### Cost equations --> "Loop" of n_evalaaron2entryin___4/4 
* CEs [16,17,18] --> Loop 16 
* CEs [19] --> Loop 17 

### Ranking functions of CR n_evalaaron2entryin___4(A,B,C,D) 

#### Partial ranking functions of CR n_evalaaron2entryin___4(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [20,21] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [21] --> Loop 18 
* CEs [20] --> Loop 19 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalaaron2bb6in___3(A,B,C,D,E,F,G):
* Chain [[10,11],13]: 4*it(10)+1
  Such that:aux(2) =< A-B+C+1
aux(1) =< -B+C+1
it(10) =< aux(1)
it(10) =< aux(2)

  with precondition: [D=2,A>=0,C>=B] 

* Chain [[10,11],12]: 4*it(10)+0
  Such that:aux(2) =< A-B+C+1
aux(1) =< -B+C+1
it(10) =< aux(1)
it(10) =< aux(2)

  with precondition: [D=3,A>=0,C>=B] 

* Chain [13]: 1
  with precondition: [D=2,A>=0,B>=C+1] 

* Chain [12]: 0
  with precondition: [D=3,A>=0] 


#### Cost of chains of n_evalaaron2bb6in___3_loop_cont(A,B,C,D,E):
* Chain [15]: 0
  with precondition: [A=2] 

* Chain [14]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalaaron2entryin___4(A,B,C,D):
* Chain [17]: 1
  with precondition: [0>=A+1] 

* Chain [16]: 8*s(6)+2
  Such that:aux(3) =< A+B-C+1
aux(4) =< B-C+1
s(6) =< aux(4)
s(6) =< aux(3)

  with precondition: [A>=0] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [19]: 3
  with precondition: [0>=A+1] 

* Chain [18]: 8*s(12)+4
  Such that:s(10) =< A+B-C+1
s(11) =< B-C+1
s(12) =< s(11)
s(12) =< s(10)

  with precondition: [A>=0] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [19] with precondition: [0>=A+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [18] with precondition: [A>=0] 
    - Upper bound: nat(B-C+1)*8+4 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): nat(B-C+1)*8+1+3 
Asymptotic class: n 
* Total analysis performed in 127 ms.


-- stats
realtime 0:00.18
usertime 0.16
systime 0.00

