WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_eval___1/3]
1. recursive  : [n_eval___1_loop_cont/3,n_eval___2/2]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_eval___2_loop_cont/2]
4. non_recursive  : [n_start/2]
5. non_recursive  : [pyRinit/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_eval___1/3
1. SCC is partially evaluated into n_eval___2/2
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_start/2
5. SCC is partially evaluated into pyRinit/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_eval___1/3 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 


### Cost equations --> "Loop" of n_eval___1/3 
* CEs [12] --> Loop 9 
* CEs [10] --> Loop 10 
* CEs [11] --> Loop 11 

### Ranking functions of CR n_eval___1(A,B,C) 
* RF of phase [9]: [A-1]

#### Partial ranking functions of CR n_eval___1(A,B,C) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    A-1


### Specialization of cost equations n_eval___2/2 
* CE 3 is refined into CE [13] 
* CE 6 is refined into CE [14] 
* CE 4 is refined into CE [15,16] 
* CE 5 is refined into CE [17] 


### Cost equations --> "Loop" of n_eval___2/2 
* CEs [15] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [17] --> Loop 14 
* CEs [13,14] --> Loop 15 

### Ranking functions of CR n_eval___2(A,B) 
* RF of phase [12,13,14]: [A]

#### Partial ranking functions of CR n_eval___2(A,B) 
* Partial RF of phase [12,13,14]:
  - RF of loop [12:1]:
    A-1
  - RF of loop [13:1]:
    A-3
  - RF of loop [14:1]:
    A


### Specialization of cost equations n_start/2 
* CE 2 is refined into CE [18] 


### Cost equations --> "Loop" of n_start/2 
* CEs [18] --> Loop 16 

### Ranking functions of CR n_start(A,B) 

#### Partial ranking functions of CR n_start(A,B) 


### Specialization of cost equations pyRinit/2 
* CE 1 is refined into CE [19] 


### Cost equations --> "Loop" of pyRinit/2 
* CEs [19] --> Loop 17 

### Ranking functions of CR pyRinit(A,B) 

#### Partial ranking functions of CR pyRinit(A,B) 


Computing Bounds
=====================================

#### Cost of chains of n_eval___1(A,B,C):
* Chain [[9],11]: 1*it(9)+1
  Such that:it(9) =< A-C

  with precondition: [B=2,C>=0,A>=2*C+2] 

* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< A

  with precondition: [B=3,A>=2] 

* Chain [11]: 1
  with precondition: [B=2,A=C+1,A>=1] 

* Chain [10]: 0
  with precondition: [B=3,A>=1] 


#### Cost of chains of n_eval___2(A,B):
* Chain [[12,13,14],15]: 5*it(12)+2*s(2)+1
  Such that:aux(3) =< A
aux(4) =< A/2
s(2) =< aux(4)
it(12) =< aux(3)

  with precondition: [B=3,A>=1] 

* Chain [15]: 1*s(2)+1
  Such that:s(2) =< A/2

  with precondition: [B=3] 


#### Cost of chains of n_start(A,B):
* Chain [16]: 3*s(13)+5*s(14)+2
  Such that:s(11) =< A
s(12) =< A/2
s(13) =< s(12)
s(14) =< s(11)

  with precondition: [] 


#### Cost of chains of pyRinit(A,B):
* Chain [17]: 3*s(17)+5*s(18)+3
  Such that:s(15) =< A
s(16) =< A/2
s(17) =< s(16)
s(18) =< s(15)

  with precondition: [] 


Closed-form bounds of pyRinit(A,B): 
-------------------------------------
* Chain [17] with precondition: [] 
    - Upper bound: nat(A)*5+3+nat(A/2)*3 
    - Complexity: n 

### Maximum cost of pyRinit(A,B): nat(A)*5+3+nat(A/2)*3 
Asymptotic class: n 
* Total analysis performed in 96 ms.


-- stats
realtime 0:00.14
usertime 0.12
systime 0.01

