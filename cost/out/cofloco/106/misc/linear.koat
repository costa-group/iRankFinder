WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_a___1/2]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_a___1_loop_cont/2]
3. non_recursive  : [n_a___2/2]
4. non_recursive  : [n_start/2]
5. non_recursive  : [pyRinit/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_a___1/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_a___2/2
4. SCC is partially evaluated into n_start/2
5. SCC is partially evaluated into pyRinit/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_a___1/2 
* CE 5 is refined into CE [6] 
* CE 4 is refined into CE [7] 


### Cost equations --> "Loop" of n_a___1/2 
* CEs [7] --> Loop 6 
* CEs [6] --> Loop 7 

### Ranking functions of CR n_a___1(A,B) 
* RF of phase [6]: [A]

#### Partial ranking functions of CR n_a___1(A,B) 
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    A


### Specialization of cost equations n_a___2/2 
* CE 3 is refined into CE [8] 


### Cost equations --> "Loop" of n_a___2/2 
* CEs [8] --> Loop 8 

### Ranking functions of CR n_a___2(A,B) 

#### Partial ranking functions of CR n_a___2(A,B) 


### Specialization of cost equations n_start/2 
* CE 2 is refined into CE [9] 


### Cost equations --> "Loop" of n_start/2 
* CEs [9] --> Loop 9 

### Ranking functions of CR n_start(A,B) 

#### Partial ranking functions of CR n_start(A,B) 


### Specialization of cost equations pyRinit/2 
* CE 1 is refined into CE [10] 


### Cost equations --> "Loop" of pyRinit/2 
* CEs [10] --> Loop 10 

### Ranking functions of CR pyRinit(A,B) 

#### Partial ranking functions of CR pyRinit(A,B) 


Computing Bounds
=====================================

#### Cost of chains of n_a___1(A,B):
* Chain [[6],7]: 1*it(6)+0
  Such that:it(6) =< A

  with precondition: [B=2,A>=1] 

* Chain [7]: 0
  with precondition: [B=2,A>=0] 


#### Cost of chains of n_a___2(A,B):
* Chain [8]: 1*s(2)+1
  Such that:s(2) =< A

  with precondition: [A>=1] 


#### Cost of chains of n_start(A,B):
* Chain [9]: 1*s(3)+2
  Such that:s(3) =< A

  with precondition: [A>=1] 


#### Cost of chains of pyRinit(A,B):
* Chain [10]: 1*s(4)+3
  Such that:s(4) =< A

  with precondition: [A>=1] 


Closed-form bounds of pyRinit(A,B): 
-------------------------------------
* Chain [10] with precondition: [A>=1] 
    - Upper bound: A+3 
    - Complexity: n 

### Maximum cost of pyRinit(A,B): A+3 
Asymptotic class: n 
* Total analysis performed in 32 ms.


-- stats
realtime 0:00.06
usertime 0.05
systime 0.00

