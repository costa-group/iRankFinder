WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_lbl131___4/17]
1. recursive  : [n_lbl131___4_loop_cont/18,n_lbl131___7/17,n_lbl142___2/17]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_stop___5/9]
4. non_recursive  : [n_lbl142___1/9]
5. non_recursive  : [n_lbl142___3/9]
6. non_recursive  : [n_lbl131___7_loop_cont/10]
7. non_recursive  : [n_lbl142___6/9]
8. non_recursive  : [n_start___8/9]
9. non_recursive  : [n_start0/9]
10. non_recursive  : [pyRinit/9]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_lbl131___4/17
1. SCC is partially evaluated into n_lbl131___7/17
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into n_lbl131___7_loop_cont/10
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into n_start___8/9
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into pyRinit/9

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_lbl131___4/17 
* CE 13 is refined into CE [14] 
* CE 12 is refined into CE [15] 
* CE 11 is refined into CE [16] 


### Cost equations --> "Loop" of n_lbl131___4/17 
* CEs [16] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

### Ranking functions of CR n_lbl131___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [13]: [A-E,D-E,-E+G]

#### Partial ranking functions of CR n_lbl131___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    A-E
    D-E
    -E+G


### Specialization of cost equations n_lbl131___7/17 
* CE 5 is refined into CE [17] 
* CE 8 is refined into CE [18] 
* CE 7 is refined into CE [19] 
* CE 6 is refined into CE [20,21] 


### Cost equations --> "Loop" of n_lbl131___7/17 
* CEs [21] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [17,18] --> Loop 18 
* CEs [19] --> Loop 19 

### Ranking functions of CR n_lbl131___7(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [16]: [G-2]

#### Partial ranking functions of CR n_lbl131___7(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    G-2


### Specialization of cost equations n_lbl131___7_loop_cont/10 
* CE 9 is refined into CE [22] 
* CE 10 is refined into CE [23] 


### Cost equations --> "Loop" of n_lbl131___7_loop_cont/10 
* CEs [22] --> Loop 20 
* CEs [23] --> Loop 21 

### Ranking functions of CR n_lbl131___7_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR n_lbl131___7_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations n_start___8/9 
* CE 2 is refined into CE [24,25,26,27] 
* CE 4 is refined into CE [28] 
* CE 3 is refined into CE [29] 


### Cost equations --> "Loop" of n_start___8/9 
* CEs [28] --> Loop 22 
* CEs [26] --> Loop 23 
* CEs [24,25,27] --> Loop 24 
* CEs [29] --> Loop 25 

### Ranking functions of CR n_start___8(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_start___8(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations pyRinit/9 
* CE 1 is refined into CE [30,31,32] 


### Cost equations --> "Loop" of pyRinit/9 
* CEs [31] --> Loop 26 
* CEs [32] --> Loop 27 
* CEs [30] --> Loop 28 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 


Computing Bounds
=====================================

#### Cost of chains of n_lbl131___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[13],15]: 1*it(13)+1
  Such that:it(13) =< -E+N

  with precondition: [I=2,A=D,A=J,C=L,A=M,G=N,F=O,G=P+1,H=Q,E>=2,G>=E+1,A>=G] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< -E+G

  with precondition: [I=3,A=D,E>=2,G>=E+1,A>=G] 

* Chain [15]: 1
  with precondition: [I=2,D=A,K=B,L=C,G=E,O=F,Q=H,D=J,D=M,G=N,G=P+1,G>=2,D>=G] 

* Chain [14]: 0
  with precondition: [I=3,D=A,E>=2,G>=E,D>=G] 


#### Cost of chains of n_lbl131___7(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[16],18]: 4*it(16)+1*s(5)+1
  Such that:aux(3) =< G
it(16) =< aux(3)
s(5) =< it(16)*aux(3)

  with precondition: [E=1,I=3,A=D,G>=3,A>=G] 

* Chain [[16],17,19]: 3*it(16)+1*s(5)+4
  Such that:aux(4) =< G
it(16) =< aux(4)
s(5) =< it(16)*aux(4)

  with precondition: [E=1,I=4,N=1,P=0,A=D,A=J,C=L,A=M,F=O,H=Q,G>=3,A>=G] 

* Chain [[16],17,18]: 3*it(16)+1*s(2)+1*s(5)+4
  Such that:s(2) =< 1
aux(5) =< G
it(16) =< aux(5)
s(5) =< it(16)*aux(5)

  with precondition: [E=1,I=3,A=D,G>=3,A>=G] 

* Chain [19]: 1
  with precondition: [E=1,G=1,I=4,N=1,P=0,D=A,K=B,L=C,O=F,Q=H,D=J,D=M,D>=1] 

* Chain [18]: 1*s(2)+1
  Such that:s(2) =< G

  with precondition: [E=1,I=3,D=A,G>=1,D>=G] 

* Chain [17,19]: 4
  with precondition: [E=1,G=2,I=4,N=1,P=0,A=D,A=J,C=L,A=M,F=O,H=Q,A>=2] 

* Chain [17,18]: 1*s(2)+4
  Such that:s(2) =< 1

  with precondition: [E=1,G=2,I=3,A=D,A>=2] 


#### Cost of chains of n_lbl131___7_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [21]: 0
  with precondition: [A=3] 

* Chain [20]: 2
  with precondition: [A=4,F=1,H=0,B=E,B>=1] 


#### Cost of chains of n_start___8(A,B,C,D,E,F,G,H,I):
* Chain [25]: 2
  with precondition: [A=0,D=0,C=B,F=E,H=G] 

* Chain [24]: 2*s(17)+8*s(18)+2*s(19)+3*s(21)+1*s(22)+7
  Such that:s(15) =< 1
s(20) =< A
s(16) =< D
s(17) =< s(15)
s(18) =< s(16)
s(19) =< s(18)*s(16)
s(21) =< s(20)
s(22) =< s(21)*s(20)

  with precondition: [D=A,C=B,F=E,H=G,D>=1] 

* Chain [23]: 7
  with precondition: [A=2,D=2,C=B,F=E,H=G] 

* Chain [22]: 1
  with precondition: [D=A,C=B,F=E,H=G,0>=D+1] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G,H,I):
* Chain [28]: 4
  with precondition: [A=0] 

* Chain [27]: 3
  with precondition: [0>=A+1] 

* Chain [26]: 2*s(34)+11*s(35)+3*s(36)+9
  Such that:s(31) =< 1
aux(8) =< A
s(34) =< s(31)
s(35) =< aux(8)
s(36) =< s(35)*aux(8)

  with precondition: [A>=1] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G,H,I): 
-------------------------------------
* Chain [28] with precondition: [A=0] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [27] with precondition: [0>=A+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [26] with precondition: [A>=1] 
    - Upper bound: 11*A+11+3*A*A 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D,E,F,G,H,I): max([1,nat(A)*11+8+nat(A)*3*nat(A)])+3 
Asymptotic class: n^2 
* Total analysis performed in 749 ms.


-- stats
realtime 0:00.86
usertime 0.80
systime 0.00

