WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_lbl101___2/13]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_stop___1/7]
3. non_recursive  : [n_lbl101___2_loop_cont/8]
4. non_recursive  : [n_start___3/7]
5. non_recursive  : [n_start0/7]
6. non_recursive  : [pyRinit/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_lbl101___2/13
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_lbl101___2_loop_cont/8
4. SCC is partially evaluated into n_start___3/7
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into pyRinit/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_lbl101___2/13 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 
* CE 5 is refined into CE [14] 


### Cost equations --> "Loop" of n_lbl101___2/13 
* CEs [13] --> Loop 10 
* CEs [14] --> Loop 11 
* CEs [11] --> Loop 12 
* CEs [12] --> Loop 13 

### Ranking functions of CR n_lbl101___2(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [10,11]: [A-B+1,-B+D+1]

#### Partial ranking functions of CR n_lbl101___2(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [10,11]:
  - RF of loop [10:1]:
    A+E depends on loops [11:1] 
    D+E depends on loops [11:1] 
  - RF of loop [10:1,11:1]:
    A-B+1
    -B+D+1
  - RF of loop [11:1]:
    A-E depends on loops [10:1] 
    D-E depends on loops [10:1] 


### Specialization of cost equations n_lbl101___2_loop_cont/8 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


### Cost equations --> "Loop" of n_lbl101___2_loop_cont/8 
* CEs [15] --> Loop 14 
* CEs [16] --> Loop 15 

### Ranking functions of CR n_lbl101___2_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR n_lbl101___2_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations n_start___3/7 
* CE 2 is refined into CE [17,18,19] 
* CE 3 is refined into CE [20,21,22] 
* CE 4 is refined into CE [23] 


### Cost equations --> "Loop" of n_start___3/7 
* CEs [23] --> Loop 16 
* CEs [17,18,19,20,21,22] --> Loop 17 

### Ranking functions of CR n_start___3(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_start___3(A,B,C,D,E,F,G) 


### Specialization of cost equations pyRinit/7 
* CE 1 is refined into CE [24,25] 


### Cost equations --> "Loop" of pyRinit/7 
* CEs [25] --> Loop 18 
* CEs [24] --> Loop 19 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G) 


Computing Bounds
=====================================

#### Cost of chains of n_lbl101___2(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[10,11],13]: 2*it(10)+1
  Such that:aux(13) =< A-B+1
it(10) =< aux(13)

  with precondition: [G=2,A=D,B>=2,A>=B,B>=E+1,B+E>=1] 

* Chain [[10,11],12]: 2*it(10)+0
  Such that:aux(14) =< A-B+1
it(10) =< aux(14)

  with precondition: [G=3,A=D,B>=2,A>=B,B>=E+1,B+E>=1] 

* Chain [13]: 1
  with precondition: [G=2,A+1=B,A=D,A>=1,A>=E,A+E>=0] 

* Chain [12]: 0
  with precondition: [G=3,D=A,B>=2,D+1>=B,B>=E+1,B+E>=1] 


#### Cost of chains of n_lbl101___2_loop_cont(A,B,C,D,E,F,G,H):
* Chain [15]: 0
  with precondition: [A=2] 

* Chain [14]: 0
  with precondition: [A=3] 


#### Cost of chains of n_start___3(A,B,C,D,E,F,G):
* Chain [17]: 8*s(4)+2
  Such that:aux(15) =< D
s(4) =< aux(15)

  with precondition: [D=A,C=B,F=E,D>=1] 

* Chain [16]: 1
  with precondition: [D=A,C=B,F=E,0>=D] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G):
* Chain [19]: 3
  with precondition: [0>=A] 

* Chain [18]: 8*s(12)+4
  Such that:s(11) =< A
s(12) =< s(11)

  with precondition: [A>=1] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G): 
-------------------------------------
* Chain [19] with precondition: [0>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [18] with precondition: [A>=1] 
    - Upper bound: 8*A+4 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E,F,G): nat(A)*8+1+3 
Asymptotic class: n 
* Total analysis performed in 343 ms.


-- stats
realtime 0:00.40
usertime 0.38
systime 0.00

