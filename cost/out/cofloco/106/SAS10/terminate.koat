WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_lbl72___2/17]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_stop___1/9]
3. non_recursive  : [n_lbl72___2_loop_cont/10]
4. non_recursive  : [n_start___3/9]
5. non_recursive  : [n_start0/9]
6. non_recursive  : [pyRinit/9]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_lbl72___2/17
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_lbl72___2_loop_cont/10
4. SCC is partially evaluated into n_start___3/9
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into pyRinit/9

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_lbl72___2/17 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 
* CE 5 is refined into CE [14] 


### Cost equations --> "Loop" of n_lbl72___2/17 
* CEs [14] --> Loop 11 
* CEs [11] --> Loop 12 
* CEs [12] --> Loop 13 
* CEs [13] --> Loop 14 

### Ranking functions of CR n_lbl72___2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [11]: [-A+B-C-E+202,-A+B-2*E+202,-A+B-E+100,-A/2+B-C/2-E/2+101/2,-A/2+B-E+101/2,-A/2+B-E/2+1/2,-A/3+B-C/3-E/3+2/3,-A/3+B-2/3*E+2/3,A/2+C-D-F+101/2,A/2+C-F-G+99/2,A/2+C/2-D+E/2-F+101/2,A/2+C/2+E/2-F-G+99/2,2/3*A+2/3*C-D+2/3*E-F+2/3,2/3*A+2/3*C+2/3*E-F-G-1/3,2/3*A+4/3*C-D-F+2/3,2/3*A+4/3*C-F-G-1/3,B/2-D/2-F/2+101/2,B/2-F/2-G/2+50,2/3*B-D/3-F/3+2/3,2/3*B-F/3-G/3+1/3,C-D-F+100,C-F-G+99,2*C-D-F,2*C-F-G-1,C/2-D+E/2-F+201/2,C/2+E/2-F-G+199/2,2/3*C-D+2/3*E-F+202/3,2/3*C+2/3*E-F-G+199/3,4/3*C-D-F+66,4/3*C-F-G+65,-D-F+202,-F-G+201]

#### Partial ranking functions of CR n_lbl72___2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    -A+B-C-E+202
    -A+B-2*E+202
    -A+B-E+100
    -A/2+B-C/2-E/2+101/2
    -A/2+B-E+101/2
    -A/2+B-E/2+1/2
    -A/3+B-C/3-E/3+2/3
    -A/3+B-2/3*E+2/3
    A/2+C-D-F+101/2
    A/2+C-F-G+99/2
    A/2+C/2-D+E/2-F+101/2
    A/2+C/2+E/2-F-G+99/2
    2/3*A+2/3*C-D+2/3*E-F+2/3
    2/3*A+2/3*C+2/3*E-F-G-1/3
    2/3*A+4/3*C-D-F+2/3
    2/3*A+4/3*C-F-G-1/3
    B/2-D/2-F/2+101/2
    B/2-F/2-G/2+50
    2/3*B-D/3-F/3+2/3
    2/3*B-F/3-G/3+1/3
    C-D-F+100
    C-F-G+99
    2*C-D-F
    2*C-F-G-1
    C/2-D+E/2-F+201/2
    C/2+E/2-F-G+199/2
    2/3*C-D+2/3*E-F+202/3
    2/3*C+2/3*E-F-G+199/3
    4/3*C-D-F+66
    4/3*C-F-G+65
    -D-F+202
    -F-G+201


### Specialization of cost equations n_lbl72___2_loop_cont/10 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


### Cost equations --> "Loop" of n_lbl72___2_loop_cont/10 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR n_lbl72___2_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR n_lbl72___2_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations n_start___3/9 
* CE 4 is refined into CE [17] 
* CE 3 is refined into CE [18] 
* CE 2 is refined into CE [19,20,21,22] 


### Cost equations --> "Loop" of n_start___3/9 
* CEs [17] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [19] --> Loop 20 
* CEs [21,22] --> Loop 21 

### Ranking functions of CR n_start___3(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_start___3(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations pyRinit/9 
* CE 1 is refined into CE [23,24,25,26] 


### Cost equations --> "Loop" of pyRinit/9 
* CEs [26] --> Loop 22 
* CEs [25] --> Loop 23 
* CEs [23,24] --> Loop 24 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 


Computing Bounds
=====================================

#### Cost of chains of n_lbl72___2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[11],14]: 1*it(11)+1
  Such that:it(11) =< B/2-F/2-G/2+50

  with precondition: [I=2,G+1=D,A+C+E=B+F+G+1,100>=A,100>=F,100>=G,B>=101,F+G>=A+E,B+F+G+1>=2*E+A] 

* Chain [[11],13]: 1*it(11)+1
  Such that:it(11) =< 2/3*B-F/3-G/3+1/3

  with precondition: [I=2,G+1=D,B+F+G+1=A+C+E,100>=A,100>=F,100>=G,B+1>=F,B>=G+1,F+G>=A+E,B+F+G+1>=2*E+A] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< 2/3*B-F/3-G/3+1/3

  with precondition: [I=3,G+1=D,A+C+E=B+F+G+1,100>=A,100>=F,100>=G,B+1>=F,B>=G+1,F+G>=A+E,B+F+G+1>=2*E+A] 

* Chain [14]: 1
  with precondition: [I=2,G+1=D,B+F+G+1=A+C+E,100>=A,100>=G,F>=101,C>=B+1,B+1>=F,A+2*C>=B+F+G+1] 

* Chain [13]: 1
  with precondition: [I=2,G+1=D,B+F+G+1=A+C+E,100>=A,100>=G,C>=B+1,G>=B,B+1>=F,A+2*C>=B+F+G+1] 

* Chain [12]: 0
  with precondition: [I=3,G+1=D,B+F+G+1=A+C+E,100>=A,100>=G,C>=B+1,B+1>=F,A+2*C>=B+F+G+1] 


#### Cost of chains of n_lbl72___2_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [16]: 0
  with precondition: [A=2] 

* Chain [15]: 0
  with precondition: [A=3] 


#### Cost of chains of n_start___3(A,B,C,D,E,F,G,H,I):
* Chain [21]: 1*s(4)+2
  Such that:s(4) =< -A/3+2/3*C-D/3

  with precondition: [F=A,C=B,E=D,H=G,100>=F,C>=E] 

* Chain [20]: 1*s(5)+1*s(6)+2
  Such that:s(5) =< C/2-D/2-F/2+99/2
s(6) =< 2/3*C-D/3-F/3

  with precondition: [F=A,C=B,E=D,H=G,100>=E,100>=F,C>=E,C>=F+2] 

* Chain [19]: 2
  with precondition: [F=A,C=B,E=D,H=G,100>=F,E>=101,C>=E] 

* Chain [18]: 1
  with precondition: [F=A,C=B,E=D,H=G,F>=101] 

* Chain [17]: 1
  with precondition: [F=A,C=B,E=D,H=G,E>=C+1] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G,H,I):
* Chain [24]: 2*s(10)+1*s(11)+4
  Such that:s(11) =< -A/2+C/2-E/2+99/2
aux(1) =< -A/3+2/3*C-E/3
s(10) =< aux(1)

  with precondition: [100>=A,C>=E] 

* Chain [23]: 3
  with precondition: [A>=101] 

* Chain [22]: 3
  with precondition: [E>=C+1] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G,H,I): 
-------------------------------------
* Chain [24] with precondition: [100>=A,C>=E] 
    - Upper bound: nat(-A/2+C/2-E/2+99/2)+4+nat(-A/3+2/3*C-E/3)*2 
    - Complexity: n 
* Chain [23] with precondition: [A>=101] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [22] with precondition: [E>=C+1] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C,D,E,F,G,H,I): nat(-A/2+C/2-E/2+99/2)+1+nat(-A/3+2/3*C-E/3)*2+3 
Asymptotic class: n 
* Total analysis performed in 1114 ms.


-- stats
realtime 0:01.19
usertime 1.14
systime 0.01

