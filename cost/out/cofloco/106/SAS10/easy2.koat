WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_lbl71___2/13]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_stop___1/7]
3. non_recursive  : [n_lbl71___2_loop_cont/8]
4. non_recursive  : [n_start___3/7]
5. non_recursive  : [n_start0/7]
6. non_recursive  : [pyRinit/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_lbl71___2/13
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_lbl71___2_loop_cont/8
4. SCC is partially evaluated into n_start___3/7
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into pyRinit/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_lbl71___2/13 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11] 


### Cost equations --> "Loop" of n_lbl71___2/13 
* CEs [11] --> Loop 9 
* CEs [9] --> Loop 10 
* CEs [10] --> Loop 11 

### Ranking functions of CR n_lbl71___2(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [9]: [A+C-D,A-E+F,B]

#### Partial ranking functions of CR n_lbl71___2(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    A+C-D
    A-E+F
    B


### Specialization of cost equations n_lbl71___2_loop_cont/8 
* CE 8 is refined into CE [12] 
* CE 7 is refined into CE [13] 


### Cost equations --> "Loop" of n_lbl71___2_loop_cont/8 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

### Ranking functions of CR n_lbl71___2_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR n_lbl71___2_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations n_start___3/7 
* CE 2 is refined into CE [14,15,16] 
* CE 3 is refined into CE [17] 


### Cost equations --> "Loop" of n_start___3/7 
* CEs [17] --> Loop 14 
* CEs [14,15,16] --> Loop 15 

### Ranking functions of CR n_start___3(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_start___3(A,B,C,D,E,F,G) 


### Specialization of cost equations pyRinit/7 
* CE 1 is refined into CE [18,19] 


### Cost equations --> "Loop" of pyRinit/7 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G) 


Computing Bounds
=====================================

#### Cost of chains of n_lbl71___2(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[9],11]: 1*it(9)+1
  Such that:it(9) =< A+C-D

  with precondition: [G=2,A+F=B+E,C+E=D+F,E>=F+1,A+F>=E+1] 

* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< A+C-D

  with precondition: [G=3,A+F=B+E,C+E=D+F,E>=F+1,A+F>=E+1] 

* Chain [11]: 1
  with precondition: [B=0,G=2,A+C=D,A+F=E,A>=1] 

* Chain [10]: 0
  with precondition: [G=3,B+D=A+C,B+E=A+F,B>=0,A>=B+1] 


#### Cost of chains of n_lbl71___2_loop_cont(A,B,C,D,E,F,G,H):
* Chain [13]: 0
  with precondition: [A=2] 

* Chain [12]: 0
  with precondition: [A=3] 


#### Cost of chains of n_start___3(A,B,C,D,E,F,G):
* Chain [15]: 2*s(2)+2
  Such that:aux(1) =< A
s(2) =< aux(1)

  with precondition: [B=A,D=C,F=E,B>=1] 

* Chain [14]: 1
  with precondition: [B=A,D=C,F=E,0>=B] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G):
* Chain [17]: 3
  with precondition: [0>=A] 

* Chain [16]: 2*s(5)+4
  Such that:s(4) =< A
s(5) =< s(4)

  with precondition: [A>=1] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G): 
-------------------------------------
* Chain [17] with precondition: [0>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [16] with precondition: [A>=1] 
    - Upper bound: 2*A+4 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E,F,G): nat(A)*2+1+3 
Asymptotic class: n 
* Total analysis performed in 222 ms.


-- stats
realtime 0:00.30
usertime 0.25
systime 0.00

