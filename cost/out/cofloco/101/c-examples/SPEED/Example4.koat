WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb3in___3/5,n_evalfbb4in___6/5,n_evalfbbin___5/5]
1. non_recursive  : [exit_location/1]
2. recursive  : [n_evalfbb3in___4/5,n_evalfbb4in___2/5,n_evalfbbin___1/5]
3. non_recursive  : [n_evalfstop___8/3]
4. non_recursive  : [n_evalfbb3in___4_loop_cont/4]
5. non_recursive  : [n_evalfbb4in___6_loop_cont/4]
6. non_recursive  : [n_evalfbb3in___7/3]
7. non_recursive  : [n_evalfbbin___9/3]
8. non_recursive  : [n_evalfbb4in___10/3]
9. non_recursive  : [n_evalfbb3in___11/3]
10. non_recursive  : [n_evalfstart/3]
11. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb4in___6/5
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into n_evalfbb3in___4/5
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalfbb3in___4_loop_cont/4
5. SCC is partially evaluated into n_evalfbb4in___6_loop_cont/4
6. SCC is partially evaluated into n_evalfbb3in___7/3
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into n_evalfbb4in___10/3
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb4in___6/5 
* CE 7 is refined into CE [19] 
* CE 9 is refined into CE [20] 
* CE 5 is refined into CE [21] 
* CE 8 is refined into CE [22] 
* CE 6 is refined into CE [23] 


### Cost equations --> "Loop" of n_evalfbb4in___6/5 
* CEs [23] --> Loop 17 
* CEs [19] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [21,22] --> Loop 20 

### Ranking functions of CR n_evalfbb4in___6(A,B,C,D,E) 
* RF of phase [17]: [A-1,A-B]

#### Partial ranking functions of CR n_evalfbb4in___6(A,B,C,D,E) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    A-1
    A-B


### Specialization of cost equations n_evalfbb3in___4/5 
* CE 16 is refined into CE [24] 
* CE 13 is refined into CE [25] 
* CE 15 is refined into CE [26] 
* CE 14 is refined into CE [27] 


### Cost equations --> "Loop" of n_evalfbb3in___4/5 
* CEs [27] --> Loop 21 
* CEs [24] --> Loop 22 
* CEs [25] --> Loop 23 
* CEs [26] --> Loop 24 

### Ranking functions of CR n_evalfbb3in___4(A,B,C,D,E) 
* RF of phase [21]: [A]

#### Partial ranking functions of CR n_evalfbb3in___4(A,B,C,D,E) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    A


### Specialization of cost equations n_evalfbb3in___4_loop_cont/4 
* CE 18 is refined into CE [28] 
* CE 17 is refined into CE [29] 


### Cost equations --> "Loop" of n_evalfbb3in___4_loop_cont/4 
* CEs [28] --> Loop 25 
* CEs [29] --> Loop 26 

### Ranking functions of CR n_evalfbb3in___4_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evalfbb3in___4_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evalfbb4in___6_loop_cont/4 
* CE 12 is refined into CE [30,31,32] 
* CE 11 is refined into CE [33] 
* CE 10 is refined into CE [34] 


### Cost equations --> "Loop" of n_evalfbb4in___6_loop_cont/4 
* CEs [30,31,32] --> Loop 27 
* CEs [33] --> Loop 28 
* CEs [34] --> Loop 29 

### Ranking functions of CR n_evalfbb4in___6_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evalfbb4in___6_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evalfbb3in___7/3 
* CE 4 is refined into CE [35,36,37,38] 


### Cost equations --> "Loop" of n_evalfbb3in___7/3 
* CEs [35,36,37,38] --> Loop 30 

### Ranking functions of CR n_evalfbb3in___7(A,B,C) 

#### Partial ranking functions of CR n_evalfbb3in___7(A,B,C) 


### Specialization of cost equations n_evalfbb4in___10/3 
* CE 2 is refined into CE [39] 
* CE 3 is refined into CE [40] 


### Cost equations --> "Loop" of n_evalfbb4in___10/3 
* CEs [39,40] --> Loop 31 

### Ranking functions of CR n_evalfbb4in___10(A,B,C) 

#### Partial ranking functions of CR n_evalfbb4in___10(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [41] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [41] --> Loop 32 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb4in___6(A,B,C,D,E):
* Chain [[17],20]: 3*it(17)+3
  Such that:it(17) =< A-B

  with precondition: [C=2,B>=1,A>=B+1] 

* Chain [[17],19]: 3*it(17)+0
  Such that:it(17) =< A-B

  with precondition: [C=3,B>=1,A>=B+1] 

* Chain [[17],18]: 3*it(17)+2
  Such that:it(17) =< A-E

  with precondition: [C=4,B=E,D>=0,B>=D+2,A>=B+D+1] 

* Chain [20]: 3
  with precondition: [C=2,A>=1,B>=1] 

* Chain [19]: 0
  with precondition: [C=3,A>=1,B>=1] 

* Chain [18]: 2
  with precondition: [C=4,A=D+1,B=E,A>=1,B>=A+1] 


#### Cost of chains of n_evalfbb3in___4(A,B,C,D,E):
* Chain [[21],24]: 3*it(21)+1
  Such that:it(21) =< A

  with precondition: [C=2,A>=1,B>=A+2] 

* Chain [[21],23]: 3*it(21)+2
  Such that:it(21) =< A

  with precondition: [C=2,A>=2,B>=A+2] 

* Chain [[21],22]: 3*it(21)+0
  Such that:it(21) =< A

  with precondition: [C=3,A>=1,B>=A+2] 

* Chain [24]: 1
  with precondition: [A=0,C=2,B>=2] 

* Chain [23]: 2
  with precondition: [C=2,A>=1,B>=A+2] 

* Chain [22]: 0
  with precondition: [C=3] 


#### Cost of chains of n_evalfbb3in___4_loop_cont(A,B,C,D):
* Chain [26]: 0
  with precondition: [A=2] 

* Chain [25]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalfbb4in___6_loop_cont(A,B,C,D):
* Chain [29]: 0
  with precondition: [A=2] 

* Chain [28]: 0
  with precondition: [A=3] 

* Chain [27]: 9*s(7)+2
  Such that:aux(2) =< B
s(7) =< aux(2)

  with precondition: [A=4] 


#### Cost of chains of n_evalfbb3in___7(A,B,C):
* Chain [30]: 18*s(9)+9*s(12)+5
  Such that:s(11) =< A
aux(4) =< A-B
s(9) =< aux(4)
s(12) =< s(11)

  with precondition: [A>=1,B>=1] 


#### Cost of chains of n_evalfbb4in___10(A,B,C):
* Chain [31]: 18*s(18)+9*s(19)+7
  Such that:s(17) =< A-2*B
s(16) =< A-B
s(18) =< s(17)
s(19) =< s(16)

  with precondition: [B>=1,A>=B+1] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [32]: 18*s(22)+9*s(23)+10
  Such that:s(20) =< -2*A+B
s(21) =< -A+B
s(22) =< s(20)
s(23) =< s(21)

  with precondition: [A>=1,B>=A+1] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [32] with precondition: [A>=1,B>=A+1] 
    - Upper bound: -9*A+9*B+10+nat(-2*A+B)*18 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C): -9*A+9*B+10+nat(-2*A+B)*18 
Asymptotic class: n 
* Total analysis performed in 204 ms.


-- stats
realtime 0:00.25
usertime 0.24
systime 0.00

