WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb2in___5/7,n_evalfbb3in___3/7]
1. recursive  : [n_evalfbb2in___5_loop_cont/8,n_evalfbb2in___7/7,n_evalfbb3in___6/7,n_evalfbb5in___4/7,n_evalfbb6in___1/7]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalfstop___8/4]
4. non_recursive  : [n_evalfbb5in___2/4]
5. non_recursive  : [n_evalfbb2in___7_loop_cont/5]
6. non_recursive  : [n_evalfbb6in___9/4]
7. non_recursive  : [n_evalfbb5in___10/4]
8. non_recursive  : [n_evalfstart/4]
9. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb2in___5/7
1. SCC is partially evaluated into n_evalfbb2in___7/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_evalfbb2in___7_loop_cont/5
6. SCC is partially evaluated into n_evalfbb6in___9/4
7. SCC is partially evaluated into n_evalfbb5in___10/4
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb2in___5/7 
* CE 18 is refined into CE [22] 
* CE 21 is refined into CE [23] 
* CE 20 is refined into CE [24] 
* CE 19 is refined into CE [25] 


### Cost equations --> "Loop" of n_evalfbb2in___5/7 
* CEs [25] --> Loop 16 
* CEs [22] --> Loop 17 
* CEs [23] --> Loop 18 
* CEs [24] --> Loop 19 

### Ranking functions of CR n_evalfbb2in___5(A,B,C,D,E,F,G) 
* RF of phase [16]: [B-C]

#### Partial ranking functions of CR n_evalfbb2in___5(A,B,C,D,E,F,G) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    B-C


### Specialization of cost equations n_evalfbb2in___7/7 
* CE 6 is refined into CE [26,27] 
* CE 7 is refined into CE [28] 
* CE 10 is refined into CE [29,30] 
* CE 11 is refined into CE [31] 
* CE 12 is refined into CE [32] 
* CE 14 is refined into CE [33] 
* CE 13 is refined into CE [34,35] 
* CE 8 is refined into CE [36,37] 
* CE 9 is refined into CE [38] 


### Cost equations --> "Loop" of n_evalfbb2in___7/7 
* CEs [37] --> Loop 20 
* CEs [36] --> Loop 21 
* CEs [38] --> Loop 22 
* CEs [28] --> Loop 23 
* CEs [29] --> Loop 24 
* CEs [26,27,30,31] --> Loop 25 
* CEs [32,33] --> Loop 26 
* CEs [35] --> Loop 27 
* CEs [34] --> Loop 28 

### Ranking functions of CR n_evalfbb2in___7(A,B,C,D,E,F,G) 
* RF of phase [20,21,22]: [-A+B-1]

#### Partial ranking functions of CR n_evalfbb2in___7(A,B,C,D,E,F,G) 
* Partial RF of phase [20,21,22]:
  - RF of loop [20:1]:
    -A/3+B/3-1
  - RF of loop [21:1]:
    -A/2+B/2-1
    B/2-C/2-1
  - RF of loop [22:1]:
    -A+B-1
    B-C-1


### Specialization of cost equations n_evalfbb2in___7_loop_cont/5 
* CE 16 is refined into CE [39] 
* CE 15 is refined into CE [40] 
* CE 17 is refined into CE [41] 


### Cost equations --> "Loop" of n_evalfbb2in___7_loop_cont/5 
* CEs [39] --> Loop 29 
* CEs [40] --> Loop 30 
* CEs [41] --> Loop 31 

### Ranking functions of CR n_evalfbb2in___7_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb2in___7_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalfbb6in___9/4 
* CE 4 is refined into CE [42,43,44,45,46] 
* CE 5 is refined into CE [47] 


### Cost equations --> "Loop" of n_evalfbb6in___9/4 
* CEs [42,43,44,45,46,47] --> Loop 32 

### Ranking functions of CR n_evalfbb6in___9(A,B,C,D) 

#### Partial ranking functions of CR n_evalfbb6in___9(A,B,C,D) 


### Specialization of cost equations n_evalfbb5in___10/4 
* CE 2 is refined into CE [48] 
* CE 3 is refined into CE [49] 


### Cost equations --> "Loop" of n_evalfbb5in___10/4 
* CEs [48] --> Loop 33 
* CEs [49] --> Loop 34 

### Ranking functions of CR n_evalfbb5in___10(A,B,C,D) 

#### Partial ranking functions of CR n_evalfbb5in___10(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [50,51] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [51] --> Loop 35 
* CEs [50] --> Loop 36 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb2in___5(A,B,C,D,E,F,G):
* Chain [[16],19]: 2*it(16)+1
  Such that:it(16) =< -C+G

  with precondition: [D=2,B+1=E,B=F,B=G,A>=0,C>=A+1,B>=C+1] 

* Chain [[16],18]: 2*it(16)+0
  Such that:it(16) =< B-C

  with precondition: [D=3,A>=0,C>=A+1,B>=C+1] 

* Chain [[16],17]: 2*it(16)+2
  Such that:it(16) =< -C+G

  with precondition: [D=4,B=F,E=G+1,A>=0,C>=A+1,E>=C+2,B>=E] 

* Chain [19]: 1
  with precondition: [D=2,C=B,C+1=E,C=F,C=G,A>=0,C>=A+1] 

* Chain [18]: 0
  with precondition: [D=3,A>=0,C>=A+1,B>=C] 

* Chain [17]: 2
  with precondition: [D=4,C+1=E,B=F,C=G,A>=0,C>=A+1,B>=C+1] 


#### Cost of chains of n_evalfbb2in___7(A,B,C,D,E,F,G):
* Chain [[20,21,22],28]: 6*it(20)+6*it(21)+6*it(22)+3
  Such that:it(21) =< -A/2+G/2
it(20) =< -A/3+G/3
aux(5) =< -A+G
it(20) =< aux(5)
it(21) =< aux(5)
it(22) =< aux(5)

  with precondition: [D=2,A=C,B+1=E,B=F,B=G,A>=0,B>=A+2] 

* Chain [[20,21,22],27]: 20*it(20)+3
  Such that:aux(6) =< -A+G
it(20) =< aux(6)

  with precondition: [D=2,A=C,B+1=E,B=F,B=G,A>=0,B>=A+3] 

* Chain [[20,21,22],26]: 20*it(20)+2
  Such that:aux(7) =< B-C
it(20) =< aux(7)

  with precondition: [D=3,A=C,A>=0,B>=A+2] 

* Chain [[20,21,22],25]: 22*it(20)+6
  Such that:aux(9) =< B-C
it(20) =< aux(9)

  with precondition: [D=5,A=C,A>=0,B>=A+3] 

* Chain [[20,21,22],24]: 6*it(20)+6*it(21)+6*it(22)+6
  Such that:it(21) =< B/2-C/2
it(20) =< B/3-C/3
aux(10) =< B-C
it(20) =< aux(10)
it(21) =< aux(10)
it(22) =< aux(10)

  with precondition: [D=5,A=C,A>=0,B>=A+4] 

* Chain [[20,21,22],23]: 6*it(20)+6*it(21)+6*it(22)+3
  Such that:it(21) =< B/2-C/2
it(20) =< B/3-C/3
aux(11) =< B-C
it(20) =< aux(11)
it(21) =< aux(11)
it(22) =< aux(11)

  with precondition: [D=5,A=C,A>=0,B>=A+2] 

* Chain [28]: 3
  with precondition: [D=2,A+1=B,A=C,A+2=E,A+1=F,A+1=G,A>=0] 

* Chain [27]: 2*s(5)+3
  Such that:s(5) =< B-C

  with precondition: [D=2,C=A,B+1=E,B=F,B=G,C>=0,B>=C+2] 

* Chain [26]: 2*s(6)+2
  Such that:s(6) =< -A+B

  with precondition: [D=3,C=A,C>=0,B>=C+1] 

* Chain [25]: 4*s(7)+6
  Such that:aux(8) =< B-C
s(7) =< aux(8)

  with precondition: [D=5,C=A,C>=0,B>=C+2] 

* Chain [24]: 6
  with precondition: [D=5,C=A,C>=0,B>=C+3] 

* Chain [23]: 3
  with precondition: [D=5,A+1=B,A=C,A>=0] 


#### Cost of chains of n_evalfbb2in___7_loop_cont(A,B,C,D,E):
* Chain [31]: 1
  with precondition: [A=2,B=C+1,B=D+1,B>=2] 

* Chain [30]: 0
  with precondition: [A=3] 

* Chain [29]: 0
  with precondition: [A=5] 


#### Cost of chains of n_evalfbb6in___9(A,B,C,D):
* Chain [32]: 18*s(31)+18*s(32)+88*s(33)+7
  Such that:aux(18) =< B
aux(19) =< B/2
aux(20) =< B/3
s(31) =< aux(19)
s(32) =< aux(20)
s(33) =< aux(18)
s(32) =< aux(18)
s(31) =< aux(18)

  with precondition: [A=0,B>=1] 


#### Cost of chains of n_evalfbb5in___10(A,B,C,D):
* Chain [34]: 1
  with precondition: [A=0,0>=B] 

* Chain [33]: 18*s(48)+18*s(49)+88*s(50)+8
  Such that:s(45) =< B
s(46) =< B/2
s(47) =< B/3
s(48) =< s(46)
s(49) =< s(47)
s(50) =< s(45)
s(49) =< s(45)
s(48) =< s(45)

  with precondition: [A=0,B>=1] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [36]: 3
  with precondition: [0>=B] 

* Chain [35]: 18*s(54)+18*s(55)+88*s(56)+10
  Such that:s(51) =< B
s(52) =< B/2
s(53) =< B/3
s(54) =< s(52)
s(55) =< s(53)
s(56) =< s(51)
s(55) =< s(51)
s(54) =< s(51)

  with precondition: [B>=1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [36] with precondition: [0>=B] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [35] with precondition: [B>=1] 
    - Upper bound: 103*B+10 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): nat(B)*88+7+nat(B/2)*18+nat(B/3)*18+3 
Asymptotic class: n 
* Total analysis performed in 532 ms.


-- stats
realtime 0:00.61
usertime 0.57
systime 0.01

