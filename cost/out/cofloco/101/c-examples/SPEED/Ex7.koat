WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalEx7bb3in___3/7,n_evalEx7bbin___2/7]
1. recursive  : [n_evalEx7bb3in___3_loop_cont/8,n_evalEx7bb3in___5/7,n_evalEx7bbin___4/7,n_evalEx7bbin___6/7]
2. recursive  : [n_evalEx7bb3in___7/7,n_evalEx7bbin___6_loop_cont/8]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [n_evalEx7stop___1/4]
5. non_recursive  : [n_evalEx7bb3in___7_loop_cont/5]
6. non_recursive  : [n_evalEx7bbin___8/4]
7. non_recursive  : [n_evalEx7bb3in___9/4]
8. non_recursive  : [n_evalEx7start/4]
9. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalEx7bb3in___3/7
1. SCC is partially evaluated into n_evalEx7bbin___6/7
2. SCC is partially evaluated into n_evalEx7bb3in___7/7
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_evalEx7bb3in___7_loop_cont/5
6. SCC is partially evaluated into n_evalEx7bbin___8/4
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalEx7bb3in___3/7 
* CE 15 is refined into CE [16] 
* CE 14 is refined into CE [17] 
* CE 13 is refined into CE [18] 


### Cost equations --> "Loop" of n_evalEx7bb3in___3/7 
* CEs [18] --> Loop 14 
* CEs [16] --> Loop 15 
* CEs [17] --> Loop 16 

### Ranking functions of CR n_evalEx7bb3in___3(A,B,C,D,E,F,G) 
* RF of phase [14]: [A-C,B-C-1]

#### Partial ranking functions of CR n_evalEx7bb3in___3(A,B,C,D,E,F,G) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    A-C
    B-C-1


### Specialization of cost equations n_evalEx7bbin___6/7 
* CE 11 is refined into CE [19] 
* CE 9 is refined into CE [20] 
* CE 12 is refined into CE [21] 
* CE 10 is refined into CE [22,23] 


### Cost equations --> "Loop" of n_evalEx7bbin___6/7 
* CEs [19] --> Loop 17 
* CEs [20,21] --> Loop 18 
* CEs [23] --> Loop 19 
* CEs [22] --> Loop 20 

### Ranking functions of CR n_evalEx7bbin___6(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_evalEx7bbin___6(A,B,C,D,E,F,G) 


### Specialization of cost equations n_evalEx7bb3in___7/7 
* CE 4 is refined into CE [24] 
* CE 6 is refined into CE [25] 
* CE 3 is refined into CE [26,27] 
* CE 5 is refined into CE [28] 


### Cost equations --> "Loop" of n_evalEx7bb3in___7/7 
* CEs [28] --> Loop 21 
* CEs [24,25] --> Loop 22 
* CEs [27] --> Loop 23 
* CEs [26] --> Loop 24 

### Ranking functions of CR n_evalEx7bb3in___7(A,B,C,D,E,F,G) 
* RF of phase [21]: [B-C+1]

#### Partial ranking functions of CR n_evalEx7bb3in___7(A,B,C,D,E,F,G) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    B-C+1


### Specialization of cost equations n_evalEx7bb3in___7_loop_cont/5 
* CE 7 is refined into CE [29] 
* CE 8 is refined into CE [30] 


### Cost equations --> "Loop" of n_evalEx7bb3in___7_loop_cont/5 
* CEs [29] --> Loop 25 
* CEs [30] --> Loop 26 

### Ranking functions of CR n_evalEx7bb3in___7_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalEx7bb3in___7_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalEx7bbin___8/4 
* CE 2 is refined into CE [31,32,33,34,35] 


### Cost equations --> "Loop" of n_evalEx7bbin___8/4 
* CEs [33] --> Loop 27 
* CEs [32] --> Loop 28 
* CEs [31,34,35] --> Loop 29 

### Ranking functions of CR n_evalEx7bbin___8(A,B,C,D) 

#### Partial ranking functions of CR n_evalEx7bbin___8(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [36] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [36] --> Loop 30 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalEx7bb3in___3(A,B,C,D,E,F,G):
* Chain [[14],16]: 2*it(14)+1
  Such that:it(14) =< A-C

  with precondition: [D=3,C>=1,B>=A+1,A>=C+1] 

* Chain [[14],15]: 2*it(14)+0
  Such that:it(14) =< A-C

  with precondition: [D=4,C>=1,B>=A+1,A>=C+1] 

* Chain [16]: 1
  with precondition: [D=3,C=A,C>=1,B>=C+1] 

* Chain [15]: 0
  with precondition: [D=4,C>=1,B>=A+1,A>=C] 


#### Cost of chains of n_evalEx7bbin___6(A,B,C,D,E,F,G):
* Chain [20]: 4
  with precondition: [A=1,D=3,C=B+1,C>=3] 

* Chain [19]: 2*s(2)+4
  Such that:s(2) =< A

  with precondition: [D=3,C=B+1,A>=2,C>=A+2] 

* Chain [18]: 2*s(3)+3
  Such that:s(3) =< A

  with precondition: [D=4,A>=1,C>=A+2,B+1>=C] 

* Chain [17]: 1
  with precondition: [D=5,A=E,B=F,C+1=G,A>=1,C>=A+2,B>=C] 


#### Cost of chains of n_evalEx7bb3in___7(A,B,C,D,E,F,G):
* Chain [[21],24]: 2*it(21)+5
  Such that:it(21) =< B-C+1

  with precondition: [A=1,D=3,C>=3,B>=C] 

* Chain [[21],23]: 2*it(21)+2*s(4)+5
  Such that:s(4) =< A
it(21) =< B-C+1

  with precondition: [D=3,A>=2,C>=A+2,B>=C] 

* Chain [[21],22]: 2*it(21)+2*s(5)+4
  Such that:s(5) =< A
it(21) =< B-C+1

  with precondition: [D=4,A>=1,C>=A+2,B>=C] 

* Chain [24]: 5
  with precondition: [A=1,D=3,C=B+1,C>=3] 

* Chain [23]: 2*s(4)+5
  Such that:s(4) =< A

  with precondition: [D=3,C=B+1,A>=2,C>=A+2] 

* Chain [22]: 2*s(5)+4
  Such that:s(5) =< A

  with precondition: [D=4,A>=1,C>=A+2,B+1>=C] 


#### Cost of chains of n_evalEx7bb3in___7_loop_cont(A,B,C,D,E):
* Chain [26]: 0
  with precondition: [A=3] 

* Chain [25]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalEx7bbin___8(A,B,C,D):
* Chain [29]: 6*s(9)+4*s(10)+6
  Such that:aux(2) =< B-C
aux(3) =< C
s(10) =< aux(2)
s(9) =< aux(3)

  with precondition: [C=A+1,C>=2,B>=C] 

* Chain [28]: 2*s(14)+6
  Such that:s(14) =< B

  with precondition: [A=1,C=2,B>=3] 

* Chain [27]: 2*s(15)+6
  Such that:s(15) =< C

  with precondition: [A+1=B,A+1=C,A>=2] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [30]: 2*s(22)+8*s(25)+4*s(26)+9
  Such that:s(23) =< -A+B
s(24) =< A+1
s(22) =< B
s(25) =< s(24)
s(26) =< s(23)

  with precondition: [A>=1,B>=A+1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [30] with precondition: [A>=1,B>=A+1] 
    - Upper bound: 4*A+6*B+17 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): 4*A+6*B+17 
Asymptotic class: n 
* Total analysis performed in 305 ms.


-- stats
realtime 0:00.36
usertime 0.35
systime 0.00

