WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalEx4bb2in___8/9,n_evalEx4bb3in___6/9]
1. recursive  : [n_evalEx4bb2in___3/9,n_evalEx4bb2in___8_loop_cont/10,n_evalEx4bb3in___10/9,n_evalEx4bb4in___4/9]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalEx4stop___1/5]
4. non_recursive  : [n_evalEx4bb4in___9/5]
5. non_recursive  : [n_evalEx4bb2in___2/5]
6. non_recursive  : [n_evalEx4bb4in___5/5]
7. non_recursive  : [n_evalEx4bb4in___7/5]
8. non_recursive  : [n_evalEx4bb3in___10_loop_cont/6]
9. non_recursive  : [n_evalEx4bb2in___11/5]
10. non_recursive  : [n_evalEx4bb4in___12/5]
11. non_recursive  : [n_evalEx4start/5]
12. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalEx4bb2in___8/9
1. SCC is partially evaluated into n_evalEx4bb3in___10/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into n_evalEx4bb3in___10_loop_cont/6
9. SCC is partially evaluated into n_evalEx4bb2in___11/5
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalEx4bb2in___8/9 
* CE 15 is refined into CE [16] 
* CE 12 is refined into CE [17] 
* CE 14 is refined into CE [18] 
* CE 13 is refined into CE [19] 


### Cost equations --> "Loop" of n_evalEx4bb2in___8/9 
* CEs [19] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [18] --> Loop 18 

### Ranking functions of CR n_evalEx4bb2in___8(A,B,C,D,E,F,G,H,I) 
* RF of phase [15]: [D]

#### Partial ranking functions of CR n_evalEx4bb2in___8(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    D


### Specialization of cost equations n_evalEx4bb3in___10/9 
* CE 7 is refined into CE [20] 
* CE 4 is refined into CE [21] 
* CE 8 is refined into CE [22] 
* CE 5 is refined into CE [23,24] 
* CE 6 is refined into CE [25,26] 


### Cost equations --> "Loop" of n_evalEx4bb3in___10/9 
* CEs [26] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [21,22] --> Loop 22 
* CEs [24] --> Loop 23 
* CEs [23] --> Loop 24 

### Ranking functions of CR n_evalEx4bb3in___10(A,B,C,D,E,F,G,H,I) 
* RF of phase [19,20]: [B-1]

#### Partial ranking functions of CR n_evalEx4bb3in___10(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [19,20]:
  - RF of loop [19:1]:
    B/2-1
  - RF of loop [20:1]:
    B-1
    D-1


### Specialization of cost equations n_evalEx4bb3in___10_loop_cont/6 
* CE 9 is refined into CE [27] 
* CE 10 is refined into CE [28] 
* CE 11 is refined into CE [29] 


### Cost equations --> "Loop" of n_evalEx4bb3in___10_loop_cont/6 
* CEs [27] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [29] --> Loop 27 

### Ranking functions of CR n_evalEx4bb3in___10_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalEx4bb3in___10_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalEx4bb2in___11/5 
* CE 2 is refined into CE [30,31,32,33,34] 
* CE 3 is refined into CE [35] 


### Cost equations --> "Loop" of n_evalEx4bb2in___11/5 
* CEs [35] --> Loop 28 
* CEs [30,31,32,33,34] --> Loop 29 

### Ranking functions of CR n_evalEx4bb2in___11(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalEx4bb2in___11(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [36,37] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [37] --> Loop 30 
* CEs [36] --> Loop 31 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalEx4bb2in___8(A,B,C,D,E,F,G,H,I):
* Chain [[15],18]: 2*it(15)+1
  Such that:it(15) =< D

  with precondition: [A=1,C=1,E=2,F=1,G=0,H=1,I=0,D>=1,B>=D+1] 

* Chain [[15],17]: 2*it(15)+0
  Such that:it(15) =< D

  with precondition: [A=1,C=1,E=3,D>=1,B>=D+1] 

* Chain [[15],16]: 2*it(15)+2
  Such that:it(15) =< D-I

  with precondition: [A=1,C=1,E=4,F=1,H=1,G=I,G>=1,B>=D+1,D>=G+1] 

* Chain [18]: 1
  with precondition: [A=1,C=1,D=0,E=2,F=1,G=0,H=1,I=0,B>=1] 

* Chain [17]: 0
  with precondition: [A=1,C=1,E=3,D>=0,B>=D+1] 

* Chain [16]: 2
  with precondition: [A=1,C=1,E=4,F=1,H=1,D=G,D=I,D>=1,B>=D+1] 


#### Cost of chains of n_evalEx4bb3in___10(A,B,C,D,E,F,G,H,I):
* Chain [[19,20],24]: 5*it(19)+7*it(20)+2
  Such that:it(19) =< B/2
aux(5) =< B
it(19) =< aux(5)
it(20) =< aux(5)

  with precondition: [A=1,C=0,E=2,F=1,G=0,H=1,I=0,B=D,B>=2] 

* Chain [[19,20],23]: 14*it(19)+2
  Such that:aux(6) =< D
it(19) =< aux(6)

  with precondition: [A=1,C=0,E=2,F=1,G=0,H=1,I=0,B=D,B>=3] 

* Chain [[19,20],22]: 14*it(19)+1
  Such that:aux(7) =< D
it(19) =< aux(7)

  with precondition: [A=1,C=0,E=3,B=D,B>=2] 

* Chain [[19,20],21]: 5*it(19)+7*it(20)+1
  Such that:it(19) =< D/2-I/2
aux(8) =< D
aux(9) =< D-I
it(19) =< aux(8)
it(20) =< aux(8)
it(19) =< aux(9)
it(20) =< aux(9)

  with precondition: [A=1,C=0,E=5,F=0,H=0,B=D,I=G,I>=1,B>=I+1] 

* Chain [24]: 2
  with precondition: [A=1,B=1,C=0,D=1,E=2,F=1,G=0,H=1,I=0] 

* Chain [23]: 2*s(5)+2
  Such that:s(5) =< D

  with precondition: [A=1,C=0,E=2,F=1,G=0,H=1,I=0,D=B,D>=2] 

* Chain [22]: 2*s(6)+1
  Such that:s(6) =< D

  with precondition: [A=1,C=0,E=3,D=B,D>=1] 

* Chain [21]: 1
  with precondition: [A=1,C=0,E=5,F=0,H=0,D=B,D=G,D=I,D>=1] 


#### Cost of chains of n_evalEx4bb3in___10_loop_cont(A,B,C,D,E,F):
* Chain [27]: 3
  with precondition: [A=2,B=1,C=0,D=1,E=0] 

* Chain [26]: 0
  with precondition: [A=3] 

* Chain [25]: 1
  with precondition: [A=5,B=0,D=0,C=E,C>=1] 


#### Cost of chains of n_evalEx4bb2in___11(A,B,C,D,E):
* Chain [29]: 10*s(17)+46*s(19)+6
  Such that:aux(14) =< D
aux(15) =< D/2
s(17) =< aux(15)
s(19) =< aux(14)
s(17) =< aux(14)

  with precondition: [A=1,C=0,D=B,D>=1] 

* Chain [28]: 2
  with precondition: [A=1,C=0,D=B,0>=D] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [31]: 5
  with precondition: [0>=A] 

* Chain [30]: 10*s(29)+46*s(30)+9
  Such that:s(27) =< A
s(28) =< A/2
s(29) =< s(28)
s(30) =< s(27)
s(29) =< s(27)

  with precondition: [A>=1] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [31] with precondition: [0>=A] 
    - Upper bound: 5 
    - Complexity: constant 
* Chain [30] with precondition: [A>=1] 
    - Upper bound: 51*A+9 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E): nat(A)*46+4+nat(A/2)*10+5 
Asymptotic class: n 
* Total analysis performed in 476 ms.


-- stats
realtime 0:00.53
usertime 0.51
systime 0.00

