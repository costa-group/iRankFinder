WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalSimpleMultiplebb3in___3/9,n_evalSimpleMultiplebbin___1/9]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_evalSimpleMultiplestop___5/5]
3. non_recursive  : [n_evalSimpleMultiplebb3in___3_loop_cont/6]
4. recursive  : [n_evalSimpleMultiplebb3in___4/9,n_evalSimpleMultiplebbin___2/9]
5. non_recursive  : [n_evalSimpleMultiplebb3in___4_loop_cont/6]
6. non_recursive  : [n_evalSimpleMultiplebbin___6/5]
7. non_recursive  : [n_evalSimpleMultiplebb3in___7/5]
8. non_recursive  : [n_evalSimpleMultiplestart/5]
9. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalSimpleMultiplebb3in___3/9
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalSimpleMultiplebb3in___3_loop_cont/6
4. SCC is partially evaluated into n_evalSimpleMultiplebb3in___4/9
5. SCC is partially evaluated into n_evalSimpleMultiplebb3in___4_loop_cont/6
6. SCC is partially evaluated into n_evalSimpleMultiplebbin___6/5
7. SCC is partially evaluated into n_evalSimpleMultiplebb3in___7/5
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalSimpleMultiplebb3in___3/9 
* CE 8 is refined into CE [16] 
* CE 7 is refined into CE [17] 
* CE 6 is refined into CE [18] 


### Cost equations --> "Loop" of n_evalSimpleMultiplebb3in___3/9 
* CEs [18] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [17] --> Loop 18 

### Ranking functions of CR n_evalSimpleMultiplebb3in___3(A,B,C,D,E,F,G,H,I) 
* RF of phase [16]: [-B+C]

#### Partial ranking functions of CR n_evalSimpleMultiplebb3in___3(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    -B+C


### Specialization of cost equations n_evalSimpleMultiplebb3in___3_loop_cont/6 
* CE 10 is refined into CE [19] 
* CE 9 is refined into CE [20] 


### Cost equations --> "Loop" of n_evalSimpleMultiplebb3in___3_loop_cont/6 
* CEs [19] --> Loop 19 
* CEs [20] --> Loop 20 

### Ranking functions of CR n_evalSimpleMultiplebb3in___3_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalSimpleMultiplebb3in___3_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalSimpleMultiplebb3in___4/9 
* CE 13 is refined into CE [21] 
* CE 12 is refined into CE [22] 
* CE 11 is refined into CE [23] 


### Cost equations --> "Loop" of n_evalSimpleMultiplebb3in___4/9 
* CEs [23] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [21] --> Loop 23 

### Ranking functions of CR n_evalSimpleMultiplebb3in___4(A,B,C,D,E,F,G,H,I) 
* RF of phase [21]: [-A+D]

#### Partial ranking functions of CR n_evalSimpleMultiplebb3in___4(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    -A+D


### Specialization of cost equations n_evalSimpleMultiplebb3in___4_loop_cont/6 
* CE 15 is refined into CE [24,25,26] 
* CE 14 is refined into CE [27] 


### Cost equations --> "Loop" of n_evalSimpleMultiplebb3in___4_loop_cont/6 
* CEs [24,25,26] --> Loop 24 
* CEs [27] --> Loop 25 

### Ranking functions of CR n_evalSimpleMultiplebb3in___4_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalSimpleMultiplebb3in___4_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalSimpleMultiplebbin___6/5 
* CE 5 is refined into CE [28,29,30] 
* CE 4 is refined into CE [31,32,33] 


### Cost equations --> "Loop" of n_evalSimpleMultiplebbin___6/5 
* CEs [28,29,30] --> Loop 26 
* CEs [31,32,33] --> Loop 27 

### Ranking functions of CR n_evalSimpleMultiplebbin___6(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalSimpleMultiplebbin___6(A,B,C,D,E) 


### Specialization of cost equations n_evalSimpleMultiplebb3in___7/5 
* CE 2 is refined into CE [34,35] 
* CE 3 is refined into CE [36] 


### Cost equations --> "Loop" of n_evalSimpleMultiplebb3in___7/5 
* CEs [35] --> Loop 28 
* CEs [34] --> Loop 29 
* CEs [36] --> Loop 30 

### Ranking functions of CR n_evalSimpleMultiplebb3in___7(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalSimpleMultiplebb3in___7(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [37,38,39] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [39] --> Loop 31 
* CEs [38] --> Loop 32 
* CEs [37] --> Loop 33 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalSimpleMultiplebb3in___3(A,B,C,D,E,F,G,H,I):
* Chain [[16],18]: 2*it(16)+1
  Such that:it(16) =< -B+C

  with precondition: [E=2,A>=0,B>=1,C>=B+1,A>=D] 

* Chain [[16],17]: 2*it(16)+0
  Such that:it(16) =< -B+C

  with precondition: [E=3,A>=0,B>=1,C>=B+1,A>=D] 

* Chain [18]: 1
  with precondition: [E=2,B=C,A>=0,B>=1,A>=D] 

* Chain [17]: 0
  with precondition: [E=3] 


#### Cost of chains of n_evalSimpleMultiplebb3in___3_loop_cont(A,B,C,D,E,F):
* Chain [20]: 0
  with precondition: [A=2] 

* Chain [19]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalSimpleMultiplebb3in___4(A,B,C,D,E,F,G,H,I):
* Chain [[21],23]: 2*it(21)+0
  Such that:it(21) =< -A+D

  with precondition: [B=0,E=3,A>=1,C>=1,D>=A+1] 

* Chain [[21],22]: 2*it(21)+2
  Such that:it(21) =< -A+I

  with precondition: [B=0,E=4,G=1,D=F,C=H,D=I,A>=1,C>=1,D>=A+1] 

* Chain [23]: 0
  with precondition: [B=0,E=3,A>=1,C>=1,D>=A] 

* Chain [22]: 2
  with precondition: [B=0,E=4,G=1,D=A,D=F,C=H,D=I,C>=1,D>=1] 


#### Cost of chains of n_evalSimpleMultiplebb3in___4_loop_cont(A,B,C,D,E,F):
* Chain [25]: 0
  with precondition: [A=3] 

* Chain [24]: 4*s(3)+1
  Such that:aux(1) =< -C+D
s(3) =< aux(1)

  with precondition: [A=4] 


#### Cost of chains of n_evalSimpleMultiplebbin___6(A,B,C,D,E):
* Chain [27]: 4*s(5)+2
  Such that:aux(2) =< C
s(5) =< aux(2)

  with precondition: [A=0,B=0,0>=D,C>=1] 

* Chain [26]: 4*s(7)+8*s(9)+4
  Such that:aux(3) =< C
aux(4) =< D
s(7) =< aux(4)
s(9) =< aux(3)

  with precondition: [A=0,B=0,C>=1,D>=1] 


#### Cost of chains of n_evalSimpleMultiplebb3in___7(A,B,C,D,E):
* Chain [30]: 1
  with precondition: [A=0,B=0,0>=C] 

* Chain [29]: 4*s(14)+3
  Such that:s(13) =< C
s(14) =< s(13)

  with precondition: [A=0,B=0,0>=D,C>=1] 

* Chain [28]: 4*s(17)+8*s(18)+5
  Such that:s(15) =< C
s(16) =< D
s(17) =< s(16)
s(18) =< s(15)

  with precondition: [A=0,B=0,C>=1,D>=1] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [33]: 3
  with precondition: [0>=C] 

* Chain [32]: 4*s(20)+5
  Such that:s(19) =< C
s(20) =< s(19)

  with precondition: [0>=D,C>=1] 

* Chain [31]: 4*s(23)+8*s(24)+7
  Such that:s(21) =< C
s(22) =< D
s(23) =< s(22)
s(24) =< s(21)

  with precondition: [C>=1,D>=1] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [33] with precondition: [0>=C] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [32] with precondition: [0>=D,C>=1] 
    - Upper bound: 4*C+5 
    - Complexity: n 
* Chain [31] with precondition: [C>=1,D>=1] 
    - Upper bound: 8*C+4*D+7 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E): nat(C)*4+2+nat(D)*4+ (nat(C)*4+2)+3 
Asymptotic class: n 
* Total analysis performed in 269 ms.


-- stats
realtime 0:00.32
usertime 0.30
systime 0.01

