WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb3in___1/7,n_evalfbbin___2/7]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_evalfstop___3/4]
3. non_recursive  : [n_evalfbbin___2_loop_cont/5]
4. non_recursive  : [n_evalfbb3in___7/4]
5. recursive  : [n_evalfbb3in___8/7,n_evalfbbin___6/7]
6. recursive  : [n_evalfbb3in___5/7,n_evalfbbin___4/7]
7. non_recursive  : [n_evalfbb3in___5_loop_cont/5]
8. non_recursive  : [n_evalfbb3in___8_loop_cont/5]
9. non_recursive  : [n_evalfbbin___9/4]
10. non_recursive  : [n_evalfbb3in___10/4]
11. non_recursive  : [n_evalfstart/4]
12. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbbin___2/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalfbbin___2_loop_cont/5
4. SCC is partially evaluated into n_evalfbb3in___7/4
5. SCC is partially evaluated into n_evalfbb3in___8/7
6. SCC is partially evaluated into n_evalfbb3in___5/7
7. SCC is partially evaluated into n_evalfbb3in___5_loop_cont/5
8. SCC is partially evaluated into n_evalfbb3in___8_loop_cont/5
9. SCC is partially evaluated into n_evalfbbin___9/4
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbbin___2/7 
* CE 12 is refined into CE [20] 
* CE 10 is refined into CE [21] 
* CE 11 is refined into CE [22] 


### Cost equations --> "Loop" of n_evalfbbin___2/7 
* CEs [22] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [21] --> Loop 22 

### Ranking functions of CR n_evalfbbin___2(A,B,C,D,E,F,G) 
* RF of phase [20]: [-B+99]

#### Partial ranking functions of CR n_evalfbbin___2(A,B,C,D,E,F,G) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    -B+99


### Specialization of cost equations n_evalfbbin___2_loop_cont/5 
* CE 14 is refined into CE [23] 
* CE 13 is refined into CE [24] 


### Cost equations --> "Loop" of n_evalfbbin___2_loop_cont/5 
* CEs [23] --> Loop 23 
* CEs [24] --> Loop 24 

### Ranking functions of CR n_evalfbbin___2_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbbin___2_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalfbb3in___7/4 
* CE 4 is refined into CE [25,26] 


### Cost equations --> "Loop" of n_evalfbb3in___7/4 
* CEs [25,26] --> Loop 25 

### Ranking functions of CR n_evalfbb3in___7(A,B,C,D) 

#### Partial ranking functions of CR n_evalfbb3in___7(A,B,C,D) 


### Specialization of cost equations n_evalfbb3in___8/7 
* CE 7 is refined into CE [27] 
* CE 6 is refined into CE [28] 
* CE 5 is refined into CE [29] 


### Cost equations --> "Loop" of n_evalfbb3in___8/7 
* CEs [29] --> Loop 26 
* CEs [28] --> Loop 27 
* CEs [27] --> Loop 28 

### Ranking functions of CR n_evalfbb3in___8(A,B,C,D,E,F,G) 
* RF of phase [26]: [-A+C]

#### Partial ranking functions of CR n_evalfbb3in___8(A,B,C,D,E,F,G) 
* Partial RF of phase [26]:
  - RF of loop [26:1]:
    -A+C


### Specialization of cost equations n_evalfbb3in___5/7 
* CE 17 is refined into CE [30] 
* CE 16 is refined into CE [31] 
* CE 15 is refined into CE [32] 


### Cost equations --> "Loop" of n_evalfbb3in___5/7 
* CEs [32] --> Loop 29 
* CEs [30] --> Loop 30 
* CEs [31] --> Loop 31 

### Ranking functions of CR n_evalfbb3in___5(A,B,C,D,E,F,G) 
* RF of phase [29]: [-B+100]

#### Partial ranking functions of CR n_evalfbb3in___5(A,B,C,D,E,F,G) 
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    -B+100


### Specialization of cost equations n_evalfbb3in___5_loop_cont/5 
* CE 19 is refined into CE [33] 
* CE 18 is refined into CE [34] 


### Cost equations --> "Loop" of n_evalfbb3in___5_loop_cont/5 
* CEs [33] --> Loop 32 
* CEs [34] --> Loop 33 

### Ranking functions of CR n_evalfbb3in___5_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb3in___5_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalfbb3in___8_loop_cont/5 
* CE 9 is refined into CE [35,36,37] 
* CE 8 is refined into CE [38] 


### Cost equations --> "Loop" of n_evalfbb3in___8_loop_cont/5 
* CEs [35,36,37] --> Loop 34 
* CEs [38] --> Loop 35 

### Ranking functions of CR n_evalfbb3in___8_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb3in___8_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalfbbin___9/4 
* CE 3 is refined into CE [39,40,41] 
* CE 2 is refined into CE [42] 


### Cost equations --> "Loop" of n_evalfbbin___9/4 
* CEs [42] --> Loop 36 
* CEs [39,40,41] --> Loop 37 

### Ranking functions of CR n_evalfbbin___9(A,B,C,D) 

#### Partial ranking functions of CR n_evalfbbin___9(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [43,44] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [44] --> Loop 38 
* CEs [43] --> Loop 39 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbbin___2(A,B,C,D,E,F,G):
* Chain [[20],22]: 2*it(20)+2
  Such that:it(20) =< -B+99

  with precondition: [A=0,D=2,98>=B,0>=C,B>=1] 

* Chain [[20],21]: 2*it(20)+0
  Such that:it(20) =< -B+99

  with precondition: [A=0,D=3,98>=B,0>=C,B>=1] 

* Chain [21]: 0
  with precondition: [A=0,D=3,0>=C,B>=1] 


#### Cost of chains of n_evalfbbin___2_loop_cont(A,B,C,D,E):
* Chain [24]: 0
  with precondition: [A=2] 

* Chain [23]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalfbb3in___7(A,B,C,D):
* Chain [25]: 395
  with precondition: [A=0,B=1,0>=C] 


#### Cost of chains of n_evalfbb3in___8(A,B,C,D,E,F,G):
* Chain [[26],28]: 2*it(26)+0
  Such that:it(26) =< -A+C

  with precondition: [B=0,D=3,A>=1,C>=A+1] 

* Chain [[26],27]: 2*it(26)+2
  Such that:it(26) =< -A+G

  with precondition: [B=0,D=4,F=1,C=E,C=G,A>=1,C>=A+1] 

* Chain [28]: 0
  with precondition: [B=0,D=3,A>=1,C>=A] 

* Chain [27]: 2
  with precondition: [B=0,D=4,F=1,C=A,C=E,C=G,C>=1] 


#### Cost of chains of n_evalfbb3in___5(A,B,C,D,E,F,G):
* Chain [[29],31]: 2*it(29)+1
  Such that:it(29) =< -B+100

  with precondition: [D=2,A=C,99>=B,A>=1,B>=1] 

* Chain [[29],30]: 2*it(29)+0
  Such that:it(29) =< -B+100

  with precondition: [D=3,A=C,99>=B,A>=1,B>=1] 

* Chain [31]: 1
  with precondition: [D=2,A=C,A>=1,B>=100] 

* Chain [30]: 0
  with precondition: [D=3] 


#### Cost of chains of n_evalfbb3in___5_loop_cont(A,B,C,D,E):
* Chain [33]: 0
  with precondition: [A=2] 

* Chain [32]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalfbb3in___8_loop_cont(A,B,C,D,E):
* Chain [35]: 0
  with precondition: [A=3] 

* Chain [34]: 4*s(6)+1
  Such that:aux(2) =< -C+100
s(6) =< aux(2)

  with precondition: [A=4] 


#### Cost of chains of n_evalfbbin___9(A,B,C,D):
* Chain [37]: 4*s(8)+8*s(10)+4
  Such that:aux(3) =< 99
aux(4) =< C
s(8) =< aux(4)
s(10) =< aux(3)

  with precondition: [A=0,B=0,C>=1] 

* Chain [36]: 396
  with precondition: [A=0,B=0,0>=C] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [39]: 399
  with precondition: [0>=C] 

* Chain [38]: 4*s(16)+8*s(17)+7
  Such that:s(14) =< 99
s(15) =< C
s(16) =< s(15)
s(17) =< s(14)

  with precondition: [C>=1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [39] with precondition: [0>=C] 
    - Upper bound: 399 
    - Complexity: constant 
* Chain [38] with precondition: [C>=1] 
    - Upper bound: 4*C+799 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): nat(C)*4+400+399 
Asymptotic class: n 
* Total analysis performed in 278 ms.


-- stats
realtime 0:00.40
usertime 0.31
systime 0.00

