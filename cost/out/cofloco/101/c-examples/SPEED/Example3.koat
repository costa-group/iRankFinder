WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb3in___3/9,n_evalfbb3in___6/9,n_evalfbb4in___2/9,n_evalfbb4in___5/9,n_evalfbbin___1/9,n_evalfbbin___4/9]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_evalfstop___7/5]
3. non_recursive  : [n_evalfbb3in___6_loop_cont/6]
4. non_recursive  : [n_evalfbbin___8/5]
5. non_recursive  : [n_evalfbb4in___9/5]
6. non_recursive  : [n_evalfbb3in___10/5]
7. non_recursive  : [n_evalfstart/5]
8. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb3in___6/9
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalfbb3in___6_loop_cont/6
4. SCC is partially evaluated into n_evalfbbin___8/5
5. SCC is partially evaluated into n_evalfbb4in___9/5
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb3in___6/9 
* CE 10 is refined into CE [13] 
* CE 7 is refined into CE [14] 
* CE 5 is refined into CE [15] 
* CE 9 is refined into CE [16] 
* CE 6 is refined into CE [17] 
* CE 8 is refined into CE [18] 


### Cost equations --> "Loop" of n_evalfbb3in___6/9 
* CEs [17] --> Loop 11 
* CEs [18] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15,16] --> Loop 15 

### Ranking functions of CR n_evalfbb3in___6(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_evalfbb3in___6(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [11,12]:
  - RF of loop [11:1]:
    A-C depends on loops [12:1] 
    B-C-1 depends on loops [12:1] 
  - RF of loop [12:1]:
    B-D-1


### Specialization of cost equations n_evalfbb3in___6_loop_cont/6 
* CE 12 is refined into CE [19] 
* CE 11 is refined into CE [20] 


### Cost equations --> "Loop" of n_evalfbb3in___6_loop_cont/6 
* CEs [19] --> Loop 16 
* CEs [20] --> Loop 17 

### Ranking functions of CR n_evalfbb3in___6_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalfbb3in___6_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalfbbin___8/5 
* CE 4 is refined into CE [21,22,23] 


### Cost equations --> "Loop" of n_evalfbbin___8/5 
* CEs [21,22,23] --> Loop 18 

### Ranking functions of CR n_evalfbbin___8(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbbin___8(A,B,C,D,E) 


### Specialization of cost equations n_evalfbb4in___9/5 
* CE 2 is refined into CE [24] 
* CE 3 is refined into CE [25] 


### Cost equations --> "Loop" of n_evalfbb4in___9/5 
* CEs [24,25] --> Loop 19 

### Ranking functions of CR n_evalfbb4in___9(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb4in___9(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [26] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [26] --> Loop 20 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb3in___6(A,B,C,D,E,F,G,H,I):
* Chain [[11,12],15]: 3*it(11)+6*it(12)+4
  Such that:aux(9) =< B
it(12) =< B-D
aux(15) =< A-C
aux(1) =< it(12)*aux(9)
it(11) =< aux(1)+aux(15)

  with precondition: [E=2,C>=1,D>=0,B>=A+1,A>=C,B>=D+1,A+B>=C+D+2] 

* Chain [[11,12],14]: 3*it(11)+6*it(12)+5
  Such that:aux(9) =< B
it(12) =< B-D
aux(16) =< A-C
aux(1) =< it(12)*aux(9)
it(11) =< aux(1)+aux(16)

  with precondition: [E=2,B>=3,C>=1,D>=0,B>=A+1,A>=C,B>=D+2,A+B>=C+D+3] 

* Chain [[11,12],13]: 3*it(11)+6*it(12)+0
  Such that:aux(9) =< B
it(12) =< B-D
aux(17) =< A-C
aux(1) =< it(12)*aux(9)
it(11) =< aux(1)+aux(17)

  with precondition: [E=3,C>=1,D>=0,B>=A+1,A>=C,B>=D+1,A+B>=C+D+2] 

* Chain [15]: 4
  with precondition: [E=2,C>=1,D>=0,B>=A+1,A>=C,B>=D+1] 

* Chain [14]: 5
  with precondition: [E=2,C=A,C>=1,D>=0,B>=C+1,B>=D+2] 

* Chain [13]: 0
  with precondition: [E=3,C>=1,D>=0,B>=A+1,A>=C] 


#### Cost of chains of n_evalfbb3in___6_loop_cont(A,B,C,D,E,F):
* Chain [17]: 0
  with precondition: [A=2] 

* Chain [16]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalfbbin___8(A,B,C,D,E):
* Chain [18]: 18*s(13)+9*s(15)+6
  Such that:aux(21) =< A
aux(22) =< B
s(13) =< aux(22)
s(14) =< s(13)*aux(22)
s(15) =< s(14)+aux(21)

  with precondition: [C=0,D=0,A>=1,B>=A+1] 


#### Cost of chains of n_evalfbb4in___9(A,B,C,D,E):
* Chain [19]: 18*s(28)+9*s(30)+7
  Such that:s(26) =< A
s(27) =< B
s(28) =< s(27)
s(29) =< s(28)*s(27)
s(30) =< s(29)+s(26)

  with precondition: [C=0,D=0,A>=1,B>=A+1] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [20]: 18*s(33)+9*s(35)+10
  Such that:s(31) =< A
s(32) =< B
s(33) =< s(32)
s(34) =< s(33)*s(32)
s(35) =< s(34)+s(31)

  with precondition: [A>=1,B>=A+1] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [20] with precondition: [A>=1,B>=A+1] 
    - Upper bound: 9*A+18*B+10+9*B*B 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D,E): 9*A+18*B+10+9*B*B 
Asymptotic class: n^2 
* Total analysis performed in 386 ms.


-- stats
realtime 0:00.45
usertime 0.43
systime 0.00

