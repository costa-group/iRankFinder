WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalDis1bb3in___1/9,n_evalDis1bbin___3/9]
1. recursive  : [n_evalDis1bb3in___4/9,n_evalDis1bbin___3_loop_cont/10]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalDis1stop___2/5]
4. non_recursive  : [n_evalDis1bb3in___4_loop_cont/6]
5. non_recursive  : [n_evalDis1start/5]
6. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalDis1bbin___3/9
1. SCC is partially evaluated into n_evalDis1bb3in___4/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalDis1bb3in___4_loop_cont/6
5. SCC is partially evaluated into n_evalDis1start/5
6. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalDis1bbin___3/9 
* CE 11 is refined into CE [12] 
* CE 10 is refined into CE [13] 
* CE 9 is refined into CE [14] 


### Cost equations --> "Loop" of n_evalDis1bbin___3/9 
* CEs [14] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

### Ranking functions of CR n_evalDis1bbin___3(A,B,C,D,E,F,G,H,I) 
* RF of phase [11]: [C-D]

#### Partial ranking functions of CR n_evalDis1bbin___3(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    C-D


### Specialization of cost equations n_evalDis1bb3in___4/9 
* CE 5 is refined into CE [15] 
* CE 3 is refined into CE [16] 
* CE 6 is refined into CE [17] 
* CE 4 is refined into CE [18,19] 


### Cost equations --> "Loop" of n_evalDis1bb3in___4/9 
* CEs [19] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16,17] --> Loop 17 

### Ranking functions of CR n_evalDis1bb3in___4(A,B,C,D,E,F,G,H,I) 
* RF of phase [14]: [A-B]

#### Partial ranking functions of CR n_evalDis1bb3in___4(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    A-B


### Specialization of cost equations n_evalDis1bb3in___4_loop_cont/6 
* CE 7 is refined into CE [20] 
* CE 8 is refined into CE [21] 


### Cost equations --> "Loop" of n_evalDis1bb3in___4_loop_cont/6 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 

### Ranking functions of CR n_evalDis1bb3in___4_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalDis1bb3in___4_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalDis1start/5 
* CE 2 is refined into CE [22,23,24,25,26] 


### Cost equations --> "Loop" of n_evalDis1start/5 
* CEs [22,23,24,25,26] --> Loop 20 

### Ranking functions of CR n_evalDis1start(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalDis1start(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [27] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [27] --> Loop 21 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalDis1bbin___3(A,B,C,D,E,F,G,H,I):
* Chain [[11],13]: 2*it(11)+1
  Such that:it(11) =< C-D

  with precondition: [E=2,A=F,B+1=G,C=H,C=I,A>=B+1,C>=D+1] 

* Chain [[11],12]: 2*it(11)+0
  Such that:it(11) =< C-D

  with precondition: [E=3,A>=B+1,C>=D+1] 

* Chain [13]: 1
  with precondition: [E=2,A=F,B+1=G,C=H,D=I,A>=B+1,D>=C] 

* Chain [12]: 0
  with precondition: [E=3,A>=B+1] 


#### Cost of chains of n_evalDis1bb3in___4(A,B,C,D,E,F,G,H,I):
* Chain [[14],17]: 2*it(14)+2*s(2)+1
  Such that:it(14) =< A-B
s(2) =< C-D

  with precondition: [E=3,A>=B+1,D>=C] 

* Chain [[14],16]: 2*it(14)+1
  Such that:it(14) =< A-B

  with precondition: [E=4,A>=B+1,D>=C] 

* Chain [17]: 2*s(2)+1
  Such that:s(2) =< C-D

  with precondition: [E=3] 

* Chain [16]: 1
  with precondition: [E=4,B>=A] 

* Chain [15,[14],17]: 2*it(14)+2*s(3)+3
  Such that:it(14) =< A-B
s(3) =< C-D

  with precondition: [E=3,A>=B+2,C>=D+1] 

* Chain [15,[14],16]: 2*it(14)+2*s(3)+3
  Such that:it(14) =< A-B
s(3) =< C-D

  with precondition: [E=4,A>=B+2,C>=D+1] 

* Chain [15,17]: 2*s(3)+3
  Such that:s(3) =< C-D

  with precondition: [E=3,A>=B+1,C>=D+1] 

* Chain [15,16]: 2*s(3)+3
  Such that:s(3) =< C-D

  with precondition: [E=4,A=B+1,C>=D+1] 


#### Cost of chains of n_evalDis1bb3in___4_loop_cont(A,B,C,D,E,F):
* Chain [19]: 0
  with precondition: [A=3] 

* Chain [18]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalDis1start(A,B,C,D,E):
* Chain [20]: 8*s(12)+12*s(13)+4
  Such that:aux(3) =< -A+B
aux(4) =< -C+D
s(12) =< aux(3)
s(13) =< aux(4)

  with precondition: [] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [21]: 8*s(20)+12*s(21)+5
  Such that:s(18) =< -A+B
s(19) =< -C+D
s(20) =< s(18)
s(21) =< s(19)

  with precondition: [] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [21] with precondition: [] 
    - Upper bound: nat(-A+B)*8+5+nat(-C+D)*12 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E): nat(-A+B)*8+5+nat(-C+D)*12 
Asymptotic class: n 
* Total analysis performed in 242 ms.


-- stats
realtime 0:00.32
usertime 0.28
systime 0.00

