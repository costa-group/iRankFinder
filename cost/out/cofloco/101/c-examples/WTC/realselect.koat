WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalrealselectbb1in___2/7,n_evalrealselectbb4in___3/7]
1. recursive  : [n_evalrealselectbb1in___4/7,n_evalrealselectbb4in___3_loop_cont/8,n_evalrealselectbb4in___6/7,n_evalrealselectbb6in___1/7]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalrealselectstop___5/4]
4. non_recursive  : [n_evalrealselectbb4in___6_loop_cont/5]
5. non_recursive  : [n_evalrealselectbb6in___7/4]
6. non_recursive  : [n_evalrealselectstart/4]
7. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalrealselectbb4in___3/7
1. SCC is partially evaluated into n_evalrealselectbb4in___6/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalrealselectbb4in___6_loop_cont/5
5. SCC is partially evaluated into n_evalrealselectbb6in___7/4
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalrealselectbb4in___3/7 
* CE 12 is refined into CE [13] 
* CE 11 is refined into CE [14] 
* CE 10 is refined into CE [15] 


### Cost equations --> "Loop" of n_evalrealselectbb4in___3/7 
* CEs [15] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

### Ranking functions of CR n_evalrealselectbb4in___3(A,B,C,D,E,F,G) 
* RF of phase [12]: [B-C]

#### Partial ranking functions of CR n_evalrealselectbb4in___3(A,B,C,D,E,F,G) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    B-C


### Specialization of cost equations n_evalrealselectbb4in___6/7 
* CE 6 is refined into CE [16] 
* CE 4 is refined into CE [17] 
* CE 7 is refined into CE [18] 
* CE 5 is refined into CE [19] 


### Cost equations --> "Loop" of n_evalrealselectbb4in___6/7 
* CEs [19] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [17,18] --> Loop 17 

### Ranking functions of CR n_evalrealselectbb4in___6(A,B,C,D,E,F,G) 
* RF of phase [15]: [-A+B-2,B-C-1]

#### Partial ranking functions of CR n_evalrealselectbb4in___6(A,B,C,D,E,F,G) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    -A+B-2
    B-C-1


### Specialization of cost equations n_evalrealselectbb4in___6_loop_cont/5 
* CE 9 is refined into CE [20] 
* CE 8 is refined into CE [21] 


### Cost equations --> "Loop" of n_evalrealselectbb4in___6_loop_cont/5 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 

### Ranking functions of CR n_evalrealselectbb4in___6_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalrealselectbb4in___6_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalrealselectbb6in___7/4 
* CE 2 is refined into CE [22,23,24] 
* CE 3 is refined into CE [25] 


### Cost equations --> "Loop" of n_evalrealselectbb6in___7/4 
* CEs [25] --> Loop 20 
* CEs [22,23,24] --> Loop 21 

### Ranking functions of CR n_evalrealselectbb6in___7(A,B,C,D) 

#### Partial ranking functions of CR n_evalrealselectbb6in___7(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [26,27] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [27] --> Loop 22 
* CEs [26] --> Loop 23 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalrealselectbb4in___3(A,B,C,D,E,F,G):
* Chain [[12],14]: 2*it(12)+1
  Such that:it(12) =< -C+G

  with precondition: [D=2,A+1=E,B=F,B=G,A>=0,C>=A+2,B>=C+1] 

* Chain [[12],13]: 2*it(12)+0
  Such that:it(12) =< B-C

  with precondition: [D=3,A>=0,C>=A+2,B>=C+1] 

* Chain [14]: 1
  with precondition: [D=2,C=B,A+1=E,C=F,C=G,A>=0,C>=A+2] 

* Chain [13]: 0
  with precondition: [D=3,A>=0,C>=A+2,B>=C] 


#### Cost of chains of n_evalrealselectbb4in___6(A,B,C,D,E,F,G):
* Chain [[15],17]: 6*it(15)+2*s(5)+2
  Such that:aux(3) =< B-C+1
it(15) =< aux(3)
s(5) =< it(15)*aux(3)

  with precondition: [D=3,C=A+1,C>=1,B>=C+2] 

* Chain [[15],16]: 4*it(15)+2*s(5)+4
  Such that:it(15) =< B-C
aux(2) =< B-C+1
it(15) =< aux(2)
s(5) =< it(15)*aux(2)

  with precondition: [D=4,C=A+1,C>=1,B>=C+2] 

* Chain [17]: 2*s(2)+2
  Such that:s(2) =< -A+B

  with precondition: [D=3,C=A+1,C>=1,B>=C+1] 

* Chain [16]: 4
  with precondition: [D=4,A+2=B,A+1=C,A>=0] 


#### Cost of chains of n_evalrealselectbb4in___6_loop_cont(A,B,C,D,E):
* Chain [19]: 0
  with precondition: [A=3] 

* Chain [18]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalrealselectbb6in___7(A,B,C,D):
* Chain [21]: 12*s(10)+4*s(13)+5
  Such that:aux(6) =< B
s(10) =< aux(6)
s(13) =< s(10)*aux(6)

  with precondition: [A=0,B>=2] 

* Chain [20]: 1
  with precondition: [A=0,1>=B] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [23]: 3
  with precondition: [1>=B] 

* Chain [22]: 12*s(18)+4*s(19)+7
  Such that:s(17) =< B
s(18) =< s(17)
s(19) =< s(18)*s(17)

  with precondition: [B>=2] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [23] with precondition: [1>=B] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [22] with precondition: [B>=2] 
    - Upper bound: 12*B+7+4*B*B 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D): nat(B)*12+4+nat(B)*4*nat(B)+3 
Asymptotic class: n^2 
* Total analysis performed in 251 ms.


-- stats
realtime 0:00.30
usertime 0.29
systime 0.00

