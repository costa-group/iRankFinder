WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalrealheapsortstep2bb2in___8/9,n_evalrealheapsortstep2bb3in___5/9,n_evalrealheapsortstep2bb6in___2/9,n_evalrealheapsortstep2bb6in___3/9,n_evalrealheapsortstep2bb9in___11/9]
1. recursive  : [n_evalrealheapsortstep2bb11in___9/9,n_evalrealheapsortstep2bb2in___16/9,n_evalrealheapsortstep2bb3in___15/9,n_evalrealheapsortstep2bb6in___12/9,n_evalrealheapsortstep2bb6in___13/9,n_evalrealheapsortstep2bb6in___14/9,n_evalrealheapsortstep2bb6in___4/9,n_evalrealheapsortstep2bb9in___1/9,n_evalrealheapsortstep2bb9in___10/9,n_evalrealheapsortstep2bb9in___11_loop_cont/10,n_evalrealheapsortstep2bb9in___7/9]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalrealheapsortstep2stop___18/5]
4. non_recursive  : [n_evalrealheapsortstep2bb11in___6/5]
5. non_recursive  : [n_evalrealheapsortstep2bb2in___16_loop_cont/6]
6. non_recursive  : [n_evalrealheapsortstep2bb9in___17/5]
7. non_recursive  : [n_evalrealheapsortstep2bb11in___19/5]
8. non_recursive  : [n_evalrealheapsortstep2entryin___20/5]
9. non_recursive  : [n_evalrealheapsortstep2start/5]
10. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalrealheapsortstep2bb9in___11/9
1. SCC is partially evaluated into n_evalrealheapsortstep2bb2in___16/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_evalrealheapsortstep2bb2in___16_loop_cont/6
6. SCC is partially evaluated into n_evalrealheapsortstep2bb9in___17/5
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into n_evalrealheapsortstep2entryin___20/5
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalrealheapsortstep2bb9in___11/9 
* CE 29 is refined into CE [30] 
* CE 28 is refined into CE [31] 
* CE 23 is refined into CE [32] 
* CE 25 is refined into CE [33] 
* CE 27 is refined into CE [34] 
* CE 26 is refined into CE [35] 
* CE 24 is refined into CE [36] 


### Cost equations --> "Loop" of n_evalrealheapsortstep2bb9in___11/9 
* CEs [35] --> Loop 20 
* CEs [36] --> Loop 21 
* CEs [30] --> Loop 22 
* CEs [31] --> Loop 23 
* CEs [32] --> Loop 24 
* CEs [33] --> Loop 25 
* CEs [34] --> Loop 26 

### Ranking functions of CR n_evalrealheapsortstep2bb9in___11(A,B,C,D,E,F,G,H,I) 
* RF of phase [20,21]: [A/4-B/4-C/2-3/4,A/4-C/2-3/4]

#### Partial ranking functions of CR n_evalrealheapsortstep2bb9in___11(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [20,21]:
  - RF of loop [20:1]:
    A/3-B/3-2/3*C-1
    A/3-B/3-2/3*D-1
    A/3-2/3*C-1
    A/3-2/3*D-1
  - RF of loop [21:1]:
    A/4-B/4-C/2-3/4
    A/4-B/4-D/2-3/4
    A/4-C/2-3/4
    A/4-D/2-3/4


### Specialization of cost equations n_evalrealheapsortstep2bb2in___16/9 
* CE 7 is discarded (unfeasible) 
* CE 8 is discarded (unfeasible) 
* CE 9 is discarded (unfeasible) 
* CE 10 is discarded (unfeasible) 
* CE 19 is refined into CE [37] 
* CE 5 is refined into CE [38] 
* CE 6 is refined into CE [39] 
* CE 20 is refined into CE [40] 
* CE 15 is refined into CE [41,42] 
* CE 16 is refined into CE [43,44] 
* CE 18 is refined into CE [45] 
* CE 11 is refined into CE [46,47] 
* CE 12 is refined into CE [48,49] 
* CE 13 is refined into CE [50,51,52,53] 
* CE 14 is refined into CE [54,55,56,57] 
* CE 17 is refined into CE [58] 


### Cost equations --> "Loop" of n_evalrealheapsortstep2bb2in___16/9 
* CEs [53,57] --> Loop 27 
* CEs [52,56] --> Loop 28 
* CEs [54] --> Loop 29 
* CEs [55] --> Loop 30 
* CEs [41,43,44,47,49] --> Loop 31 
* CEs [50] --> Loop 32 
* CEs [51] --> Loop 33 
* CEs [42] --> Loop 34 
* CEs [45,48] --> Loop 35 
* CEs [46,58] --> Loop 36 
* CEs [37] --> Loop 37 
* CEs [38,39,40] --> Loop 38 

### Ranking functions of CR n_evalrealheapsortstep2bb2in___16(A,B,C,D,E,F,G,H,I) 
* RF of phase [27,28,29,30,31,32,33,34,35,36]: [A-B-3]

#### Partial ranking functions of CR n_evalrealheapsortstep2bb2in___16(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [27,28,29,30,31,32,33,34,35,36]:
  - RF of loop [27:1,28:1]:
    A-B-9
  - RF of loop [29:1,30:1]:
    A-B-7
  - RF of loop [31:1,32:1,33:1]:
    A-B-5
  - RF of loop [34:1]:
    A-B-4
  - RF of loop [35:1,36:1]:
    A-B-3


### Specialization of cost equations n_evalrealheapsortstep2bb2in___16_loop_cont/6 
* CE 22 is refined into CE [59] 
* CE 21 is refined into CE [60] 


### Cost equations --> "Loop" of n_evalrealheapsortstep2bb2in___16_loop_cont/6 
* CEs [59] --> Loop 39 
* CEs [60] --> Loop 40 

### Ranking functions of CR n_evalrealheapsortstep2bb2in___16_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalrealheapsortstep2bb2in___16_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalrealheapsortstep2bb9in___17/5 
* CE 4 is refined into CE [61,62,63] 


### Cost equations --> "Loop" of n_evalrealheapsortstep2bb9in___17/5 
* CEs [61,62,63] --> Loop 41 

### Ranking functions of CR n_evalrealheapsortstep2bb9in___17(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalrealheapsortstep2bb9in___17(A,B,C,D,E) 


### Specialization of cost equations n_evalrealheapsortstep2entryin___20/5 
* CE 2 is refined into CE [64] 
* CE 3 is refined into CE [65] 


### Cost equations --> "Loop" of n_evalrealheapsortstep2entryin___20/5 
* CEs [64] --> Loop 42 
* CEs [65] --> Loop 43 

### Ranking functions of CR n_evalrealheapsortstep2entryin___20(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalrealheapsortstep2entryin___20(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [66,67] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [67] --> Loop 44 
* CEs [66] --> Loop 45 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalrealheapsortstep2bb9in___11(A,B,C,D,E,F,G,H,I):
* Chain [[20,21],26]: 4*it(20)+4*it(21)+2
  Such that:it(20) =< -2/3*D+I/3+2/3
aux(7) =< -D/2+G/4+I/4+1/2
aux(5) =< -D/2+I/4+1/2
aux(9) =< -2/3*D+I/3
aux(10) =< -D/2+I/4
it(21) =< aux(10)
it(20) =< aux(9)
it(21) =< aux(9)
it(20) =< aux(5)
it(21) =< aux(5)
it(20) =< aux(10)
it(20) =< aux(7)
it(21) =< aux(7)

  with precondition: [E=2,C=D,A=F,B=G,A=2*H+B+3,A=B+I+2,B>=0,C>=1,A>=4*C+B+5] 

* Chain [[20,21],25]: 4*it(20)+4*it(21)+4
  Such that:it(20) =< -2/3*C-G/3+H/3
aux(5) =< -C/2-G/4+H/4
aux(7) =< -C/2+H/4
aux(11) =< -2/3*C+I/3
aux(12) =< -C/2+I/4
it(21) =< aux(12)
it(20) =< aux(11)
it(21) =< aux(11)
it(20) =< aux(5)
it(21) =< aux(5)
it(20) =< aux(12)
it(20) =< aux(7)
it(21) =< aux(7)

  with precondition: [E=3,C=D,A=F,B=G,A=H,B>=0,C>=1,I>=4*C+4,A>=B+I+2] 

* Chain [[20,21],24]: 4*it(20)+4*it(21)+4
  Such that:it(20) =< -2/3*C-G/3+H/3
aux(5) =< -C/2-G/4+H/4
aux(7) =< -C/2+H/4
aux(13) =< -2/3*C+I/3
aux(14) =< -C/2+I/4
it(21) =< aux(14)
it(20) =< aux(13)
it(21) =< aux(13)
it(20) =< aux(5)
it(21) =< aux(5)
it(20) =< aux(14)
it(20) =< aux(7)
it(21) =< aux(7)

  with precondition: [E=3,C=D,A=F,B=G,A=H,B>=0,C>=1,I>=4*C+3,A>=B+I+3] 

* Chain [[20,21],23]: 4*it(20)+4*it(21)+1
  Such that:it(20) =< A/3-2/3*D-G/3+1/3
aux(7) =< A/4-D/2
aux(15) =< A/4-D/2-G/4+1/4
aux(16) =< -2/3*D+2/3*I
aux(17) =< -D/2+I/2
it(21) =< aux(15)
it(20) =< aux(16)
it(21) =< aux(16)
it(20) =< aux(15)
it(20) =< aux(17)
it(21) =< aux(17)
it(20) =< aux(7)
it(21) =< aux(7)

  with precondition: [E=4,C=D,A=F,B+1=G,H=I,B>=0,C>=1,H>=2*C+1,A>=2*C+B+4,B+2*H+2>=A,A>=B+H+2] 

* Chain [[20,21],22]: 4*it(20)+4*it(21)+0
  Such that:it(20) =< A/3-B/3-2/3*D
aux(7) =< A/4-D/2
aux(18) =< A/2-B/2-D/2
aux(19) =< A/4-B/4-D/2
aux(20) =< 2/3*A-2/3*B-2/3*D
it(21) =< aux(19)
it(20) =< aux(20)
it(21) =< aux(20)
it(20) =< aux(19)
it(20) =< aux(18)
it(21) =< aux(18)
it(20) =< aux(7)
it(21) =< aux(7)

  with precondition: [E=5,C=D,B>=0,C>=1,A>=2*C+B+4] 

* Chain [26]: 2
  with precondition: [E=2,C=D,A=F,C=H,2*C+1=I,B+2*C+3=A,G+2*C+3=A,C>=1,A>=2*C+3] 

* Chain [25]: 4
  with precondition: [E=3,D=C,A=F,B=G,A=H,2*D+2=I,B>=0,D>=1,A>=2*D+B+4] 

* Chain [24]: 4
  with precondition: [E=3,D=C,A=F,B=G,A=H,2*D+1=I,B>=0,D>=1,A>=2*D+B+4] 

* Chain [23]: 1
  with precondition: [E=4,D=C,A=F,B+1=G,D=H,D=I,B>=0,A>=B+4,B+2*D+2>=A,A>=B+D+2] 

* Chain [22]: 0
  with precondition: [E=5,D=C,B>=0,D>=1,A>=B+4,A>=B+D+2] 


#### Cost of chains of n_evalrealheapsortstep2bb2in___16(A,B,C,D,E,F,G,H,I):
* Chain [[27,28,29,30,31,32,33,34,35,36],38]: 90*it(27)+16*s(8)+8*s(89)+8*s(90)+8*s(96)+8*s(97)+16*s(103)+8*s(104)+8*s(105)+3
  Such that:aux(45) =< A/3-B/3
aux(62) =< A-B
aux(63) =< 2*A-2*B
aux(64) =< A/4
s(8) =< aux(62)
s(8) =< aux(63)
s(8) =< aux(64)
it(27) =< aux(62)
it(27) =< aux(63)
aux(58) =< aux(45)* (3/2)-1/2
aux(51) =< aux(64)
aux(50) =< aux(45)
aux(53) =< aux(45)-2/3
aux(48) =< aux(45)-1/3
aux(47) =< it(27)*aux(45)
s(91) =< it(27)*aux(64)
aux(59) =< it(27)*aux(58)
aux(52) =< it(27)*aux(50)
s(98) =< it(27)*aux(51)
aux(54) =< it(27)*aux(53)
aux(49) =< it(27)*aux(48)
s(93) =< aux(47)* (3/4)
s(110) =< aux(59)* (4/3)
s(100) =< aux(52)* (3/4)
s(99) =< aux(54)* (3/4)
s(92) =< aux(49)* (3/4)
s(104) =< aux(52)
s(105) =< s(100)
s(104) =< s(110)
s(105) =< s(110)
s(104) =< s(100)
s(104) =< aux(59)
s(105) =< aux(59)
s(104) =< s(98)
s(105) =< s(98)
s(103) =< aux(52)
s(103) =< s(100)
s(103) =< s(98)
s(96) =< aux(52)
s(97) =< s(99)
s(96) =< aux(54)
s(97) =< aux(54)
s(96) =< s(100)
s(97) =< s(100)
s(96) =< s(99)
s(96) =< s(98)
s(97) =< s(98)
s(89) =< aux(47)
s(90) =< s(92)
s(89) =< aux(49)
s(90) =< aux(49)
s(89) =< s(93)
s(90) =< s(93)
s(89) =< s(92)
s(89) =< s(91)
s(90) =< s(91)

  with precondition: [C=0,E=5,B>=0,A>=B+4] 

* Chain [[27,28,29,30,31,32,33,34,35,36],37]: 90*it(27)+8*s(89)+8*s(90)+8*s(96)+8*s(97)+16*s(103)+8*s(104)+8*s(105)+5
  Such that:aux(61) =< -B+G
aux(60) =< -B+G+1
aux(45) =< -B/3+G/3+1/3
aux(46) =< G/4+1/4
it(27) =< aux(60)
it(27) =< aux(61)
aux(58) =< aux(45)* (3/2)-1/2
aux(51) =< aux(46)
aux(50) =< aux(45)
aux(53) =< aux(45)-2/3
aux(48) =< aux(45)-1/3
aux(47) =< it(27)*aux(45)
s(91) =< it(27)*aux(46)
aux(59) =< it(27)*aux(58)
aux(52) =< it(27)*aux(50)
s(98) =< it(27)*aux(51)
aux(54) =< it(27)*aux(53)
aux(49) =< it(27)*aux(48)
s(93) =< aux(47)* (3/4)
s(110) =< aux(59)* (4/3)
s(100) =< aux(52)* (3/4)
s(99) =< aux(54)* (3/4)
s(92) =< aux(49)* (3/4)
s(104) =< aux(52)
s(105) =< s(100)
s(104) =< s(110)
s(105) =< s(110)
s(104) =< s(100)
s(104) =< aux(59)
s(105) =< aux(59)
s(104) =< s(98)
s(105) =< s(98)
s(103) =< aux(52)
s(103) =< s(100)
s(103) =< s(98)
s(96) =< aux(52)
s(97) =< s(99)
s(96) =< aux(54)
s(97) =< aux(54)
s(96) =< s(100)
s(97) =< s(100)
s(96) =< s(99)
s(96) =< s(98)
s(97) =< s(98)
s(89) =< aux(47)
s(90) =< s(92)
s(89) =< aux(49)
s(90) =< aux(49)
s(89) =< s(93)
s(90) =< s(93)
s(89) =< s(92)
s(89) =< s(91)
s(90) =< s(91)

  with precondition: [C=0,E=6,H=0,I=1,A=F,A=G+1,B>=0,A>=B+4] 

* Chain [38]: 8*s(8)+8*s(12)+3
  Such that:aux(21) =< A/2-B/2
aux(22) =< A/3-B/3
aux(23) =< A/4
aux(24) =< A/4-B/4
aux(25) =< 2/3*A-2/3*B
s(8) =< aux(22)
s(12) =< aux(24)
s(8) =< aux(25)
s(12) =< aux(25)
s(8) =< aux(24)
s(8) =< aux(21)
s(12) =< aux(21)
s(8) =< aux(23)
s(12) =< aux(23)

  with precondition: [C=0,E=5,B>=0,A>=B+3] 

* Chain [37]: 5
  with precondition: [C=0,E=6,H=0,I=1,B+3=A,B+3=F,B+2=G,B>=0] 


#### Cost of chains of n_evalrealheapsortstep2bb2in___16_loop_cont(A,B,C,D,E,F):
* Chain [40]: 0
  with precondition: [A=5] 

* Chain [39]: 1
  with precondition: [A=6,D=0,E=1,B=C+1,B>=3] 


#### Cost of chains of n_evalrealheapsortstep2bb9in___17(A,B,C,D,E):
* Chain [41]: 8*s(155)+8*s(156)+16*s(157)+90*s(158)+8*s(176)+8*s(177)+16*s(178)+8*s(179)+8*s(180)+8*s(181)+8*s(182)+90*s(187)+8*s(205)+8*s(206)+16*s(207)+8*s(208)+8*s(209)+8*s(210)+8*s(211)+7
  Such that:s(149) =< 2*A
s(150) =< A/2
s(152) =< 2/3*A
aux(69) =< A
aux(70) =< A/3
aux(71) =< A/4
s(155) =< aux(70)
s(156) =< aux(71)
s(155) =< s(152)
s(156) =< s(152)
s(155) =< aux(71)
s(155) =< s(150)
s(156) =< s(150)
s(157) =< aux(69)
s(157) =< s(149)
s(157) =< aux(71)
s(158) =< aux(69)
s(158) =< s(149)
s(159) =< aux(70)* (3/2)-1/2
s(160) =< aux(71)
s(161) =< aux(70)
s(162) =< aux(70)-2/3
s(163) =< aux(70)-1/3
s(164) =< s(158)*aux(70)
s(165) =< s(158)*aux(71)
s(166) =< s(158)*s(159)
s(167) =< s(158)*s(161)
s(168) =< s(158)*s(160)
s(169) =< s(158)*s(162)
s(170) =< s(158)*s(163)
s(171) =< s(164)* (3/4)
s(172) =< s(166)* (4/3)
s(173) =< s(167)* (3/4)
s(174) =< s(169)* (3/4)
s(175) =< s(170)* (3/4)
s(176) =< s(167)
s(177) =< s(173)
s(176) =< s(172)
s(177) =< s(172)
s(176) =< s(173)
s(176) =< s(166)
s(177) =< s(166)
s(176) =< s(168)
s(177) =< s(168)
s(178) =< s(167)
s(178) =< s(173)
s(178) =< s(168)
s(179) =< s(167)
s(180) =< s(174)
s(179) =< s(169)
s(180) =< s(169)
s(179) =< s(173)
s(180) =< s(173)
s(179) =< s(174)
s(179) =< s(168)
s(180) =< s(168)
s(181) =< s(164)
s(182) =< s(175)
s(181) =< s(170)
s(182) =< s(170)
s(181) =< s(171)
s(182) =< s(171)
s(181) =< s(175)
s(181) =< s(165)
s(182) =< s(165)
s(187) =< aux(69)
s(193) =< s(187)*aux(70)
s(194) =< s(187)*aux(71)
s(195) =< s(187)*s(159)
s(196) =< s(187)*s(161)
s(197) =< s(187)*s(160)
s(198) =< s(187)*s(162)
s(199) =< s(187)*s(163)
s(200) =< s(193)* (3/4)
s(201) =< s(195)* (4/3)
s(202) =< s(196)* (3/4)
s(203) =< s(198)* (3/4)
s(204) =< s(199)* (3/4)
s(205) =< s(196)
s(206) =< s(202)
s(205) =< s(201)
s(206) =< s(201)
s(205) =< s(202)
s(205) =< s(195)
s(206) =< s(195)
s(205) =< s(197)
s(206) =< s(197)
s(207) =< s(196)
s(207) =< s(202)
s(207) =< s(197)
s(208) =< s(196)
s(209) =< s(203)
s(208) =< s(198)
s(209) =< s(198)
s(208) =< s(202)
s(209) =< s(202)
s(208) =< s(203)
s(208) =< s(197)
s(209) =< s(197)
s(210) =< s(193)
s(211) =< s(204)
s(210) =< s(199)
s(211) =< s(199)
s(210) =< s(200)
s(211) =< s(200)
s(210) =< s(204)
s(210) =< s(194)
s(211) =< s(194)

  with precondition: [B=0,C=0,A>=3] 


#### Cost of chains of n_evalrealheapsortstep2entryin___20(A,B,C,D,E):
* Chain [43]: 1
  with precondition: [2>=A] 

* Chain [42]: 8*s(218)+8*s(219)+16*s(220)+90*s(221)+8*s(239)+8*s(240)+16*s(241)+8*s(242)+8*s(243)+8*s(244)+8*s(245)+90*s(246)+8*s(259)+8*s(260)+16*s(261)+8*s(262)+8*s(263)+8*s(264)+8*s(265)+9
  Such that:s(215) =< A
s(212) =< 2*A
s(213) =< A/2
s(216) =< A/3
s(217) =< A/4
s(214) =< 2/3*A
s(218) =< s(216)
s(219) =< s(217)
s(218) =< s(214)
s(219) =< s(214)
s(218) =< s(217)
s(218) =< s(213)
s(219) =< s(213)
s(220) =< s(215)
s(220) =< s(212)
s(220) =< s(217)
s(221) =< s(215)
s(221) =< s(212)
s(222) =< s(216)* (3/2)-1/2
s(223) =< s(217)
s(224) =< s(216)
s(225) =< s(216)-2/3
s(226) =< s(216)-1/3
s(227) =< s(221)*s(216)
s(228) =< s(221)*s(217)
s(229) =< s(221)*s(222)
s(230) =< s(221)*s(224)
s(231) =< s(221)*s(223)
s(232) =< s(221)*s(225)
s(233) =< s(221)*s(226)
s(234) =< s(227)* (3/4)
s(235) =< s(229)* (4/3)
s(236) =< s(230)* (3/4)
s(237) =< s(232)* (3/4)
s(238) =< s(233)* (3/4)
s(239) =< s(230)
s(240) =< s(236)
s(239) =< s(235)
s(240) =< s(235)
s(239) =< s(236)
s(239) =< s(229)
s(240) =< s(229)
s(239) =< s(231)
s(240) =< s(231)
s(241) =< s(230)
s(241) =< s(236)
s(241) =< s(231)
s(242) =< s(230)
s(243) =< s(237)
s(242) =< s(232)
s(243) =< s(232)
s(242) =< s(236)
s(243) =< s(236)
s(242) =< s(237)
s(242) =< s(231)
s(243) =< s(231)
s(244) =< s(227)
s(245) =< s(238)
s(244) =< s(233)
s(245) =< s(233)
s(244) =< s(234)
s(245) =< s(234)
s(244) =< s(238)
s(244) =< s(228)
s(245) =< s(228)
s(246) =< s(215)
s(247) =< s(246)*s(216)
s(248) =< s(246)*s(217)
s(249) =< s(246)*s(222)
s(250) =< s(246)*s(224)
s(251) =< s(246)*s(223)
s(252) =< s(246)*s(225)
s(253) =< s(246)*s(226)
s(254) =< s(247)* (3/4)
s(255) =< s(249)* (4/3)
s(256) =< s(250)* (3/4)
s(257) =< s(252)* (3/4)
s(258) =< s(253)* (3/4)
s(259) =< s(250)
s(260) =< s(256)
s(259) =< s(255)
s(260) =< s(255)
s(259) =< s(256)
s(259) =< s(249)
s(260) =< s(249)
s(259) =< s(251)
s(260) =< s(251)
s(261) =< s(250)
s(261) =< s(256)
s(261) =< s(251)
s(262) =< s(250)
s(263) =< s(257)
s(262) =< s(252)
s(263) =< s(252)
s(262) =< s(256)
s(263) =< s(256)
s(262) =< s(257)
s(262) =< s(251)
s(263) =< s(251)
s(264) =< s(247)
s(265) =< s(258)
s(264) =< s(253)
s(265) =< s(253)
s(264) =< s(254)
s(265) =< s(254)
s(264) =< s(258)
s(264) =< s(248)
s(265) =< s(248)

  with precondition: [A>=3] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [45]: 3
  with precondition: [2>=A] 

* Chain [44]: 8*s(272)+8*s(273)+16*s(274)+90*s(275)+8*s(293)+8*s(294)+16*s(295)+8*s(296)+8*s(297)+8*s(298)+8*s(299)+90*s(300)+8*s(313)+8*s(314)+16*s(315)+8*s(316)+8*s(317)+8*s(318)+8*s(319)+11
  Such that:s(266) =< A
s(267) =< 2*A
s(268) =< A/2
s(269) =< A/3
s(270) =< A/4
s(271) =< 2/3*A
s(272) =< s(269)
s(273) =< s(270)
s(272) =< s(271)
s(273) =< s(271)
s(272) =< s(270)
s(272) =< s(268)
s(273) =< s(268)
s(274) =< s(266)
s(274) =< s(267)
s(274) =< s(270)
s(275) =< s(266)
s(275) =< s(267)
s(276) =< s(269)* (3/2)-1/2
s(277) =< s(270)
s(278) =< s(269)
s(279) =< s(269)-2/3
s(280) =< s(269)-1/3
s(281) =< s(275)*s(269)
s(282) =< s(275)*s(270)
s(283) =< s(275)*s(276)
s(284) =< s(275)*s(278)
s(285) =< s(275)*s(277)
s(286) =< s(275)*s(279)
s(287) =< s(275)*s(280)
s(288) =< s(281)* (3/4)
s(289) =< s(283)* (4/3)
s(290) =< s(284)* (3/4)
s(291) =< s(286)* (3/4)
s(292) =< s(287)* (3/4)
s(293) =< s(284)
s(294) =< s(290)
s(293) =< s(289)
s(294) =< s(289)
s(293) =< s(290)
s(293) =< s(283)
s(294) =< s(283)
s(293) =< s(285)
s(294) =< s(285)
s(295) =< s(284)
s(295) =< s(290)
s(295) =< s(285)
s(296) =< s(284)
s(297) =< s(291)
s(296) =< s(286)
s(297) =< s(286)
s(296) =< s(290)
s(297) =< s(290)
s(296) =< s(291)
s(296) =< s(285)
s(297) =< s(285)
s(298) =< s(281)
s(299) =< s(292)
s(298) =< s(287)
s(299) =< s(287)
s(298) =< s(288)
s(299) =< s(288)
s(298) =< s(292)
s(298) =< s(282)
s(299) =< s(282)
s(300) =< s(266)
s(301) =< s(300)*s(269)
s(302) =< s(300)*s(270)
s(303) =< s(300)*s(276)
s(304) =< s(300)*s(278)
s(305) =< s(300)*s(277)
s(306) =< s(300)*s(279)
s(307) =< s(300)*s(280)
s(308) =< s(301)* (3/4)
s(309) =< s(303)* (4/3)
s(310) =< s(304)* (3/4)
s(311) =< s(306)* (3/4)
s(312) =< s(307)* (3/4)
s(313) =< s(304)
s(314) =< s(310)
s(313) =< s(309)
s(314) =< s(309)
s(313) =< s(310)
s(313) =< s(303)
s(314) =< s(303)
s(313) =< s(305)
s(314) =< s(305)
s(315) =< s(304)
s(315) =< s(310)
s(315) =< s(305)
s(316) =< s(304)
s(317) =< s(311)
s(316) =< s(306)
s(317) =< s(306)
s(316) =< s(310)
s(317) =< s(310)
s(316) =< s(311)
s(316) =< s(305)
s(317) =< s(305)
s(318) =< s(301)
s(319) =< s(312)
s(318) =< s(307)
s(319) =< s(307)
s(318) =< s(308)
s(319) =< s(308)
s(318) =< s(312)
s(318) =< s(302)
s(319) =< s(302)

  with precondition: [A>=3] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [45] with precondition: [2>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [44] with precondition: [A>=3] 
    - Upper bound: 196*A+11+ (4*A-8)*A+ (4*A-4)*A+8/3*A+92/3*A*A+2*A 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D,E): nat(A)*196+8+nat(-2/3+nat(A/3))*12*nat(A)+nat(-1/3+nat(A/3))*12*nat(A)+nat(A/3)*8+nat(A/3)*92*nat(A)+nat(A/4)*8+3 
Asymptotic class: n^2 
* Total analysis performed in 1887 ms.


-- stats
realtime 0:02.21
usertime 1.98
systime 0.05

