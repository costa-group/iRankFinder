WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalwcet2bb2in___2/5]
1. recursive  : [n_evalwcet2bb2in___2_loop_cont/6,n_evalwcet2bb2in___4/5,n_evalwcet2bb2in___6/5,n_evalwcet2bb5in___1/5,n_evalwcet2bb5in___3/5]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalwcet2stop___5/3]
4. non_recursive  : [n_evalwcet2bb2in___6_loop_cont/4]
5. non_recursive  : [n_evalwcet2bb5in___7/3]
6. non_recursive  : [n_evalwcet2start/3]
7. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalwcet2bb2in___2/5
1. SCC is partially evaluated into n_evalwcet2bb2in___6/5
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalwcet2bb2in___6_loop_cont/4
5. SCC is partially evaluated into n_evalwcet2bb5in___7/3
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalwcet2bb2in___2/5 
* CE 13 is refined into CE [14] 
* CE 12 is refined into CE [15] 
* CE 11 is refined into CE [16] 


### Cost equations --> "Loop" of n_evalwcet2bb2in___2/5 
* CEs [16] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

### Ranking functions of CR n_evalwcet2bb2in___2(A,B,C,D,E) 
* RF of phase [13]: [-B+10]

#### Partial ranking functions of CR n_evalwcet2bb2in___2(A,B,C,D,E) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    -B+10


### Specialization of cost equations n_evalwcet2bb2in___6/5 
* CE 6 is refined into CE [17] 
* CE 4 is refined into CE [18] 
* CE 8 is refined into CE [19] 
* CE 7 is refined into CE [20] 
* CE 5 is refined into CE [21] 


### Cost equations --> "Loop" of n_evalwcet2bb2in___6/5 
* CEs [20] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [18,19] --> Loop 18 
* CEs [17] --> Loop 19 

### Ranking functions of CR n_evalwcet2bb2in___6(A,B,C,D,E) 
* RF of phase [16]: [-A+3]

#### Partial ranking functions of CR n_evalwcet2bb2in___6(A,B,C,D,E) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    -A+3


### Specialization of cost equations n_evalwcet2bb2in___6_loop_cont/4 
* CE 10 is refined into CE [22] 
* CE 9 is refined into CE [23] 


### Cost equations --> "Loop" of n_evalwcet2bb2in___6_loop_cont/4 
* CEs [22] --> Loop 20 
* CEs [23] --> Loop 21 

### Ranking functions of CR n_evalwcet2bb2in___6_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evalwcet2bb2in___6_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evalwcet2bb5in___7/3 
* CE 3 is refined into CE [24] 
* CE 2 is refined into CE [25,26,27,28] 


### Cost equations --> "Loop" of n_evalwcet2bb5in___7/3 
* CEs [24] --> Loop 22 
* CEs [27] --> Loop 23 
* CEs [25,26,28] --> Loop 24 

### Ranking functions of CR n_evalwcet2bb5in___7(A,B,C) 

#### Partial ranking functions of CR n_evalwcet2bb5in___7(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [29,30] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [30] --> Loop 25 
* CEs [29] --> Loop 26 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_evalwcet2bb2in___2(A,B,C,D,E):
* Chain [[13],15]: 1*it(13)+1
  Such that:it(13) =< -B+10

  with precondition: [C=2,E=10,A+1=D,4>=A,9>=B,A>=3,B>=2] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< -B+10

  with precondition: [C=3,4>=A,9>=B,A>=3,B>=2] 

* Chain [14]: 0
  with precondition: [C=3,4>=A,A>=3,B>=2] 


#### Cost of chains of n_evalwcet2bb2in___6(A,B,C,D,E):
* Chain [[16],18]: 2*it(16)+10
  Such that:it(16) =< -A+3

  with precondition: [B=0,C=3,2>=A] 

* Chain [[16],17,19]: 2*it(16)+2*s(3)+8
  Such that:aux(1) =< 8
it(16) =< -A+3
s(3) =< aux(1)

  with precondition: [B=0,C=4,2>=A] 

* Chain [[16],17,18]: 2*it(16)+1*s(4)+14
  Such that:s(4) =< 8
it(16) =< -A+3

  with precondition: [B=0,C=3,2>=A] 

* Chain [19]: 1*s(3)+4
  Such that:s(3) =< 8

  with precondition: [A=4,B=0,C=4] 

* Chain [18]: 10
  with precondition: [B=0,C=3,4>=A] 

* Chain [17,19]: 2*s(3)+8
  Such that:aux(1) =< 8
s(3) =< aux(1)

  with precondition: [A=3,B=0,C=4] 

* Chain [17,18]: 1*s(4)+14
  Such that:s(4) =< 8

  with precondition: [A=3,B=0,C=3] 


#### Cost of chains of n_evalwcet2bb2in___6_loop_cont(A,B,C,D):
* Chain [21]: 0
  with precondition: [A=3] 

* Chain [20]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalwcet2bb5in___7(A,B,C):
* Chain [24]: 6*s(11)+6*s(12)+15
  Such that:aux(4) =< 8
aux(5) =< -A+3
s(12) =< aux(5)
s(11) =< aux(4)

  with precondition: [4>=A] 

* Chain [23]: 1*s(18)+5
  Such that:s(18) =< 8

  with precondition: [A=4] 

* Chain [22]: 1
  with precondition: [A>=5] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [26]: 7*s(26)+6*s(27)+17
  Such that:s(25) =< 8
s(24) =< -A+3
s(26) =< s(25)
s(27) =< s(24)

  with precondition: [4>=A] 

* Chain [25]: 3
  with precondition: [A>=5] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [26] with precondition: [4>=A] 
    - Upper bound: nat(-A+3)*6+73 
    - Complexity: n 
* Chain [25] with precondition: [A>=5] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C): nat(-A+3)*6+70+3 
Asymptotic class: n 
* Total analysis performed in 195 ms.


-- stats
realtime 0:00.24
usertime 0.22
systime 0.01

