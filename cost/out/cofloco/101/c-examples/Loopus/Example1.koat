WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb2in___8/9,n_evalfbb3in___6/9]
1. recursive  : [n_evalfbb2in___12/9,n_evalfbb2in___8_loop_cont/10,n_evalfbb3in___10/9,n_evalfbb4in___4/9,n_evalfbb4in___5/9,n_evalfbb4in___7/9,n_evalfbb6in___2/9,n_evalfbb6in___3/9]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalfstop___11/5]
4. non_recursive  : [n_evalfbb6in___1/5]
5. non_recursive  : [n_evalfbb4in___9/5]
6. non_recursive  : [n_evalfbb2in___12_loop_cont/6]
7. non_recursive  : [n_evalfbb6in___13/5]
8. non_recursive  : [n_evalfstart/5]
9. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb2in___8/9
1. SCC is partially evaluated into n_evalfbb2in___12/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into n_evalfbb2in___12_loop_cont/6
7. SCC is partially evaluated into n_evalfbb6in___13/5
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb2in___8/9 
* CE 12 is refined into CE [16] 
* CE 15 is refined into CE [17] 
* CE 14 is refined into CE [18] 
* CE 13 is refined into CE [19] 


### Cost equations --> "Loop" of n_evalfbb2in___8/9 
* CEs [19] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [17] --> Loop 17 
* CEs [18] --> Loop 18 

### Ranking functions of CR n_evalfbb2in___8(A,B,C,D,E,F,G,H,I) 
* RF of phase [15]: [-A+B-C-1,B-C-1,B-D]

#### Partial ranking functions of CR n_evalfbb2in___8(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    -A+B-C-1
    B-C-1
    B-D


### Specialization of cost equations n_evalfbb2in___12/9 
* CE 8 is refined into CE [20] 
* CE 4 is refined into CE [21] 
* CE 9 is refined into CE [22] 
* CE 5 is refined into CE [23,24] 
* CE 6 is refined into CE [25,26] 
* CE 7 is refined into CE [27] 


### Cost equations --> "Loop" of n_evalfbb2in___12/9 
* CEs [24] --> Loop 19 
* CEs [26] --> Loop 20 
* CEs [23,25,27] --> Loop 21 
* CEs [20] --> Loop 22 
* CEs [21,22] --> Loop 23 

### Ranking functions of CR n_evalfbb2in___12(A,B,C,D,E,F,G,H,I) 
* RF of phase [19,21]: [-A+B-1]

#### Partial ranking functions of CR n_evalfbb2in___12(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [19,21]:
  - RF of loop [19:1]:
    -A/2+B/2-3/2
  - RF of loop [21:1]:
    -A+B-1
    B-D


### Specialization of cost equations n_evalfbb2in___12_loop_cont/6 
* CE 10 is refined into CE [28] 
* CE 11 is refined into CE [29] 


### Cost equations --> "Loop" of n_evalfbb2in___12_loop_cont/6 
* CEs [28] --> Loop 24 
* CEs [29] --> Loop 25 

### Ranking functions of CR n_evalfbb2in___12_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalfbb2in___12_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalfbb6in___13/5 
* CE 2 is refined into CE [30,31,32] 
* CE 3 is refined into CE [33] 


### Cost equations --> "Loop" of n_evalfbb6in___13/5 
* CEs [33] --> Loop 26 
* CEs [30,31,32] --> Loop 27 

### Ranking functions of CR n_evalfbb6in___13(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb6in___13(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [34,35] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [35] --> Loop 28 
* CEs [34] --> Loop 29 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb2in___8(A,B,C,D,E,F,G,H,I):
* Chain [[15],18]: 2*it(15)+1
  Such that:it(15) =< -C+H

  with precondition: [E=2,A=F,B=G,B=I,B=A+H+1,A+C+1=D,A>=0,D>=A+2,B>=D+1] 

* Chain [[15],17]: 2*it(15)+0
  Such that:it(15) =< B-D

  with precondition: [E=3,D=A+C+1,C>=1,D>=C+1,B>=D+1] 

* Chain [[15],16]: 2*it(15)+2
  Such that:it(15) =< -A-C+I

  with precondition: [E=4,A=F,B=G,A+C+1=D,A+H+1=I,A>=0,D>=A+2,B>=A+H+2,A+H>=D] 

* Chain [18]: 1
  with precondition: [E=2,D=B,A=F,D=G,D=I,D=A+C+1,D=A+H+1,A>=0,D>=A+2] 

* Chain [17]: 0
  with precondition: [E=3,D=A+C+1,A>=0,D>=A+2,B>=D] 

* Chain [16]: 2
  with precondition: [E=4,A=F,B=G,C=H,A+C+1=D,A+C+1=I,A>=0,C>=1,B>=A+C+2] 


#### Cost of chains of n_evalfbb2in___12(A,B,C,D,E,F,G,H,I):
* Chain [[19,21],23]: 6*it(19)+6*it(21)+2*s(2)+2*s(5)+2
  Such that:aux(1) =< B-D+1
s(5) =< 3/2*B-3/2*D
aux(4) =< B-D
aux(5) =< 3*B-3*D
it(19) =< aux(4)
it(21) =< aux(4)
s(2) =< aux(5)
it(19) =< aux(1)
it(21) =< aux(1)
it(21) =< aux(5)
s(5) =< aux(5)

  with precondition: [C=0,E=3,D=A+1,D>=1,B>=D+1] 

* Chain [[19,21],22]: 6*it(19)+6*it(21)+2*s(5)+1
  Such that:aux(1) =< -D+I+1
it(19) =< -D/2+I/2
aux(6) =< -D+I
aux(7) =< -3/2*D+3/2*I
it(21) =< aux(6)
s(5) =< aux(7)
it(19) =< aux(1)
it(21) =< aux(1)
it(19) =< aux(6)
it(21) =< aux(7)

  with precondition: [C=0,E=5,H=0,D=A+1,B=F+1,B=G,B=I,D>=1,B>=D+1] 

* Chain [[19,21],20,23]: 8*it(19)+6*it(21)+2*s(5)+7
  Such that:aux(3) =< 3*B-3*D+3
s(5) =< 3/2*B-3/2*D
aux(8) =< B-D+1
it(19) =< aux(8)
it(21) =< aux(8)
it(21) =< aux(3)
s(5) =< aux(3)

  with precondition: [C=0,E=3,D=A+1,D>=1,B>=D+3] 

* Chain [[19,21],20,22]: 8*it(19)+6*it(21)+2*s(5)+6
  Such that:aux(3) =< -3*D+3*I+3
s(5) =< -3/2*D+3/2*I
aux(9) =< -D+I+1
it(19) =< aux(9)
it(21) =< aux(9)
it(21) =< aux(3)
s(5) =< aux(3)

  with precondition: [C=0,E=5,H=0,D=A+1,B=F+1,B=G,B=I,D>=1,B>=D+3] 

* Chain [23]: 2*s(2)+2
  Such that:s(2) =< B-D

  with precondition: [C=0,E=3,D=A+1,D>=1,B>=D] 

* Chain [22]: 1
  with precondition: [C=0,E=5,H=0,A+1=B,A+1=D,A=F,A+1=G,A+1=I,A>=0] 

* Chain [20,23]: 2*s(6)+7
  Such that:s(6) =< B-D+1

  with precondition: [C=0,E=3,D=A+1,D>=1,B>=D+2] 

* Chain [20,22]: 2*s(6)+6
  Such that:s(6) =< -A+I

  with precondition: [C=0,E=5,H=0,A+1=D,B=F+1,B=G,B=I,A>=0,B>=A+3] 


#### Cost of chains of n_evalfbb2in___12_loop_cont(A,B,C,D,E,F):
* Chain [25]: 0
  with precondition: [A=3] 

* Chain [24]: 2
  with precondition: [A=5,D=0,B+1=C,B+1=E,B>=0] 


#### Cost of chains of n_evalfbb6in___13(A,B,C,D,E):
* Chain [27]: 28*s(38)+6*s(40)+18*s(43)+2*s(44)+6*s(49)+6*s(55)+2*s(56)+9
  Such that:s(49) =< B/2
aux(18) =< B
aux(19) =< 3*B
aux(20) =< 3/2*B
s(38) =< aux(18)
s(40) =< aux(20)
s(43) =< aux(18)
s(43) =< aux(19)
s(40) =< aux(19)
s(55) =< aux(18)
s(56) =< aux(20)
s(49) =< aux(18)
s(55) =< aux(20)
s(44) =< aux(19)

  with precondition: [A=0,B>=1] 

* Chain [26]: 1
  with precondition: [A=0,0>=B] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [29]: 3
  with precondition: [0>=B] 

* Chain [28]: 6*s(57)+28*s(61)+6*s(62)+18*s(63)+6*s(64)+2*s(65)+2*s(66)+11
  Such that:s(58) =< B
s(59) =< 3*B
s(57) =< B/2
s(60) =< 3/2*B
s(61) =< s(58)
s(62) =< s(60)
s(63) =< s(58)
s(63) =< s(59)
s(62) =< s(59)
s(64) =< s(58)
s(65) =< s(60)
s(57) =< s(58)
s(64) =< s(60)
s(66) =< s(59)

  with precondition: [B>=1] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [29] with precondition: [0>=B] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [28] with precondition: [B>=1] 
    - Upper bound: 73*B+11 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E): nat(B)*52+8+nat(3*B)*2+nat(3/2*B)*8+nat(B/2)*6+3 
Asymptotic class: n 
* Total analysis performed in 638 ms.


-- stats
realtime 0:00.84
usertime 0.68
systime 0.00

