WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb3in___4/5,n_evalfbbin___1/5]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_evalfstop___6/3]
3. non_recursive  : [n_evalfbb3in___4_loop_cont/4]
4. recursive  : [n_evalfbb3in___5/5,n_evalfbbin___3/5]
5. non_recursive  : [n_evalfbb3in___2/3]
6. non_recursive  : [n_evalfbb3in___5_loop_cont/4]
7. non_recursive  : [n_evalfbbin___7/3]
8. non_recursive  : [n_evalfbb3in___8/3]
9. non_recursive  : [n_evalfstart/3]
10. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbbin___1/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalfbb3in___4_loop_cont/4
4. SCC is partially evaluated into n_evalfbb3in___5/5
5. SCC is partially evaluated into n_evalfbb3in___2/3
6. SCC is partially evaluated into n_evalfbb3in___5_loop_cont/4
7. SCC is partially evaluated into n_evalfbbin___7/3
8. SCC is partially evaluated into n_evalfbb3in___8/3
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbbin___1/5 
* CE 14 is refined into CE [24] 
* CE 12 is refined into CE [25] 
* CE 13 is refined into CE [26] 


### Cost equations --> "Loop" of n_evalfbbin___1/5 
* CEs [25] --> Loop 22 
* CEs [26] --> Loop 23 
* CEs [24] --> Loop 24 

### Ranking functions of CR n_evalfbbin___1(A,B,C,D,E) 
* RF of phase [24]: [B-1]

#### Partial ranking functions of CR n_evalfbbin___1(A,B,C,D,E) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    B-1


### Specialization of cost equations n_evalfbb3in___4_loop_cont/4 
* CE 11 is refined into CE [27] 
* CE 10 is refined into CE [28] 


### Cost equations --> "Loop" of n_evalfbb3in___4_loop_cont/4 
* CEs [27] --> Loop 25 
* CEs [28] --> Loop 26 

### Ranking functions of CR n_evalfbb3in___4_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evalfbb3in___4_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evalfbb3in___5/5 
* CE 19 is refined into CE [29] 
* CE 18 is refined into CE [30] 
* CE 17 is refined into CE [31] 
* CE 16 is refined into CE [32] 
* CE 15 is refined into CE [33] 


### Cost equations --> "Loop" of n_evalfbb3in___5/5 
* CEs [32] --> Loop 27 
* CEs [33] --> Loop 28 
* CEs [29] --> Loop 29 
* CEs [30] --> Loop 30 
* CEs [31] --> Loop 31 

### Ranking functions of CR n_evalfbb3in___5(A,B,C,D,E) 
* RF of phase [27]: [-B+255]
* RF of phase [28]: [-B+255]

#### Partial ranking functions of CR n_evalfbb3in___5(A,B,C,D,E) 
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    -B+255
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    -B+255


### Specialization of cost equations n_evalfbb3in___2/3 
* CE 23 is refined into CE [34,35,36] 


### Cost equations --> "Loop" of n_evalfbb3in___2/3 
* CEs [34,35,36] --> Loop 32 

### Ranking functions of CR n_evalfbb3in___2(A,B,C) 

#### Partial ranking functions of CR n_evalfbb3in___2(A,B,C) 


### Specialization of cost equations n_evalfbb3in___5_loop_cont/4 
* CE 22 is refined into CE [37] 
* CE 21 is refined into CE [38] 
* CE 20 is refined into CE [39] 


### Cost equations --> "Loop" of n_evalfbb3in___5_loop_cont/4 
* CEs [37] --> Loop 33 
* CEs [38] --> Loop 34 
* CEs [39] --> Loop 35 

### Ranking functions of CR n_evalfbb3in___5_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evalfbb3in___5_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evalfbbin___7/3 
* CE 9 is refined into CE [40,41,42] 
* CE 8 is refined into CE [43,44,45] 
* CE 5 is refined into CE [46] 
* CE 6 is refined into CE [47] 
* CE 7 is refined into CE [48,49,50] 


### Cost equations --> "Loop" of n_evalfbbin___7/3 
* CEs [40,41,42] --> Loop 36 
* CEs [43,44,45] --> Loop 37 
* CEs [48] --> Loop 38 
* CEs [46,47,49,50] --> Loop 39 

### Ranking functions of CR n_evalfbbin___7(A,B,C) 

#### Partial ranking functions of CR n_evalfbbin___7(A,B,C) 


### Specialization of cost equations n_evalfbb3in___8/3 
* CE 4 is refined into CE [51] 
* CE 3 is refined into CE [52] 
* CE 2 is refined into CE [53,54,55] 


### Cost equations --> "Loop" of n_evalfbb3in___8/3 
* CEs [51] --> Loop 40 
* CEs [52] --> Loop 41 
* CEs [55] --> Loop 42 
* CEs [54] --> Loop 43 
* CEs [53] --> Loop 44 

### Ranking functions of CR n_evalfbb3in___8(A,B,C) 

#### Partial ranking functions of CR n_evalfbb3in___8(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [56,57,58,59,60] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [60] --> Loop 45 
* CEs [59] --> Loop 46 
* CEs [58] --> Loop 47 
* CEs [57] --> Loop 48 
* CEs [56] --> Loop 49 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbbin___1(A,B,C,D,E):
* Chain [[24],23]: 2*it(24)+2
  Such that:it(24) =< B

  with precondition: [A=0,C=2,253>=B,B>=2] 

* Chain [[24],22]: 2*it(24)+1
  Such that:it(24) =< B

  with precondition: [A=0,C=3,253>=B,B>=2] 

* Chain [23]: 2
  with precondition: [A=0,B=1,C=2] 

* Chain [22]: 1
  with precondition: [A=0,C=3,253>=B,B>=1] 


#### Cost of chains of n_evalfbb3in___4_loop_cont(A,B,C,D):
* Chain [26]: 0
  with precondition: [A=2] 

* Chain [25]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalfbb3in___5(A,B,C,D,E):
* Chain [[28],30]: 2*it(28)+1
  Such that:it(28) =< -B+255

  with precondition: [C=2,0>=A+1,254>=B,B>=2] 

* Chain [[28],29]: 2*it(28)+0
  Such that:it(28) =< -B+255

  with precondition: [C=3,0>=A+1,254>=B,B>=2] 

* Chain [[27],30]: 2*it(27)+1
  Such that:it(27) =< -B+255

  with precondition: [C=2,254>=B,A>=1,B>=2] 

* Chain [[27],29]: 2*it(27)+0
  Such that:it(27) =< -B+255

  with precondition: [C=3,254>=B,A>=1,B>=2] 

* Chain [31]: 2
  with precondition: [A=0,C=4,D=0,B=E+1,254>=B,B>=2] 

* Chain [30]: 1
  with precondition: [B=255,C=2] 

* Chain [29]: 0
  with precondition: [C=3,255>=B,B>=2] 


#### Cost of chains of n_evalfbb3in___2(A,B,C):
* Chain [32]: 4*s(4)+3
  Such that:aux(2) =< B
s(4) =< aux(2)

  with precondition: [A=0,253>=B,B>=1] 


#### Cost of chains of n_evalfbb3in___5_loop_cont(A,B,C,D):
* Chain [35]: 0
  with precondition: [A=2] 

* Chain [34]: 0
  with precondition: [A=3] 

* Chain [33]: 4*s(7)+3
  Such that:s(6) =< C
s(7) =< s(6)

  with precondition: [A=4,B=0,253>=C,C>=1] 


#### Cost of chains of n_evalfbbin___7(A,B,C):
* Chain [39]: 4*s(8)+4
  Such that:aux(3) =< B
s(8) =< aux(3)

  with precondition: [A=0,254>=B,B>=1] 

* Chain [38]: 4
  with precondition: [A=0,B=2] 

* Chain [37]: 6*s(10)+2
  Such that:aux(4) =< -B+254
s(10) =< aux(4)

  with precondition: [0>=A+1,254>=B,B>=1] 

* Chain [36]: 6*s(13)+2
  Such that:aux(5) =< -B+254
s(13) =< aux(5)

  with precondition: [254>=B,A>=1,B>=1] 


#### Cost of chains of n_evalfbb3in___8(A,B,C):
* Chain [44]: 4*s(19)+5
  Such that:s(18) =< B
s(19) =< s(18)

  with precondition: [A=0,254>=B,B>=1] 

* Chain [43]: 6*s(21)+3
  Such that:s(20) =< -B+254
s(21) =< s(20)

  with precondition: [0>=A+1,254>=B,B>=1] 

* Chain [42]: 6*s(23)+3
  Such that:s(22) =< -B+254
s(23) =< s(22)

  with precondition: [254>=B,A>=1,B>=1] 

* Chain [41]: 1
  with precondition: [0>=B] 

* Chain [40]: 1
  with precondition: [B>=255] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [49]: 4*s(25)+7
  Such that:s(24) =< A
s(25) =< s(24)

  with precondition: [B=0,254>=A,A>=1] 

* Chain [48]: 6*s(27)+5
  Such that:s(26) =< -A+254
s(27) =< s(26)

  with precondition: [254>=A,0>=B+1,A>=1] 

* Chain [47]: 6*s(29)+5
  Such that:s(28) =< -A+254
s(29) =< s(28)

  with precondition: [254>=A,A>=1,B>=1] 

* Chain [46]: 3
  with precondition: [0>=A] 

* Chain [45]: 3
  with precondition: [A>=255] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [49] with precondition: [B=0,254>=A,A>=1] 
    - Upper bound: 4*A+7 
    - Complexity: n 
* Chain [48] with precondition: [254>=A,0>=B+1,A>=1] 
    - Upper bound: -6*A+1529 
    - Complexity: n 
* Chain [47] with precondition: [254>=A,A>=1,B>=1] 
    - Upper bound: -6*A+1529 
    - Complexity: n 
* Chain [46] with precondition: [0>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [45] with precondition: [A>=255] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C): max([nat(A)*4+4,nat(-A+254)*6+2])+3 
Asymptotic class: n 
* Total analysis performed in 271 ms.


-- stats
realtime 0:00.31
usertime 0.31
systime 0.00

