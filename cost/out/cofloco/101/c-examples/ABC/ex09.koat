WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb2in___2/9]
1. recursive  : [n_evalfbb2in___2_loop_cont/10,n_evalfbb2in___4/9,n_evalfbb4in___1/9]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalfstop___3/5]
4. non_recursive  : [n_evalfbb2in___4_loop_cont/6]
5. non_recursive  : [n_evalfbb4in___5/5]
6. non_recursive  : [n_evalfstart/5]
7. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb2in___2/9
1. SCC is partially evaluated into n_evalfbb2in___4/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalfbb2in___4_loop_cont/6
5. SCC is partially evaluated into n_evalfbb4in___5/5
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb2in___2/9 
* CE 14 is refined into CE [15] 
* CE 13 is refined into CE [16] 
* CE 12 is refined into CE [17] 


### Cost equations --> "Loop" of n_evalfbb2in___2/9 
* CEs [17] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR n_evalfbb2in___2(A,B,C,D,E,F,G,H,I) 
* RF of phase [14]: [-C+D+1]

#### Partial ranking functions of CR n_evalfbb2in___2(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    -C+D+1


### Specialization of cost equations n_evalfbb2in___4/9 
* CE 6 is refined into CE [18,19] 
* CE 7 is refined into CE [20] 
* CE 4 is refined into CE [21] 
* CE 9 is refined into CE [22] 
* CE 5 is refined into CE [23,24] 
* CE 8 is refined into CE [25] 


### Cost equations --> "Loop" of n_evalfbb2in___4/9 
* CEs [24] --> Loop 17 
* CEs [25] --> Loop 18 
* CEs [23] --> Loop 19 
* CEs [19] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [21,22] --> Loop 22 
* CEs [18] --> Loop 23 

### Ranking functions of CR n_evalfbb2in___4(A,B,C,D,E,F,G,H,I) 
* RF of phase [17]: [-A+B]
* RF of phase [18]: [-A+B]
* RF of phase [19]: [-A+B]

#### Partial ranking functions of CR n_evalfbb2in___4(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    -A+B
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    -A+B
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    -A+B


### Specialization of cost equations n_evalfbb2in___4_loop_cont/6 
* CE 11 is refined into CE [26] 
* CE 10 is refined into CE [27] 


### Cost equations --> "Loop" of n_evalfbb2in___4_loop_cont/6 
* CEs [26] --> Loop 24 
* CEs [27] --> Loop 25 

### Ranking functions of CR n_evalfbb2in___4_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalfbb2in___4_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalfbb4in___5/5 
* CE 2 is refined into CE [28,29,30,31,32,33,34,35,36] 
* CE 3 is refined into CE [37] 


### Cost equations --> "Loop" of n_evalfbb4in___5/5 
* CEs [31,35] --> Loop 26 
* CEs [37] --> Loop 27 
* CEs [30] --> Loop 28 
* CEs [34] --> Loop 29 
* CEs [33] --> Loop 30 
* CEs [28,29,32,36] --> Loop 31 

### Ranking functions of CR n_evalfbb4in___5(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb4in___5(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [38,39,40,41,42] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [42] --> Loop 32 
* CEs [41] --> Loop 33 
* CEs [40] --> Loop 34 
* CEs [38,39] --> Loop 35 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb2in___2(A,B,C,D,E,F,G,H,I):
* Chain [[14],16]: 1*it(14)+1
  Such that:it(14) =< -C+I+1

  with precondition: [E=2,A+1=F,B=G,D+1=H,D=I,A>=1,C>=2,B>=A,D>=C] 

* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< -C+D+1

  with precondition: [E=3,A>=1,C>=2,B>=A,D>=C] 

* Chain [16]: 1
  with precondition: [E=2,D+1=C,A+1=F,B=G,D+1=H,D=I,A>=1,D>=1,B>=A] 

* Chain [15]: 0
  with precondition: [E=3,A>=1,C>=2,B>=A,D+1>=C] 


#### Cost of chains of n_evalfbb2in___4(A,B,C,D,E,F,G,H,I):
* Chain [[19],23]: 3*it(19)+3
  Such that:it(19) =< -A+B

  with precondition: [C=1,D=1,E=4,A>=1,B>=A+1] 

* Chain [[19],22]: 3*it(19)+1*s(2)+1
  Such that:s(2) =< 1
it(19) =< -A+B

  with precondition: [C=1,D=1,E=3,A>=1,B>=A+1] 

* Chain [[18],22]: 2*it(18)+1*s(2)+1
  Such that:it(18) =< -A+B
s(2) =< D

  with precondition: [C=1,E=3,0>=D,A>=1,B>=A+1] 

* Chain [[18],21]: 2*it(18)+2
  Such that:it(18) =< -A+B

  with precondition: [C=1,E=4,0>=D,A>=1,B>=A+1] 

* Chain [[17],22]: 3*it(17)+1*s(2)+1*s(5)+1
  Such that:it(17) =< -A+B
aux(2) =< D
s(2) =< aux(2)
s(5) =< it(17)*aux(2)

  with precondition: [C=1,E=3,A>=1,D>=2,B>=A+1] 

* Chain [[17],20]: 3*it(17)+1*s(5)+1*s(6)+3
  Such that:it(17) =< -A+B
aux(3) =< D
s(6) =< aux(3)
s(5) =< it(17)*aux(3)

  with precondition: [C=1,E=4,A>=1,D>=2,B>=A+1] 

* Chain [23]: 3
  with precondition: [C=1,D=1,E=4,B=A,B>=1] 

* Chain [22]: 1*s(2)+1
  Such that:s(2) =< D

  with precondition: [C=1,E=3,A>=1,B>=A] 

* Chain [21]: 2
  with precondition: [C=1,E=4,B=A,0>=D,B>=1] 

* Chain [20]: 1*s(6)+3
  Such that:s(6) =< D

  with precondition: [C=1,E=4,B=A,B>=1,D>=2] 


#### Cost of chains of n_evalfbb2in___4_loop_cont(A,B,C,D,E,F):
* Chain [25]: 0
  with precondition: [A=3] 

* Chain [24]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalfbb4in___5(A,B,C,D,E):
* Chain [31]: 1*s(10)+9*s(11)+3*s(12)+2*s(16)+4
  Such that:s(10) =< 1
aux(4) =< B
aux(5) =< D
s(11) =< aux(4)
s(12) =< aux(5)
s(16) =< s(11)*aux(5)

  with precondition: [A=1,B>=1] 

* Chain [30]: 3
  with precondition: [A=1,B=1,0>=D] 

* Chain [29]: 1*s(21)+4
  Such that:s(21) =< D

  with precondition: [A=1,B=1,D>=2] 

* Chain [28]: 3*s(22)+4
  Such that:s(22) =< B

  with precondition: [A=1,D=1,B>=2] 

* Chain [27]: 1
  with precondition: [A=1,0>=B] 

* Chain [26]: 4*s(23)+1*s(24)+3
  Such that:s(24) =< D
aux(6) =< B
s(23) =< aux(6)

  with precondition: [A=1,0>=D,B>=2] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [35]: 1*s(32)+9*s(35)+4*s(36)+2*s(37)+6
  Such that:s(32) =< 1
s(33) =< B
aux(7) =< D
s(36) =< aux(7)
s(35) =< s(33)
s(37) =< s(35)*aux(7)

  with precondition: [B>=1] 

* Chain [34]: 3*s(39)+6
  Such that:s(39) =< B

  with precondition: [D=1,B>=2] 

* Chain [33]: 3
  with precondition: [0>=B] 

* Chain [32]: 1*s(40)+4*s(42)+5
  Such that:s(41) =< B
s(40) =< D
s(42) =< s(41)

  with precondition: [0>=D,B>=2] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [35] with precondition: [B>=1] 
    - Upper bound: 9*B+7+nat(D)*4+nat(D)*2*B 
    - Complexity: n^2 
* Chain [34] with precondition: [D=1,B>=2] 
    - Upper bound: 3*B+6 
    - Complexity: n 
* Chain [33] with precondition: [0>=B] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [32] with precondition: [0>=D,B>=2] 
    - Upper bound: 4*B+5 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E): nat(B)*3+2+max([1,nat(B)*5+2+nat(D)*4+nat(D)*2*nat(B)+nat(B)])+3 
Asymptotic class: n^2 
* Total analysis performed in 463 ms.


-- stats
realtime 0:00.58
usertime 0.50
systime 0.01

