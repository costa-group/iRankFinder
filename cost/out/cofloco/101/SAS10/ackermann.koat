WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_b___1/9,n_cont1___2/9,n_start___4/9]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_stop1___7/5]
3. non_recursive  : [n_stop2___5/5]
4. non_recursive  : [n_stop3___3/5]
5. non_recursive  : [n_start___4_loop_cont/6]
6. non_recursive  : [n_b___6/5]
7. non_recursive  : [n_cont1___8/5]
8. non_recursive  : [n_start___9/5]
9. non_recursive  : [n_start0/5]
10. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_start___4/9
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_start___4_loop_cont/6
6. SCC is partially evaluated into n_b___6/5
7. SCC is partially evaluated into n_cont1___8/5
8. SCC is partially evaluated into n_start___9/5
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_start___4/9 
* CE 12 is refined into CE [17] 
* CE 8 is refined into CE [18] 
* CE 11 is refined into CE [19] 
* CE 10 is refined into CE [20] 
* CE 9 is refined into CE [21] 


### Cost equations --> "Loop" of n_start___4/9 
* CEs [21] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [18] --> Loop 19 
* CEs [19] --> Loop 20 
* CEs [20] --> Loop 21 

### Ranking functions of CR n_start___4(A,B,C,D,E,F,G,H,I) 
* RF of phase [17]: [D]

#### Partial ranking functions of CR n_start___4(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    D


### Specialization of cost equations n_start___4_loop_cont/6 
* CE 16 is refined into CE [22] 
* CE 15 is refined into CE [23] 
* CE 14 is refined into CE [24] 
* CE 13 is refined into CE [25] 


### Cost equations --> "Loop" of n_start___4_loop_cont/6 
* CEs [22] --> Loop 22 
* CEs [23] --> Loop 23 
* CEs [24] --> Loop 24 
* CEs [25] --> Loop 25 

### Ranking functions of CR n_start___4_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_start___4_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_b___6/5 
* CE 7 is refined into CE [26] 
* CE 6 is refined into CE [27,28,29,30,31,32] 


### Cost equations --> "Loop" of n_b___6/5 
* CEs [26] --> Loop 26 
* CEs [27] --> Loop 27 
* CEs [28,29,30,31,32] --> Loop 28 

### Ranking functions of CR n_b___6(A,B,C,D,E) 

#### Partial ranking functions of CR n_b___6(A,B,C,D,E) 


### Specialization of cost equations n_cont1___8/5 
* CE 4 is refined into CE [33,34] 
* CE 5 is refined into CE [35] 


### Cost equations --> "Loop" of n_cont1___8/5 
* CEs [33,34] --> Loop 29 
* CEs [35] --> Loop 30 

### Ranking functions of CR n_cont1___8(A,B,C,D,E) 

#### Partial ranking functions of CR n_cont1___8(A,B,C,D,E) 


### Specialization of cost equations n_start___9/5 
* CE 2 is refined into CE [36,37] 
* CE 3 is refined into CE [38] 


### Cost equations --> "Loop" of n_start___9/5 
* CEs [37] --> Loop 31 
* CEs [36] --> Loop 32 
* CEs [38] --> Loop 33 

### Ranking functions of CR n_start___9(A,B,C,D,E) 

#### Partial ranking functions of CR n_start___9(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [39,40,41] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [41] --> Loop 34 
* CEs [40] --> Loop 35 
* CEs [39] --> Loop 36 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_start___4(A,B,C,D,E,F,G,H,I):
* Chain [[17],21]: 3*it(17)+2
  Such that:it(17) =< D

  with precondition: [E=3,B>=1,C>=1,D>=2,A>=D+1] 

* Chain [[17],20]: 3*it(17)+1
  Such that:it(17) =< D

  with precondition: [E=4,B>=1,C>=1,D>=1,A>=D+1] 

* Chain [[17],19]: 3*it(17)+3
  Such that:it(17) =< D

  with precondition: [E=2,B>=1,C>=1,D>=2,A>=D+1] 

* Chain [[17],18]: 3*it(17)+0
  Such that:it(17) =< D

  with precondition: [E=5,B>=1,C>=1,D>=1,A>=D+1] 

* Chain [21]: 2
  with precondition: [C=0,E=3,B>=1,D>=1,A>=D+1] 

* Chain [20]: 1
  with precondition: [D=0,E=4,A>=1,B>=1,C>=0] 

* Chain [19]: 3
  with precondition: [E=2,B>=1,C>=1,D>=1,A>=D+1] 

* Chain [18]: 0
  with precondition: [E=5,B>=1,C>=0,D>=0,A>=D+1] 


#### Cost of chains of n_start___4_loop_cont(A,B,C,D,E,F):
* Chain [25]: 0
  with precondition: [A=2] 

* Chain [24]: 0
  with precondition: [A=3] 

* Chain [23]: 0
  with precondition: [A=4] 

* Chain [22]: 0
  with precondition: [A=5] 


#### Cost of chains of n_b___6(A,B,C,D,E):
* Chain [28]: 9*s(3)+3*s(6)+4
  Such that:s(6) =< A
aux(1) =< D
s(3) =< aux(1)

  with precondition: [D+1=A,B>=1,C>=0,D>=0] 

* Chain [27]: 3
  with precondition: [C=0,D+1=A,B>=1,D>=1] 

* Chain [26]: 1
  with precondition: [D+1=A,0>=C+1,B>=1,D>=0] 


#### Cost of chains of n_cont1___8(A,B,C,D,E):
* Chain [30]: 1
  with precondition: [B=0,C=0,D=A,D>=1] 

* Chain [29]: 12*s(10)+5
  Such that:aux(2) =< A
s(10) =< aux(2)

  with precondition: [D=A,C=B,C>=1,D>=1] 


#### Cost of chains of n_start___9(A,B,C,D,E):
* Chain [33]: 1
  with precondition: [A=0,D=0,C=B,C>=0] 

* Chain [32]: 2
  with precondition: [B=0,C=0,D=A,D>=1] 

* Chain [31]: 12*s(14)+6
  Such that:s(13) =< D
s(14) =< s(13)

  with precondition: [D=A,C=B,C>=1,D>=1] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [36]: 3
  with precondition: [A=0,B>=0] 

* Chain [35]: 4
  with precondition: [B=0,A>=1] 

* Chain [34]: 12*s(16)+8
  Such that:s(15) =< A
s(16) =< s(15)

  with precondition: [A>=1,B>=1] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [36] with precondition: [A=0,B>=0] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [35] with precondition: [B=0,A>=1] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [34] with precondition: [A>=1,B>=1] 
    - Upper bound: 12*A+8 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E): 12*A+8 
Asymptotic class: n 
* Total analysis performed in 265 ms.


-- stats
realtime 0:00.34
usertime 0.31
systime 0.00

