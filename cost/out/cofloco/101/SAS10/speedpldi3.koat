WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_lbl121___1/17,n_lbl121___4/17,n_lbl141___2/17]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_stop___5/9]
3. non_recursive  : [n_lbl121___4_loop_cont/10]
4. non_recursive  : [n_lbl141___3/9]
5. non_recursive  : [n_lbl121___6/9]
6. non_recursive  : [n_start___7/9]
7. non_recursive  : [n_start0/9]
8. non_recursive  : [pyRinit/9]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_lbl121___4/17
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_lbl121___4_loop_cont/10
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_lbl121___6/9
6. SCC is partially evaluated into n_start___7/9
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/9

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_lbl121___4/17 
* CE 7 is refined into CE [13] 
* CE 10 is refined into CE [14] 
* CE 9 is refined into CE [15] 
* CE 8 is refined into CE [16] 


### Cost equations --> "Loop" of n_lbl121___4/17 
* CEs [15] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [13] --> Loop 15 
* CEs [14] --> Loop 16 

### Ranking functions of CR n_lbl121___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 

#### Partial ranking functions of CR n_lbl121___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [13,14]:
  - RF of loop [13:1]:
    A-E depends on loops [14:1] 
    B-E-1 depends on loops [14:1] 
    C-E-1 depends on loops [14:1] 
    D-E depends on loops [14:1] 
  - RF of loop [14:1]:
    B-G-1
    C-G-1


### Specialization of cost equations n_lbl121___4_loop_cont/10 
* CE 12 is refined into CE [17] 
* CE 11 is refined into CE [18] 


### Cost equations --> "Loop" of n_lbl121___4_loop_cont/10 
* CEs [17] --> Loop 17 
* CEs [18] --> Loop 18 

### Ranking functions of CR n_lbl121___4_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR n_lbl121___4_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations n_lbl121___6/9 
* CE 5 is refined into CE [19,20] 
* CE 6 is refined into CE [21] 


### Cost equations --> "Loop" of n_lbl121___6/9 
* CEs [19,20] --> Loop 19 
* CEs [21] --> Loop 20 

### Ranking functions of CR n_lbl121___6(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_lbl121___6(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_start___7/9 
* CE 3 is refined into CE [22] 
* CE 2 is refined into CE [23,24] 
* CE 4 is refined into CE [25] 


### Cost equations --> "Loop" of n_start___7/9 
* CEs [24] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [25] --> Loop 23 
* CEs [23] --> Loop 24 

### Ranking functions of CR n_start___7(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_start___7(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations pyRinit/9 
* CE 1 is refined into CE [26,27,28,29] 


### Cost equations --> "Loop" of pyRinit/9 
* CEs [29] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [27] --> Loop 27 
* CEs [26] --> Loop 28 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 


Computing Bounds
=====================================

#### Cost of chains of n_lbl121___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[13,14],16]: 1*it(13)+3*it(14)+0
  Such that:aux(29) =< A
it(14) =< C-G
aux(30) =< A-E
aux(31) =< C-E
aux(1) =< it(14)*aux(29)
it(13) =< aux(1)+aux(30)
it(13) =< aux(1)+aux(31)

  with precondition: [I=2,B=C,A=D,E>=2,G>=0,B>=A+1,A>=E,B>=G+1,A+B>=E+G+2] 

* Chain [[13,14],15]: 1*it(13)+3*it(14)+2
  Such that:aux(29) =< A
it(14) =< B-G
aux(32) =< A-E
aux(33) =< B-E
aux(1) =< it(14)*aux(29)
it(13) =< aux(1)+aux(32)
it(13) =< aux(1)+aux(33)

  with precondition: [I=3,B=C,A=D,E>=2,G>=0,B>=A+1,A>=E,B>=G+1,A+B>=E+G+2] 

* Chain [16]: 0
  with precondition: [I=2,D=A,C=B,E>=2,G>=0,C>=D+1,D>=E] 


#### Cost of chains of n_lbl121___4_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [18]: 0
  with precondition: [A=2] 

* Chain [17]: 0
  with precondition: [A=3] 


#### Cost of chains of n_lbl121___6(A,B,C,D,E,F,G,H,I):
* Chain [20]: 1
  with precondition: [A=1,D=1,E=1,G=0,C=B,C>=2] 

* Chain [19]: 6*s(10)+2*s(12)+3
  Such that:aux(38) =< C
aux(39) =< D
s(10) =< aux(38)
s(11) =< s(10)*aux(39)
s(12) =< s(11)+aux(39)
s(12) =< s(11)+aux(38)

  with precondition: [E=1,G=0,D=A,C=B,D>=2,C>=D+1] 


#### Cost of chains of n_start___7(A,B,C,D,E,F,G,H,I):
* Chain [24]: 2
  with precondition: [A=1,D=1,C=B,F=E,H=G,C>=2] 

* Chain [23]: 1
  with precondition: [D=A,C=B,F=E,H=G,0>=D] 

* Chain [22]: 1
  with precondition: [D=A,C=B,F=E,H=G,D>=1,D>=C] 

* Chain [21]: 6*s(21)+2*s(23)+4
  Such that:s(20) =< A
s(19) =< B
s(21) =< s(19)
s(22) =< s(21)*s(20)
s(23) =< s(22)+s(20)
s(23) =< s(22)+s(19)

  with precondition: [D=A,C=B,F=E,H=G,D>=2,C>=D+1] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G,H,I):
* Chain [28]: 4
  with precondition: [A=1,C>=2] 

* Chain [27]: 3
  with precondition: [0>=A] 

* Chain [26]: 3
  with precondition: [A>=1,A>=C] 

* Chain [25]: 6*s(26)+2*s(28)+6
  Such that:s(24) =< A
s(25) =< C
s(26) =< s(25)
s(27) =< s(26)*s(24)
s(28) =< s(27)+s(24)
s(28) =< s(27)+s(25)

  with precondition: [A>=2,C>=A+1] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G,H,I): 
-------------------------------------
* Chain [28] with precondition: [A=1,C>=2] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [27] with precondition: [0>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [26] with precondition: [A>=1,A>=C] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [25] with precondition: [A>=2,C>=A+1] 
    - Upper bound: 2*A+6+2*A*C+6*C 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D,E,F,G,H,I): max([1,nat(A)*2+3+nat(A)*2*nat(C)+nat(C)*6])+3 
Asymptotic class: n^2 
* Total analysis performed in 739 ms.


-- stats
realtime 0:00.82
usertime 0.78
systime 0.01

