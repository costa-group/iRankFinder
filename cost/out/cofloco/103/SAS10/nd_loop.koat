WORST_CASE(?,O(1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_lbl51___1/9]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_stop___2/5]
3. non_recursive  : [n_lbl51___1_loop_cont/6]
4. non_recursive  : [n_lbl51___3/5]
5. non_recursive  : [n_lbl51___4/5]
6. non_recursive  : [n_start0/5]
7. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_lbl51___1/9
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_lbl51___1_loop_cont/6
4. SCC is partially evaluated into n_lbl51___3/5
5. SCC is partially evaluated into n_lbl51___4/5
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_lbl51___1/9 
* CE 12 is refined into CE [15] 
* CE 9 is refined into CE [16] 
* CE 11 is refined into CE [17] 
* CE 10 is refined into CE [18] 
* CE 8 is refined into CE [19] 


### Cost equations --> "Loop" of n_lbl51___1/9 
* CEs [19] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [18] --> Loop 19 

### Ranking functions of CR n_lbl51___1(A,B,C,D,E,F,G,H,I) 
* RF of phase [15]: [-C+9]

#### Partial ranking functions of CR n_lbl51___1(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    -C+9


### Specialization of cost equations n_lbl51___1_loop_cont/6 
* CE 14 is refined into CE [20] 
* CE 13 is refined into CE [21] 


### Cost equations --> "Loop" of n_lbl51___1_loop_cont/6 
* CEs [20] --> Loop 20 
* CEs [21] --> Loop 21 

### Ranking functions of CR n_lbl51___1_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_lbl51___1_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_lbl51___3/5 
* CE 7 is refined into CE [22] 
* CE 6 is refined into CE [23] 
* CE 5 is refined into CE [24,25,26,27] 


### Cost equations --> "Loop" of n_lbl51___3/5 
* CEs [22] --> Loop 22 
* CEs [23] --> Loop 23 
* CEs [24,25,26,27] --> Loop 24 

### Ranking functions of CR n_lbl51___3(A,B,C,D,E) 

#### Partial ranking functions of CR n_lbl51___3(A,B,C,D,E) 


### Specialization of cost equations n_lbl51___4/5 
* CE 4 is refined into CE [28] 
* CE 3 is refined into CE [29] 
* CE 2 is refined into CE [30,31,32] 


### Cost equations --> "Loop" of n_lbl51___4/5 
* CEs [28] --> Loop 25 
* CEs [29] --> Loop 26 
* CEs [30,31,32] --> Loop 27 

### Ranking functions of CR n_lbl51___4(A,B,C,D,E) 

#### Partial ranking functions of CR n_lbl51___4(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [33,34,35] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [33,34,35] --> Loop 28 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_lbl51___1(A,B,C,D,E,F,G,H,I):
* Chain [[15],19]: 1*it(15)+1
  Such that:it(15) =< -C+9

  with precondition: [E=2,9>=A,C>=2,C+2>=A,A>=C+1] 

* Chain [[15],18]: 1*it(15)+1
  Such that:it(15) =< -C+9

  with precondition: [E=2,9>=A,C>=2,C+2>=A,A>=C+1] 

* Chain [[15],17]: 1*it(15)+1
  Such that:it(15) =< -C+9

  with precondition: [E=2,9>=A,C>=2,C+2>=A,A>=C+1] 

* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< -C+9

  with precondition: [E=3,9>=A,C>=2,C+2>=A,A>=C+1] 

* Chain [18]: 1
  with precondition: [E=2,9>=C,C>=2,C>=A] 

* Chain [17]: 1
  with precondition: [E=2,9>=C,C>=2,A>=C+3] 

* Chain [16]: 0
  with precondition: [E=3,C>=2] 


#### Cost of chains of n_lbl51___1_loop_cont(A,B,C,D,E,F):
* Chain [21]: 0
  with precondition: [A=2] 

* Chain [20]: 0
  with precondition: [A=3] 


#### Cost of chains of n_lbl51___3(A,B,C,D,E):
* Chain [24]: 4*s(6)+2
  Such that:aux(2) =< -A+9
s(6) =< aux(2)

  with precondition: [2>=C,C>=1,C+2>=A,A>=C+1] 

* Chain [23]: 1
  with precondition: [2>=C,C>=1,C>=A] 

* Chain [22]: 1
  with precondition: [2>=C,C>=1,A>=C+3] 


#### Cost of chains of n_lbl51___4(A,B,C,D,E):
* Chain [27]: 4*s(9)+3
  Such that:s(8) =< -A+8
s(9) =< s(8)

  with precondition: [C=0,2>=A,A>=1] 

* Chain [26]: 1
  with precondition: [C=0,0>=A] 

* Chain [25]: 1
  with precondition: [C=0,A>=3] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [28]: 33
  with precondition: [] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [28] with precondition: [] 
    - Upper bound: 33 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C,D,E): 33 
Asymptotic class: constant 
* Total analysis performed in 183 ms.


-- stats
realtime 0:00.22
usertime 0.21
systime 0.01

