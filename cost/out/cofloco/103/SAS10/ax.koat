WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_lbl71___3/13]
1. non_recursive  : [exit_location/1]
2. recursive  : [n_lbl71___1/13]
3. recursive  : [n_lbl71___1_loop_cont/14,n_lbl71___2/13]
4. non_recursive  : [n_stop___4/7]
5. non_recursive  : [n_lbl71___2_loop_cont/8]
6. non_recursive  : [n_lbl71___3_loop_cont/8]
7. non_recursive  : [n_lbl71___5/7]
8. non_recursive  : [n_start___6/7]
9. non_recursive  : [n_start0/7]
10. non_recursive  : [pyRinit/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_lbl71___3/13
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into n_lbl71___1/13
3. SCC is partially evaluated into n_lbl71___2/13
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_lbl71___2_loop_cont/8
6. SCC is partially evaluated into n_lbl71___3_loop_cont/8
7. SCC is partially evaluated into n_lbl71___5/7
8. SCC is partially evaluated into n_start___6/7
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into pyRinit/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_lbl71___3/13 
* CE 8 is refined into CE [21] 
* CE 6 is refined into CE [22] 
* CE 7 is refined into CE [23] 


### Cost equations --> "Loop" of n_lbl71___3/13 
* CEs [23] --> Loop 20 
* CEs [21] --> Loop 21 
* CEs [22] --> Loop 22 

### Ranking functions of CR n_lbl71___3(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [20]: [A-C-1,B-C-1]

#### Partial ranking functions of CR n_lbl71___3(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    A-C-1
    B-C-1


### Specialization of cost equations n_lbl71___1/13 
* CE 20 is refined into CE [24] 
* CE 19 is refined into CE [25] 
* CE 18 is refined into CE [26] 
* CE 17 is refined into CE [27] 


### Cost equations --> "Loop" of n_lbl71___1/13 
* CEs [27] --> Loop 23 
* CEs [24] --> Loop 24 
* CEs [25] --> Loop 25 
* CEs [26] --> Loop 26 

### Ranking functions of CR n_lbl71___1(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [23]: [A-C-1,B-C-1]

#### Partial ranking functions of CR n_lbl71___1(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    A-C-1
    B-C-1


### Specialization of cost equations n_lbl71___2/13 
* CE 11 is refined into CE [28] 
* CE 14 is refined into CE [29] 
* CE 12 is refined into CE [30,31] 
* CE 13 is refined into CE [32] 


### Cost equations --> "Loop" of n_lbl71___2/13 
* CEs [32] --> Loop 27 
* CEs [28,29] --> Loop 28 
* CEs [31] --> Loop 29 
* CEs [30] --> Loop 30 

### Ranking functions of CR n_lbl71___2(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [27]: [A-E-2,B-E-2]

#### Partial ranking functions of CR n_lbl71___2(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    A-E-2
    B-E-2


### Specialization of cost equations n_lbl71___2_loop_cont/8 
* CE 15 is refined into CE [33] 
* CE 16 is refined into CE [34] 


### Cost equations --> "Loop" of n_lbl71___2_loop_cont/8 
* CEs [33] --> Loop 31 
* CEs [34] --> Loop 32 

### Ranking functions of CR n_lbl71___2_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR n_lbl71___2_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations n_lbl71___3_loop_cont/8 
* CE 10 is refined into CE [35] 
* CE 9 is refined into CE [36,37,38,39] 


### Cost equations --> "Loop" of n_lbl71___3_loop_cont/8 
* CEs [35] --> Loop 33 
* CEs [36,37,38,39] --> Loop 34 

### Ranking functions of CR n_lbl71___3_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR n_lbl71___3_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations n_lbl71___5/7 
* CE 4 is refined into CE [40,41,42] 
* CE 5 is refined into CE [43] 


### Cost equations --> "Loop" of n_lbl71___5/7 
* CEs [40,41,42] --> Loop 35 
* CEs [43] --> Loop 36 

### Ranking functions of CR n_lbl71___5(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_lbl71___5(A,B,C,D,E,F,G) 


### Specialization of cost equations n_start___6/7 
* CE 2 is refined into CE [44,45] 
* CE 3 is refined into CE [46] 


### Cost equations --> "Loop" of n_start___6/7 
* CEs [45] --> Loop 37 
* CEs [46] --> Loop 38 
* CEs [44] --> Loop 39 

### Ranking functions of CR n_start___6(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_start___6(A,B,C,D,E,F,G) 


### Specialization of cost equations pyRinit/7 
* CE 1 is refined into CE [47,48,49] 


### Cost equations --> "Loop" of pyRinit/7 
* CEs [49] --> Loop 40 
* CEs [48] --> Loop 41 
* CEs [47] --> Loop 42 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G) 


Computing Bounds
=====================================

#### Cost of chains of n_lbl71___3(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[20],22]: 1*it(20)+1
  Such that:it(20) =< A-C

  with precondition: [E=0,G=2,J=1,L=1,A=B,A=H,A=I,D=K,F=M,C>=2,A>=C+2] 

* Chain [[20],21]: 1*it(20)+0
  Such that:it(20) =< A-C

  with precondition: [E=0,G=4,A=B,C>=2,A>=C+2] 

* Chain [22]: 1
  with precondition: [E=0,G=2,J=1,L=1,B=A,B=C+1,K=D,M=F,B=H,B=I,B>=3] 

* Chain [21]: 0
  with precondition: [E=0,G=4,B=A,C>=2,B>=C+1] 


#### Cost of chains of n_lbl71___1(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[23],26]: 1*it(23)+1
  Such that:it(23) =< A-C

  with precondition: [G=2,J=1,A=B,A=H,A=I,D=K,E+1=L,F=M,C>=2,E>=1,A>=C+2,A>=E+3] 

* Chain [[23],25]: 1*it(23)+1
  Such that:it(23) =< -C+E+1

  with precondition: [G=3,A=B,A=E+2,C>=2,A>=C+2] 

* Chain [[23],24]: 1*it(23)+0
  Such that:it(23) =< A-C

  with precondition: [G=4,A=B,C>=2,E>=1,A>=C+2,A>=E+2] 

* Chain [25]: 1
  with precondition: [G=3,B=A,B=C+1,B=E+2,B>=3] 

* Chain [24]: 0
  with precondition: [G=4,B=A,C>=2,E>=1,B>=C+1,B>=E+2] 


#### Cost of chains of n_lbl71___2(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[27],29]: 2*it(27)+1*s(3)+1*s(6)+2
  Such that:it(27) =< B-E
aux(2) =< B
s(3) =< aux(2)
s(6) =< it(27)*aux(2)

  with precondition: [C=1,G=3,A=B,E>=1,A>=E+3] 

* Chain [[27],28]: 2*it(27)+1*s(6)+1*s(7)+1
  Such that:it(27) =< A-E
aux(3) =< A
s(7) =< aux(3)
s(6) =< it(27)*aux(3)

  with precondition: [C=1,G=4,A=B,E>=1,A>=E+3] 

* Chain [30]: 2
  with precondition: [A=3,B=3,C=1,E=1,G=3] 

* Chain [29]: 1*s(3)+2
  Such that:s(3) =< E

  with precondition: [C=1,G=3,A=B,A=E+2,A>=4] 

* Chain [28]: 1*s(7)+1
  Such that:s(7) =< A

  with precondition: [G=4] 


#### Cost of chains of n_lbl71___2_loop_cont(A,B,C,D,E,F,G,H):
* Chain [32]: 0
  with precondition: [A=3] 

* Chain [31]: 0
  with precondition: [A=4] 


#### Cost of chains of n_lbl71___3_loop_cont(A,B,C,D,E,F,G,H):
* Chain [34]: 1*s(13)+2*s(14)+1*s(16)+1*s(17)+2*s(18)+2*s(20)+1*s(21)+2
  Such that:s(19) =< B
s(18) =< B-F
s(15) =< C
s(14) =< C-F
s(13) =< F
s(20) =< s(19)
s(21) =< s(18)*s(19)
s(16) =< s(15)
s(17) =< s(14)*s(15)

  with precondition: [A=2] 

* Chain [33]: 0
  with precondition: [A=4] 


#### Cost of chains of n_lbl71___5(A,B,C,D,E,F,G):
* Chain [36]: 1
  with precondition: [A=2,B=2,C=1,E=0] 

* Chain [35]: 4*s(23)+2*s(26)+3*s(27)+2*s(28)+8*s(31)+2*s(38)+1*s(41)+4
  Such that:aux(5) =< 2
aux(6) =< 3
s(41) =< A
aux(7) =< B
aux(8) =< 1
s(26) =< aux(8)
s(23) =< aux(5)
s(27) =< aux(6)
s(28) =< s(23)*aux(6)
s(31) =< aux(7)
s(38) =< s(31)*aux(7)

  with precondition: [C=1,E=0,B=A,B>=3] 


#### Cost of chains of n_start___6(A,B,C,D,E,F,G):
* Chain [39]: 2
  with precondition: [A=2,B=2,D=C,F=E] 

* Chain [38]: 1
  with precondition: [B=A,D=C,F=E,1>=B] 

* Chain [37]: 9*s(44)+2*s(47)+4*s(48)+3*s(49)+2*s(50)+2*s(52)+5
  Such that:s(46) =< 1
s(42) =< 2
s(43) =< 3
aux(9) =< B
s(44) =< aux(9)
s(47) =< s(46)
s(48) =< s(42)
s(49) =< s(43)
s(50) =< s(48)*s(43)
s(52) =< s(44)*aux(9)

  with precondition: [B=A,D=C,F=E,B>=3] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G):
* Chain [42]: 4
  with precondition: [A=2] 

* Chain [41]: 3
  with precondition: [1>=A] 

* Chain [40]: 9*s(57)+2*s(58)+4*s(59)+3*s(60)+2*s(61)+2*s(62)+7
  Such that:s(53) =< 1
s(54) =< 2
s(55) =< 3
s(56) =< A
s(57) =< s(56)
s(58) =< s(53)
s(59) =< s(54)
s(60) =< s(55)
s(61) =< s(59)*s(55)
s(62) =< s(57)*s(56)

  with precondition: [A>=3] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G): 
-------------------------------------
* Chain [42] with precondition: [A=2] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [41] with precondition: [1>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [40] with precondition: [A>=3] 
    - Upper bound: 9*A+38+2*A*A 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D,E,F,G): max([1,nat(A)*9+35+nat(A)*2*nat(A)])+3 
Asymptotic class: n^2 
* Total analysis performed in 655 ms.


-- stats
realtime 0:00.75
usertime 0.70
systime 0.01

