WORST_CASE(?,O(n^3))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_c___4/17]
1. recursive  : [n_b___1/17,n_b___3/17,n_c___4_loop_cont/18,n_c___5/17,n_d___2/17]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_halt___6/9]
4. non_recursive  : [n_c___5_loop_cont/10]
5. non_recursive  : [n_b___7/9]
6. non_recursive  : [n_d___8/9]
7. non_recursive  : [n_start0/9]
8. non_recursive  : [pyRinit/9]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_c___4/17
1. SCC is partially evaluated into n_c___5/17
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_c___5_loop_cont/10
5. SCC is partially evaluated into n_b___7/9
6. SCC is partially evaluated into n_d___8/9
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/9

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_c___4/17 
* CE 14 is refined into CE [15] 
* CE 12 is refined into CE [16] 
* CE 13 is refined into CE [17] 


### Cost equations --> "Loop" of n_c___4/17 
* CEs [17] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR n_c___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [14]: [-C+E,E-1]

#### Partial ranking functions of CR n_c___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    -C+E
    E-1


### Specialization of cost equations n_c___5/17 
* CE 7 is refined into CE [18] 
* CE 8 is refined into CE [19] 
* CE 9 is refined into CE [20] 
* CE 5 is refined into CE [21] 
* CE 6 is refined into CE [22] 


### Cost equations --> "Loop" of n_c___5/17 
* CEs [21] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [18] --> Loop 19 
* CEs [19,20] --> Loop 20 

### Ranking functions of CR n_c___5(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 

#### Partial ranking functions of CR n_c___5(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [17,18]:
  - RF of loop [17:1]:
    A-G depends on loops [18:1] 
    B-G depends on loops [18:1] 
    E-G depends on loops [18:1] 
  - RF of loop [18:1]:
    A-C-1
    B-C-1
    -C+E-1
    -C+G-1 depends on loops [17:1] 


### Specialization of cost equations n_c___5_loop_cont/10 
* CE 11 is refined into CE [23] 
* CE 10 is refined into CE [24] 


### Cost equations --> "Loop" of n_c___5_loop_cont/10 
* CEs [23] --> Loop 21 
* CEs [24] --> Loop 22 

### Ranking functions of CR n_c___5_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR n_c___5_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations n_b___7/9 
* CE 4 is refined into CE [25,26,27] 


### Cost equations --> "Loop" of n_b___7/9 
* CEs [25,26,27] --> Loop 23 

### Ranking functions of CR n_b___7(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_b___7(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_d___8/9 
* CE 2 is refined into CE [28] 
* CE 3 is refined into CE [29] 


### Cost equations --> "Loop" of n_d___8/9 
* CEs [28] --> Loop 24 
* CEs [29] --> Loop 25 

### Ranking functions of CR n_d___8(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_d___8(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations pyRinit/9 
* CE 1 is refined into CE [30,31] 


### Cost equations --> "Loop" of pyRinit/9 
* CEs [31] --> Loop 26 
* CEs [30] --> Loop 27 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 


Computing Bounds
=====================================

#### Cost of chains of n_c___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[14],16]: 1*it(14)+1
  Such that:it(14) =< E-N

  with precondition: [I=2,A=B,A=J,A=K,C=L,D=M,C=N,F=O,G+1=P,H=Q,C>=1,E>=C+1,G>=C+1,A>=E+1,A>=G] 

* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< -C+E

  with precondition: [I=3,A=B,C>=1,E>=C+1,G>=C+1,A>=E+1,A>=G] 

* Chain [16]: 1
  with precondition: [I=2,B=A,M=D,C=E,O=F,Q=H,B=J,B=K,C=L,C=N,G+1=P,C>=1,G>=C+1,B>=G] 

* Chain [15]: 0
  with precondition: [I=3,B=A,C>=1,E>=C,G>=C+1,B>=E+1,B>=G] 


#### Cost of chains of n_c___5(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[17,18],20]: 3*it(17)+6*it(18)+1*s(7)+1*s(8)+1
  Such that:aux(30) =< A-G
aux(31) =< B-C
aux(32) =< B-G
it(18) =< aux(31)
aux(21) =< aux(31)-2
aux(18) =< aux(31)
aux(1) =< it(18)*aux(21)
s(8) =< it(18)*aux(18)
it(17) =< aux(1)+aux(32)
it(17) =< aux(1)+aux(30)
s(7) =< it(17)*aux(31)

  with precondition: [I=3,A=B,A=E,C>=1,A>=C+2,G>=C+1,A>=G] 

* Chain [[17,18],19]: 3*it(17)+5*it(18)+1*s(7)+1*s(8)+4
  Such that:aux(33) =< -C+E
aux(34) =< E-G
it(18) =< aux(33)
aux(21) =< aux(33)-2
aux(18) =< aux(33)
aux(1) =< it(18)*aux(21)
s(8) =< it(18)*aux(18)
it(17) =< aux(1)+aux(34)
s(7) =< it(17)*aux(33)

  with precondition: [I=4,A=B,A=E,C>=1,A>=C+2,G>=C+1,A>=G] 

* Chain [20]: 1*s(2)+1
  Such that:s(2) =< -C+E

  with precondition: [I=3,A=B,A=E,C>=1,G>=C+1,A>=G] 

* Chain [19]: 4
  with precondition: [I=4,A=B,A=C+1,A=E,A=G,A>=2] 


#### Cost of chains of n_c___5_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [22]: 0
  with precondition: [A=3] 

* Chain [21]: 0
  with precondition: [A=4] 


#### Cost of chains of n_b___7(A,B,C,D,E,F,G,H,I):
* Chain [23]: 12*s(23)+2*s(28)+6*s(29)+2*s(30)+5
  Such that:aux(37) =< A
s(23) =< aux(37)
s(25) =< aux(37)-2
s(26) =< aux(37)
s(27) =< s(23)*s(25)
s(28) =< s(23)*s(26)
s(29) =< s(27)+aux(37)
s(30) =< s(29)*aux(37)

  with precondition: [C=1,G=2,B=A,F=E,B>=2] 


#### Cost of chains of n_d___8(A,B,C,D,E,F,G,H,I):
* Chain [25]: 1
  with precondition: [A=1,B=1,C=1,F=E,H=G] 

* Chain [24]: 12*s(41)+2*s(45)+6*s(46)+2*s(47)+6
  Such that:s(40) =< A
s(41) =< s(40)
s(42) =< s(40)-2
s(43) =< s(40)
s(44) =< s(41)*s(42)
s(45) =< s(41)*s(43)
s(46) =< s(44)+s(40)
s(47) =< s(46)*s(40)

  with precondition: [C=1,B=A,F=E,H=G,B>=2] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G,H,I):
* Chain [27]: 3
  with precondition: [A=1] 

* Chain [26]: 12*s(49)+2*s(53)+6*s(54)+2*s(55)+8
  Such that:s(48) =< A
s(49) =< s(48)
s(50) =< s(48)-2
s(51) =< s(48)
s(52) =< s(49)*s(50)
s(53) =< s(49)*s(51)
s(54) =< s(52)+s(48)
s(55) =< s(54)*s(48)

  with precondition: [A>=2] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G,H,I): 
-------------------------------------
* Chain [27] with precondition: [A=1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [26] with precondition: [A>=2] 
    - Upper bound: 18*A+8+4*A*A+ (A-2)* (2*A)*A+ (6*A-12)*A 
    - Complexity: n^3 

### Maximum cost of pyRinit(A,B,C,D,E,F,G,H,I): 18*A+5+4*A*A+2*A*nat(A-2)*A+nat(A-2)*6*A+3 
Asymptotic class: n^3 
* Total analysis performed in 1093 ms.


-- stats
realtime 0:01.33
usertime 1.18
systime 0.00

