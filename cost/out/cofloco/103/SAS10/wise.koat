WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_lbl81___3/9]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_stop___1/5]
3. non_recursive  : [n_lbl81___3_loop_cont/6]
4. recursive  : [n_lbl91___2/9]
5. non_recursive  : [n_lbl91___2_loop_cont/6]
6. non_recursive  : [n_start___4/5]
7. non_recursive  : [n_start0/5]
8. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_lbl81___3/9
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_lbl81___3_loop_cont/6
4. SCC is partially evaluated into n_lbl91___2/9
5. SCC is partially evaluated into n_lbl91___2_loop_cont/6
6. SCC is partially evaluated into n_start___4/5
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_lbl81___3/9 
* CE 9 is refined into CE [17] 
* CE 8 is refined into CE [18] 
* CE 7 is refined into CE [19] 


### Cost equations --> "Loop" of n_lbl81___3/9 
* CEs [19] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [18] --> Loop 19 

### Ranking functions of CR n_lbl81___3(A,B,C,D,E,F,G,H,I) 
* RF of phase [17]: [B-D-2,C-D-2]

#### Partial ranking functions of CR n_lbl81___3(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    B-D-2
    C-D-2


### Specialization of cost equations n_lbl81___3_loop_cont/6 
* CE 11 is refined into CE [20] 
* CE 10 is refined into CE [21] 


### Cost equations --> "Loop" of n_lbl81___3_loop_cont/6 
* CEs [20] --> Loop 20 
* CEs [21] --> Loop 21 

### Ranking functions of CR n_lbl81___3_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_lbl81___3_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_lbl91___2/9 
* CE 14 is refined into CE [22] 
* CE 13 is refined into CE [23] 
* CE 12 is refined into CE [24] 


### Cost equations --> "Loop" of n_lbl91___2/9 
* CEs [24] --> Loop 22 
* CEs [22] --> Loop 23 
* CEs [23] --> Loop 24 

### Ranking functions of CR n_lbl91___2(A,B,C,D,E,F,G,H,I) 
* RF of phase [22]: [A-B-2,-B+D-2]

#### Partial ranking functions of CR n_lbl91___2(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    A-B-2
    -B+D-2


### Specialization of cost equations n_lbl91___2_loop_cont/6 
* CE 16 is refined into CE [25] 
* CE 15 is refined into CE [26] 


### Cost equations --> "Loop" of n_lbl91___2_loop_cont/6 
* CEs [25] --> Loop 25 
* CEs [26] --> Loop 26 

### Ranking functions of CR n_lbl91___2_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_lbl91___2_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_start___4/5 
* CE 3 is refined into CE [27,28,29] 
* CE 2 is refined into CE [30,31,32] 
* CE 6 is refined into CE [33] 
* CE 5 is refined into CE [34] 
* CE 4 is refined into CE [35] 


### Cost equations --> "Loop" of n_start___4/5 
* CEs [33] --> Loop 27 
* CEs [34] --> Loop 28 
* CEs [35] --> Loop 29 
* CEs [27,28,29] --> Loop 30 
* CEs [30,31,32] --> Loop 31 

### Ranking functions of CR n_start___4(A,B,C,D,E) 

#### Partial ranking functions of CR n_start___4(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [36,37,38,39,40] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [39] --> Loop 32 
* CEs [40] --> Loop 33 
* CEs [38] --> Loop 34 
* CEs [36] --> Loop 35 
* CEs [37] --> Loop 36 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_lbl81___3(A,B,C,D,E,F,G,H,I):
* Chain [[17],19]: 1*it(17)+1
  Such that:it(17) =< B-D

  with precondition: [E=2,B=C,A>=0,D>=A+1,B>=D+3] 

* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< B-D

  with precondition: [E=3,B=C,A>=0,D>=A+1,B>=D+3] 

* Chain [19]: 1
  with precondition: [E=2,C=B,C=D+2,A>=0,C>=A+3] 

* Chain [18]: 0
  with precondition: [E=3,C=B,A>=0,D>=A+1,C>=D+2] 


#### Cost of chains of n_lbl81___3_loop_cont(A,B,C,D,E,F):
* Chain [21]: 0
  with precondition: [A=2] 

* Chain [20]: 0
  with precondition: [A=3] 


#### Cost of chains of n_lbl91___2(A,B,C,D,E,F,G,H,I):
* Chain [[22],24]: 1*it(22)+1
  Such that:it(22) =< A-B

  with precondition: [E=2,A=D,C>=0,A>=B+3,B>=C+1] 

* Chain [[22],23]: 1*it(22)+0
  Such that:it(22) =< A-B

  with precondition: [E=3,A=D,C>=0,A>=B+3,B>=C+1] 

* Chain [24]: 1
  with precondition: [E=2,A=B+2,A=D,C>=0,A>=C+3] 

* Chain [23]: 0
  with precondition: [E=3,D=A,C>=0,D>=B+2,B>=C+1] 


#### Cost of chains of n_lbl91___2_loop_cont(A,B,C,D,E,F):
* Chain [26]: 0
  with precondition: [A=2] 

* Chain [25]: 0
  with precondition: [A=3] 


#### Cost of chains of n_start___4(A,B,C,D,E):
* Chain [31]: 2*s(3)+2
  Such that:aux(1) =< C-D
s(3) =< aux(1)

  with precondition: [D=A,C=B,D>=0,C>=D+3] 

* Chain [30]: 2*s(5)+2
  Such that:aux(2) =< -C+D
s(5) =< aux(2)

  with precondition: [D=A,C=B,C>=0,D>=C+3] 

* Chain [29]: 1
  with precondition: [D=A,C=B,0>=D+1] 

* Chain [28]: 1
  with precondition: [D=A,C=B,0>=C+1] 

* Chain [27]: 1
  with precondition: [D=A,C=B,C>=0,D>=0,D+2>=C,C+2>=D] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [36]: 3
  with precondition: [0>=A+1] 

* Chain [35]: 3
  with precondition: [0>=C+1] 

* Chain [34]: 3
  with precondition: [A>=0,C>=0,C+2>=A,A+2>=C] 

* Chain [33]: 2*s(8)+4
  Such that:s(7) =< -A+C
s(8) =< s(7)

  with precondition: [A>=0,C>=A+3] 

* Chain [32]: 2*s(10)+4
  Such that:s(9) =< A-C
s(10) =< s(9)

  with precondition: [C>=0,A>=C+3] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [36] with precondition: [0>=A+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [35] with precondition: [0>=C+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [34] with precondition: [A>=0,C>=0,C+2>=A,A+2>=C] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [33] with precondition: [A>=0,C>=A+3] 
    - Upper bound: -2*A+2*C+4 
    - Complexity: n 
* Chain [32] with precondition: [C>=0,A>=C+3] 
    - Upper bound: 2*A-2*C+4 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E): max([nat(-A+C)*2+1,nat(A-C)*2+1])+3 
Asymptotic class: n 
* Total analysis performed in 164 ms.


-- stats
realtime 0:01.57
usertime 0.18
systime 0.00

