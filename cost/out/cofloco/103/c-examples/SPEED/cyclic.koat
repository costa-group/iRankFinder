WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalcyclicbb3in___3/7,n_evalcyclicbb4in___2/7,n_evalcyclicbbin___1/7]
1. recursive  : [n_evalcyclicbb3in___3_loop_cont/8,n_evalcyclicbb3in___6/7,n_evalcyclicbb4in___5/7,n_evalcyclicbb4in___8/7,n_evalcyclicbbin___4/7,n_evalcyclicbbin___7/7]
2. recursive  : [n_evalcyclicbb3in___9/7,n_evalcyclicbb4in___8_loop_cont/8]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [n_evalcyclicstop___10/4]
5. non_recursive  : [n_evalcyclicbb3in___9_loop_cont/5]
6. non_recursive  : [n_evalcyclicbbin___11/4]
7. non_recursive  : [n_evalcyclicbb4in___12/4]
8. non_recursive  : [n_evalcyclicbb3in___13/4]
9. non_recursive  : [n_evalcyclicstart/4]
10. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalcyclicbb3in___3/7
1. SCC is partially evaluated into n_evalcyclicbb4in___8/7
2. SCC is partially evaluated into n_evalcyclicbb3in___9/7
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_evalcyclicbb3in___9_loop_cont/5
6. SCC is partially evaluated into n_evalcyclicbbin___11/4
7. SCC is partially evaluated into n_evalcyclicbb4in___12/4
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalcyclicbb3in___3/7 
* CE 21 is refined into CE [22] 
* CE 18 is refined into CE [23] 
* CE 20 is refined into CE [24] 
* CE 19 is refined into CE [25] 


### Cost equations --> "Loop" of n_evalcyclicbb3in___3/7 
* CEs [25] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [23] --> Loop 19 
* CEs [24] --> Loop 20 

### Ranking functions of CR n_evalcyclicbb3in___3(A,B,C,D,E,F,G) 
* RF of phase [17]: [A-C,B-C-1]

#### Partial ranking functions of CR n_evalcyclicbb3in___3(A,B,C,D,E,F,G) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    A-C
    B-C-1


### Specialization of cost equations n_evalcyclicbb4in___8/7 
* CE 15 is refined into CE [26] 
* CE 14 is refined into CE [27] 
* CE 17 is refined into CE [28] 
* CE 12 is refined into CE [29] 
* CE 13 is refined into CE [30,31] 
* CE 11 is refined into CE [32] 
* CE 16 is refined into CE [33] 


### Cost equations --> "Loop" of n_evalcyclicbb4in___8/7 
* CEs [26] --> Loop 21 
* CEs [27,28] --> Loop 22 
* CEs [29,30,31] --> Loop 23 
* CEs [32,33] --> Loop 24 

### Ranking functions of CR n_evalcyclicbb4in___8(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_evalcyclicbb4in___8(A,B,C,D,E,F,G) 


### Specialization of cost equations n_evalcyclicbb3in___9/7 
* CE 6 is refined into CE [34] 
* CE 8 is refined into CE [35] 
* CE 7 is refined into CE [36] 
* CE 5 is refined into CE [37] 


### Cost equations --> "Loop" of n_evalcyclicbb3in___9/7 
* CEs [37] --> Loop 25 
* CEs [34,35] --> Loop 26 
* CEs [36] --> Loop 27 

### Ranking functions of CR n_evalcyclicbb3in___9(A,B,C,D,E,F,G) 
* RF of phase [25]: [B-C+1]

#### Partial ranking functions of CR n_evalcyclicbb3in___9(A,B,C,D,E,F,G) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    B-C+1


### Specialization of cost equations n_evalcyclicbb3in___9_loop_cont/5 
* CE 9 is refined into CE [38] 
* CE 10 is refined into CE [39] 


### Cost equations --> "Loop" of n_evalcyclicbb3in___9_loop_cont/5 
* CEs [38] --> Loop 28 
* CEs [39] --> Loop 29 

### Ranking functions of CR n_evalcyclicbb3in___9_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalcyclicbb3in___9_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalcyclicbbin___11/4 
* CE 4 is refined into CE [40,41] 


### Cost equations --> "Loop" of n_evalcyclicbbin___11/4 
* CEs [40,41] --> Loop 30 

### Ranking functions of CR n_evalcyclicbbin___11(A,B,C,D) 

#### Partial ranking functions of CR n_evalcyclicbbin___11(A,B,C,D) 


### Specialization of cost equations n_evalcyclicbb4in___12/4 
* CE 2 is refined into CE [42] 
* CE 3 is refined into CE [43] 


### Cost equations --> "Loop" of n_evalcyclicbb4in___12/4 
* CEs [42,43] --> Loop 31 

### Ranking functions of CR n_evalcyclicbb4in___12(A,B,C,D) 

#### Partial ranking functions of CR n_evalcyclicbb4in___12(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [44] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [44] --> Loop 32 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalcyclicbb3in___3(A,B,C,D,E,F,G):
* Chain [[17],20]: 3*it(17)+1
  Such that:it(17) =< A-C

  with precondition: [D=3,C>=1,B>=A+1,A>=C+1] 

* Chain [[17],19]: 3*it(17)+2
  Such that:it(17) =< A-C

  with precondition: [D=3,C>=1,B>=A+1,A>=C+2] 

* Chain [[17],18]: 3*it(17)+0
  Such that:it(17) =< A-C

  with precondition: [D=4,C>=1,B>=A+1,A>=C+1] 

* Chain [20]: 1
  with precondition: [D=3,C=A,C>=1,B>=C+1] 

* Chain [19]: 2
  with precondition: [D=3,C>=1,B>=A+1,A>=C+1] 

* Chain [18]: 0
  with precondition: [D=4,C>=1,B>=A+1,A>=C] 


#### Cost of chains of n_evalcyclicbb4in___8(A,B,C,D,E,F,G):
* Chain [24]: 3
  with precondition: [D=3,A>=0,C>=A+2,B+1>=C] 

* Chain [23]: 6*s(5)+7
  Such that:s(4) =< A
s(5) =< s(4)

  with precondition: [D=3,C=B+1,A>=1,C>=A+2] 

* Chain [22]: 3*s(6)+5
  Such that:s(6) =< A

  with precondition: [D=4,A>=0,C>=A+2,B+1>=C] 

* Chain [21]: 2
  with precondition: [D=5,A=E,B=F,C+1=G,A>=0,C>=A+2,B>=C] 


#### Cost of chains of n_evalcyclicbb3in___9(A,B,C,D,E,F,G):
* Chain [[25],27]: 3*it(25)+6*s(10)+8
  Such that:s(9) =< A
it(25) =< B-C+1
s(10) =< s(9)

  with precondition: [D=3,A>=0,C>=A+2,B>=C] 

* Chain [[25],26]: 3*it(25)+3*s(11)+6
  Such that:s(11) =< A
it(25) =< B-C+1

  with precondition: [D=4,A>=0,C>=A+2,B>=C] 

* Chain [27]: 6*s(10)+8
  Such that:s(9) =< A
s(10) =< s(9)

  with precondition: [D=3,A>=0,C>=A+2,B+1>=C] 

* Chain [26]: 3*s(11)+6
  Such that:s(11) =< A

  with precondition: [D=4,A>=0,C>=A+2,B+1>=C] 


#### Cost of chains of n_evalcyclicbb3in___9_loop_cont(A,B,C,D,E):
* Chain [29]: 0
  with precondition: [A=3] 

* Chain [28]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalcyclicbbin___11(A,B,C,D):
* Chain [30]: 6*s(20)+18*s(22)+9
  Such that:aux(4) =< -A+B
aux(5) =< A
s(20) =< aux(4)
s(22) =< aux(5)

  with precondition: [A+1=C,A>=0,B>=A+1] 


#### Cost of chains of n_evalcyclicbb4in___12(A,B,C,D):
* Chain [31]: 6*s(28)+18*s(29)+10
  Such that:s(26) =< B-C+1
s(27) =< C
s(28) =< s(26)
s(29) =< s(27)

  with precondition: [A+1=C,A>=0,B>=A+1] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [32]: 6*s(32)+18*s(33)+13
  Such that:s(30) =< -A+B
s(31) =< A+1
s(32) =< s(30)
s(33) =< s(31)

  with precondition: [A>=0,B>=A+1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [32] with precondition: [A>=0,B>=A+1] 
    - Upper bound: 12*A+6*B+31 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): 12*A+6*B+31 
Asymptotic class: n 
* Total analysis performed in 207 ms.


-- stats
realtime 0:00.39
usertime 0.22
systime 0.00

