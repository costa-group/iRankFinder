WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb3in___7/9,n_evalfbbin___1/9]
1. non_recursive  : [exit_location/1]
2. recursive  : [n_evalfbb3in___3/9,n_evalfbb3in___5/9,n_evalfbbin___2/9,n_evalfbbin___4/9]
3. non_recursive  : [n_evalfstop___9/5]
4. non_recursive  : [n_evalfbb3in___3_loop_cont/6]
5. non_recursive  : [n_evalfbb3in___7_loop_cont/6]
6. recursive  : [n_evalfbb3in___8/9,n_evalfbbin___6/9]
7. non_recursive  : [n_evalfbb3in___8_loop_cont/6]
8. non_recursive  : [n_evalfbbin___10/5]
9. non_recursive  : [n_evalfbb3in___11/5]
10. non_recursive  : [n_evalfstart/5]
11. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb3in___7/9
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into n_evalfbb3in___3/9
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalfbb3in___3_loop_cont/6
5. SCC is partially evaluated into n_evalfbb3in___7_loop_cont/6
6. SCC is partially evaluated into n_evalfbb3in___8/9
7. SCC is partially evaluated into n_evalfbb3in___8_loop_cont/6
8. SCC is partially evaluated into n_evalfbbin___10/5
9. SCC is partially evaluated into n_evalfbb3in___11/5
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb3in___7/9 
* CE 8 is refined into CE [23] 
* CE 7 is refined into CE [24] 
* CE 6 is refined into CE [25] 


### Cost equations --> "Loop" of n_evalfbb3in___7/9 
* CEs [25] --> Loop 23 
* CEs [24] --> Loop 24 
* CEs [23] --> Loop 25 

### Ranking functions of CR n_evalfbb3in___7(A,B,C,D,E,F,G,H,I) 
* RF of phase [23]: [-B+C]

#### Partial ranking functions of CR n_evalfbb3in___7(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    -B+C


### Specialization of cost equations n_evalfbb3in___3/9 
* CE 17 is refined into CE [26] 
* CE 20 is refined into CE [27] 
* CE 19 is refined into CE [28] 
* CE 18 is refined into CE [29] 


### Cost equations --> "Loop" of n_evalfbb3in___3/9 
* CEs [28] --> Loop 26 
* CEs [29] --> Loop 27 
* CEs [26] --> Loop 28 
* CEs [27] --> Loop 29 

### Ranking functions of CR n_evalfbb3in___3(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_evalfbb3in___3(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [26,27]:
  - RF of loop [26:1]:
    -A+D depends on loops [27:1] 
  - RF of loop [27:1]:
    -B+C-1


### Specialization of cost equations n_evalfbb3in___3_loop_cont/6 
* CE 22 is refined into CE [30] 
* CE 21 is refined into CE [31] 


### Cost equations --> "Loop" of n_evalfbb3in___3_loop_cont/6 
* CEs [30] --> Loop 30 
* CEs [31] --> Loop 31 

### Ranking functions of CR n_evalfbb3in___3_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalfbb3in___3_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalfbb3in___7_loop_cont/6 
* CE 9 is refined into CE [32] 
* CE 10 is refined into CE [33] 


### Cost equations --> "Loop" of n_evalfbb3in___7_loop_cont/6 
* CEs [32] --> Loop 32 
* CEs [33] --> Loop 33 

### Ranking functions of CR n_evalfbb3in___7_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalfbb3in___7_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalfbb3in___8/9 
* CE 13 is refined into CE [34] 
* CE 12 is refined into CE [35] 
* CE 11 is refined into CE [36] 


### Cost equations --> "Loop" of n_evalfbb3in___8/9 
* CEs [36] --> Loop 34 
* CEs [35] --> Loop 35 
* CEs [34] --> Loop 36 

### Ranking functions of CR n_evalfbb3in___8(A,B,C,D,E,F,G,H,I) 
* RF of phase [34]: [-A+D]

#### Partial ranking functions of CR n_evalfbb3in___8(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    -A+D


### Specialization of cost equations n_evalfbb3in___8_loop_cont/6 
* CE 15 is refined into CE [37,38,39] 
* CE 14 is refined into CE [40] 
* CE 16 is refined into CE [41] 


### Cost equations --> "Loop" of n_evalfbb3in___8_loop_cont/6 
* CEs [40] --> Loop 37 
* CEs [37,38,39] --> Loop 38 
* CEs [41] --> Loop 39 

### Ranking functions of CR n_evalfbb3in___8_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalfbb3in___8_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalfbbin___10/5 
* CE 5 is refined into CE [42,43,44,45,46] 
* CE 4 is refined into CE [47,48,49] 


### Cost equations --> "Loop" of n_evalfbbin___10/5 
* CEs [44] --> Loop 40 
* CEs [45] --> Loop 41 
* CEs [47,48,49] --> Loop 42 
* CEs [42,43,46] --> Loop 43 

### Ranking functions of CR n_evalfbbin___10(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbbin___10(A,B,C,D,E) 


### Specialization of cost equations n_evalfbb3in___11/5 
* CE 2 is refined into CE [50,51,52] 
* CE 3 is refined into CE [53] 


### Cost equations --> "Loop" of n_evalfbb3in___11/5 
* CEs [52] --> Loop 44 
* CEs [53] --> Loop 45 
* CEs [50,51] --> Loop 46 

### Ranking functions of CR n_evalfbb3in___11(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb3in___11(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [54,55,56] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [56] --> Loop 47 
* CEs [55] --> Loop 48 
* CEs [54] --> Loop 49 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb3in___7(A,B,C,D,E,F,G,H,I):
* Chain [[23],25]: 2*it(23)+0
  Such that:it(23) =< -B+C

  with precondition: [A=0,E=2,0>=D,B>=1,C>=B+1] 

* Chain [[23],24]: 2*it(23)+1
  Such that:it(23) =< -B+C

  with precondition: [A=0,E=3,0>=D,B>=1,C>=B+1] 

* Chain [25]: 0
  with precondition: [A=0,E=2,0>=D,B>=1,C>=B] 

* Chain [24]: 1
  with precondition: [A=0,E=3,C=B,0>=D,C>=1] 


#### Cost of chains of n_evalfbb3in___3(A,B,C,D,E,F,G,H,I):
* Chain [[26,27],29]: 2*it(26)+4*it(27)+0
  Such that:aux(2) =< -A+D
it(27) =< -B+C
aux(5) =< D
aux(1) =< it(27)*aux(5)
it(26) =< aux(1)+aux(2)

  with precondition: [E=2,A>=1,B>=1,D>=A,C>=B+1,C+D>=A+B+2] 

* Chain [[26,27],28]: 2*it(26)+4*it(27)+3
  Such that:aux(2) =< -A+D
it(27) =< -B+C
aux(5) =< D
aux(1) =< it(27)*aux(5)
it(26) =< aux(1)+aux(2)

  with precondition: [E=3,A>=1,B>=1,D>=A,C>=B+1,C+D>=A+B+2] 

* Chain [29]: 0
  with precondition: [E=2,A>=1,B>=1,D>=A,C>=B+1] 

* Chain [28]: 3
  with precondition: [E=3,D=A,C=B+1,C>=2,D>=1] 


#### Cost of chains of n_evalfbb3in___3_loop_cont(A,B,C,D,E,F):
* Chain [31]: 0
  with precondition: [A=2] 

* Chain [30]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalfbb3in___7_loop_cont(A,B,C,D,E,F):
* Chain [33]: 0
  with precondition: [A=2] 

* Chain [32]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalfbb3in___8(A,B,C,D,E,F,G,H,I):
* Chain [[34],36]: 2*it(34)+0
  Such that:it(34) =< -A+D

  with precondition: [B=0,E=2,A>=1,C>=1,D>=A+1] 

* Chain [[34],35]: 2*it(34)+2
  Such that:it(34) =< -A+I

  with precondition: [B=0,E=5,F=0,G=1,C=H,D=I,A>=1,C>=1,D>=A+1] 

* Chain [36]: 0
  with precondition: [B=0,E=2,A>=1,C>=1,D>=A] 

* Chain [35]: 2
  with precondition: [B=0,E=5,F=0,G=1,D=A,C=H,D=I,C>=1,D>=1] 


#### Cost of chains of n_evalfbb3in___8_loop_cont(A,B,C,D,E,F):
* Chain [39]: 0
  with precondition: [A=2] 

* Chain [38]: 8*s(9)+4*s(12)+5
  Such that:aux(8) =< -C+D
aux(9) =< E
s(9) =< aux(8)
s(11) =< s(9)*aux(9)
s(12) =< s(11)+aux(9)

  with precondition: [A=5,B=0,C>=1,E>=1,D>=C+1] 

* Chain [37]: 1
  with precondition: [A=5,B=0,C=D,C>=1,E>=1] 


#### Cost of chains of n_evalfbbin___10(A,B,C,D,E):
* Chain [43]: 4*s(18)+8*s(22)+4*s(24)+8
  Such that:s(20) =< C
aux(11) =< D
s(18) =< aux(11)
s(22) =< s(20)
s(23) =< s(22)*aux(11)
s(24) =< s(23)+aux(11)

  with precondition: [A=0,B=0,C>=1,D>=1] 

* Chain [42]: 4*s(25)+2
  Such that:aux(12) =< C
s(25) =< aux(12)

  with precondition: [A=0,B=0,0>=D,C>=1] 

* Chain [41]: 2*s(27)+4
  Such that:s(27) =< D

  with precondition: [A=0,B=0,C=1,D>=2] 

* Chain [40]: 8*s(30)+4*s(32)+8
  Such that:s(29) =< 1
s(28) =< C
s(30) =< s(28)
s(31) =< s(30)*s(29)
s(32) =< s(31)+s(29)

  with precondition: [A=0,B=0,D=1,C>=2] 


#### Cost of chains of n_evalfbb3in___11(A,B,C,D,E):
* Chain [46]: 6*s(42)+16*s(43)+4*s(45)+4*s(50)+9
  Such that:s(46) =< 1
s(41) =< D
aux(14) =< C
s(43) =< aux(14)
s(49) =< s(43)*s(46)
s(50) =< s(49)+s(46)
s(42) =< s(41)
s(44) =< s(43)*s(41)
s(45) =< s(44)+s(41)

  with precondition: [A=0,B=0,C>=1,D>=1] 

* Chain [45]: 1
  with precondition: [A=0,B=0,0>=C] 

* Chain [44]: 4*s(52)+3
  Such that:s(51) =< C
s(52) =< s(51)

  with precondition: [A=0,B=0,0>=D,C>=1] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [49]: 3
  with precondition: [0>=C] 

* Chain [48]: 4*s(54)+5
  Such that:s(53) =< C
s(54) =< s(53)

  with precondition: [0>=D,C>=1] 

* Chain [47]: 16*s(58)+4*s(60)+6*s(61)+4*s(63)+11
  Such that:s(55) =< 1
s(57) =< C
s(56) =< D
s(58) =< s(57)
s(59) =< s(58)*s(55)
s(60) =< s(59)+s(55)
s(61) =< s(56)
s(62) =< s(58)*s(56)
s(63) =< s(62)+s(56)

  with precondition: [C>=1,D>=1] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [49] with precondition: [0>=C] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [48] with precondition: [0>=D,C>=1] 
    - Upper bound: 4*C+5 
    - Complexity: n 
* Chain [47] with precondition: [C>=1,D>=1] 
    - Upper bound: 20*C+10*D+15+4*D*C 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D,E): nat(C)*16+10+nat(D)*10+nat(D)*4*nat(C)+ (nat(C)*4+2)+3 
Asymptotic class: n^2 
* Total analysis performed in 293 ms.


-- stats
realtime 0:00.42
usertime 0.32
systime 0.00

