MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalEx1bb1in___1/9,n_evalEx1bb4in___11/9]
1. non_recursive  : [exit_location/1]
2. recursive  : [n_evalEx1bb1in___10/9,n_evalEx1bb4in___12/9]
3. recursive  : [n_evalEx1bb1in___3/9,n_evalEx1bb4in___4/9]
4. recursive  : [n_evalEx1bb1in___5/9,n_evalEx1bb4in___4_loop_cont/10,n_evalEx1bb4in___6/9,n_evalEx1bb6in___2/9]
5. recursive  : [n_evalEx1bb4in___12_loop_cont/10,n_evalEx1bb4in___6_loop_cont/10,n_evalEx1bb6in___9/9]
6. recursive  : [n_evalEx1bb1in___7/9,n_evalEx1bb4in___8/9,n_evalEx1bb6in___9_loop_cont/10]
7. non_recursive  : [n_evalEx1stop___15/5]
8. non_recursive  : [n_evalEx1bb6in___13/5]
9. non_recursive  : [n_evalEx1bb4in___8_loop_cont/6]
10. non_recursive  : [n_evalEx1bb4in___11_loop_cont/6]
11. non_recursive  : [n_evalEx1bb1in___14/5]
12. non_recursive  : [n_evalEx1bb4in___16/5]
13. non_recursive  : [n_evalEx1bb6in___17/5]
14. non_recursive  : [n_evalEx1start/5]
15. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalEx1bb4in___11/9
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into n_evalEx1bb4in___12/9
3. SCC is partially evaluated into n_evalEx1bb4in___4/9
4. SCC is partially evaluated into n_evalEx1bb6in___2/9
5. SCC is partially evaluated into n_evalEx1bb6in___9/9
6. SCC is partially evaluated into n_evalEx1bb4in___8/9
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into n_evalEx1bb4in___8_loop_cont/6
10. SCC is partially evaluated into n_evalEx1bb4in___11_loop_cont/6
11. SCC is partially evaluated into n_evalEx1bb1in___14/5
12. SCC is partially evaluated into n_evalEx1bb4in___16/5
13. SCC is partially evaluated into n_evalEx1bb6in___17/5
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalEx1bb4in___11/9 
* CE 45 is refined into CE [63] 
* CE 42 is refined into CE [64] 
* CE 44 is refined into CE [65] 
* CE 43 is refined into CE [66] 


### Cost equations --> "Loop" of n_evalEx1bb4in___11/9 
* CEs [66] --> Loop 38 
* CEs [63] --> Loop 39 
* CEs [64] --> Loop 40 
* CEs [65] --> Loop 41 

### Ranking functions of CR n_evalEx1bb4in___11(A,B,C,D,E,F,G,H,I) 
* RF of phase [38]: [D-1]

#### Partial ranking functions of CR n_evalEx1bb4in___11(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [38]:
  - RF of loop [38:1]:
    D-1


### Specialization of cost equations n_evalEx1bb4in___12/9 
* CE 15 is refined into CE [67] 
* CE 16 is refined into CE [68] 
* CE 13 is refined into CE [69] 
* CE 14 is refined into CE [70] 


### Cost equations --> "Loop" of n_evalEx1bb4in___12/9 
* CEs [70] --> Loop 42 
* CEs [67] --> Loop 43 
* CEs [68] --> Loop 44 
* CEs [69] --> Loop 45 

### Ranking functions of CR n_evalEx1bb4in___12(A,B,C,D,E,F,G,H,I) 
* RF of phase [42]: [B-C,-C+D]

#### Partial ranking functions of CR n_evalEx1bb4in___12(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [42]:
  - RF of loop [42:1]:
    B-C
    -C+D


### Specialization of cost equations n_evalEx1bb4in___4/9 
* CE 61 is refined into CE [71] 
* CE 60 is refined into CE [72] 
* CE 58 is refined into CE [73] 
* CE 59 is refined into CE [74] 


### Cost equations --> "Loop" of n_evalEx1bb4in___4/9 
* CEs [74] --> Loop 46 
* CEs [71] --> Loop 47 
* CEs [72] --> Loop 48 
* CEs [73] --> Loop 49 

### Ranking functions of CR n_evalEx1bb4in___4(A,B,C,D,E,F,G,H,I) 
* RF of phase [46]: [-A+D-1,-C+D,D-2]

#### Partial ranking functions of CR n_evalEx1bb4in___4(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [46]:
  - RF of loop [46:1]:
    -A+D-1
    -C+D
    D-2


### Specialization of cost equations n_evalEx1bb6in___2/9 
* CE 62 is refined into CE [75] 


### Cost equations --> "Loop" of n_evalEx1bb6in___2/9 
* CEs [75] --> Loop 50 

### Ranking functions of CR n_evalEx1bb6in___2(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_evalEx1bb6in___2(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_evalEx1bb6in___9/9 
* CE 19 is refined into CE [76,77] 
* CE 24 is discarded (unfeasible) 
* CE 23 is refined into CE [78] 
* CE 20 is refined into CE [79] 
* CE 21 is discarded (unfeasible) 
* CE 22 is refined into CE [80] 
* CE 29 is refined into CE [81] 
* CE 30 is discarded (unfeasible) 
* CE 31 is refined into CE [82] 
* CE 17 is refined into CE [83,84] 
* CE 18 is discarded (unfeasible) 
* CE 25 is refined into CE [85,86] 
* CE 26 is discarded (unfeasible) 
* CE 27 is refined into CE [87,88] 
* CE 28 is discarded (unfeasible) 


### Cost equations --> "Loop" of n_evalEx1bb6in___9/9 
* CEs [88] --> Loop 51 
* CEs [87] --> Loop 52 
* CEs [77] --> Loop 53 
* CEs [76] --> Loop 54 
* CEs [78] --> Loop 55 
* CEs [79,80,81,82] --> Loop 56 
* CEs [86] --> Loop 57 
* CEs [84] --> Loop 58 
* CEs [83,85] --> Loop 59 

### Ranking functions of CR n_evalEx1bb6in___9(A,B,C,D,E,F,G,H,I) 
* RF of phase [51]: [-A+B-2,-A+C-2,-A+D-2]

#### Partial ranking functions of CR n_evalEx1bb6in___9(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [51]:
  - RF of loop [51:1]:
    -A+B-2
    -A+C-2
    -A+D-2


### Specialization of cost equations n_evalEx1bb4in___8/9 
* CE 35 is refined into CE [89,90] 
* CE 36 is refined into CE [91,92,93] 
* CE 38 is refined into CE [94] 
* CE 41 is refined into CE [95] 
* CE 39 is refined into CE [96] 
* CE 40 is refined into CE [97] 
* CE 37 is refined into CE [98,99,100,101,102,103] 


### Cost equations --> "Loop" of n_evalEx1bb4in___8/9 
* CEs [96] --> Loop 60 
* CEs [97] --> Loop 61 
* CEs [103] --> Loop 62 
* CEs [102] --> Loop 63 
* CEs [101] --> Loop 64 
* CEs [100] --> Loop 65 
* CEs [99] --> Loop 66 
* CEs [98] --> Loop 67 
* CEs [90] --> Loop 68 
* CEs [89] --> Loop 69 
* CEs [93] --> Loop 70 
* CEs [91] --> Loop 71 
* CEs [92] --> Loop 72 
* CEs [94,95] --> Loop 73 

### Ranking functions of CR n_evalEx1bb4in___8(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_evalEx1bb4in___8(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [60,61,62,63,64,65,66,67]:
  - RF of loop [60:1]:
    -A+D-2
    D-2
  - RF of loop [60:1,61:1]:
    -C+D depends on loops [62:1,63:1,64:1,65:1,66:1,67:1] 
  - RF of loop [61:1]:
    B-C-1 depends on loops [62:1,63:1,64:1,65:1,66:1,67:1] 
  - RF of loop [62:1]:
    -A/3+C/3-5/3 depends on loops [61:1] 
    -A/3+D/3-5/3
    C-5 depends on loops [61:1] 
    D-5
  - RF of loop [62:1,63:1]:
    -A/3+B/3-2
    B-6
  - RF of loop [63:1]:
    -A/4+C/4-5/4 depends on loops [61:1] 
    -A/4+D/4-5/4
    C/2-5/2 depends on loops [61:1] 
    D/2-5/2
  - RF of loop [64:1]:
    -A/3+B/3-5/3
  - RF of loop [64:1,65:1]:
    C-4 depends on loops [61:1] 
    D-4
  - RF of loop [64:1,65:1,66:1]:
    B-5
  - RF of loop [64:1,66:1]:
    -A/3+C/3-4/3 depends on loops [61:1] 
    -A/3+D/3-4/3
  - RF of loop [65:1]:
    -A/2+C/2-2 depends on loops [61:1] 
    -A/2+D/2-2
  - RF of loop [65:1,66:1]:
    -A/2+B/2-5/2
  - RF of loop [66:1]:
    C/2-2 depends on loops [61:1] 
    D/2-2
  - RF of loop [67:1]:
    -A/2+B/2-2
    -A/2+C/2-3/2 depends on loops [61:1] 
    -A/2+D/2-3/2
    B-4
    C-3 depends on loops [61:1] 
    D-3


### Specialization of cost equations n_evalEx1bb4in___8_loop_cont/6 
* CE 34 is refined into CE [104] 
* CE 33 is refined into CE [105] 
* CE 32 is refined into CE [106] 


### Cost equations --> "Loop" of n_evalEx1bb4in___8_loop_cont/6 
* CEs [104] --> Loop 74 
* CEs [105] --> Loop 75 
* CEs [106] --> Loop 76 

### Ranking functions of CR n_evalEx1bb4in___8_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalEx1bb4in___8_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalEx1bb4in___11_loop_cont/6 
* CE 57 is refined into CE [107] 
* CE 46 is refined into CE [108] 
* CE 47 is discarded (unfeasible) 
* CE 48 is discarded (unfeasible) 
* CE 49 is discarded (unfeasible) 
* CE 50 is discarded (unfeasible) 
* CE 51 is discarded (unfeasible) 
* CE 52 is discarded (unfeasible) 
* CE 53 is discarded (unfeasible) 
* CE 54 is discarded (unfeasible) 
* CE 55 is discarded (unfeasible) 
* CE 56 is refined into CE [109,110,111,112,113,114,115,116,117] 


### Cost equations --> "Loop" of n_evalEx1bb4in___11_loop_cont/6 
* CEs [107] --> Loop 77 
* CEs [108] --> Loop 78 
* CEs [109,110,111,112,113,114,115,116,117] --> Loop 79 

### Ranking functions of CR n_evalEx1bb4in___11_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalEx1bb4in___11_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalEx1bb1in___14/5 
* CE 6 is refined into CE [118,119] 
* CE 7 is refined into CE [120,121,122] 
* CE 8 is refined into CE [123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158] 
* CE 9 is refined into CE [159,160,161,162,163,164,165,166,167,168,169,170,171] 
* CE 10 is refined into CE [172] 
* CE 11 is refined into CE [173,174] 
* CE 12 is refined into CE [175,176,177,178,179] 


### Cost equations --> "Loop" of n_evalEx1bb1in___14/5 
* CEs [134,138] --> Loop 80 
* CEs [124,165,169] --> Loop 81 
* CEs [118,121,160] --> Loop 82 
* CEs [119,120,122,123,125,126,127,128,129,130,131,132,133,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,166,167,168,170,171,172,173,174,175,176,177,178,179] --> Loop 83 

### Ranking functions of CR n_evalEx1bb1in___14(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalEx1bb1in___14(A,B,C,D,E) 


### Specialization of cost equations n_evalEx1bb4in___16/5 
* CE 4 is refined into CE [180,181,182] 
* CE 5 is refined into CE [183] 


### Cost equations --> "Loop" of n_evalEx1bb4in___16/5 
* CEs [182] --> Loop 84 
* CEs [180,181] --> Loop 85 
* CEs [183] --> Loop 86 

### Ranking functions of CR n_evalEx1bb4in___16(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalEx1bb4in___16(A,B,C,D,E) 


### Specialization of cost equations n_evalEx1bb6in___17/5 
* CE 2 is refined into CE [184,185] 
* CE 3 is refined into CE [186] 


### Cost equations --> "Loop" of n_evalEx1bb6in___17/5 
* CEs [185] --> Loop 87 
* CEs [186] --> Loop 88 
* CEs [184] --> Loop 89 

### Ranking functions of CR n_evalEx1bb6in___17(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalEx1bb6in___17(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [187,188,189] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [189] --> Loop 90 
* CEs [188] --> Loop 91 
* CEs [187] --> Loop 92 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalEx1bb4in___11(A,B,C,D,E,F,G,H,I):
* Chain [[38],41]: 2*it(38)+1
  Such that:it(38) =< D

  with precondition: [A=0,C=1,E=3,F=1,G=1,H=1,I=1,D>=2,B>=D+1] 

* Chain [[38],40]: 2*it(38)+2
  Such that:it(38) =< D-I

  with precondition: [A=0,C=1,E=2,F=0,H=2,B=G,I>=2,B>=D+1,D>=I+1] 

* Chain [[38],39]: 2*it(38)+0
  Such that:it(38) =< D

  with precondition: [A=0,C=1,E=4,D>=2,B>=D+1] 

* Chain [41]: 1
  with precondition: [A=0,C=1,D=1,E=3,F=1,G=1,H=1,I=1,B>=2] 

* Chain [40]: 2
  with precondition: [A=0,C=1,E=2,F=0,H=2,B=G,D=I,D>=2,B>=D+1] 

* Chain [39]: 0
  with precondition: [A=0,C=1,E=4,D>=1,B>=D+1] 


#### Cost of chains of n_evalEx1bb4in___12(A,B,C,D,E,F,G,H,I):
* Chain [[42],45]: 2*it(42)+2
  Such that:it(42) =< -C+H

  with precondition: [E=2,B=D,A=F,B=G,B=I+1,A>=0,C>=A+2,H>=C+1,B>=H+1] 

* Chain [[42],44]: 2*it(42)+0
  Such that:it(42) =< B-C

  with precondition: [E=4,B=D,A>=0,C>=A+2,B>=C+1] 

* Chain [[42],43]: 2*it(42)+1
  Such that:it(42) =< -C+I

  with precondition: [E=5,B=D,A+1=F,B=G,B=H,B=I,A>=0,C>=A+2,B>=C+1] 

* Chain [45]: 2
  with precondition: [E=2,B=D,A=F,B=G,C=H,B=I+1,A>=0,C>=A+2,B>=C+1] 

* Chain [44]: 0
  with precondition: [E=4] 

* Chain [43]: 1
  with precondition: [E=5,B=C,B=D,A+1=F,B=G,B=H,B=I,A>=0,B>=A+2] 


#### Cost of chains of n_evalEx1bb4in___4(A,B,C,D,E,F,G,H,I):
* Chain [[46],49]: 2*it(46)+2
  Such that:it(46) =< D-I

  with precondition: [E=2,A+1=C,A=F,B=G,A+2=H,A>=1,I>=A+2,B>=D+1,D>=I+1] 

* Chain [[46],48]: 2*it(46)+1
  Such that:it(46) =< D-I

  with precondition: [E=3,A+1=C,A+1=F,A+1=G,A+1=H,A+1=I,A>=1,D>=A+2,B>=D+1] 

* Chain [[46],47]: 2*it(46)+0
  Such that:it(46) =< -A+D

  with precondition: [E=4,A+1=C,A>=1,D>=A+2,B>=D+1] 

* Chain [49]: 2
  with precondition: [E=2,C=A+1,C=F+1,B=G,C+1=H,D=I,C>=2,D>=C+1,B>=D+1] 

* Chain [48]: 1
  with precondition: [E=3,C=A+1,C=D,C=F,C=G,C=H,C=I,C>=2,B>=C+1] 

* Chain [47]: 0
  with precondition: [E=4,C=A+1,C>=2,D>=C,B>=D+1] 


#### Cost of chains of n_evalEx1bb6in___2(A,B,C,D,E,F,G,H,I):
* Chain [50]: 1
  with precondition: [E=8,A=B,A=C,A=D,A>=1] 


#### Cost of chains of n_evalEx1bb6in___9(A,B,C,D,E,F,G,H,I):
* Chain [[51],59]: 4*it(51)+2*s(6)+5
  Such that:it(51) =< -A+H
aux(2) =< -A+I+1
it(51) =< aux(2)
s(6) =< it(51)*aux(2)

  with precondition: [E=2,B=C,B=D,B=G,F+2=H,B=I+1,A>=1,F>=A+1,B>=F+3] 

* Chain [[51],58]: 4*it(51)+2*s(6)+2*s(7)+5
  Such that:it(51) =< -A+F
aux(2) =< -A+G
s(7) =< -F+G
it(51) =< aux(2)
s(6) =< it(51)*aux(2)

  with precondition: [E=2,B=C,B=D,B=G,F+2=H,A>=1,F>=A+1,I>=F+2,B>=I+2] 

* Chain [[51],57]: 4*it(51)+2*s(6)+2*s(8)+5
  Such that:it(51) =< -A+F
aux(2) =< -A+I+1
s(8) =< -F+I+1
it(51) =< aux(2)
s(6) =< it(51)*aux(2)

  with precondition: [E=2,B=C,B=D,B=G,B=I+1,A>=1,F>=A+1,H>=F+3,B>=H+1] 

* Chain [[51],56]: 8*it(51)+2*s(6)+3
  Such that:aux(4) =< -A+D
it(51) =< aux(4)
s(6) =< it(51)*aux(4)

  with precondition: [E=4,B=C,B=D,A>=1,B>=A+3] 

* Chain [[51],54]: 4*it(51)+2*s(6)+5
  Such that:aux(5) =< -A+D
it(51) =< aux(5)
s(6) =< it(51)*aux(5)

  with precondition: [E=8,B=C,B=D,A>=1,B>=A+3] 

* Chain [[51],53]: 6*it(51)+2*s(6)+5
  Such that:aux(6) =< -A+D
it(51) =< aux(6)
s(6) =< it(51)*aux(6)

  with precondition: [E=8,B=C,B=D,A>=1,B>=A+4] 

* Chain [[51],52,56]: 4*it(51)+2*s(6)+4*s(9)+7
  Such that:aux(3) =< 1
aux(7) =< -A+D
it(51) =< aux(7)
s(9) =< aux(3)
s(6) =< it(51)*aux(7)

  with precondition: [E=4,B=C,B=D,A>=1,B>=A+3] 

* Chain [[51],52,55]: 4*it(51)+2*s(6)+6
  Such that:aux(8) =< -A+I
it(51) =< aux(8)
s(6) =< it(51)*aux(8)

  with precondition: [E=7,B=C,B=D,B=F,B=G,B=H,B=I,A>=1,B>=A+3] 

* Chain [59]: 5
  with precondition: [E=2,B=C,B=D,A=F,B=G,A+2=H,B=I+1,A>=1,B>=A+3] 

* Chain [58]: 2*s(7)+5
  Such that:s(7) =< -A+D

  with precondition: [E=2,B=C,B=D,A=F,B=G,A+2=H,A>=1,I>=A+2,B>=I+2] 

* Chain [57]: 2*s(8)+5
  Such that:s(8) =< -A+D

  with precondition: [E=2,B=C,B=D,A=F,B=G,B=I+1,A>=1,H>=A+3,B>=H+1] 

* Chain [56]: 4*s(9)+3
  Such that:aux(3) =< -A+D
s(9) =< aux(3)

  with precondition: [E=4] 

* Chain [55]: 2
  with precondition: [E=7,A+1=B,A+1=C,A+1=D,A+1=F,A+1=G,A+1=H,A+1=I,A>=1] 

* Chain [54]: 5
  with precondition: [E=8,A+2=B,A+2=C,A+2=D,A>=1] 

* Chain [53]: 2*s(11)+5
  Such that:s(11) =< -A+D

  with precondition: [E=8,B=C,B=D,A>=1,B>=A+3] 

* Chain [52,56]: 4*s(9)+7
  Such that:aux(3) =< 1
s(9) =< aux(3)

  with precondition: [E=4,A+2=B,A+2=C,A+2=D,A>=1] 

* Chain [52,55]: 6
  with precondition: [E=7,A+2=B,A+2=C,A+2=D,A+2=F,A+2=G,A+2=H,A+2=I,A>=1] 


#### Cost of chains of n_evalEx1bb4in___8(A,B,C,D,E,F,G,H,I):
* Chain [[60,61,62,63,64,65,66,67],73]: 2*it(60)+16*it(61)+6*it(62)+6*it(63)+6*it(64)+6*it(65)+6*it(66)+6*it(67)+8*s(33)+16*s(34)+4*s(35)+4*s(62)+2*s(64)+4*s(66)+2*s(68)+8
  Such that:s(31) =< 1
aux(126) =< -A+2*B
aux(132) =< -A/2+B/2
aux(136) =< -A/2+D/2
aux(138) =< -A/3+B/3
aux(142) =< -A/3+D/3
aux(144) =< B
aux(152) =< D
aux(154) =< D/2
aux(156) =< -3*A+2*B+D
aux(157) =< -2*A+B+D
aux(158) =< -A+B
aux(159) =< -A+D
it(63) =< aux(159)
s(33) =< s(31)
s(34) =< aux(156)
s(35) =< s(34)*aux(156)
it(63) =< aux(158)
it(64) =< aux(158)
it(65) =< aux(158)
it(66) =< aux(158)
s(62) =< aux(158)
it(63) =< aux(157)
it(64) =< aux(157)
it(65) =< aux(157)
it(66) =< aux(157)
it(67) =< aux(157)
s(62) =< aux(157)
it(64) =< aux(126)
it(65) =< aux(126)
it(66) =< aux(126)
s(66) =< aux(126)
it(64) =< aux(156)
it(65) =< aux(156)
it(66) =< aux(156)
it(67) =< aux(156)
s(66) =< aux(156)
it(60) =< aux(159)
it(62) =< aux(159)
it(64) =< aux(159)
it(65) =< aux(159)
it(66) =< aux(159)
it(67) =< aux(159)
it(65) =< aux(132)
it(66) =< aux(132)
it(67) =< aux(132)
it(65) =< aux(136)
it(67) =< aux(136)
it(62) =< aux(138)
it(63) =< aux(138)
it(64) =< aux(138)
it(62) =< aux(157)
it(62) =< aux(142)
it(64) =< aux(142)
it(66) =< aux(142)
it(62) =< aux(144)
it(63) =< aux(144)
it(64) =< aux(144)
it(65) =< aux(144)
it(66) =< aux(144)
it(67) =< aux(144)
it(62) =< aux(158)
it(67) =< aux(158)
it(60) =< aux(152)
it(62) =< aux(152)
it(63) =< aux(152)
it(64) =< aux(152)
it(65) =< aux(152)
it(66) =< aux(152)
it(67) =< aux(152)
it(60) =< aux(156)
it(62) =< aux(156)
it(63) =< aux(156)
it(63) =< aux(154)
it(66) =< aux(154)
aux(58) =< aux(159)+1
s(68) =< s(66)*aux(58)
s(64) =< s(62)*aux(159)

  with precondition: [E=4,A>=0,C>=A+2,D>=C,B>=D+1,2*D>=A+C+4] 

* Chain [[60,61,62,63,64,65,66,67],72]: 2*it(60)+16*it(61)+6*it(62)+6*it(63)+6*it(64)+6*it(65)+6*it(66)+6*it(67)+4*s(62)+2*s(64)+4*s(66)+2*s(68)+3
  Such that:aux(127) =< -3*A+2*B+I
aux(126) =< -A+2*B
it(63) =< -A/4+D/4
aux(144) =< B
aux(152) =< D
aux(153) =< D-I
aux(154) =< D/2
aux(155) =< D/2-I/2
aux(160) =< -A+B
aux(161) =< -A+D
aux(162) =< -A/2+B/2
aux(163) =< -A/2+D/2
aux(164) =< -A/3+B/3
aux(165) =< -A/3+D/3
it(63) =< aux(160)
it(64) =< aux(160)
it(65) =< aux(160)
it(66) =< aux(160)
s(62) =< aux(160)
it(67) =< aux(160)
it(64) =< aux(126)
it(65) =< aux(126)
it(66) =< aux(126)
s(66) =< aux(126)
it(64) =< aux(127)
it(65) =< aux(127)
it(66) =< aux(127)
it(67) =< aux(127)
s(66) =< aux(127)
it(60) =< aux(161)
it(62) =< aux(161)
it(63) =< aux(161)
it(64) =< aux(161)
it(65) =< aux(161)
it(66) =< aux(161)
it(67) =< aux(161)
it(65) =< aux(162)
it(66) =< aux(162)
it(67) =< aux(162)
it(65) =< aux(163)
it(67) =< aux(163)
it(66) =< aux(163)
it(62) =< aux(164)
it(63) =< aux(164)
it(64) =< aux(164)
it(62) =< aux(165)
it(64) =< aux(165)
it(66) =< aux(165)
it(63) =< aux(165)
it(62) =< aux(144)
it(63) =< aux(144)
it(64) =< aux(144)
it(65) =< aux(144)
it(66) =< aux(144)
it(67) =< aux(144)
it(62) =< aux(160)
it(60) =< aux(152)
it(62) =< aux(152)
it(63) =< aux(152)
it(64) =< aux(152)
it(65) =< aux(152)
it(66) =< aux(152)
it(67) =< aux(152)
it(60) =< aux(153)
it(62) =< aux(153)
it(63) =< aux(153)
it(64) =< aux(153)
it(65) =< aux(153)
it(66) =< aux(153)
it(67) =< aux(153)
it(63) =< aux(154)
it(66) =< aux(154)
it(63) =< aux(155)
it(66) =< aux(155)
aux(58) =< aux(161)+1
s(68) =< s(66)*aux(58)
s(64) =< s(62)*aux(161)

  with precondition: [E=7,F=G,F=H,F=I,A>=0,C>=A+2,F>=A+2,D>=C,B>=D+1,D>=F+1,D+F>=A+C+3] 

* Chain [[60,61,62,63,64,65,66,67],71]: 2*it(60)+16*it(61)+6*it(62)+6*it(63)+6*it(64)+6*it(65)+6*it(66)+6*it(67)+4*s(62)+2*s(64)+4*s(66)+2*s(68)+7
  Such that:aux(126) =< -A+2*B
aux(127) =< -A+2*B-I
it(63) =< -A/4+D/4
aux(144) =< B
aux(145) =< B-I
aux(152) =< D
aux(153) =< D-I
aux(154) =< D/2
aux(155) =< D/2-I/2
aux(166) =< -A+B
aux(167) =< -A+D
aux(168) =< -A/2+B/2
aux(169) =< -A/2+D/2
aux(170) =< -A/3+B/3
aux(171) =< -A/3+D/3
it(63) =< aux(166)
it(64) =< aux(166)
it(65) =< aux(166)
it(66) =< aux(166)
s(62) =< aux(166)
it(67) =< aux(166)
it(64) =< aux(126)
it(65) =< aux(126)
it(66) =< aux(126)
s(66) =< aux(126)
it(64) =< aux(127)
it(65) =< aux(127)
it(66) =< aux(127)
it(67) =< aux(127)
s(66) =< aux(127)
it(60) =< aux(167)
it(62) =< aux(167)
it(63) =< aux(167)
it(64) =< aux(167)
it(65) =< aux(167)
it(66) =< aux(167)
it(67) =< aux(167)
it(65) =< aux(168)
it(66) =< aux(168)
it(67) =< aux(168)
it(65) =< aux(169)
it(67) =< aux(169)
it(66) =< aux(169)
it(62) =< aux(170)
it(63) =< aux(170)
it(64) =< aux(170)
it(62) =< aux(171)
it(64) =< aux(171)
it(66) =< aux(171)
it(63) =< aux(171)
it(62) =< aux(144)
it(63) =< aux(144)
it(64) =< aux(144)
it(65) =< aux(144)
it(66) =< aux(144)
it(67) =< aux(144)
it(62) =< aux(145)
it(63) =< aux(145)
it(64) =< aux(145)
it(65) =< aux(145)
it(66) =< aux(145)
it(67) =< aux(145)
it(60) =< aux(152)
it(62) =< aux(152)
it(63) =< aux(152)
it(64) =< aux(152)
it(65) =< aux(152)
it(66) =< aux(152)
it(67) =< aux(152)
it(60) =< aux(153)
it(62) =< aux(153)
it(63) =< aux(153)
it(64) =< aux(153)
it(65) =< aux(153)
it(66) =< aux(153)
it(67) =< aux(153)
it(63) =< aux(154)
it(66) =< aux(154)
it(63) =< aux(155)
it(66) =< aux(155)
aux(58) =< aux(167)+1
s(68) =< s(66)*aux(58)
s(64) =< s(62)*aux(167)

  with precondition: [E=7,F=G,F=H,F=I,A>=0,C>=A+2,F>=A+3,D>=C,B>=D+1,D>=F,2*D>=C+F+1,D+F>=A+C+4] 

* Chain [[60,61,62,63,64,65,66,67],70]: 2*it(60)+16*it(61)+6*it(62)+6*it(63)+6*it(64)+6*it(65)+6*it(66)+6*it(67)+4*s(62)+2*s(64)+4*s(66)+2*s(68)+4*s(76)+2*s(77)+7
  Such that:aux(126) =< -A+2*B
aux(127) =< -A+2*B-I
aux(132) =< -A/2+B/2
aux(136) =< -A/2+D/2
aux(138) =< -A/3+B/3
aux(142) =< -A/3+D/3
aux(144) =< B
aux(145) =< B-I
aux(152) =< D
aux(153) =< D-I
aux(154) =< D/2
aux(155) =< D/2-I/2
aux(172) =< -A+B
aux(173) =< -A+D
it(63) =< aux(173)
s(76) =< aux(173)
s(77) =< s(76)*aux(173)
it(63) =< aux(172)
it(64) =< aux(172)
it(65) =< aux(172)
it(66) =< aux(172)
s(62) =< aux(172)
it(67) =< aux(172)
it(64) =< aux(126)
it(65) =< aux(126)
it(66) =< aux(126)
s(66) =< aux(126)
it(64) =< aux(127)
it(65) =< aux(127)
it(66) =< aux(127)
it(67) =< aux(127)
s(66) =< aux(127)
it(60) =< aux(173)
it(62) =< aux(173)
it(64) =< aux(173)
it(65) =< aux(173)
it(66) =< aux(173)
it(67) =< aux(173)
it(65) =< aux(132)
it(66) =< aux(132)
it(67) =< aux(132)
it(65) =< aux(136)
it(67) =< aux(136)
it(62) =< aux(138)
it(63) =< aux(138)
it(64) =< aux(138)
it(62) =< aux(172)
it(62) =< aux(142)
it(64) =< aux(142)
it(66) =< aux(142)
it(62) =< aux(144)
it(63) =< aux(144)
it(64) =< aux(144)
it(65) =< aux(144)
it(66) =< aux(144)
it(67) =< aux(144)
it(62) =< aux(145)
it(63) =< aux(145)
it(64) =< aux(145)
it(65) =< aux(145)
it(66) =< aux(145)
it(67) =< aux(145)
it(60) =< aux(152)
it(62) =< aux(152)
it(63) =< aux(152)
it(64) =< aux(152)
it(65) =< aux(152)
it(66) =< aux(152)
it(67) =< aux(152)
it(60) =< aux(153)
it(62) =< aux(153)
it(63) =< aux(153)
it(64) =< aux(153)
it(65) =< aux(153)
it(66) =< aux(153)
it(67) =< aux(153)
it(63) =< aux(154)
it(66) =< aux(154)
it(63) =< aux(155)
it(66) =< aux(155)
aux(58) =< aux(173)+1
s(68) =< s(66)*aux(58)
s(64) =< s(62)*aux(173)

  with precondition: [E=7,F=G,F=H,F=I,A>=0,C>=A+2,F>=A+4,D>=C,B>=D+1,D>=F,2*D>=C+F+1,D+F>=A+C+5] 

* Chain [[60,61,62,63,64,65,66,67],69]: 2*it(60)+16*it(61)+6*it(62)+6*it(63)+6*it(64)+6*it(65)+6*it(66)+6*it(67)+4*s(62)+2*s(64)+4*s(66)+2*s(68)+6
  Such that:aux(127) =< -2*A+2*B-C+D
aux(145) =< -A+B-C+D
aux(126) =< -A+2*B
aux(153) =< -A-C+2*D
aux(155) =< -A/2-C/2+D
it(63) =< -A/4+D/4
aux(144) =< B
aux(152) =< D
aux(154) =< D/2
aux(174) =< -A+B
aux(175) =< -A+D
aux(176) =< -A/2+B/2
aux(177) =< -A/2+D/2
aux(178) =< -A/3+B/3
aux(179) =< -A/3+D/3
it(63) =< aux(174)
it(64) =< aux(174)
it(65) =< aux(174)
it(66) =< aux(174)
s(62) =< aux(174)
it(67) =< aux(174)
it(64) =< aux(126)
it(65) =< aux(126)
it(66) =< aux(126)
s(66) =< aux(126)
it(64) =< aux(127)
it(65) =< aux(127)
it(66) =< aux(127)
it(67) =< aux(127)
s(66) =< aux(127)
it(60) =< aux(175)
it(62) =< aux(175)
it(63) =< aux(175)
it(64) =< aux(175)
it(65) =< aux(175)
it(66) =< aux(175)
it(67) =< aux(175)
it(65) =< aux(176)
it(66) =< aux(176)
it(67) =< aux(176)
it(65) =< aux(177)
it(67) =< aux(177)
it(66) =< aux(177)
it(62) =< aux(178)
it(63) =< aux(178)
it(64) =< aux(178)
it(62) =< aux(179)
it(64) =< aux(179)
it(66) =< aux(179)
it(63) =< aux(179)
it(62) =< aux(144)
it(63) =< aux(144)
it(64) =< aux(144)
it(65) =< aux(144)
it(66) =< aux(144)
it(67) =< aux(144)
it(62) =< aux(145)
it(63) =< aux(145)
it(64) =< aux(145)
it(65) =< aux(145)
it(66) =< aux(145)
it(67) =< aux(145)
it(60) =< aux(152)
it(62) =< aux(152)
it(63) =< aux(152)
it(64) =< aux(152)
it(65) =< aux(152)
it(66) =< aux(152)
it(67) =< aux(152)
it(60) =< aux(153)
it(62) =< aux(153)
it(63) =< aux(153)
it(64) =< aux(153)
it(65) =< aux(153)
it(66) =< aux(153)
it(67) =< aux(153)
it(63) =< aux(154)
it(66) =< aux(154)
it(63) =< aux(155)
it(66) =< aux(155)
aux(58) =< aux(175)+1
s(68) =< s(66)*aux(58)
s(64) =< s(62)*aux(175)

  with precondition: [E=8,A>=0,C>=A+2,D>=C,B>=D+1,3*D>=2*C+A+5] 

* Chain [[60,61,62,63,64,65,66,67],68]: 2*it(60)+16*it(61)+6*it(62)+6*it(63)+6*it(64)+6*it(65)+6*it(66)+6*it(67)+4*s(62)+2*s(64)+4*s(66)+2*s(68)+12*s(79)+4*s(80)+6
  Such that:aux(127) =< -2*A+2*B-C+D
aux(145) =< -A+B-C+D
aux(126) =< -A+2*B
aux(132) =< -A/2+B/2
aux(136) =< -A/2+D/2
aux(138) =< -A/3+B/3
aux(142) =< -A/3+D/3
aux(144) =< B
aux(152) =< D
aux(154) =< D/2
aux(180) =< -A+B
aux(181) =< -A-C+2*D
aux(182) =< -A+D
it(63) =< aux(182)
s(79) =< aux(182)
s(80) =< s(79)*aux(182)
it(63) =< aux(180)
it(64) =< aux(180)
it(65) =< aux(180)
it(66) =< aux(180)
s(62) =< aux(180)
it(67) =< aux(180)
it(64) =< aux(126)
it(65) =< aux(126)
it(66) =< aux(126)
s(66) =< aux(126)
it(64) =< aux(127)
it(65) =< aux(127)
it(66) =< aux(127)
it(67) =< aux(127)
s(66) =< aux(127)
it(60) =< aux(182)
it(62) =< aux(182)
it(64) =< aux(182)
it(65) =< aux(182)
it(66) =< aux(182)
it(67) =< aux(182)
it(65) =< aux(132)
it(66) =< aux(132)
it(67) =< aux(132)
it(65) =< aux(136)
it(67) =< aux(136)
it(62) =< aux(138)
it(63) =< aux(138)
it(64) =< aux(138)
it(62) =< aux(180)
it(62) =< aux(142)
it(64) =< aux(142)
it(66) =< aux(142)
it(62) =< aux(144)
it(63) =< aux(144)
it(64) =< aux(144)
it(65) =< aux(144)
it(66) =< aux(144)
it(67) =< aux(144)
it(62) =< aux(145)
it(63) =< aux(145)
it(64) =< aux(145)
it(65) =< aux(145)
it(66) =< aux(145)
it(67) =< aux(145)
it(60) =< aux(152)
it(62) =< aux(152)
it(63) =< aux(152)
it(64) =< aux(152)
it(65) =< aux(152)
it(66) =< aux(152)
it(67) =< aux(152)
it(60) =< aux(181)
it(62) =< aux(181)
it(63) =< aux(181)
it(64) =< aux(181)
it(65) =< aux(181)
it(66) =< aux(181)
it(67) =< aux(181)
it(63) =< aux(154)
it(66) =< aux(154)
aux(58) =< aux(182)+1
s(68) =< s(66)*aux(58)
s(64) =< s(62)*aux(182)

  with precondition: [E=8,A>=0,C>=A+2,D>=A+4,D>=C,B>=D+1,3*D>=2*C+A+6] 

* Chain [73]: 8*s(33)+16*s(34)+4*s(35)+8
  Such that:s(31) =< 1
s(32) =< -A+D
s(33) =< s(31)
s(34) =< s(32)
s(35) =< s(34)*s(32)

  with precondition: [E=4] 

* Chain [72]: 3
  with precondition: [E=7,A+2=C,A+2=D,A+2=F,A+2=G,A+2=H,A+2=I,A>=0,B>=A+3] 

* Chain [71]: 7
  with precondition: [E=7,A+3=C,A+3=D,A+3=F,A+3=G,A+3=H,A+3=I,A>=0,B>=A+4] 

* Chain [70]: 4*s(76)+2*s(77)+7
  Such that:s(75) =< -A+D
s(76) =< s(75)
s(77) =< s(76)*s(75)

  with precondition: [E=7,C=D,C=F,C=G,C=H,C=I,A>=0,C>=A+4,B>=C+1] 

* Chain [69]: 6
  with precondition: [E=8,A+3=C,A+3=D,A>=0,B>=A+4] 

* Chain [68]: 12*s(79)+4*s(80)+6
  Such that:s(78) =< -A+D
s(79) =< s(78)
s(80) =< s(79)*s(78)

  with precondition: [E=8,C=D,A>=0,C>=A+4,B>=C+1] 


#### Cost of chains of n_evalEx1bb4in___8_loop_cont(A,B,C,D,E,F):
* Chain [76]: 0
  with precondition: [A=4] 

* Chain [75]: 1
  with precondition: [A=7,B=C,B=D,B=E,B>=1] 

* Chain [74]: 0
  with precondition: [A=8] 


#### Cost of chains of n_evalEx1bb4in___11_loop_cont(A,B,C,D,E,F):
* Chain [79]: 16*s(239)+48*s(240)+16*s(241)+6*s(242)+16*s(243)+4*s(244)+6*s(245)+6*s(246)+6*s(247)+4*s(248)+6*s(249)+8*s(250)+4*s(251)+6*s(252)+4*s(254)+2*s(255)+96*s(256)+6*s(262)+6*s(274)+6*s(275)+6*s(276)+20*s(277)+6*s(278)+6*s(281)+10*s(284)+6*s(286)+6*s(301)+12*s(304)+12*s(305)+12*s(306)+12*s(308)+8*s(309)+4*s(310)+12*s(311)+4*s(313)+6*s(322)+6*s(336)+12*s(339)+12*s(340)+6*s(341)+12*s(343)+8*s(344)+4*s(345)+6*s(346)+4*s(348)+6*s(350)+6*s(351)+8
  Such that:s(237) =< 1
s(227) =< -2*B+C+E
s(289) =< -2*B+2*C
s(323) =< -2*B+2*C-D+E
s(325) =< -B+C-D+E
s(327) =< -B-D+2*E
s(321) =< -B/2-D/2+E
aux(216) =< -3*B+2*C+E
aux(217) =< -B+C
aux(218) =< -B+2*C
aux(219) =< -B+E
aux(220) =< -B/2+C/2
aux(221) =< -B/2+E/2
aux(222) =< -B/3+C/3
aux(223) =< -B/3+E/3
aux(224) =< -B/4+E/4
aux(225) =< C
aux(226) =< E
aux(227) =< E/2
s(262) =< aux(224)
s(286) =< aux(224)
s(322) =< aux(224)
s(239) =< s(237)
s(240) =< aux(219)
s(241) =< s(240)*aux(219)
s(242) =< aux(219)
s(243) =< aux(216)
s(244) =< s(243)*aux(216)
s(242) =< aux(217)
s(245) =< aux(217)
s(246) =< aux(217)
s(247) =< aux(217)
s(248) =< aux(217)
s(242) =< s(227)
s(245) =< s(227)
s(246) =< s(227)
s(247) =< s(227)
s(249) =< s(227)
s(248) =< s(227)
s(245) =< aux(218)
s(246) =< aux(218)
s(247) =< aux(218)
s(250) =< aux(218)
s(245) =< aux(216)
s(246) =< aux(216)
s(247) =< aux(216)
s(249) =< aux(216)
s(250) =< aux(216)
s(251) =< aux(219)
s(252) =< aux(219)
s(245) =< aux(219)
s(246) =< aux(219)
s(247) =< aux(219)
s(249) =< aux(219)
s(246) =< aux(220)
s(247) =< aux(220)
s(249) =< aux(220)
s(246) =< aux(221)
s(249) =< aux(221)
s(252) =< aux(222)
s(242) =< aux(222)
s(245) =< aux(222)
s(252) =< s(227)
s(252) =< aux(223)
s(245) =< aux(223)
s(247) =< aux(223)
s(252) =< aux(225)
s(242) =< aux(225)
s(245) =< aux(225)
s(246) =< aux(225)
s(247) =< aux(225)
s(249) =< aux(225)
s(252) =< aux(217)
s(249) =< aux(217)
s(251) =< aux(226)
s(252) =< aux(226)
s(242) =< aux(226)
s(245) =< aux(226)
s(246) =< aux(226)
s(247) =< aux(226)
s(249) =< aux(226)
s(251) =< aux(216)
s(252) =< aux(216)
s(242) =< aux(216)
s(242) =< aux(227)
s(247) =< aux(227)
s(253) =< aux(219)+1
s(254) =< s(250)*s(253)
s(255) =< s(248)*aux(219)
s(301) =< aux(219)
s(301) =< aux(217)
s(304) =< aux(217)
s(305) =< aux(217)
s(306) =< aux(217)
s(277) =< aux(217)
s(308) =< aux(217)
s(304) =< aux(218)
s(305) =< aux(218)
s(306) =< aux(218)
s(309) =< aux(218)
s(304) =< s(289)
s(305) =< s(289)
s(306) =< s(289)
s(308) =< s(289)
s(309) =< s(289)
s(310) =< aux(219)
s(311) =< aux(219)
s(304) =< aux(219)
s(305) =< aux(219)
s(306) =< aux(219)
s(308) =< aux(219)
s(305) =< aux(220)
s(306) =< aux(220)
s(308) =< aux(220)
s(305) =< aux(221)
s(308) =< aux(221)
s(311) =< aux(222)
s(301) =< aux(222)
s(304) =< aux(222)
s(311) =< aux(217)
s(311) =< aux(223)
s(304) =< aux(223)
s(306) =< aux(223)
s(311) =< aux(225)
s(301) =< aux(225)
s(304) =< aux(225)
s(305) =< aux(225)
s(306) =< aux(225)
s(308) =< aux(225)
s(310) =< aux(226)
s(311) =< aux(226)
s(301) =< aux(226)
s(304) =< aux(226)
s(305) =< aux(226)
s(306) =< aux(226)
s(308) =< aux(226)
s(301) =< aux(227)
s(306) =< aux(227)
s(301) =< aux(221)
s(306) =< aux(221)
s(313) =< s(309)*s(253)
s(284) =< s(277)*aux(219)
s(286) =< aux(217)
s(286) =< aux(219)
s(286) =< aux(222)
s(286) =< aux(223)
s(286) =< aux(225)
s(286) =< aux(226)
s(286) =< aux(227)
s(286) =< aux(221)
s(336) =< aux(219)
s(336) =< aux(217)
s(339) =< aux(217)
s(340) =< aux(217)
s(341) =< aux(217)
s(343) =< aux(217)
s(339) =< aux(218)
s(340) =< aux(218)
s(341) =< aux(218)
s(344) =< aux(218)
s(339) =< s(323)
s(340) =< s(323)
s(341) =< s(323)
s(343) =< s(323)
s(344) =< s(323)
s(345) =< aux(219)
s(346) =< aux(219)
s(339) =< aux(219)
s(340) =< aux(219)
s(341) =< aux(219)
s(343) =< aux(219)
s(340) =< aux(220)
s(341) =< aux(220)
s(343) =< aux(220)
s(340) =< aux(221)
s(343) =< aux(221)
s(346) =< aux(222)
s(336) =< aux(222)
s(339) =< aux(222)
s(346) =< aux(217)
s(346) =< aux(223)
s(339) =< aux(223)
s(341) =< aux(223)
s(346) =< aux(225)
s(336) =< aux(225)
s(339) =< aux(225)
s(340) =< aux(225)
s(341) =< aux(225)
s(343) =< aux(225)
s(346) =< s(325)
s(336) =< s(325)
s(339) =< s(325)
s(340) =< s(325)
s(341) =< s(325)
s(343) =< s(325)
s(345) =< aux(226)
s(346) =< aux(226)
s(336) =< aux(226)
s(339) =< aux(226)
s(340) =< aux(226)
s(341) =< aux(226)
s(343) =< aux(226)
s(345) =< s(327)
s(346) =< s(327)
s(336) =< s(327)
s(339) =< s(327)
s(340) =< s(327)
s(341) =< s(327)
s(343) =< s(327)
s(336) =< aux(227)
s(341) =< aux(227)
s(348) =< s(344)*s(253)
s(322) =< aux(217)
s(350) =< aux(217)
s(350) =< aux(218)
s(350) =< s(323)
s(351) =< aux(219)
s(322) =< aux(219)
s(350) =< aux(219)
s(350) =< aux(220)
s(350) =< aux(221)
s(351) =< aux(222)
s(322) =< aux(222)
s(351) =< aux(223)
s(350) =< aux(223)
s(322) =< aux(223)
s(351) =< aux(225)
s(322) =< aux(225)
s(350) =< aux(225)
s(351) =< s(325)
s(322) =< s(325)
s(350) =< s(325)
s(351) =< aux(226)
s(322) =< aux(226)
s(350) =< aux(226)
s(351) =< s(327)
s(322) =< s(327)
s(350) =< s(327)
s(322) =< aux(227)
s(350) =< aux(227)
s(322) =< s(321)
s(350) =< s(321)
s(262) =< aux(217)
s(274) =< aux(217)
s(275) =< aux(217)
s(276) =< aux(217)
s(278) =< aux(217)
s(274) =< aux(218)
s(275) =< aux(218)
s(276) =< aux(218)
s(274) =< aux(216)
s(275) =< aux(216)
s(276) =< aux(216)
s(278) =< aux(216)
s(281) =< aux(219)
s(262) =< aux(219)
s(274) =< aux(219)
s(275) =< aux(219)
s(276) =< aux(219)
s(278) =< aux(219)
s(275) =< aux(220)
s(276) =< aux(220)
s(278) =< aux(220)
s(275) =< aux(221)
s(278) =< aux(221)
s(276) =< aux(221)
s(281) =< aux(222)
s(262) =< aux(222)
s(274) =< aux(222)
s(281) =< aux(223)
s(274) =< aux(223)
s(276) =< aux(223)
s(262) =< aux(223)
s(281) =< aux(225)
s(262) =< aux(225)
s(274) =< aux(225)
s(275) =< aux(225)
s(276) =< aux(225)
s(278) =< aux(225)
s(281) =< aux(217)
s(281) =< aux(226)
s(262) =< aux(226)
s(274) =< aux(226)
s(275) =< aux(226)
s(276) =< aux(226)
s(278) =< aux(226)
s(281) =< aux(216)
s(262) =< aux(216)
s(262) =< aux(227)
s(276) =< aux(227)

  with precondition: [A=2] 

* Chain [78]: 1
  with precondition: [A=3,B=C,B=D,B=E,B>=1] 

* Chain [77]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalEx1bb1in___14(A,B,C,D,E):
* Chain [83]: 698*s(353)+222*s(356)+158*s(361)+192*s(375)+36*s(377)+60*s(378)+112*s(379)+28*s(380)+60*s(381)+84*s(382)+28*s(384)+28*s(386)+14*s(387)+14*s(390)+14*s(391)+960*s(392)+36*s(396)+168*s(408)+318*s(409)+132*s(410)+54*s(412)+124*s(413)+54*s(414)+48*s(415)+62*s(417)+30*s(421)+30*s(436)+180*s(439)+204*s(440)+102*s(441)+70*s(444)+84*s(446)+32*s(448)+42*s(455)+148*s(478)+4*s(757)+2*s(759)+12*s(776)+16*s(777)+4*s(778)+24*s(779)+4*s(782)+4*s(784)+2*s(785)+2*s(788)+2*s(789)+6*s(796)+2*s(798)+6*s(801)+12*s(813)+6*s(815)+20*s(816)+12*s(817)+4*s(818)+2*s(822)+10*s(823)+12*s(829)+24*s(847)+12*s(849)+24*s(851)+8*s(852)+12*s(854)+4*s(856)+12*s(866)+24*s(883)+12*s(885)+12*s(887)+8*s(888)+4*s(892)+48*s(921)+4*s(942)+96*s(957)+24*s(974)+4*s(1082)+34*s(1431)+4*s(1469)+8*s(1503)+4*s(1514)+15
  Such that:aux(282) =< B+1
aux(283) =< 2*B+1
s(760) =< 3*B+2
aux(287) =< 3*D+2
aux(360) =< 1
aux(361) =< 4
aux(362) =< B
aux(363) =< 2*B
aux(364) =< 3*B
aux(365) =< B/2
aux(366) =< B/3
aux(367) =< D
aux(368) =< D+1
aux(369) =< 2*D
aux(370) =< 2*D+1
aux(371) =< 3*D
aux(372) =< D/2
aux(373) =< D/3
aux(374) =< D/4
s(1082) =< aux(361)
s(353) =< aux(367)
s(396) =< aux(374)
s(421) =< aux(374)
s(455) =< aux(374)
s(375) =< aux(360)
s(1469) =< s(375)*aux(360)
s(361) =< aux(362)
s(377) =< s(361)*aux(362)
s(378) =< aux(362)
s(379) =< aux(364)
s(380) =< s(379)*aux(364)
s(381) =< aux(362)
s(382) =< aux(362)
s(384) =< aux(362)
s(378) =< aux(363)
s(381) =< aux(363)
s(382) =< aux(363)
s(384) =< aux(363)
s(386) =< aux(363)
s(381) =< aux(364)
s(382) =< aux(364)
s(378) =< aux(364)
s(386) =< aux(364)
s(387) =< aux(362)
s(382) =< aux(365)
s(378) =< aux(365)
s(381) =< aux(366)
s(378) =< aux(366)
s(387) =< aux(364)
s(389) =< aux(362)+1
s(390) =< s(386)*s(389)
s(391) =< s(384)*aux(362)
s(757) =< aux(282)
s(776) =< aux(362)
s(777) =< s(760)
s(778) =< s(777)*s(760)
s(776) =< aux(282)
s(779) =< aux(282)
s(782) =< aux(282)
s(776) =< aux(283)
s(779) =< aux(283)
s(782) =< aux(283)
s(784) =< aux(283)
s(779) =< s(760)
s(776) =< s(760)
s(784) =< s(760)
s(785) =< aux(362)
s(779) =< aux(362)
s(785) =< s(760)
s(776) =< aux(365)
s(788) =< s(784)*s(389)
s(789) =< s(782)*aux(362)
s(757) =< aux(362)
s(759) =< s(757)*aux(362)
s(921) =< aux(362)
s(921) =< aux(363)
s(921) =< aux(364)
s(356) =< s(353)*aux(367)
s(410) =< aux(367)
s(1431) =< aux(371)
s(1503) =< s(1431)*aux(371)
s(408) =< aux(367)
s(409) =< aux(367)
s(478) =< aux(367)
s(410) =< aux(369)
s(408) =< aux(369)
s(409) =< aux(369)
s(478) =< aux(369)
s(413) =< aux(369)
s(408) =< aux(371)
s(409) =< aux(371)
s(410) =< aux(371)
s(413) =< aux(371)
s(414) =< aux(367)
s(409) =< aux(372)
s(410) =< aux(372)
s(408) =< aux(373)
s(410) =< aux(373)
s(414) =< aux(371)
s(416) =< aux(367)+1
s(417) =< s(413)*s(416)
s(1514) =< s(478)*aux(367)
s(436) =< aux(367)
s(439) =< aux(367)
s(440) =< aux(367)
s(441) =< aux(367)
s(439) =< aux(369)
s(440) =< aux(369)
s(441) =< aux(369)
s(444) =< aux(369)
s(446) =< aux(367)
s(440) =< aux(372)
s(441) =< aux(372)
s(446) =< aux(373)
s(436) =< aux(373)
s(439) =< aux(373)
s(441) =< aux(373)
s(436) =< aux(372)
s(448) =< s(444)*s(416)
s(421) =< aux(367)
s(421) =< aux(373)
s(421) =< aux(372)
s(455) =< aux(367)
s(455) =< aux(373)
s(455) =< aux(369)
s(455) =< aux(372)
s(396) =< aux(367)
s(412) =< aux(367)
s(412) =< aux(371)
s(415) =< aux(367)
s(412) =< aux(372)
s(415) =< aux(373)
s(396) =< aux(373)
s(415) =< aux(371)
s(396) =< aux(371)
s(396) =< aux(372)
s(829) =< aux(367)
s(829) =< aux(368)
s(847) =< aux(368)
s(849) =< aux(368)
s(816) =< aux(368)
s(851) =< aux(368)
s(847) =< aux(370)
s(849) =< aux(370)
s(852) =< aux(370)
s(847) =< aux(369)
s(849) =< aux(369)
s(851) =< aux(369)
s(852) =< aux(369)
s(854) =< aux(367)
s(847) =< aux(367)
s(849) =< aux(367)
s(851) =< aux(367)
s(854) =< aux(368)
s(829) =< aux(372)
s(849) =< aux(372)
s(856) =< s(852)*s(416)
s(823) =< s(816)*aux(367)
s(957) =< aux(367)
s(957) =< aux(369)
s(957) =< aux(371)
s(942) =< s(414)*aux(367)
s(801) =< aux(367)
s(796) =< aux(287)
s(801) =< aux(368)
s(813) =< aux(368)
s(815) =< aux(368)
s(817) =< aux(368)
s(813) =< aux(370)
s(815) =< aux(370)
s(818) =< aux(370)
s(813) =< aux(287)
s(815) =< aux(287)
s(817) =< aux(287)
s(818) =< aux(287)
s(796) =< aux(367)
s(817) =< aux(367)
s(813) =< aux(367)
s(815) =< aux(367)
s(801) =< aux(287)
s(801) =< aux(372)
s(815) =< aux(372)
s(822) =< s(818)*s(416)
s(798) =< s(796)*aux(367)
s(866) =< aux(367)
s(866) =< aux(368)
s(883) =< aux(368)
s(885) =< aux(368)
s(887) =< aux(368)
s(883) =< aux(370)
s(885) =< aux(370)
s(888) =< aux(370)
s(883) =< aux(371)
s(885) =< aux(371)
s(887) =< aux(371)
s(888) =< aux(371)
s(883) =< aux(367)
s(885) =< aux(367)
s(887) =< aux(367)
s(866) =< aux(369)
s(883) =< aux(369)
s(885) =< aux(369)
s(887) =< aux(369)
s(866) =< aux(372)
s(885) =< aux(372)
s(892) =< s(888)*s(416)
s(974) =< aux(367)
s(974) =< aux(372)

  with precondition: [A=0,C=1,D=B,D>=2] 

* Chain [82]: 13
  with precondition: [A=0,B=3,C=1,D=3] 

* Chain [81]: 19
  with precondition: [A=0,B=4,C=1,D=4] 

* Chain [80]: 43
  with precondition: [A=0,B=5,C=1,D=5] 


#### Cost of chains of n_evalEx1bb4in___16(A,B,C,D,E):
* Chain [86]: 2
  with precondition: [A=0,B=1,C=1,D=1] 

* Chain [85]: 4*s(1740)+856*s(1741)+36*s(1742)+30*s(1743)+42*s(1744)+192*s(1745)+4*s(1746)+258*s(1748)+192*s(1749)+146*s(1750)+36*s(1751)+228*s(1752)+402*s(1753)+176*s(1754)+152*s(1755)+68*s(1756)+76*s(1758)+18*s(1759)+16*s(1760)+18*s(1761)+16*s(1762)+4*s(1763)+36*s(1764)+4*s(1765)+8*s(1766)+8*s(1767)+4*s(1768)+2*s(1769)+2*s(1770)+144*s(1771)+30*s(1784)+180*s(1785)+204*s(1786)+102*s(1787)+70*s(1788)+84*s(1789)+32*s(1790)+54*s(1791)+48*s(1792)+12*s(1793)+24*s(1794)+12*s(1795)+20*s(1796)+24*s(1797)+8*s(1798)+4*s(1800)+10*s(1801)+4*s(1803)+6*s(1804)+12*s(1808)+2*s(1811)+12*s(1812)+24*s(1813)+12*s(1814)+12*s(1815)+8*s(1816)+4*s(1817)+24*s(1818)+960*s(1819)+20
  Such that:s(1721) =< 1
s(1722) =< 4
aux(379) =< D
aux(380) =< D+1
aux(381) =< 2*D
aux(382) =< 2*D+1
aux(383) =< 3*D
aux(384) =< 3*D+2
aux(385) =< D/2
aux(386) =< D/3
s(1739) =< D/4
s(1740) =< s(1722)
s(1741) =< aux(379)
s(1742) =< s(1739)
s(1743) =< s(1739)
s(1744) =< s(1739)
s(1745) =< s(1721)
s(1746) =< s(1745)*s(1721)
s(1748) =< s(1741)*aux(379)
s(1749) =< aux(379)
s(1750) =< aux(383)
s(1751) =< s(1750)*aux(383)
s(1752) =< aux(379)
s(1753) =< aux(379)
s(1754) =< aux(379)
s(1749) =< aux(381)
s(1752) =< aux(381)
s(1753) =< aux(381)
s(1754) =< aux(381)
s(1755) =< aux(381)
s(1752) =< aux(383)
s(1753) =< aux(383)
s(1749) =< aux(383)
s(1755) =< aux(383)
s(1756) =< aux(379)
s(1753) =< aux(385)
s(1749) =< aux(385)
s(1752) =< aux(386)
s(1749) =< aux(386)
s(1756) =< aux(383)
s(1757) =< aux(379)+1
s(1758) =< s(1755)*s(1757)
s(1759) =< s(1754)*aux(379)
s(1760) =< aux(380)
s(1761) =< aux(379)
s(1762) =< aux(384)
s(1763) =< s(1762)*aux(384)
s(1761) =< aux(380)
s(1764) =< aux(380)
s(1765) =< aux(380)
s(1761) =< aux(382)
s(1764) =< aux(382)
s(1765) =< aux(382)
s(1766) =< aux(382)
s(1764) =< aux(384)
s(1761) =< aux(384)
s(1766) =< aux(384)
s(1767) =< aux(379)
s(1764) =< aux(379)
s(1767) =< aux(384)
s(1761) =< aux(385)
s(1768) =< s(1766)*s(1757)
s(1769) =< s(1765)*aux(379)
s(1760) =< aux(379)
s(1770) =< s(1760)*aux(379)
s(1771) =< aux(379)
s(1771) =< aux(381)
s(1771) =< aux(383)
s(1784) =< aux(379)
s(1785) =< aux(379)
s(1786) =< aux(379)
s(1787) =< aux(379)
s(1785) =< aux(381)
s(1786) =< aux(381)
s(1787) =< aux(381)
s(1788) =< aux(381)
s(1789) =< aux(379)
s(1786) =< aux(385)
s(1787) =< aux(385)
s(1789) =< aux(386)
s(1784) =< aux(386)
s(1785) =< aux(386)
s(1787) =< aux(386)
s(1784) =< aux(385)
s(1790) =< s(1788)*s(1757)
s(1743) =< aux(379)
s(1743) =< aux(386)
s(1743) =< aux(385)
s(1744) =< aux(379)
s(1744) =< aux(386)
s(1744) =< aux(381)
s(1744) =< aux(385)
s(1742) =< aux(379)
s(1791) =< aux(379)
s(1791) =< aux(383)
s(1792) =< aux(379)
s(1791) =< aux(385)
s(1792) =< aux(386)
s(1742) =< aux(386)
s(1792) =< aux(383)
s(1742) =< aux(383)
s(1742) =< aux(385)
s(1793) =< aux(379)
s(1793) =< aux(380)
s(1794) =< aux(380)
s(1795) =< aux(380)
s(1796) =< aux(380)
s(1797) =< aux(380)
s(1794) =< aux(382)
s(1795) =< aux(382)
s(1798) =< aux(382)
s(1794) =< aux(381)
s(1795) =< aux(381)
s(1797) =< aux(381)
s(1798) =< aux(381)
s(1794) =< aux(379)
s(1795) =< aux(379)
s(1797) =< aux(379)
s(1793) =< aux(385)
s(1795) =< aux(385)
s(1800) =< s(1798)*s(1757)
s(1801) =< s(1796)*aux(379)
s(1803) =< s(1756)*aux(379)
s(1804) =< aux(379)
s(1804) =< aux(380)
s(1808) =< aux(380)
s(1808) =< aux(384)
s(1808) =< aux(379)
s(1804) =< aux(384)
s(1804) =< aux(385)
s(1811) =< s(1767)*aux(379)
s(1812) =< aux(379)
s(1812) =< aux(380)
s(1813) =< aux(380)
s(1814) =< aux(380)
s(1815) =< aux(380)
s(1813) =< aux(382)
s(1814) =< aux(382)
s(1816) =< aux(382)
s(1813) =< aux(383)
s(1814) =< aux(383)
s(1815) =< aux(383)
s(1816) =< aux(383)
s(1813) =< aux(379)
s(1814) =< aux(379)
s(1815) =< aux(379)
s(1812) =< aux(381)
s(1813) =< aux(381)
s(1814) =< aux(381)
s(1815) =< aux(381)
s(1812) =< aux(385)
s(1814) =< aux(385)
s(1817) =< s(1816)*s(1757)
s(1818) =< aux(379)
s(1818) =< aux(385)

  with precondition: [A=0,C=1,D=B,D>=2] 

* Chain [84]: 44
  with precondition: [A=0,B=5,C=1,D=5] 


#### Cost of chains of n_evalEx1bb6in___17(A,B,C,D,E):
* Chain [89]: 3
  with precondition: [A=0,B=1] 

* Chain [88]: 1
  with precondition: [A=0,0>=B] 

* Chain [87]: 4*s(1902)+856*s(1903)+36*s(1904)+30*s(1905)+42*s(1906)+192*s(1907)+4*s(1908)+258*s(1909)+192*s(1910)+146*s(1911)+36*s(1912)+228*s(1913)+402*s(1914)+176*s(1915)+152*s(1916)+68*s(1917)+76*s(1919)+18*s(1920)+16*s(1921)+18*s(1922)+16*s(1923)+4*s(1924)+36*s(1925)+4*s(1926)+8*s(1927)+8*s(1928)+4*s(1929)+2*s(1930)+2*s(1931)+144*s(1932)+30*s(1933)+180*s(1934)+204*s(1935)+102*s(1936)+70*s(1937)+84*s(1938)+32*s(1939)+54*s(1940)+48*s(1941)+12*s(1942)+24*s(1943)+12*s(1944)+20*s(1945)+24*s(1946)+8*s(1947)+4*s(1948)+10*s(1949)+4*s(1950)+6*s(1951)+12*s(1952)+2*s(1953)+12*s(1954)+24*s(1955)+12*s(1956)+12*s(1957)+8*s(1958)+4*s(1959)+24*s(1960)+960*s(1961)+45
  Such that:s(1891) =< 1
s(1892) =< 4
s(1893) =< B
s(1894) =< B+1
s(1895) =< 2*B
s(1896) =< 2*B+1
s(1897) =< 3*B
s(1898) =< 3*B+2
s(1899) =< B/2
s(1900) =< B/3
s(1901) =< B/4
s(1902) =< s(1892)
s(1903) =< s(1893)
s(1904) =< s(1901)
s(1905) =< s(1901)
s(1906) =< s(1901)
s(1907) =< s(1891)
s(1908) =< s(1907)*s(1891)
s(1909) =< s(1903)*s(1893)
s(1910) =< s(1893)
s(1911) =< s(1897)
s(1912) =< s(1911)*s(1897)
s(1913) =< s(1893)
s(1914) =< s(1893)
s(1915) =< s(1893)
s(1910) =< s(1895)
s(1913) =< s(1895)
s(1914) =< s(1895)
s(1915) =< s(1895)
s(1916) =< s(1895)
s(1913) =< s(1897)
s(1914) =< s(1897)
s(1910) =< s(1897)
s(1916) =< s(1897)
s(1917) =< s(1893)
s(1914) =< s(1899)
s(1910) =< s(1899)
s(1913) =< s(1900)
s(1910) =< s(1900)
s(1917) =< s(1897)
s(1918) =< s(1893)+1
s(1919) =< s(1916)*s(1918)
s(1920) =< s(1915)*s(1893)
s(1921) =< s(1894)
s(1922) =< s(1893)
s(1923) =< s(1898)
s(1924) =< s(1923)*s(1898)
s(1922) =< s(1894)
s(1925) =< s(1894)
s(1926) =< s(1894)
s(1922) =< s(1896)
s(1925) =< s(1896)
s(1926) =< s(1896)
s(1927) =< s(1896)
s(1925) =< s(1898)
s(1922) =< s(1898)
s(1927) =< s(1898)
s(1928) =< s(1893)
s(1925) =< s(1893)
s(1928) =< s(1898)
s(1922) =< s(1899)
s(1929) =< s(1927)*s(1918)
s(1930) =< s(1926)*s(1893)
s(1921) =< s(1893)
s(1931) =< s(1921)*s(1893)
s(1932) =< s(1893)
s(1932) =< s(1895)
s(1932) =< s(1897)
s(1933) =< s(1893)
s(1934) =< s(1893)
s(1935) =< s(1893)
s(1936) =< s(1893)
s(1934) =< s(1895)
s(1935) =< s(1895)
s(1936) =< s(1895)
s(1937) =< s(1895)
s(1938) =< s(1893)
s(1935) =< s(1899)
s(1936) =< s(1899)
s(1938) =< s(1900)
s(1933) =< s(1900)
s(1934) =< s(1900)
s(1936) =< s(1900)
s(1933) =< s(1899)
s(1939) =< s(1937)*s(1918)
s(1905) =< s(1893)
s(1905) =< s(1900)
s(1905) =< s(1899)
s(1906) =< s(1893)
s(1906) =< s(1900)
s(1906) =< s(1895)
s(1906) =< s(1899)
s(1904) =< s(1893)
s(1940) =< s(1893)
s(1940) =< s(1897)
s(1941) =< s(1893)
s(1940) =< s(1899)
s(1941) =< s(1900)
s(1904) =< s(1900)
s(1941) =< s(1897)
s(1904) =< s(1897)
s(1904) =< s(1899)
s(1942) =< s(1893)
s(1942) =< s(1894)
s(1943) =< s(1894)
s(1944) =< s(1894)
s(1945) =< s(1894)
s(1946) =< s(1894)
s(1943) =< s(1896)
s(1944) =< s(1896)
s(1947) =< s(1896)
s(1943) =< s(1895)
s(1944) =< s(1895)
s(1946) =< s(1895)
s(1947) =< s(1895)
s(1943) =< s(1893)
s(1944) =< s(1893)
s(1946) =< s(1893)
s(1942) =< s(1899)
s(1944) =< s(1899)
s(1948) =< s(1947)*s(1918)
s(1949) =< s(1945)*s(1893)
s(1950) =< s(1917)*s(1893)
s(1951) =< s(1893)
s(1951) =< s(1894)
s(1952) =< s(1894)
s(1952) =< s(1898)
s(1952) =< s(1893)
s(1951) =< s(1898)
s(1951) =< s(1899)
s(1953) =< s(1928)*s(1893)
s(1954) =< s(1893)
s(1954) =< s(1894)
s(1955) =< s(1894)
s(1956) =< s(1894)
s(1957) =< s(1894)
s(1955) =< s(1896)
s(1956) =< s(1896)
s(1958) =< s(1896)
s(1955) =< s(1897)
s(1956) =< s(1897)
s(1957) =< s(1897)
s(1958) =< s(1897)
s(1955) =< s(1893)
s(1956) =< s(1893)
s(1957) =< s(1893)
s(1954) =< s(1895)
s(1955) =< s(1895)
s(1956) =< s(1895)
s(1957) =< s(1895)
s(1954) =< s(1899)
s(1956) =< s(1899)
s(1959) =< s(1958)*s(1918)
s(1960) =< s(1893)
s(1960) =< s(1899)

  with precondition: [A=0,B>=2] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [92]: 5
  with precondition: [A=1] 

* Chain [91]: 3
  with precondition: [0>=A] 

* Chain [90]: 4*s(1973)+856*s(1974)+36*s(1975)+30*s(1976)+42*s(1977)+192*s(1978)+4*s(1979)+258*s(1980)+192*s(1981)+146*s(1982)+36*s(1983)+228*s(1984)+402*s(1985)+176*s(1986)+152*s(1987)+68*s(1988)+76*s(1990)+18*s(1991)+16*s(1992)+18*s(1993)+16*s(1994)+4*s(1995)+36*s(1996)+4*s(1997)+8*s(1998)+8*s(1999)+4*s(2000)+2*s(2001)+2*s(2002)+144*s(2003)+30*s(2004)+180*s(2005)+204*s(2006)+102*s(2007)+70*s(2008)+84*s(2009)+32*s(2010)+54*s(2011)+48*s(2012)+12*s(2013)+24*s(2014)+12*s(2015)+20*s(2016)+24*s(2017)+8*s(2018)+4*s(2019)+10*s(2020)+4*s(2021)+6*s(2022)+12*s(2023)+2*s(2024)+12*s(2025)+24*s(2026)+12*s(2027)+12*s(2028)+8*s(2029)+4*s(2030)+24*s(2031)+960*s(2032)+47
  Such that:s(1962) =< 1
s(1963) =< 4
s(1964) =< A
s(1965) =< A+1
s(1966) =< 2*A
s(1967) =< 2*A+1
s(1968) =< 3*A
s(1969) =< 3*A+2
s(1970) =< A/2
s(1971) =< A/3
s(1972) =< A/4
s(1973) =< s(1963)
s(1974) =< s(1964)
s(1975) =< s(1972)
s(1976) =< s(1972)
s(1977) =< s(1972)
s(1978) =< s(1962)
s(1979) =< s(1978)*s(1962)
s(1980) =< s(1974)*s(1964)
s(1981) =< s(1964)
s(1982) =< s(1968)
s(1983) =< s(1982)*s(1968)
s(1984) =< s(1964)
s(1985) =< s(1964)
s(1986) =< s(1964)
s(1981) =< s(1966)
s(1984) =< s(1966)
s(1985) =< s(1966)
s(1986) =< s(1966)
s(1987) =< s(1966)
s(1984) =< s(1968)
s(1985) =< s(1968)
s(1981) =< s(1968)
s(1987) =< s(1968)
s(1988) =< s(1964)
s(1985) =< s(1970)
s(1981) =< s(1970)
s(1984) =< s(1971)
s(1981) =< s(1971)
s(1988) =< s(1968)
s(1989) =< s(1964)+1
s(1990) =< s(1987)*s(1989)
s(1991) =< s(1986)*s(1964)
s(1992) =< s(1965)
s(1993) =< s(1964)
s(1994) =< s(1969)
s(1995) =< s(1994)*s(1969)
s(1993) =< s(1965)
s(1996) =< s(1965)
s(1997) =< s(1965)
s(1993) =< s(1967)
s(1996) =< s(1967)
s(1997) =< s(1967)
s(1998) =< s(1967)
s(1996) =< s(1969)
s(1993) =< s(1969)
s(1998) =< s(1969)
s(1999) =< s(1964)
s(1996) =< s(1964)
s(1999) =< s(1969)
s(1993) =< s(1970)
s(2000) =< s(1998)*s(1989)
s(2001) =< s(1997)*s(1964)
s(1992) =< s(1964)
s(2002) =< s(1992)*s(1964)
s(2003) =< s(1964)
s(2003) =< s(1966)
s(2003) =< s(1968)
s(2004) =< s(1964)
s(2005) =< s(1964)
s(2006) =< s(1964)
s(2007) =< s(1964)
s(2005) =< s(1966)
s(2006) =< s(1966)
s(2007) =< s(1966)
s(2008) =< s(1966)
s(2009) =< s(1964)
s(2006) =< s(1970)
s(2007) =< s(1970)
s(2009) =< s(1971)
s(2004) =< s(1971)
s(2005) =< s(1971)
s(2007) =< s(1971)
s(2004) =< s(1970)
s(2010) =< s(2008)*s(1989)
s(1976) =< s(1964)
s(1976) =< s(1971)
s(1976) =< s(1970)
s(1977) =< s(1964)
s(1977) =< s(1971)
s(1977) =< s(1966)
s(1977) =< s(1970)
s(1975) =< s(1964)
s(2011) =< s(1964)
s(2011) =< s(1968)
s(2012) =< s(1964)
s(2011) =< s(1970)
s(2012) =< s(1971)
s(1975) =< s(1971)
s(2012) =< s(1968)
s(1975) =< s(1968)
s(1975) =< s(1970)
s(2013) =< s(1964)
s(2013) =< s(1965)
s(2014) =< s(1965)
s(2015) =< s(1965)
s(2016) =< s(1965)
s(2017) =< s(1965)
s(2014) =< s(1967)
s(2015) =< s(1967)
s(2018) =< s(1967)
s(2014) =< s(1966)
s(2015) =< s(1966)
s(2017) =< s(1966)
s(2018) =< s(1966)
s(2014) =< s(1964)
s(2015) =< s(1964)
s(2017) =< s(1964)
s(2013) =< s(1970)
s(2015) =< s(1970)
s(2019) =< s(2018)*s(1989)
s(2020) =< s(2016)*s(1964)
s(2021) =< s(1988)*s(1964)
s(2022) =< s(1964)
s(2022) =< s(1965)
s(2023) =< s(1965)
s(2023) =< s(1969)
s(2023) =< s(1964)
s(2022) =< s(1969)
s(2022) =< s(1970)
s(2024) =< s(1999)*s(1964)
s(2025) =< s(1964)
s(2025) =< s(1965)
s(2026) =< s(1965)
s(2027) =< s(1965)
s(2028) =< s(1965)
s(2026) =< s(1967)
s(2027) =< s(1967)
s(2029) =< s(1967)
s(2026) =< s(1968)
s(2027) =< s(1968)
s(2028) =< s(1968)
s(2029) =< s(1968)
s(2026) =< s(1964)
s(2027) =< s(1964)
s(2028) =< s(1964)
s(2025) =< s(1966)
s(2026) =< s(1966)
s(2027) =< s(1966)
s(2028) =< s(1966)
s(2025) =< s(1970)
s(2027) =< s(1970)
s(2030) =< s(2029)*s(1989)
s(2031) =< s(1964)
s(2031) =< s(1970)

  with precondition: [A>=2] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [92] with precondition: [A=1] 
    - Upper bound: 5 
    - Complexity: constant 
* Chain [91] with precondition: [0>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [90] with precondition: [A>=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of pyRinit(A,B,C,D,E): inf 
Asymptotic class: infinity 
* Total analysis performed in 4835 ms.


-- stats
realtime 0:05.77
usertime 5.26
systime 0.04

