WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb2in___2/7,n_evalfbb3in___1/7,n_evalfbb5in___6/7,n_evalfbb6in___3/7]
1. recursive  : [n_evalfbb2in___7/7,n_evalfbb3in___5/7,n_evalfbb5in___6_loop_cont/8]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalfstop___10/4]
4. non_recursive  : [n_evalfbb5in___4/4]
5. non_recursive  : [n_evalfbb2in___7_loop_cont/5]
6. non_recursive  : [n_evalfbb3in___8/4]
7. non_recursive  : [n_evalfbb2in___9/4]
8. non_recursive  : [n_evalfbb6in___11/4]
9. non_recursive  : [n_evalfbb5in___12/4]
10. non_recursive  : [n_evalfstart/4]
11. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb5in___6/7
1. SCC is partially evaluated into n_evalfbb2in___7/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_evalfbb2in___7_loop_cont/5
6. SCC is partially evaluated into n_evalfbb3in___8/4
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into n_evalfbb6in___11/4
9. SCC is partially evaluated into n_evalfbb5in___12/4
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb5in___6/7 
* CE 14 is refined into CE [24] 
* CE 12 is refined into CE [25] 
* CE 13 is refined into CE [26] 
* CE 11 is refined into CE [27] 
* CE 10 is refined into CE [28] 


### Cost equations --> "Loop" of n_evalfbb5in___6/7 
* CEs [28] --> Loop 18 
* CEs [24] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [26] --> Loop 21 
* CEs [27] --> Loop 22 

### Ranking functions of CR n_evalfbb5in___6(A,B,C,D,E,F,G) 
* RF of phase [18]: [-A+B,B-C-1]

#### Partial ranking functions of CR n_evalfbb5in___6(A,B,C,D,E,F,G) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    -A+B
    B-C-1


### Specialization of cost equations n_evalfbb2in___7/7 
* CE 22 is refined into CE [29] 
* CE 18 is refined into CE [30] 
* CE 23 is refined into CE [31] 
* CE 19 is refined into CE [32,33] 
* CE 20 is refined into CE [34,35] 
* CE 21 is refined into CE [36] 


### Cost equations --> "Loop" of n_evalfbb2in___7/7 
* CEs [35] --> Loop 23 
* CEs [36] --> Loop 24 
* CEs [34] --> Loop 25 
* CEs [29] --> Loop 26 
* CEs [30,31] --> Loop 27 
* CEs [32] --> Loop 28 
* CEs [33] --> Loop 29 

### Ranking functions of CR n_evalfbb2in___7(A,B,C,D,E,F,G) 
* RF of phase [23,24,25]: [B-C]

#### Partial ranking functions of CR n_evalfbb2in___7(A,B,C,D,E,F,G) 
* Partial RF of phase [23,24,25]:
  - RF of loop [23:1]:
    -A/3+B/3-1
    B/3-C/3-2/3
  - RF of loop [24:1]:
    B-C
  - RF of loop [25:1]:
    -A/2+B/2-1
    B/2-C/2-1/2


### Specialization of cost equations n_evalfbb2in___7_loop_cont/5 
* CE 15 is refined into CE [37] 
* CE 16 is refined into CE [38] 
* CE 17 is refined into CE [39] 


### Cost equations --> "Loop" of n_evalfbb2in___7_loop_cont/5 
* CEs [37] --> Loop 30 
* CEs [38] --> Loop 31 
* CEs [39] --> Loop 32 

### Ranking functions of CR n_evalfbb2in___7_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb2in___7_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalfbb3in___8/4 
* CE 6 is refined into CE [40] 
* CE 7 is refined into CE [41,42] 
* CE 8 is refined into CE [43,44,45,46,47,48,49,50,51,52] 
* CE 9 is refined into CE [53,54,55,56,57] 


### Cost equations --> "Loop" of n_evalfbb3in___8/4 
* CEs [43] --> Loop 33 
* CEs [46,53] --> Loop 34 
* CEs [40,41,42,44,45,47,48,49,50,51,52,54,55,56,57] --> Loop 35 

### Ranking functions of CR n_evalfbb3in___8(A,B,C,D) 

#### Partial ranking functions of CR n_evalfbb3in___8(A,B,C,D) 


### Specialization of cost equations n_evalfbb6in___11/4 
* CE 4 is refined into CE [58,59] 
* CE 5 is refined into CE [60] 


### Cost equations --> "Loop" of n_evalfbb6in___11/4 
* CEs [58,59,60] --> Loop 36 

### Ranking functions of CR n_evalfbb6in___11(A,B,C,D) 

#### Partial ranking functions of CR n_evalfbb6in___11(A,B,C,D) 


### Specialization of cost equations n_evalfbb5in___12/4 
* CE 2 is refined into CE [61] 
* CE 3 is refined into CE [62] 


### Cost equations --> "Loop" of n_evalfbb5in___12/4 
* CEs [61] --> Loop 37 
* CEs [62] --> Loop 38 

### Ranking functions of CR n_evalfbb5in___12(A,B,C,D) 

#### Partial ranking functions of CR n_evalfbb5in___12(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [63,64] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [64] --> Loop 39 
* CEs [63] --> Loop 40 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb5in___6(A,B,C,D,E,F,G):
* Chain [[18],22]: 4*it(18)+4
  Such that:it(18) =< -A+G

  with precondition: [D=2,A=C+1,B=F,E+1=G,A>=1,E>=A+1,B>=E+1] 

* Chain [[18],21]: 4*it(18)+1
  Such that:it(18) =< -A+B

  with precondition: [D=3,A=C+1,A>=1,B>=A+1] 

* Chain [[18],20]: 4*it(18)+2
  Such that:it(18) =< -A+B

  with precondition: [D=3,A=C+1,A>=1,B>=A+2] 

* Chain [[18],19]: 4*it(18)+0
  Such that:it(18) =< -A+B

  with precondition: [D=4,A=C+1,A>=1,B>=A+1] 

* Chain [22]: 4
  with precondition: [D=2,C+1=A,C+1=E,B=F,C+2=G,C>=0,B>=C+2] 

* Chain [21]: 1
  with precondition: [D=3,A=B,A=C+1,A>=1] 

* Chain [20]: 2
  with precondition: [D=3,C+1=A,C>=0,B>=C+2] 

* Chain [19]: 0
  with precondition: [D=4,C+1=A,C>=0,B>=C+1] 


#### Cost of chains of n_evalfbb2in___7(A,B,C,D,E,F,G):
* Chain [[23,24,25],29]: 6*it(23)+6*it(24)+6*it(25)+3
  Such that:it(25) =< B/2-C/2
it(23) =< B/3-C/3
aux(4) =< B-C
it(23) =< aux(4)
it(24) =< aux(4)
it(25) =< aux(4)

  with precondition: [D=3,A>=0,C>=A+1,B>=C+2] 

* Chain [[23,24,25],28]: 26*it(23)+4
  Such that:aux(5) =< B-C
it(23) =< aux(5)

  with precondition: [D=3,A>=0,C>=A+1,B>=C+3] 

* Chain [[23,24,25],27]: 22*it(23)+2
  Such that:aux(6) =< B-C
it(23) =< aux(6)

  with precondition: [D=4,A>=0,C>=A+1,B>=C+1] 

* Chain [[23,24,25],26]: 6*it(23)+6*it(24)+6*it(25)+1
  Such that:it(25) =< -C/2+G/2
it(23) =< -C/3+G/3
aux(7) =< -C+G
it(23) =< aux(7)
it(24) =< aux(7)
it(25) =< aux(7)

  with precondition: [D=5,B+1=E,B=F,B=G,A>=0,C>=A+1,B>=C+1] 

* Chain [29]: 3
  with precondition: [D=3,B=C+1,A>=0,B>=A+2] 

* Chain [28]: 8*s(8)+4
  Such that:s(7) =< B-C
s(8) =< s(7)

  with precondition: [D=3,A>=0,C>=A+1,B>=C+2] 

* Chain [27]: 4*s(9)+2
  Such that:s(9) =< B-C

  with precondition: [D=4] 

* Chain [26]: 1
  with precondition: [D=5,B=C,B+1=E,B=F,B=G,A>=0,B>=A+1] 


#### Cost of chains of n_evalfbb2in___7_loop_cont(A,B,C,D,E):
* Chain [32]: 0
  with precondition: [A=3] 

* Chain [31]: 0
  with precondition: [A=4] 

* Chain [30]: 1
  with precondition: [A=5,B=C+1,B=D+1,B>=2] 


#### Cost of chains of n_evalfbb3in___8(A,B,C,D):
* Chain [35]: 272*s(21)+24*s(24)+24*s(25)+9
  Such that:aux(13) =< B
aux(14) =< B/2
aux(15) =< B/3
s(21) =< aux(13)
s(24) =< aux(14)
s(25) =< aux(15)
s(25) =< aux(13)
s(24) =< aux(13)

  with precondition: [A=0,C=0,B>=1] 

* Chain [34]: 7
  with precondition: [A=0,B=2,C=0] 

* Chain [33]: 8
  with precondition: [A=0,B=3,C=0] 


#### Cost of chains of n_evalfbb6in___11(A,B,C,D):
* Chain [36]: 272*s(68)+24*s(69)+24*s(70)+11
  Such that:s(65) =< B
s(66) =< B/2
s(67) =< B/3
s(68) =< s(65)
s(69) =< s(66)
s(70) =< s(67)
s(70) =< s(65)
s(69) =< s(65)

  with precondition: [A=0,B>=1] 


#### Cost of chains of n_evalfbb5in___12(A,B,C,D):
* Chain [38]: 1
  with precondition: [A=0,0>=B] 

* Chain [37]: 272*s(74)+24*s(75)+24*s(76)+12
  Such that:s(71) =< B
s(72) =< B/2
s(73) =< B/3
s(74) =< s(71)
s(75) =< s(72)
s(76) =< s(73)
s(76) =< s(71)
s(75) =< s(71)

  with precondition: [A=0,B>=1] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [40]: 3
  with precondition: [0>=B] 

* Chain [39]: 272*s(80)+24*s(81)+24*s(82)+14
  Such that:s(77) =< B
s(78) =< B/2
s(79) =< B/3
s(80) =< s(77)
s(81) =< s(78)
s(82) =< s(79)
s(82) =< s(77)
s(81) =< s(77)

  with precondition: [B>=1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [40] with precondition: [0>=B] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [39] with precondition: [B>=1] 
    - Upper bound: 292*B+14 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): nat(B)*272+11+nat(B/2)*24+nat(B/3)*24+3 
Asymptotic class: n 
* Total analysis performed in 338 ms.


-- stats
realtime 0:00.66
usertime 0.36
systime 0.01

