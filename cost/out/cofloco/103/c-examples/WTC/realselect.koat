WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalrealselectbb1in___1/7,n_evalrealselectbb1in___4/7,n_evalrealselectbb4in___2/7,n_evalrealselectbb4in___5/7,n_evalrealselectbb6in___3/7]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_evalrealselectstop___7/4]
3. non_recursive  : [n_evalrealselectbb4in___5_loop_cont/5]
4. non_recursive  : [n_evalrealselectbb1in___6/4]
5. non_recursive  : [n_evalrealselectbb4in___8/4]
6. non_recursive  : [n_evalrealselectbb6in___9/4]
7. non_recursive  : [n_evalrealselectstart/4]
8. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalrealselectbb4in___5/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalrealselectbb4in___5_loop_cont/5
4. SCC is partially evaluated into n_evalrealselectbb1in___6/4
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into n_evalrealselectbb6in___9/4
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalrealselectbb4in___5/7 
* CE 5 is refined into CE [11] 
* CE 8 is refined into CE [12] 
* CE 7 is refined into CE [13] 
* CE 6 is refined into CE [14] 


### Cost equations --> "Loop" of n_evalrealselectbb4in___5/7 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [11] --> Loop 13 
* CEs [12] --> Loop 14 

### Ranking functions of CR n_evalrealselectbb4in___5(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_evalrealselectbb4in___5(A,B,C,D,E,F,G) 
* Partial RF of phase [11,12]:
  - RF of loop [11:1]:
    B-C depends on loops [12:1] 
  - RF of loop [12:1]:
    -A+B-2
    -A+C-2 depends on loops [11:1] 


### Specialization of cost equations n_evalrealselectbb4in___5_loop_cont/5 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


### Cost equations --> "Loop" of n_evalrealselectbb4in___5_loop_cont/5 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR n_evalrealselectbb4in___5_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalrealselectbb4in___5_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalrealselectbb1in___6/4 
* CE 4 is refined into CE [17,18,19] 


### Cost equations --> "Loop" of n_evalrealselectbb1in___6/4 
* CEs [17,18,19] --> Loop 17 

### Ranking functions of CR n_evalrealselectbb1in___6(A,B,C,D) 

#### Partial ranking functions of CR n_evalrealselectbb1in___6(A,B,C,D) 


### Specialization of cost equations n_evalrealselectbb6in___9/4 
* CE 2 is refined into CE [20] 
* CE 3 is refined into CE [21] 


### Cost equations --> "Loop" of n_evalrealselectbb6in___9/4 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 

### Ranking functions of CR n_evalrealselectbb6in___9(A,B,C,D) 

#### Partial ranking functions of CR n_evalrealselectbb6in___9(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [22,23] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [23] --> Loop 20 
* CEs [22] --> Loop 21 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalrealselectbb4in___5(A,B,C,D,E,F,G):
* Chain [[11,12],14]: 2*it(11)+4*it(12)+0
  Such that:aux(2) =< B-C
aux(11) =< -A+B
it(12) =< aux(11)
aux(1) =< it(12)*aux(11)
it(11) =< aux(1)+aux(2)

  with precondition: [D=2,A>=0,B>=A+3,C>=A+2,B>=C] 

* Chain [[11,12],13]: 2*it(11)+4*it(12)+2
  Such that:aux(2) =< B-C
aux(12) =< -A+B
it(12) =< aux(12)
aux(1) =< it(12)*aux(12)
it(11) =< aux(1)+aux(2)

  with precondition: [D=3,A>=0,B>=A+3,C>=A+2,B>=C] 

* Chain [14]: 0
  with precondition: [D=2,A>=0,C>=A+2,B>=C] 

* Chain [13]: 2
  with precondition: [D=3,A+2=B,A+2=C,A>=0] 


#### Cost of chains of n_evalrealselectbb4in___5_loop_cont(A,B,C,D,E):
* Chain [16]: 0
  with precondition: [A=2] 

* Chain [15]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalrealselectbb1in___6(A,B,C,D):
* Chain [17]: 8*s(8)+4*s(10)+3
  Such that:aux(15) =< B
s(8) =< aux(15)
s(9) =< s(8)*aux(15)
s(10) =< s(9)+aux(15)

  with precondition: [A=0,C=1,B>=2] 


#### Cost of chains of n_evalrealselectbb6in___9(A,B,C,D):
* Chain [19]: 1
  with precondition: [A=0,1>=B] 

* Chain [18]: 8*s(17)+4*s(19)+5
  Such that:s(16) =< B
s(17) =< s(16)
s(18) =< s(17)*s(16)
s(19) =< s(18)+s(16)

  with precondition: [A=0,B>=2] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [21]: 3
  with precondition: [1>=B] 

* Chain [20]: 8*s(21)+4*s(23)+7
  Such that:s(20) =< B
s(21) =< s(20)
s(22) =< s(21)*s(20)
s(23) =< s(22)+s(20)

  with precondition: [B>=2] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [21] with precondition: [1>=B] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [20] with precondition: [B>=2] 
    - Upper bound: 12*B+7+4*B*B 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D): nat(B)*12+4+nat(B)*4*nat(B)+3 
Asymptotic class: n^2 
* Total analysis performed in 203 ms.


-- stats
realtime 0:00.29
usertime 0.23
systime 0.01

