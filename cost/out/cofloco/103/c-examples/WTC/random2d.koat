WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalrandom2dbb10in___15/9,n_evalrandom2dbbin___14/9]
1. recursive  : [n_evalrandom2dbb10in___7/9,n_evalrandom2dbbin___6/9]
2. recursive  : [n_evalrandom2dbb10in___4/9,n_evalrandom2dbbin___3/9]
3. recursive  : [n_evalrandom2dNodeBlock7in___20/9,n_evalrandom2dNodeBlock9in___21/9,n_evalrandom2dNodeBlockin___19/9,n_evalrandom2dbb10in___10/9,n_evalrandom2dbb10in___15_loop_cont/10,n_evalrandom2dbb10in___18/9,n_evalrandom2dbb10in___4_loop_cont/10,n_evalrandom2dbb10in___7_loop_cont/10,n_evalrandom2dbb10in___9/9,n_evalrandom2dbbin___16/9,n_evalrandom2dbbin___5/9,n_evalrandom2dbbin___8/9]
4. recursive  : [n_evalrandom2dbb10in___12/9,n_evalrandom2dbbin___11/9]
5. recursive  : [n_evalrandom2dNodeBlock9in___21_loop_cont/10,n_evalrandom2dbb10in___12_loop_cont/10,n_evalrandom2dbb10in___17/9,n_evalrandom2dbbin___13/9]
6. non_recursive  : [exit_location/1]
7. non_recursive  : [n_evalrandom2dstop___25/5]
8. non_recursive  : [n_evalrandom2dbb10in___17_loop_cont/6]
9. non_recursive  : [n_evalrandom2dNodeBlock7in___2/5]
10. non_recursive  : [n_evalrandom2dNodeBlockin___1/5]
11. non_recursive  : [n_evalrandom2dNodeBlock9in___23/5]
12. recursive  : [n_evalrandom2dbb10in___24/9,n_evalrandom2dbbin___22/9]
13. non_recursive  : [n_evalrandom2dbb10in___24_loop_cont/6]
14. non_recursive  : [n_evalrandom2dbbin___26/5]
15. non_recursive  : [n_evalrandom2dbb10in___27/5]
16. non_recursive  : [n_evalrandom2dstart/5]
17. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalrandom2dbb10in___15/9
1. SCC is partially evaluated into n_evalrandom2dbb10in___7/9
2. SCC is partially evaluated into n_evalrandom2dbb10in___4/9
3. SCC is partially evaluated into n_evalrandom2dNodeBlock9in___21/9
4. SCC is partially evaluated into n_evalrandom2dbb10in___12/9
5. SCC is partially evaluated into n_evalrandom2dNodeBlock9in___21_loop_cont/10
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into n_evalrandom2dbb10in___17_loop_cont/6
9. SCC is partially evaluated into n_evalrandom2dNodeBlock7in___2/5
10. SCC is partially evaluated into n_evalrandom2dNodeBlockin___1/5
11. SCC is partially evaluated into n_evalrandom2dNodeBlock9in___23/5
12. SCC is partially evaluated into n_evalrandom2dbb10in___24/9
13. SCC is partially evaluated into n_evalrandom2dbb10in___24_loop_cont/6
14. SCC is partially evaluated into n_evalrandom2dbbin___26/5
15. SCC is partially evaluated into n_evalrandom2dbb10in___27/5
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalrandom2dbb10in___15/9 
* CE 70 is refined into CE [79] 
* CE 68 is refined into CE [80] 
* CE 69 is refined into CE [81] 
* CE 67 is refined into CE [82] 


### Cost equations --> "Loop" of n_evalrandom2dbb10in___15/9 
* CEs [82] --> Loop 58 
* CEs [80] --> Loop 59 
* CEs [79] --> Loop 60 
* CEs [81] --> Loop 61 

### Ranking functions of CR n_evalrandom2dbb10in___15(A,B,C,D,E,F,G,H,I) 
* RF of phase [58]: [-A+B]

#### Partial ranking functions of CR n_evalrandom2dbb10in___15(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [58]:
  - RF of loop [58:1]:
    -A+B


### Specialization of cost equations n_evalrandom2dbb10in___7/9 
* CE 78 is refined into CE [83] 
* CE 76 is refined into CE [84] 
* CE 77 is refined into CE [85] 
* CE 75 is refined into CE [86] 


### Cost equations --> "Loop" of n_evalrandom2dbb10in___7/9 
* CEs [86] --> Loop 62 
* CEs [84] --> Loop 63 
* CEs [83] --> Loop 64 
* CEs [85] --> Loop 65 

### Ranking functions of CR n_evalrandom2dbb10in___7(A,B,C,D,E,F,G,H,I) 
* RF of phase [62]: [-A+B]

#### Partial ranking functions of CR n_evalrandom2dbb10in___7(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [62]:
  - RF of loop [62:1]:
    -A+B


### Specialization of cost equations n_evalrandom2dbb10in___4/9 
* CE 74 is refined into CE [87] 
* CE 72 is refined into CE [88] 
* CE 73 is refined into CE [89] 
* CE 71 is refined into CE [90] 


### Cost equations --> "Loop" of n_evalrandom2dbb10in___4/9 
* CEs [90] --> Loop 66 
* CEs [88] --> Loop 67 
* CEs [87] --> Loop 68 
* CEs [89] --> Loop 69 

### Ranking functions of CR n_evalrandom2dbb10in___4(A,B,C,D,E,F,G,H,I) 
* RF of phase [66]: [-A+B]

#### Partial ranking functions of CR n_evalrandom2dbb10in___4(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [66]:
  - RF of loop [66:1]:
    -A+B


### Specialization of cost equations n_evalrandom2dNodeBlock9in___21/9 
* CE 51 is refined into CE [91] 
* CE 44 is refined into CE [92] 
* CE 43 is refined into CE [93,94] 
* CE 41 is refined into CE [95] 
* CE 47 is refined into CE [96] 
* CE 48 is refined into CE [97,98] 
* CE 49 is refined into CE [99] 
* CE 39 is refined into CE [100] 
* CE 52 is refined into CE [101] 
* CE 38 is refined into CE [102,103] 
* CE 36 is refined into CE [104] 
* CE 42 is refined into CE [105] 
* CE 45 is refined into CE [106,107] 
* CE 46 is refined into CE [108,109] 
* CE 50 is refined into CE [110] 
* CE 37 is refined into CE [111] 
* CE 40 is refined into CE [112,113] 


### Cost equations --> "Loop" of n_evalrandom2dNodeBlock9in___21/9 
* CEs [107] --> Loop 70 
* CEs [106] --> Loop 71 
* CEs [105] --> Loop 72 
* CEs [109] --> Loop 73 
* CEs [108] --> Loop 74 
* CEs [110] --> Loop 75 
* CEs [113] --> Loop 76 
* CEs [112] --> Loop 77 
* CEs [111] --> Loop 78 
* CEs [91] --> Loop 79 
* CEs [92] --> Loop 80 
* CEs [94] --> Loop 81 
* CEs [95] --> Loop 82 
* CEs [93] --> Loop 83 
* CEs [96] --> Loop 84 
* CEs [98] --> Loop 85 
* CEs [99] --> Loop 86 
* CEs [97] --> Loop 87 
* CEs [100,101] --> Loop 88 
* CEs [103] --> Loop 89 
* CEs [104] --> Loop 90 
* CEs [102] --> Loop 91 

### Ranking functions of CR n_evalrandom2dNodeBlock9in___21(A,B,C,D,E,F,G,H,I) 
* RF of phase [70,71,72,73,74,75,76,77,78]: [-A+B-1]

#### Partial ranking functions of CR n_evalrandom2dNodeBlock9in___21(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [70,71,72,73,74,75,76,77,78]:
  - RF of loop [70:1,73:1,76:1]:
    -A/3+B/3-1
  - RF of loop [71:1,74:1,77:1]:
    -A/2+B/2-1
    B/2-C/2-1/2
  - RF of loop [72:1,75:1,78:1]:
    -A+B-1
    B-C


### Specialization of cost equations n_evalrandom2dbb10in___12/9 
* CE 66 is refined into CE [114] 
* CE 64 is refined into CE [115] 
* CE 65 is refined into CE [116] 
* CE 63 is refined into CE [117] 


### Cost equations --> "Loop" of n_evalrandom2dbb10in___12/9 
* CEs [117] --> Loop 92 
* CEs [115] --> Loop 93 
* CEs [114] --> Loop 94 
* CEs [116] --> Loop 95 

### Ranking functions of CR n_evalrandom2dbb10in___12(A,B,C,D,E,F,G,H,I) 
* RF of phase [92]: [-A+B]

#### Partial ranking functions of CR n_evalrandom2dbb10in___12(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [92]:
  - RF of loop [92:1]:
    -A+B


### Specialization of cost equations n_evalrandom2dNodeBlock9in___21_loop_cont/10 
* CE 53 is refined into CE [118] 
* CE 57 is refined into CE [119] 
* CE 56 is refined into CE [120,121] 
* CE 54 is refined into CE [122] 
* CE 59 is refined into CE [123] 
* CE 60 is refined into CE [124] 
* CE 55 is refined into CE [125,126,127,128,129,130,131,132,133,134,135,136,137] 
* CE 58 is refined into CE [138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163] 


### Cost equations --> "Loop" of n_evalrandom2dNodeBlock9in___21_loop_cont/10 
* CEs [137,149,150,162,163] --> Loop 96 
* CEs [136] --> Loop 97 
* CEs [131,135,144,148,157,161] --> Loop 98 
* CEs [126,129,133] --> Loop 99 
* CEs [128,132,139,142,146] --> Loop 100 
* CEs [125,127,130,134,138,140,141,143,145,147,151,152,153,154,155,156,158,159,160] --> Loop 101 
* CEs [118,119] --> Loop 102 
* CEs [121] --> Loop 103 
* CEs [122] --> Loop 104 
* CEs [120] --> Loop 105 
* CEs [123] --> Loop 106 
* CEs [124] --> Loop 107 

### Ranking functions of CR n_evalrandom2dNodeBlock9in___21_loop_cont(A,B,C,D,E,F,G,H,I,J) 
* RF of phase [96,97]: [-B+C]

#### Partial ranking functions of CR n_evalrandom2dNodeBlock9in___21_loop_cont(A,B,C,D,E,F,G,H,I,J) 
* Partial RF of phase [96,97]:
  - RF of loop [96:1]:
    -B/2+C/2-1/2
  - RF of loop [97:1]:
    -B+C
    C-D


### Specialization of cost equations n_evalrandom2dbb10in___17_loop_cont/6 
* CE 62 is refined into CE [164] 
* CE 61 is refined into CE [165] 


### Cost equations --> "Loop" of n_evalrandom2dbb10in___17_loop_cont/6 
* CEs [164] --> Loop 108 
* CEs [165] --> Loop 109 

### Ranking functions of CR n_evalrandom2dbb10in___17_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalrandom2dbb10in___17_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalrandom2dNodeBlock7in___2/5 
* CE 22 is refined into CE [166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184] 
* CE 23 is refined into CE [185,186] 
* CE 24 is refined into CE [187] 
* CE 25 is refined into CE [188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225] 
* CE 15 is refined into CE [226] 
* CE 16 is refined into CE [227] 
* CE 17 is refined into CE [228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246] 
* CE 18 is refined into CE [247,248] 
* CE 19 is refined into CE [249] 
* CE 20 is refined into CE [250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287] 
* CE 21 is refined into CE [288] 


### Cost equations --> "Loop" of n_evalrandom2dNodeBlock7in___2/5 
* CEs [253,257,262] --> Loop 110 
* CEs [191,195,200] --> Loop 111 
* CEs [231,235,240,251,254,258,263] --> Loop 112 
* CEs [169,173,178,189,192,196,201] --> Loop 113 
* CEs [229,232,236,241,247] --> Loop 114 
* CEs [166,167,168,170,171,172,174,175,176,177,179,180,181,182,183,184,185,186,187,188,190,193,194,197,198,199,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225] --> Loop 115 
* CEs [226,227,228,230,233,234,237,238,239,242,243,244,245,246,248,249,250,252,255,256,259,260,261,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287] --> Loop 116 
* CEs [288] --> Loop 117 

### Ranking functions of CR n_evalrandom2dNodeBlock7in___2(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalrandom2dNodeBlock7in___2(A,B,C,D,E) 


### Specialization of cost equations n_evalrandom2dNodeBlockin___1/5 
* CE 31 is refined into CE [289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326] 
* CE 32 is refined into CE [327] 
* CE 33 is refined into CE [328,329] 
* CE 35 is refined into CE [330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348] 
* CE 27 is refined into CE [349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367] 
* CE 28 is refined into CE [368,369] 
* CE 29 is refined into CE [370] 
* CE 30 is refined into CE [371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408] 
* CE 34 is refined into CE [409] 
* CE 26 is refined into CE [410] 


### Cost equations --> "Loop" of n_evalrandom2dNodeBlockin___1/5 
* CEs [292,296,301] --> Loop 118 
* CEs [374,378,383] --> Loop 119 
* CEs [290,293,297,302,333,337,342] --> Loop 120 
* CEs [352,356,361,372,375,379,384] --> Loop 121 
* CEs [289,291,294,295,298,299,300,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,334,335,336,338,339,340,341,343,344,345,346,347,348] --> Loop 122 
* CEs [349,350,351,353,354,355,357,358,359,360,362,363,364,365,366,367,368,369,370,371,373,376,377,380,381,382,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408] --> Loop 123 
* CEs [409] --> Loop 124 
* CEs [410] --> Loop 125 

### Ranking functions of CR n_evalrandom2dNodeBlockin___1(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalrandom2dNodeBlockin___1(A,B,C,D,E) 


### Specialization of cost equations n_evalrandom2dNodeBlock9in___23/5 
* CE 7 is refined into CE [411,412,413,414,415,416] 
* CE 6 is refined into CE [417,418,419,420,421,422] 


### Cost equations --> "Loop" of n_evalrandom2dNodeBlock9in___23/5 
* CEs [422] --> Loop 126 
* CEs [419,421] --> Loop 127 
* CEs [414,416] --> Loop 128 
* CEs [413,415] --> Loop 129 
* CEs [418,420] --> Loop 130 
* CEs [417] --> Loop 131 
* CEs [412] --> Loop 132 
* CEs [411] --> Loop 133 

### Ranking functions of CR n_evalrandom2dNodeBlock9in___23(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalrandom2dNodeBlock9in___23(A,B,C,D,E) 


### Specialization of cost equations n_evalrandom2dbb10in___24/9 
* CE 9 is refined into CE [423] 
* CE 11 is refined into CE [424] 
* CE 10 is refined into CE [425] 
* CE 8 is refined into CE [426] 


### Cost equations --> "Loop" of n_evalrandom2dbb10in___24/9 
* CEs [426] --> Loop 134 
* CEs [423] --> Loop 135 
* CEs [424] --> Loop 136 
* CEs [425] --> Loop 137 

### Ranking functions of CR n_evalrandom2dbb10in___24(A,B,C,D,E,F,G,H,I) 
* RF of phase [134]: [-A+B]

#### Partial ranking functions of CR n_evalrandom2dbb10in___24(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [134]:
  - RF of loop [134:1]:
    -A+B


### Specialization of cost equations n_evalrandom2dbb10in___24_loop_cont/6 
* CE 14 is refined into CE [427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445] 
* CE 13 is refined into CE [446] 
* CE 12 is refined into CE [447] 


### Cost equations --> "Loop" of n_evalrandom2dbb10in___24_loop_cont/6 
* CEs [427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445] --> Loop 138 
* CEs [446] --> Loop 139 
* CEs [447] --> Loop 140 

### Ranking functions of CR n_evalrandom2dbb10in___24_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalrandom2dbb10in___24_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalrandom2dbbin___26/5 
* CE 4 is refined into CE [448,449,450,451,452,453,454] 
* CE 5 is refined into CE [455,456,457,458,459] 


### Cost equations --> "Loop" of n_evalrandom2dbbin___26/5 
* CEs [448,449,450,451,452,453,454,455,456,457,458,459] --> Loop 141 

### Ranking functions of CR n_evalrandom2dbbin___26(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalrandom2dbbin___26(A,B,C,D,E) 


### Specialization of cost equations n_evalrandom2dbb10in___27/5 
* CE 2 is refined into CE [460] 
* CE 3 is refined into CE [461] 


### Cost equations --> "Loop" of n_evalrandom2dbb10in___27/5 
* CEs [460] --> Loop 142 
* CEs [461] --> Loop 143 

### Ranking functions of CR n_evalrandom2dbb10in___27(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalrandom2dbb10in___27(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [462,463] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [463] --> Loop 144 
* CEs [462] --> Loop 145 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalrandom2dbb10in___15(A,B,C,D,E,F,G,H,I):
* Chain [[58],61]: 2*it(58)+1
  Such that:it(58) =< -A+B

  with precondition: [D=2,E=2,C>=1,B>=A+1,A>=C+1] 

* Chain [[58],60]: 2*it(58)+0
  Such that:it(58) =< -A+B

  with precondition: [D=2,E=3,C>=1,B>=A+1,A>=C+1] 

* Chain [[58],59]: 2*it(58)+2
  Such that:it(58) =< -A+H

  with precondition: [D=2,E=4,B=G,F+1=H,3>=I,C>=1,I>=0,F>=A+1,A>=C+1,B>=F+1] 

* Chain [61]: 1
  with precondition: [D=2,E=2,A=B,C>=1,A>=C+1] 

* Chain [60]: 0
  with precondition: [D=2,E=3,C>=1,B>=A,A>=C+1] 

* Chain [59]: 2
  with precondition: [D=2,E=4,A=F,B=G,A+1=H,3>=I,C>=1,I>=0,B>=A+1,A>=C+1] 


#### Cost of chains of n_evalrandom2dbb10in___7(A,B,C,D,E,F,G,H,I):
* Chain [[62],65]: 2*it(62)+1
  Such that:it(62) =< -A+B

  with precondition: [D=1,E=2,C>=1,B>=A+1,A>=C+1] 

* Chain [[62],64]: 2*it(62)+0
  Such that:it(62) =< -A+B

  with precondition: [D=1,E=3,C>=1,B>=A+1,A>=C+1] 

* Chain [[62],63]: 2*it(62)+2
  Such that:it(62) =< -A+H

  with precondition: [D=1,E=4,B=G,F+1=H,3>=I,C>=1,I>=0,F>=A+1,A>=C+1,B>=F+1] 

* Chain [65]: 1
  with precondition: [D=1,E=2,A=B,C>=1,A>=C+1] 

* Chain [64]: 0
  with precondition: [D=1,E=3,C>=1,B>=A,A>=C+1] 

* Chain [63]: 2
  with precondition: [D=1,E=4,A=F,B=G,A+1=H,3>=I,C>=1,I>=0,B>=A+1,A>=C+1] 


#### Cost of chains of n_evalrandom2dbb10in___4(A,B,C,D,E,F,G,H,I):
* Chain [[66],69]: 2*it(66)+1
  Such that:it(66) =< -A+B

  with precondition: [D=0,E=2,C>=1,B>=A+1,A>=C+1] 

* Chain [[66],68]: 2*it(66)+0
  Such that:it(66) =< -A+B

  with precondition: [D=0,E=3,C>=1,B>=A+1,A>=C+1] 

* Chain [[66],67]: 2*it(66)+2
  Such that:it(66) =< -A+H

  with precondition: [D=0,E=4,B=G,F+1=H,3>=I,C>=1,I>=0,F>=A+1,A>=C+1,B>=F+1] 

* Chain [69]: 1
  with precondition: [D=0,E=2,A=B,C>=1,A>=C+1] 

* Chain [68]: 0
  with precondition: [D=0,E=3,C>=1,B>=A,A>=C+1] 

* Chain [67]: 2
  with precondition: [D=0,E=4,A=F,B=G,A+1=H,3>=I,C>=1,I>=0,B>=A+1,A>=C+1] 


#### Cost of chains of n_evalrandom2dNodeBlock9in___21(A,B,C,D,E,F,G,H,I):
* Chain [[70,71,72,73,74,75,76,77,78],91]: 6*it(70)+18*it(71)+12*it(72)+12*it(73)+6*s(10)+5
  Such that:aux(1) =< B-C+1
aux(3) =< B/2-C/2+1/2
aux(6) =< B/3-C/3
aux(5) =< B/3-C/3+1/3
aux(13) =< B-C
aux(14) =< B/2-C/2
aux(15) =< 4/3*B-4/3*C
it(70) =< aux(1)
it(71) =< aux(1)
it(72) =< aux(1)
it(73) =< aux(1)
it(70) =< aux(13)
it(71) =< aux(13)
it(72) =< aux(13)
it(73) =< aux(13)
it(71) =< aux(3)
it(73) =< aux(3)
it(71) =< aux(14)
it(73) =< aux(14)
it(70) =< aux(5)
it(73) =< aux(5)
it(70) =< aux(6)
it(73) =< aux(6)
it(71) =< aux(15)
it(72) =< aux(15)
it(73) =< aux(15)
s(10) =< aux(15)

  with precondition: [E=2,A+1=C,2>=D,A>=1,D>=0,B>=A+3] 

* Chain [[70,71,72,73,74,75,76,77,78],90]: 6*it(70)+18*it(71)+12*it(72)+12*it(73)+6*s(10)+3
  Such that:aux(1) =< B-C+1
aux(3) =< B/2-C/2+1/2
aux(6) =< B/3-C/3
aux(5) =< B/3-C/3+1/3
aux(16) =< B-C
aux(17) =< B/2-C/2
aux(18) =< 4/3*B-4/3*C
it(70) =< aux(1)
it(71) =< aux(1)
it(72) =< aux(1)
it(73) =< aux(1)
it(70) =< aux(16)
it(71) =< aux(16)
it(72) =< aux(16)
it(73) =< aux(16)
it(71) =< aux(3)
it(73) =< aux(3)
it(71) =< aux(17)
it(73) =< aux(17)
it(70) =< aux(5)
it(73) =< aux(5)
it(70) =< aux(6)
it(73) =< aux(6)
it(71) =< aux(18)
it(72) =< aux(18)
it(73) =< aux(18)
s(10) =< aux(18)

  with precondition: [E=2,A+1=C,2>=D,A>=1,D>=0,B>=A+2] 

* Chain [[70,71,72,73,74,75,76,77,78],89]: 6*it(70)+6*it(71)+12*it(72)+12*it(73)+12*it(74)+6*s(10)+2*s(13)+5
  Such that:aux(7) =< B-C
aux(9) =< B/2-C/2
aux(3) =< B/2-C/2+1/2
aux(5) =< B/3-C/3+1/3
aux(11) =< 4/3*B-4/3*C
aux(19) =< B-C+1
aux(20) =< 4*B-4*C+4
s(13) =< aux(20)
it(70) =< aux(19)
it(71) =< aux(19)
it(72) =< aux(19)
it(73) =< aux(19)
it(74) =< aux(19)
it(71) =< aux(3)
it(73) =< aux(3)
it(74) =< aux(3)
it(70) =< aux(5)
it(73) =< aux(5)
it(72) =< aux(7)
it(73) =< aux(7)
it(74) =< aux(7)
it(71) =< aux(9)
it(73) =< aux(9)
it(74) =< aux(9)
it(71) =< aux(11)
it(72) =< aux(11)
it(73) =< aux(11)
it(74) =< aux(11)
s(10) =< aux(11)
it(71) =< aux(20)
it(72) =< aux(20)
it(73) =< aux(20)
it(74) =< aux(20)
s(10) =< aux(20)

  with precondition: [E=2,A+1=C,2>=D,A>=1,D>=0,B>=A+4] 

* Chain [[70,71,72,73,74,75,76,77,78],88]: 6*it(70)+6*it(71)+12*it(72)+12*it(73)+12*it(74)+6*s(10)+2*s(14)+4
  Such that:aux(7) =< B-C
aux(9) =< B/2-C/2
aux(3) =< B/2-C/2+1/2
aux(5) =< B/3-C/3+1/3
aux(11) =< 4/3*B-4/3*C
aux(21) =< B-C+1
aux(22) =< 4*B-4*C+4
s(14) =< aux(22)
it(70) =< aux(21)
it(71) =< aux(21)
it(72) =< aux(21)
it(73) =< aux(21)
it(74) =< aux(21)
it(71) =< aux(3)
it(73) =< aux(3)
it(74) =< aux(3)
it(70) =< aux(5)
it(73) =< aux(5)
it(72) =< aux(7)
it(73) =< aux(7)
it(74) =< aux(7)
it(71) =< aux(9)
it(73) =< aux(9)
it(74) =< aux(9)
it(71) =< aux(11)
it(72) =< aux(11)
it(73) =< aux(11)
it(74) =< aux(11)
s(10) =< aux(11)
it(71) =< aux(22)
it(72) =< aux(22)
it(73) =< aux(22)
it(74) =< aux(22)
s(10) =< aux(22)

  with precondition: [E=3,A+1=C,2>=D,A>=1,D>=0,B>=A+2] 

* Chain [[70,71,72,73,74,75,76,77,78],87]: 6*it(70)+18*it(71)+12*it(72)+12*it(73)+6*s(10)+5
  Such that:aux(1) =< B-C+1
aux(3) =< B/2-C/2+1/2
aux(6) =< B/3-C/3
aux(5) =< B/3-C/3+1/3
aux(23) =< B-C
aux(24) =< B/2-C/2
aux(25) =< 4/3*B-4/3*C
it(70) =< aux(1)
it(71) =< aux(1)
it(72) =< aux(1)
it(73) =< aux(1)
it(70) =< aux(23)
it(71) =< aux(23)
it(72) =< aux(23)
it(73) =< aux(23)
it(71) =< aux(3)
it(73) =< aux(3)
it(71) =< aux(24)
it(73) =< aux(24)
it(70) =< aux(5)
it(73) =< aux(5)
it(70) =< aux(6)
it(73) =< aux(6)
it(71) =< aux(25)
it(72) =< aux(25)
it(73) =< aux(25)
s(10) =< aux(25)

  with precondition: [E=2,A+1=C,2>=D,A>=1,D>=0,B>=A+3] 

* Chain [[70,71,72,73,74,75,76,77,78],86]: 6*it(70)+18*it(71)+12*it(72)+12*it(73)+6*s(10)+3
  Such that:aux(1) =< B-C+1
aux(3) =< B/2-C/2+1/2
aux(6) =< B/3-C/3
aux(5) =< B/3-C/3+1/3
aux(26) =< B-C
aux(27) =< B/2-C/2
aux(28) =< 4/3*B-4/3*C
it(70) =< aux(1)
it(71) =< aux(1)
it(72) =< aux(1)
it(73) =< aux(1)
it(70) =< aux(26)
it(71) =< aux(26)
it(72) =< aux(26)
it(73) =< aux(26)
it(71) =< aux(3)
it(73) =< aux(3)
it(71) =< aux(27)
it(73) =< aux(27)
it(70) =< aux(5)
it(73) =< aux(5)
it(70) =< aux(6)
it(73) =< aux(6)
it(71) =< aux(28)
it(72) =< aux(28)
it(73) =< aux(28)
s(10) =< aux(28)

  with precondition: [E=2,A+1=C,2>=D,A>=1,D>=0,B>=A+2] 

* Chain [[70,71,72,73,74,75,76,77,78],85]: 6*it(70)+6*it(71)+12*it(72)+12*it(73)+12*it(74)+6*s(10)+2*s(15)+5
  Such that:aux(7) =< B-C
aux(9) =< B/2-C/2
aux(3) =< B/2-C/2+1/2
aux(5) =< B/3-C/3+1/3
aux(11) =< 4/3*B-4/3*C
aux(29) =< B-C+1
aux(30) =< 4*B-4*C+4
s(15) =< aux(30)
it(70) =< aux(29)
it(71) =< aux(29)
it(72) =< aux(29)
it(73) =< aux(29)
it(74) =< aux(29)
it(71) =< aux(3)
it(73) =< aux(3)
it(74) =< aux(3)
it(70) =< aux(5)
it(73) =< aux(5)
it(72) =< aux(7)
it(73) =< aux(7)
it(74) =< aux(7)
it(71) =< aux(9)
it(73) =< aux(9)
it(74) =< aux(9)
it(71) =< aux(11)
it(72) =< aux(11)
it(73) =< aux(11)
it(74) =< aux(11)
s(10) =< aux(11)
it(71) =< aux(30)
it(72) =< aux(30)
it(73) =< aux(30)
it(74) =< aux(30)
s(10) =< aux(30)

  with precondition: [E=2,A+1=C,2>=D,A>=1,D>=0,B>=A+4] 

* Chain [[70,71,72,73,74,75,76,77,78],84]: 6*it(70)+6*it(71)+12*it(72)+12*it(73)+12*it(74)+6*s(10)+2*s(16)+4
  Such that:aux(7) =< B-C
aux(9) =< B/2-C/2
aux(3) =< B/2-C/2+1/2
aux(5) =< B/3-C/3+1/3
aux(11) =< 4/3*B-4/3*C
aux(31) =< B-C+1
aux(32) =< 4*B-4*C+4
s(16) =< aux(32)
it(70) =< aux(31)
it(71) =< aux(31)
it(72) =< aux(31)
it(73) =< aux(31)
it(74) =< aux(31)
it(71) =< aux(3)
it(73) =< aux(3)
it(74) =< aux(3)
it(70) =< aux(5)
it(73) =< aux(5)
it(72) =< aux(7)
it(73) =< aux(7)
it(74) =< aux(7)
it(71) =< aux(9)
it(73) =< aux(9)
it(74) =< aux(9)
it(71) =< aux(11)
it(72) =< aux(11)
it(73) =< aux(11)
it(74) =< aux(11)
s(10) =< aux(11)
it(71) =< aux(32)
it(72) =< aux(32)
it(73) =< aux(32)
it(74) =< aux(32)
s(10) =< aux(32)

  with precondition: [E=3,A+1=C,2>=D,A>=1,D>=0,B>=A+3] 

* Chain [[70,71,72,73,74,75,76,77,78],83]: 6*it(70)+18*it(71)+12*it(72)+12*it(73)+6*s(10)+5
  Such that:aux(1) =< B-C+1
aux(3) =< B/2-C/2+1/2
aux(6) =< B/3-C/3
aux(5) =< B/3-C/3+1/3
aux(33) =< B-C
aux(34) =< B/2-C/2
aux(35) =< 4/3*B-4/3*C
it(70) =< aux(1)
it(71) =< aux(1)
it(72) =< aux(1)
it(73) =< aux(1)
it(70) =< aux(33)
it(71) =< aux(33)
it(72) =< aux(33)
it(73) =< aux(33)
it(71) =< aux(3)
it(73) =< aux(3)
it(71) =< aux(34)
it(73) =< aux(34)
it(70) =< aux(5)
it(73) =< aux(5)
it(70) =< aux(6)
it(73) =< aux(6)
it(71) =< aux(35)
it(72) =< aux(35)
it(73) =< aux(35)
s(10) =< aux(35)

  with precondition: [E=2,A+1=C,2>=D,A>=1,D>=0,B>=A+3] 

* Chain [[70,71,72,73,74,75,76,77,78],82]: 6*it(70)+18*it(71)+12*it(72)+12*it(73)+6*s(10)+3
  Such that:aux(1) =< B-C+1
aux(3) =< B/2-C/2+1/2
aux(6) =< B/3-C/3
aux(5) =< B/3-C/3+1/3
aux(36) =< B-C
aux(37) =< B/2-C/2
aux(38) =< 4/3*B-4/3*C
it(70) =< aux(1)
it(71) =< aux(1)
it(72) =< aux(1)
it(73) =< aux(1)
it(70) =< aux(36)
it(71) =< aux(36)
it(72) =< aux(36)
it(73) =< aux(36)
it(71) =< aux(3)
it(73) =< aux(3)
it(71) =< aux(37)
it(73) =< aux(37)
it(70) =< aux(5)
it(73) =< aux(5)
it(70) =< aux(6)
it(73) =< aux(6)
it(71) =< aux(38)
it(72) =< aux(38)
it(73) =< aux(38)
s(10) =< aux(38)

  with precondition: [E=2,A+1=C,2>=D,A>=1,D>=0,B>=A+2] 

* Chain [[70,71,72,73,74,75,76,77,78],81]: 6*it(70)+6*it(71)+12*it(72)+12*it(73)+12*it(74)+6*s(10)+2*s(17)+5
  Such that:aux(7) =< B-C
aux(9) =< B/2-C/2
aux(3) =< B/2-C/2+1/2
aux(5) =< B/3-C/3+1/3
aux(11) =< 4/3*B-4/3*C
aux(39) =< B-C+1
aux(40) =< 4*B-4*C+4
s(17) =< aux(40)
it(70) =< aux(39)
it(71) =< aux(39)
it(72) =< aux(39)
it(73) =< aux(39)
it(74) =< aux(39)
it(71) =< aux(3)
it(73) =< aux(3)
it(74) =< aux(3)
it(70) =< aux(5)
it(73) =< aux(5)
it(72) =< aux(7)
it(73) =< aux(7)
it(74) =< aux(7)
it(71) =< aux(9)
it(73) =< aux(9)
it(74) =< aux(9)
it(71) =< aux(11)
it(72) =< aux(11)
it(73) =< aux(11)
it(74) =< aux(11)
s(10) =< aux(11)
it(71) =< aux(40)
it(72) =< aux(40)
it(73) =< aux(40)
it(74) =< aux(40)
s(10) =< aux(40)

  with precondition: [E=2,A+1=C,2>=D,A>=1,D>=0,B>=A+4] 

* Chain [[70,71,72,73,74,75,76,77,78],80]: 6*it(70)+6*it(71)+12*it(72)+12*it(73)+12*it(74)+6*s(10)+2*s(18)+4
  Such that:aux(7) =< B-C
aux(9) =< B/2-C/2
aux(3) =< B/2-C/2+1/2
aux(5) =< B/3-C/3+1/3
aux(11) =< 4/3*B-4/3*C
aux(41) =< B-C+1
aux(42) =< 4*B-4*C+4
s(18) =< aux(42)
it(70) =< aux(41)
it(71) =< aux(41)
it(72) =< aux(41)
it(73) =< aux(41)
it(74) =< aux(41)
it(71) =< aux(3)
it(73) =< aux(3)
it(74) =< aux(3)
it(70) =< aux(5)
it(73) =< aux(5)
it(72) =< aux(7)
it(73) =< aux(7)
it(74) =< aux(7)
it(71) =< aux(9)
it(73) =< aux(9)
it(74) =< aux(9)
it(71) =< aux(11)
it(72) =< aux(11)
it(73) =< aux(11)
it(74) =< aux(11)
s(10) =< aux(11)
it(71) =< aux(42)
it(72) =< aux(42)
it(73) =< aux(42)
it(74) =< aux(42)
s(10) =< aux(42)

  with precondition: [E=3,A+1=C,2>=D,A>=1,D>=0,B>=A+3] 

* Chain [[70,71,72,73,74,75,76,77,78],79]: 6*it(70)+18*it(71)+12*it(72)+12*it(73)+6*s(10)+2
  Such that:aux(11) =< -4/3*A+4/3*G
aux(12) =< -4/3*A+4/3*H
aux(5) =< -A/3+G/3
aux(6) =< -A/3+H/3
aux(43) =< -A+G
aux(44) =< -A+H
aux(45) =< -A/2+G/2
aux(46) =< -A/2+H/2
it(70) =< aux(43)
it(71) =< aux(43)
it(72) =< aux(43)
it(73) =< aux(43)
it(70) =< aux(44)
it(71) =< aux(44)
it(72) =< aux(44)
it(73) =< aux(44)
it(71) =< aux(45)
it(73) =< aux(45)
it(71) =< aux(46)
it(73) =< aux(46)
it(70) =< aux(5)
it(73) =< aux(5)
it(70) =< aux(6)
it(73) =< aux(6)
it(71) =< aux(11)
it(72) =< aux(11)
it(73) =< aux(11)
s(10) =< aux(11)
it(71) =< aux(12)
it(72) =< aux(12)
it(73) =< aux(12)
s(10) =< aux(12)

  with precondition: [E=5,I=3,A+1=C,B=G,F=H,2>=D,A>=1,D>=0,F>=A+2,B>=F] 

* Chain [91]: 5
  with precondition: [D=0,E=2,A+2=B,A+1=C,A>=1] 

* Chain [90]: 3
  with precondition: [D=0,E=2,A+1=B,A+1=C,A>=1] 

* Chain [89]: 2*s(13)+5
  Such that:s(13) =< -A+B

  with precondition: [D=0,E=2,A+1=C,A>=1,B>=A+3] 

* Chain [88]: 2*s(14)+4
  Such that:s(14) =< -A+B

  with precondition: [E=3] 

* Chain [87]: 5
  with precondition: [D=1,E=2,A+2=B,A+1=C,A>=1] 

* Chain [86]: 3
  with precondition: [D=1,E=2,A+1=B,A+1=C,A>=1] 

* Chain [85]: 2*s(15)+5
  Such that:s(15) =< -A+B

  with precondition: [D=1,E=2,A+1=C,A>=1,B>=A+3] 

* Chain [84]: 2*s(16)+4
  Such that:s(16) =< -A+B

  with precondition: [D=1,E=3,A+1=C,A>=1,B>=A+2] 

* Chain [83]: 5
  with precondition: [D=2,E=2,A+2=B,A+1=C,A>=1] 

* Chain [82]: 3
  with precondition: [D=2,E=2,A+1=B,A+1=C,A>=1] 

* Chain [81]: 2*s(17)+5
  Such that:s(17) =< -A+B

  with precondition: [D=2,E=2,A+1=C,A>=1,B>=A+3] 

* Chain [80]: 2*s(18)+4
  Such that:s(18) =< -A+B

  with precondition: [D=2,E=3,A+1=C,A>=1,B>=A+2] 

* Chain [79]: 2
  with precondition: [D=3,E=5,I=3,A+1=C,A+1=F,B=G,A+1=H,A>=1,B>=A+1] 


#### Cost of chains of n_evalrandom2dbb10in___12(A,B,C,D,E,F,G,H,I):
* Chain [[92],95]: 2*it(92)+1
  Such that:it(92) =< -A+B

  with precondition: [D=3,E=2,C>=1,B>=A+1,A>=C+1] 

* Chain [[92],94]: 2*it(92)+0
  Such that:it(92) =< -A+B

  with precondition: [D=3,E=3,C>=1,B>=A+1,A>=C+1] 

* Chain [[92],93]: 2*it(92)+2
  Such that:it(92) =< -A+H

  with precondition: [D=3,E=4,B=G,F+1=H,3>=I,C>=1,I>=0,F>=A+1,A>=C+1,B>=F+1] 

* Chain [95]: 1
  with precondition: [D=3,E=2,A=B,C>=1,A>=C+1] 

* Chain [94]: 0
  with precondition: [D=3,E=3,C>=1,B>=A,A>=C+1] 

* Chain [93]: 2
  with precondition: [D=3,E=4,A=F,B=G,A+1=H,3>=I,C>=1,I>=0,B>=A+1,A>=C+1] 


#### Cost of chains of n_evalrandom2dNodeBlock9in___21_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [[96,97],105]: 6*it(96)+4*it(97)+12*s(239)+36*s(240)+24*s(241)+24*s(242)+12*s(243)+2*s(244)+2*s(245)+6*s(246)+42*s(247)+6*s(248)+3
  Such that:it(96) =< C/2-D/2
aux(87) =< C-D
aux(88) =< 4*C-4*D
it(97) =< aux(87)
it(96) =< aux(87)
it(97) =< aux(88)
s(251) =< aux(88)* (1/12)
aux(75) =< it(96)*aux(88)
s(253) =< aux(88)* (1/8)
s(249) =< aux(88)* (1/3)
s(255) =< aux(88)* (1/4)
s(252) =< aux(75)* (1/12)
s(254) =< aux(75)* (1/8)
s(250) =< aux(75)* (1/3)
s(256) =< aux(75)* (1/4)
s(244) =< s(255)
s(245) =< aux(75)
s(246) =< s(256)
s(247) =< s(256)
s(246) =< s(255)
s(247) =< s(255)
s(247) =< aux(75)
s(248) =< aux(75)
s(247) =< aux(88)
s(248) =< aux(88)
s(239) =< s(256)
s(240) =< s(256)
s(241) =< s(256)
s(242) =< s(256)
s(239) =< s(255)
s(240) =< s(255)
s(241) =< s(255)
s(242) =< s(255)
s(240) =< s(254)
s(242) =< s(254)
s(240) =< s(253)
s(242) =< s(253)
s(239) =< s(252)
s(242) =< s(252)
s(239) =< s(251)
s(242) =< s(251)
s(240) =< s(250)
s(241) =< s(250)
s(242) =< s(250)
s(243) =< s(250)
s(240) =< s(249)
s(241) =< s(249)
s(242) =< s(249)
s(243) =< s(249)

  with precondition: [A=5,E=3,F=2,B=D,B>=1,C>=B+2] 

* Chain [[96,97],104]: 6*it(96)+4*it(97)+12*s(239)+36*s(240)+24*s(241)+24*s(242)+12*s(243)+2*s(244)+2*s(245)+6*s(246)+42*s(247)+6*s(248)+1
  Such that:it(96) =< C/2-D/2
aux(89) =< C-D
aux(90) =< 4*C-4*D
it(97) =< aux(89)
it(96) =< aux(89)
it(97) =< aux(90)
s(251) =< aux(90)* (1/12)
aux(75) =< it(96)*aux(90)
s(253) =< aux(90)* (1/8)
s(249) =< aux(90)* (1/3)
s(255) =< aux(90)* (1/4)
s(252) =< aux(75)* (1/12)
s(254) =< aux(75)* (1/8)
s(250) =< aux(75)* (1/3)
s(256) =< aux(75)* (1/4)
s(244) =< s(255)
s(245) =< aux(75)
s(246) =< s(256)
s(247) =< s(256)
s(246) =< s(255)
s(247) =< s(255)
s(247) =< aux(75)
s(248) =< aux(75)
s(247) =< aux(90)
s(248) =< aux(90)
s(239) =< s(256)
s(240) =< s(256)
s(241) =< s(256)
s(242) =< s(256)
s(239) =< s(255)
s(240) =< s(255)
s(241) =< s(255)
s(242) =< s(255)
s(240) =< s(254)
s(242) =< s(254)
s(240) =< s(253)
s(242) =< s(253)
s(239) =< s(252)
s(242) =< s(252)
s(239) =< s(251)
s(242) =< s(251)
s(240) =< s(250)
s(241) =< s(250)
s(242) =< s(250)
s(243) =< s(250)
s(240) =< s(249)
s(241) =< s(249)
s(242) =< s(249)
s(243) =< s(249)

  with precondition: [A=5,E=3,F=2,B=D,B>=1,C>=B+1] 

* Chain [[96,97],103]: 8*it(96)+4*it(97)+12*s(239)+36*s(240)+24*s(241)+24*s(242)+12*s(243)+2*s(244)+2*s(245)+6*s(246)+42*s(247)+6*s(248)+3
  Such that:aux(91) =< C-D
aux(92) =< 4*C-4*D
it(96) =< aux(91)
it(97) =< aux(91)
it(97) =< aux(92)
s(251) =< aux(92)* (1/12)
aux(75) =< it(96)*aux(92)
s(253) =< aux(92)* (1/8)
s(249) =< aux(92)* (1/3)
s(255) =< aux(92)* (1/4)
s(252) =< aux(75)* (1/12)
s(254) =< aux(75)* (1/8)
s(250) =< aux(75)* (1/3)
s(256) =< aux(75)* (1/4)
s(244) =< s(255)
s(245) =< aux(75)
s(246) =< s(256)
s(247) =< s(256)
s(246) =< s(255)
s(247) =< s(255)
s(247) =< aux(75)
s(248) =< aux(75)
s(247) =< aux(92)
s(248) =< aux(92)
s(239) =< s(256)
s(240) =< s(256)
s(241) =< s(256)
s(242) =< s(256)
s(239) =< s(255)
s(240) =< s(255)
s(241) =< s(255)
s(242) =< s(255)
s(240) =< s(254)
s(242) =< s(254)
s(240) =< s(253)
s(242) =< s(253)
s(239) =< s(252)
s(242) =< s(252)
s(239) =< s(251)
s(242) =< s(251)
s(240) =< s(250)
s(241) =< s(250)
s(242) =< s(250)
s(243) =< s(250)
s(240) =< s(249)
s(241) =< s(249)
s(242) =< s(249)
s(243) =< s(249)

  with precondition: [A=5,E=3,F=2,B=D,B>=1,C>=B+3] 

* Chain [[96,97],102]: 8*it(96)+4*it(97)+12*s(239)+36*s(240)+24*s(241)+24*s(242)+12*s(243)+2*s(244)+2*s(245)+6*s(246)+42*s(247)+6*s(248)+2
  Such that:aux(93) =< C-D
aux(94) =< 4*C-4*D
it(96) =< aux(93)
it(97) =< aux(93)
it(97) =< aux(94)
s(251) =< aux(94)* (1/12)
aux(75) =< it(96)*aux(94)
s(253) =< aux(94)* (1/8)
s(249) =< aux(94)* (1/3)
s(255) =< aux(94)* (1/4)
s(252) =< aux(75)* (1/12)
s(254) =< aux(75)* (1/8)
s(250) =< aux(75)* (1/3)
s(256) =< aux(75)* (1/4)
s(244) =< s(255)
s(245) =< aux(75)
s(246) =< s(256)
s(247) =< s(256)
s(246) =< s(255)
s(247) =< s(255)
s(247) =< aux(75)
s(248) =< aux(75)
s(247) =< aux(94)
s(248) =< aux(94)
s(239) =< s(256)
s(240) =< s(256)
s(241) =< s(256)
s(242) =< s(256)
s(239) =< s(255)
s(240) =< s(255)
s(241) =< s(255)
s(242) =< s(255)
s(240) =< s(254)
s(242) =< s(254)
s(240) =< s(253)
s(242) =< s(253)
s(239) =< s(252)
s(242) =< s(252)
s(239) =< s(251)
s(242) =< s(251)
s(240) =< s(250)
s(241) =< s(250)
s(242) =< s(250)
s(243) =< s(250)
s(240) =< s(249)
s(241) =< s(249)
s(242) =< s(249)
s(243) =< s(249)

  with precondition: [A=5,E=3,F=3,B=D,B>=1,C>=B+1] 

* Chain [[96,97],101,107]: 10*it(96)+12*s(239)+36*s(240)+24*s(241)+24*s(242)+12*s(243)+2*s(244)+2*s(245)+6*s(246)+42*s(247)+6*s(248)+1512*s(269)+9
  Such that:aux(83) =< C-D
aux(113) =< 4*C-4*D
it(96) =< aux(113)
s(269) =< aux(113)
it(96) =< aux(83)
s(251) =< aux(113)* (1/12)
aux(75) =< it(96)*aux(113)
s(253) =< aux(113)* (1/8)
s(249) =< aux(113)* (1/3)
s(255) =< aux(113)* (1/4)
s(252) =< aux(75)* (1/12)
s(254) =< aux(75)* (1/8)
s(250) =< aux(75)* (1/3)
s(256) =< aux(75)* (1/4)
s(244) =< s(255)
s(245) =< aux(75)
s(246) =< s(256)
s(247) =< s(256)
s(246) =< s(255)
s(247) =< s(255)
s(247) =< aux(75)
s(248) =< aux(75)
s(247) =< aux(113)
s(248) =< aux(113)
s(239) =< s(256)
s(240) =< s(256)
s(241) =< s(256)
s(242) =< s(256)
s(239) =< s(255)
s(240) =< s(255)
s(241) =< s(255)
s(242) =< s(255)
s(240) =< s(254)
s(242) =< s(254)
s(240) =< s(253)
s(242) =< s(253)
s(239) =< s(252)
s(242) =< s(252)
s(239) =< s(251)
s(242) =< s(251)
s(240) =< s(250)
s(241) =< s(250)
s(242) =< s(250)
s(243) =< s(250)
s(240) =< s(249)
s(241) =< s(249)
s(242) =< s(249)
s(243) =< s(249)

  with precondition: [A=5,E=3,F=2,B=D,B>=1,C>=B+3] 

* Chain [[96,97],100,107]: 6*it(96)+4*it(97)+12*s(239)+36*s(240)+24*s(241)+24*s(242)+12*s(243)+2*s(244)+2*s(245)+6*s(246)+42*s(247)+6*s(248)+7
  Such that:it(96) =< C/2-D/2
aux(114) =< C-D
aux(115) =< 4*C-4*D
it(97) =< aux(114)
it(96) =< aux(114)
it(97) =< aux(115)
s(251) =< aux(115)* (1/12)
aux(75) =< it(96)*aux(115)
s(253) =< aux(115)* (1/8)
s(249) =< aux(115)* (1/3)
s(255) =< aux(115)* (1/4)
s(252) =< aux(75)* (1/12)
s(254) =< aux(75)* (1/8)
s(250) =< aux(75)* (1/3)
s(256) =< aux(75)* (1/4)
s(244) =< s(255)
s(245) =< aux(75)
s(246) =< s(256)
s(247) =< s(256)
s(246) =< s(255)
s(247) =< s(255)
s(247) =< aux(75)
s(248) =< aux(75)
s(247) =< aux(115)
s(248) =< aux(115)
s(239) =< s(256)
s(240) =< s(256)
s(241) =< s(256)
s(242) =< s(256)
s(239) =< s(255)
s(240) =< s(255)
s(241) =< s(255)
s(242) =< s(255)
s(240) =< s(254)
s(242) =< s(254)
s(240) =< s(253)
s(242) =< s(253)
s(239) =< s(252)
s(242) =< s(252)
s(239) =< s(251)
s(242) =< s(251)
s(240) =< s(250)
s(241) =< s(250)
s(242) =< s(250)
s(243) =< s(250)
s(240) =< s(249)
s(241) =< s(249)
s(242) =< s(249)
s(243) =< s(249)

  with precondition: [A=5,E=3,F=2,B=D,B>=1,C>=B+3] 

* Chain [[96,97],99,107]: 6*it(96)+4*it(97)+12*s(239)+36*s(240)+24*s(241)+24*s(242)+12*s(243)+2*s(244)+2*s(245)+6*s(246)+42*s(247)+6*s(248)+5
  Such that:it(96) =< C/2-D/2
aux(116) =< C-D
aux(117) =< 4*C-4*D
it(97) =< aux(116)
it(96) =< aux(116)
it(97) =< aux(117)
s(251) =< aux(117)* (1/12)
aux(75) =< it(96)*aux(117)
s(253) =< aux(117)* (1/8)
s(249) =< aux(117)* (1/3)
s(255) =< aux(117)* (1/4)
s(252) =< aux(75)* (1/12)
s(254) =< aux(75)* (1/8)
s(250) =< aux(75)* (1/3)
s(256) =< aux(75)* (1/4)
s(244) =< s(255)
s(245) =< aux(75)
s(246) =< s(256)
s(247) =< s(256)
s(246) =< s(255)
s(247) =< s(255)
s(247) =< aux(75)
s(248) =< aux(75)
s(247) =< aux(117)
s(248) =< aux(117)
s(239) =< s(256)
s(240) =< s(256)
s(241) =< s(256)
s(242) =< s(256)
s(239) =< s(255)
s(240) =< s(255)
s(241) =< s(255)
s(242) =< s(255)
s(240) =< s(254)
s(242) =< s(254)
s(240) =< s(253)
s(242) =< s(253)
s(239) =< s(252)
s(242) =< s(252)
s(239) =< s(251)
s(242) =< s(251)
s(240) =< s(250)
s(241) =< s(250)
s(242) =< s(250)
s(243) =< s(250)
s(240) =< s(249)
s(241) =< s(249)
s(242) =< s(249)
s(243) =< s(249)

  with precondition: [A=5,E=3,F=2,B=D,B>=1,C>=B+2] 

* Chain [[96,97],98,106]: 10*it(96)+12*s(239)+36*s(240)+24*s(241)+24*s(242)+12*s(243)+2*s(244)+2*s(245)+6*s(246)+42*s(247)+6*s(248)+526*s(347)+8
  Such that:aux(83) =< C-D
aux(132) =< 4*C-4*D
it(96) =< aux(132)
s(347) =< aux(132)
it(96) =< aux(83)
s(251) =< aux(132)* (1/12)
aux(75) =< it(96)*aux(132)
s(253) =< aux(132)* (1/8)
s(249) =< aux(132)* (1/3)
s(255) =< aux(132)* (1/4)
s(252) =< aux(75)* (1/12)
s(254) =< aux(75)* (1/8)
s(250) =< aux(75)* (1/3)
s(256) =< aux(75)* (1/4)
s(244) =< s(255)
s(245) =< aux(75)
s(246) =< s(256)
s(247) =< s(256)
s(246) =< s(255)
s(247) =< s(255)
s(247) =< aux(75)
s(248) =< aux(75)
s(247) =< aux(132)
s(248) =< aux(132)
s(239) =< s(256)
s(240) =< s(256)
s(241) =< s(256)
s(242) =< s(256)
s(239) =< s(255)
s(240) =< s(255)
s(241) =< s(255)
s(242) =< s(255)
s(240) =< s(254)
s(242) =< s(254)
s(240) =< s(253)
s(242) =< s(253)
s(239) =< s(252)
s(242) =< s(252)
s(239) =< s(251)
s(242) =< s(251)
s(240) =< s(250)
s(241) =< s(250)
s(242) =< s(250)
s(243) =< s(250)
s(240) =< s(249)
s(241) =< s(249)
s(242) =< s(249)
s(243) =< s(249)

  with precondition: [A=5,E=3,F=3,B=D,B>=1,C>=B+2] 

* Chain [107]: 0
  with precondition: [A=2,F=2,G=B,H=C,I=D,J=E] 

* Chain [106]: 0
  with precondition: [A=3,F=3] 

* Chain [105]: 3
  with precondition: [A=5,E=3,F=2,B+1=C,B=D,B>=1] 

* Chain [104]: 1
  with precondition: [A=5,E=3,F=2,B=C,B=D,B>=1] 

* Chain [103]: 2*s(259)+3
  Such that:s(259) =< -B+C

  with precondition: [A=5,E=3,F=2,B=D,B>=1,C>=B+2] 

* Chain [102]: 2*s(260)+2
  Such that:s(260) =< -B+C

  with precondition: [A=5,F=3] 

* Chain [101,107]: 72*s(269)+108*s(270)+108*s(271)+72*s(272)+72*s(273)+36*s(275)+216*s(277)+144*s(278)+144*s(279)+72*s(280)+90*s(281)+378*s(318)+9
  Such that:aux(108) =< 4*C-4*D
aux(109) =< C/2-D/2
aux(110) =< C/3-D/3
aux(111) =< 4/3*C-4/3*D
aux(112) =< C-D
s(281) =< aux(112)
s(269) =< aux(108)
s(318) =< aux(112)
s(318) =< aux(108)
s(270) =< aux(112)
s(271) =< aux(112)
s(272) =< aux(112)
s(273) =< aux(112)
s(271) =< aux(109)
s(273) =< aux(109)
s(270) =< aux(110)
s(273) =< aux(110)
s(271) =< aux(111)
s(272) =< aux(111)
s(273) =< aux(111)
s(275) =< aux(111)
s(271) =< aux(108)
s(272) =< aux(108)
s(273) =< aux(108)
s(275) =< aux(108)
s(277) =< aux(112)
s(278) =< aux(112)
s(279) =< aux(112)
s(277) =< aux(109)
s(279) =< aux(109)
s(279) =< aux(110)
s(277) =< aux(111)
s(278) =< aux(111)
s(279) =< aux(111)
s(280) =< aux(111)

  with precondition: [A=5,E=3,F=2,B=D,B>=1,C>=B+2] 

* Chain [100,107]: 7
  with precondition: [A=5,E=3,F=2,B+2=C,B=D,B>=1] 

* Chain [99,107]: 5
  with precondition: [A=5,E=3,F=2,B+1=C,B=D,B>=1] 

* Chain [98,106]: 40*s(347)+36*s(348)+36*s(349)+108*s(350)+72*s(351)+72*s(352)+36*s(354)+126*s(385)+8
  Such that:aux(127) =< 4*C-4*D
aux(128) =< C/2-D/2
aux(129) =< C/3-D/3
aux(130) =< 4/3*C-4/3*D
aux(131) =< C-D
s(347) =< aux(131)
s(348) =< aux(127)
s(385) =< aux(131)
s(385) =< aux(127)
s(349) =< aux(131)
s(350) =< aux(131)
s(351) =< aux(131)
s(352) =< aux(131)
s(350) =< aux(128)
s(352) =< aux(128)
s(349) =< aux(129)
s(352) =< aux(129)
s(350) =< aux(130)
s(351) =< aux(130)
s(352) =< aux(130)
s(354) =< aux(130)
s(350) =< aux(127)
s(351) =< aux(127)
s(352) =< aux(127)
s(354) =< aux(127)

  with precondition: [A=5,E=3,F=3,B=D,B>=1,C>=B+1] 


#### Cost of chains of n_evalrandom2dbb10in___17_loop_cont(A,B,C,D,E,F):
* Chain [109]: 0
  with precondition: [A=2] 

* Chain [108]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalrandom2dNodeBlock7in___2(A,B,C,D,E):
* Chain [117]: 2
  with precondition: [A=0,B=1,C=1,D=2] 

* Chain [116]: 13746*s(616)+756*s(617)+720*s(618)+840*s(619)+480*s(620)+300*s(622)+720*s(624)+1200*s(625)+480*s(626)+396*s(627)+1220*s(628)+48*s(654)+6196*s(655)+96*s(666)+30*s(667)+90*s(668)+630*s(669)+90*s(670)+180*s(671)+540*s(672)+360*s(673)+360*s(674)+180*s(675)+46*s(682)+138*s(683)+966*s(684)+138*s(685)+276*s(686)+828*s(687)+552*s(688)+552*s(689)+276*s(690)+16*s(705)+48*s(706)+336*s(707)+48*s(708)+96*s(709)+288*s(710)+192*s(711)+192*s(712)+96*s(713)+156*s(820)+288*s(824)+144*s(924)+4*s(1554)+12*s(1555)+84*s(1556)+12*s(1557)+24*s(1558)+72*s(1559)+48*s(1560)+48*s(1561)+24*s(1562)+16
  Such that:aux(204) =< B
aux(205) =< 4*B
aux(206) =< B/2
aux(207) =< B/3
aux(208) =< 4/3*B
s(628) =< aux(204)
s(617) =< aux(204)
s(624) =< aux(204)
s(625) =< aux(204)
s(626) =< aux(204)
s(624) =< aux(206)
s(626) =< aux(206)
s(617) =< aux(207)
s(626) =< aux(207)
s(624) =< aux(208)
s(625) =< aux(208)
s(626) =< aux(208)
s(627) =< aux(208)
s(616) =< aux(205)
s(655) =< aux(204)
s(655) =< aux(205)
s(657) =< aux(205)* (1/12)
s(658) =< s(655)*aux(205)
s(659) =< aux(205)* (1/8)
s(660) =< aux(205)* (1/3)
s(661) =< aux(205)* (1/4)
s(662) =< s(658)* (1/12)
s(663) =< s(658)* (1/8)
s(664) =< s(658)* (1/3)
s(665) =< s(658)* (1/4)
s(666) =< s(661)
s(667) =< s(658)
s(668) =< s(665)
s(669) =< s(665)
s(668) =< s(661)
s(669) =< s(661)
s(669) =< s(658)
s(670) =< s(658)
s(669) =< aux(205)
s(670) =< aux(205)
s(671) =< s(665)
s(672) =< s(665)
s(673) =< s(665)
s(674) =< s(665)
s(671) =< s(661)
s(672) =< s(661)
s(673) =< s(661)
s(674) =< s(661)
s(672) =< s(663)
s(674) =< s(663)
s(672) =< s(659)
s(674) =< s(659)
s(671) =< s(662)
s(674) =< s(662)
s(671) =< s(657)
s(674) =< s(657)
s(672) =< s(664)
s(673) =< s(664)
s(674) =< s(664)
s(675) =< s(664)
s(672) =< s(660)
s(673) =< s(660)
s(674) =< s(660)
s(675) =< s(660)
s(677) =< s(628)*aux(205)
s(678) =< s(677)* (1/12)
s(679) =< s(677)* (1/8)
s(680) =< s(677)* (1/3)
s(681) =< s(677)* (1/4)
s(682) =< s(677)
s(683) =< s(681)
s(684) =< s(681)
s(683) =< s(661)
s(684) =< s(661)
s(684) =< s(677)
s(685) =< s(677)
s(684) =< aux(205)
s(685) =< aux(205)
s(686) =< s(681)
s(687) =< s(681)
s(688) =< s(681)
s(689) =< s(681)
s(686) =< s(661)
s(687) =< s(661)
s(688) =< s(661)
s(689) =< s(661)
s(687) =< s(679)
s(689) =< s(679)
s(687) =< s(659)
s(689) =< s(659)
s(686) =< s(678)
s(689) =< s(678)
s(686) =< s(657)
s(689) =< s(657)
s(687) =< s(680)
s(688) =< s(680)
s(689) =< s(680)
s(690) =< s(680)
s(687) =< s(660)
s(688) =< s(660)
s(689) =< s(660)
s(690) =< s(660)
s(1545) =< s(616)*aux(205)
s(1549) =< s(1545)* (1/12)
s(1550) =< s(1545)* (1/8)
s(1551) =< s(1545)* (1/3)
s(1552) =< s(1545)* (1/4)
s(1554) =< s(1545)
s(1555) =< s(1552)
s(1556) =< s(1552)
s(1555) =< s(661)
s(1556) =< s(661)
s(1556) =< s(1545)
s(1557) =< s(1545)
s(1556) =< aux(205)
s(1557) =< aux(205)
s(1558) =< s(1552)
s(1559) =< s(1552)
s(1560) =< s(1552)
s(1561) =< s(1552)
s(1558) =< s(661)
s(1559) =< s(661)
s(1560) =< s(661)
s(1561) =< s(661)
s(1559) =< s(1550)
s(1561) =< s(1550)
s(1559) =< s(659)
s(1561) =< s(659)
s(1558) =< s(1549)
s(1561) =< s(1549)
s(1558) =< s(657)
s(1561) =< s(657)
s(1559) =< s(1551)
s(1560) =< s(1551)
s(1561) =< s(1551)
s(1562) =< s(1551)
s(1559) =< s(660)
s(1560) =< s(660)
s(1561) =< s(660)
s(1562) =< s(660)
s(618) =< aux(204)
s(619) =< aux(204)
s(620) =< aux(204)
s(618) =< aux(206)
s(620) =< aux(206)
s(620) =< aux(207)
s(618) =< aux(208)
s(619) =< aux(208)
s(620) =< aux(208)
s(622) =< aux(208)
s(618) =< aux(205)
s(619) =< aux(205)
s(620) =< aux(205)
s(622) =< aux(205)
s(654) =< aux(206)
s(654) =< aux(204)
s(700) =< s(654)*aux(205)
s(701) =< s(700)* (1/12)
s(702) =< s(700)* (1/8)
s(703) =< s(700)* (1/3)
s(704) =< s(700)* (1/4)
s(705) =< s(700)
s(706) =< s(704)
s(707) =< s(704)
s(706) =< s(661)
s(707) =< s(661)
s(707) =< s(700)
s(708) =< s(700)
s(707) =< aux(205)
s(708) =< aux(205)
s(709) =< s(704)
s(710) =< s(704)
s(711) =< s(704)
s(712) =< s(704)
s(709) =< s(661)
s(710) =< s(661)
s(711) =< s(661)
s(712) =< s(661)
s(710) =< s(702)
s(712) =< s(702)
s(710) =< s(659)
s(712) =< s(659)
s(709) =< s(701)
s(712) =< s(701)
s(709) =< s(657)
s(712) =< s(657)
s(710) =< s(703)
s(711) =< s(703)
s(712) =< s(703)
s(713) =< s(703)
s(710) =< s(660)
s(711) =< s(660)
s(712) =< s(660)
s(713) =< s(660)
s(820) =< aux(204)
s(820) =< aux(207)
s(820) =< aux(208)
s(820) =< aux(205)
s(824) =< aux(204)
s(824) =< aux(207)
s(824) =< aux(208)
s(924) =< aux(204)
s(924) =< aux(207)
s(924) =< aux(205)

  with precondition: [A=0,C=1,D=3,B>=1] 

* Chain [115]: 13746*s(1591)+756*s(1592)+720*s(1593)+840*s(1594)+480*s(1595)+300*s(1597)+720*s(1599)+1200*s(1600)+480*s(1601)+396*s(1602)+1220*s(1603)+48*s(1629)+6196*s(1630)+96*s(1641)+30*s(1642)+90*s(1643)+630*s(1644)+90*s(1645)+180*s(1646)+540*s(1647)+360*s(1648)+360*s(1649)+180*s(1650)+46*s(1657)+138*s(1658)+966*s(1659)+138*s(1660)+276*s(1661)+828*s(1662)+552*s(1663)+552*s(1664)+276*s(1665)+16*s(1680)+48*s(1681)+336*s(1682)+48*s(1683)+96*s(1684)+288*s(1685)+192*s(1686)+192*s(1687)+96*s(1688)+156*s(1795)+288*s(1799)+144*s(1899)+4*s(2529)+12*s(2530)+84*s(2531)+12*s(2532)+24*s(2533)+72*s(2534)+48*s(2535)+48*s(2536)+24*s(2537)+16
  Such that:aux(275) =< B
aux(276) =< 4*B
aux(277) =< B/2
aux(278) =< B/3
aux(279) =< 4/3*B
s(1603) =< aux(275)
s(1592) =< aux(275)
s(1599) =< aux(275)
s(1600) =< aux(275)
s(1601) =< aux(275)
s(1599) =< aux(277)
s(1601) =< aux(277)
s(1592) =< aux(278)
s(1601) =< aux(278)
s(1599) =< aux(279)
s(1600) =< aux(279)
s(1601) =< aux(279)
s(1602) =< aux(279)
s(1591) =< aux(276)
s(1630) =< aux(275)
s(1630) =< aux(276)
s(1632) =< aux(276)* (1/12)
s(1633) =< s(1630)*aux(276)
s(1634) =< aux(276)* (1/8)
s(1635) =< aux(276)* (1/3)
s(1636) =< aux(276)* (1/4)
s(1637) =< s(1633)* (1/12)
s(1638) =< s(1633)* (1/8)
s(1639) =< s(1633)* (1/3)
s(1640) =< s(1633)* (1/4)
s(1641) =< s(1636)
s(1642) =< s(1633)
s(1643) =< s(1640)
s(1644) =< s(1640)
s(1643) =< s(1636)
s(1644) =< s(1636)
s(1644) =< s(1633)
s(1645) =< s(1633)
s(1644) =< aux(276)
s(1645) =< aux(276)
s(1646) =< s(1640)
s(1647) =< s(1640)
s(1648) =< s(1640)
s(1649) =< s(1640)
s(1646) =< s(1636)
s(1647) =< s(1636)
s(1648) =< s(1636)
s(1649) =< s(1636)
s(1647) =< s(1638)
s(1649) =< s(1638)
s(1647) =< s(1634)
s(1649) =< s(1634)
s(1646) =< s(1637)
s(1649) =< s(1637)
s(1646) =< s(1632)
s(1649) =< s(1632)
s(1647) =< s(1639)
s(1648) =< s(1639)
s(1649) =< s(1639)
s(1650) =< s(1639)
s(1647) =< s(1635)
s(1648) =< s(1635)
s(1649) =< s(1635)
s(1650) =< s(1635)
s(1652) =< s(1603)*aux(276)
s(1653) =< s(1652)* (1/12)
s(1654) =< s(1652)* (1/8)
s(1655) =< s(1652)* (1/3)
s(1656) =< s(1652)* (1/4)
s(1657) =< s(1652)
s(1658) =< s(1656)
s(1659) =< s(1656)
s(1658) =< s(1636)
s(1659) =< s(1636)
s(1659) =< s(1652)
s(1660) =< s(1652)
s(1659) =< aux(276)
s(1660) =< aux(276)
s(1661) =< s(1656)
s(1662) =< s(1656)
s(1663) =< s(1656)
s(1664) =< s(1656)
s(1661) =< s(1636)
s(1662) =< s(1636)
s(1663) =< s(1636)
s(1664) =< s(1636)
s(1662) =< s(1654)
s(1664) =< s(1654)
s(1662) =< s(1634)
s(1664) =< s(1634)
s(1661) =< s(1653)
s(1664) =< s(1653)
s(1661) =< s(1632)
s(1664) =< s(1632)
s(1662) =< s(1655)
s(1663) =< s(1655)
s(1664) =< s(1655)
s(1665) =< s(1655)
s(1662) =< s(1635)
s(1663) =< s(1635)
s(1664) =< s(1635)
s(1665) =< s(1635)
s(2520) =< s(1591)*aux(276)
s(2524) =< s(2520)* (1/12)
s(2525) =< s(2520)* (1/8)
s(2526) =< s(2520)* (1/3)
s(2527) =< s(2520)* (1/4)
s(2529) =< s(2520)
s(2530) =< s(2527)
s(2531) =< s(2527)
s(2530) =< s(1636)
s(2531) =< s(1636)
s(2531) =< s(2520)
s(2532) =< s(2520)
s(2531) =< aux(276)
s(2532) =< aux(276)
s(2533) =< s(2527)
s(2534) =< s(2527)
s(2535) =< s(2527)
s(2536) =< s(2527)
s(2533) =< s(1636)
s(2534) =< s(1636)
s(2535) =< s(1636)
s(2536) =< s(1636)
s(2534) =< s(2525)
s(2536) =< s(2525)
s(2534) =< s(1634)
s(2536) =< s(1634)
s(2533) =< s(2524)
s(2536) =< s(2524)
s(2533) =< s(1632)
s(2536) =< s(1632)
s(2534) =< s(2526)
s(2535) =< s(2526)
s(2536) =< s(2526)
s(2537) =< s(2526)
s(2534) =< s(1635)
s(2535) =< s(1635)
s(2536) =< s(1635)
s(2537) =< s(1635)
s(1593) =< aux(275)
s(1594) =< aux(275)
s(1595) =< aux(275)
s(1593) =< aux(277)
s(1595) =< aux(277)
s(1595) =< aux(278)
s(1593) =< aux(279)
s(1594) =< aux(279)
s(1595) =< aux(279)
s(1597) =< aux(279)
s(1593) =< aux(276)
s(1594) =< aux(276)
s(1595) =< aux(276)
s(1597) =< aux(276)
s(1629) =< aux(277)
s(1629) =< aux(275)
s(1675) =< s(1629)*aux(276)
s(1676) =< s(1675)* (1/12)
s(1677) =< s(1675)* (1/8)
s(1678) =< s(1675)* (1/3)
s(1679) =< s(1675)* (1/4)
s(1680) =< s(1675)
s(1681) =< s(1679)
s(1682) =< s(1679)
s(1681) =< s(1636)
s(1682) =< s(1636)
s(1682) =< s(1675)
s(1683) =< s(1675)
s(1682) =< aux(276)
s(1683) =< aux(276)
s(1684) =< s(1679)
s(1685) =< s(1679)
s(1686) =< s(1679)
s(1687) =< s(1679)
s(1684) =< s(1636)
s(1685) =< s(1636)
s(1686) =< s(1636)
s(1687) =< s(1636)
s(1685) =< s(1677)
s(1687) =< s(1677)
s(1685) =< s(1634)
s(1687) =< s(1634)
s(1684) =< s(1676)
s(1687) =< s(1676)
s(1684) =< s(1632)
s(1687) =< s(1632)
s(1685) =< s(1678)
s(1686) =< s(1678)
s(1687) =< s(1678)
s(1688) =< s(1678)
s(1685) =< s(1635)
s(1686) =< s(1635)
s(1687) =< s(1635)
s(1688) =< s(1635)
s(1795) =< aux(275)
s(1795) =< aux(278)
s(1795) =< aux(279)
s(1795) =< aux(276)
s(1799) =< aux(275)
s(1799) =< aux(278)
s(1799) =< aux(279)
s(1899) =< aux(275)
s(1899) =< aux(278)
s(1899) =< aux(276)

  with precondition: [A=0,C=1,D=2,B>=2] 

* Chain [114]: 6
  with precondition: [A=0,B=2,C=1,D=3] 

* Chain [113]: 10
  with precondition: [A=0,B=3,C=1,D=2] 

* Chain [112]: 10
  with precondition: [A=0,B=3,C=1,D=3] 

* Chain [111]: 12
  with precondition: [A=0,B=4,C=1,D=2] 

* Chain [110]: 12
  with precondition: [A=0,B=4,C=1,D=3] 


#### Cost of chains of n_evalrandom2dNodeBlockin___1(A,B,C,D,E):
* Chain [125]: 2
  with precondition: [A=0,B=1,C=1,D=0] 

* Chain [124]: 2
  with precondition: [A=0,B=1,C=1,D=1] 

* Chain [123]: 13746*s(2730)+756*s(2731)+720*s(2732)+840*s(2733)+480*s(2734)+300*s(2736)+720*s(2738)+1200*s(2739)+480*s(2740)+396*s(2741)+1220*s(2742)+48*s(2768)+6196*s(2769)+96*s(2780)+30*s(2781)+90*s(2782)+630*s(2783)+90*s(2784)+180*s(2785)+540*s(2786)+360*s(2787)+360*s(2788)+180*s(2789)+46*s(2796)+138*s(2797)+966*s(2798)+138*s(2799)+276*s(2800)+828*s(2801)+552*s(2802)+552*s(2803)+276*s(2804)+16*s(2819)+48*s(2820)+336*s(2821)+48*s(2822)+96*s(2823)+288*s(2824)+192*s(2825)+192*s(2826)+96*s(2827)+156*s(2934)+288*s(2938)+144*s(3038)+4*s(3668)+12*s(3669)+84*s(3670)+12*s(3671)+24*s(3672)+72*s(3673)+48*s(3674)+48*s(3675)+24*s(3676)+16
  Such that:aux(346) =< B
aux(347) =< 4*B
aux(348) =< B/2
aux(349) =< B/3
aux(350) =< 4/3*B
s(2742) =< aux(346)
s(2731) =< aux(346)
s(2738) =< aux(346)
s(2739) =< aux(346)
s(2740) =< aux(346)
s(2738) =< aux(348)
s(2740) =< aux(348)
s(2731) =< aux(349)
s(2740) =< aux(349)
s(2738) =< aux(350)
s(2739) =< aux(350)
s(2740) =< aux(350)
s(2741) =< aux(350)
s(2730) =< aux(347)
s(2769) =< aux(346)
s(2769) =< aux(347)
s(2771) =< aux(347)* (1/12)
s(2772) =< s(2769)*aux(347)
s(2773) =< aux(347)* (1/8)
s(2774) =< aux(347)* (1/3)
s(2775) =< aux(347)* (1/4)
s(2776) =< s(2772)* (1/12)
s(2777) =< s(2772)* (1/8)
s(2778) =< s(2772)* (1/3)
s(2779) =< s(2772)* (1/4)
s(2780) =< s(2775)
s(2781) =< s(2772)
s(2782) =< s(2779)
s(2783) =< s(2779)
s(2782) =< s(2775)
s(2783) =< s(2775)
s(2783) =< s(2772)
s(2784) =< s(2772)
s(2783) =< aux(347)
s(2784) =< aux(347)
s(2785) =< s(2779)
s(2786) =< s(2779)
s(2787) =< s(2779)
s(2788) =< s(2779)
s(2785) =< s(2775)
s(2786) =< s(2775)
s(2787) =< s(2775)
s(2788) =< s(2775)
s(2786) =< s(2777)
s(2788) =< s(2777)
s(2786) =< s(2773)
s(2788) =< s(2773)
s(2785) =< s(2776)
s(2788) =< s(2776)
s(2785) =< s(2771)
s(2788) =< s(2771)
s(2786) =< s(2778)
s(2787) =< s(2778)
s(2788) =< s(2778)
s(2789) =< s(2778)
s(2786) =< s(2774)
s(2787) =< s(2774)
s(2788) =< s(2774)
s(2789) =< s(2774)
s(2791) =< s(2742)*aux(347)
s(2792) =< s(2791)* (1/12)
s(2793) =< s(2791)* (1/8)
s(2794) =< s(2791)* (1/3)
s(2795) =< s(2791)* (1/4)
s(2796) =< s(2791)
s(2797) =< s(2795)
s(2798) =< s(2795)
s(2797) =< s(2775)
s(2798) =< s(2775)
s(2798) =< s(2791)
s(2799) =< s(2791)
s(2798) =< aux(347)
s(2799) =< aux(347)
s(2800) =< s(2795)
s(2801) =< s(2795)
s(2802) =< s(2795)
s(2803) =< s(2795)
s(2800) =< s(2775)
s(2801) =< s(2775)
s(2802) =< s(2775)
s(2803) =< s(2775)
s(2801) =< s(2793)
s(2803) =< s(2793)
s(2801) =< s(2773)
s(2803) =< s(2773)
s(2800) =< s(2792)
s(2803) =< s(2792)
s(2800) =< s(2771)
s(2803) =< s(2771)
s(2801) =< s(2794)
s(2802) =< s(2794)
s(2803) =< s(2794)
s(2804) =< s(2794)
s(2801) =< s(2774)
s(2802) =< s(2774)
s(2803) =< s(2774)
s(2804) =< s(2774)
s(3659) =< s(2730)*aux(347)
s(3663) =< s(3659)* (1/12)
s(3664) =< s(3659)* (1/8)
s(3665) =< s(3659)* (1/3)
s(3666) =< s(3659)* (1/4)
s(3668) =< s(3659)
s(3669) =< s(3666)
s(3670) =< s(3666)
s(3669) =< s(2775)
s(3670) =< s(2775)
s(3670) =< s(3659)
s(3671) =< s(3659)
s(3670) =< aux(347)
s(3671) =< aux(347)
s(3672) =< s(3666)
s(3673) =< s(3666)
s(3674) =< s(3666)
s(3675) =< s(3666)
s(3672) =< s(2775)
s(3673) =< s(2775)
s(3674) =< s(2775)
s(3675) =< s(2775)
s(3673) =< s(3664)
s(3675) =< s(3664)
s(3673) =< s(2773)
s(3675) =< s(2773)
s(3672) =< s(3663)
s(3675) =< s(3663)
s(3672) =< s(2771)
s(3675) =< s(2771)
s(3673) =< s(3665)
s(3674) =< s(3665)
s(3675) =< s(3665)
s(3676) =< s(3665)
s(3673) =< s(2774)
s(3674) =< s(2774)
s(3675) =< s(2774)
s(3676) =< s(2774)
s(2732) =< aux(346)
s(2733) =< aux(346)
s(2734) =< aux(346)
s(2732) =< aux(348)
s(2734) =< aux(348)
s(2734) =< aux(349)
s(2732) =< aux(350)
s(2733) =< aux(350)
s(2734) =< aux(350)
s(2736) =< aux(350)
s(2732) =< aux(347)
s(2733) =< aux(347)
s(2734) =< aux(347)
s(2736) =< aux(347)
s(2768) =< aux(348)
s(2768) =< aux(346)
s(2814) =< s(2768)*aux(347)
s(2815) =< s(2814)* (1/12)
s(2816) =< s(2814)* (1/8)
s(2817) =< s(2814)* (1/3)
s(2818) =< s(2814)* (1/4)
s(2819) =< s(2814)
s(2820) =< s(2818)
s(2821) =< s(2818)
s(2820) =< s(2775)
s(2821) =< s(2775)
s(2821) =< s(2814)
s(2822) =< s(2814)
s(2821) =< aux(347)
s(2822) =< aux(347)
s(2823) =< s(2818)
s(2824) =< s(2818)
s(2825) =< s(2818)
s(2826) =< s(2818)
s(2823) =< s(2775)
s(2824) =< s(2775)
s(2825) =< s(2775)
s(2826) =< s(2775)
s(2824) =< s(2816)
s(2826) =< s(2816)
s(2824) =< s(2773)
s(2826) =< s(2773)
s(2823) =< s(2815)
s(2826) =< s(2815)
s(2823) =< s(2771)
s(2826) =< s(2771)
s(2824) =< s(2817)
s(2825) =< s(2817)
s(2826) =< s(2817)
s(2827) =< s(2817)
s(2824) =< s(2774)
s(2825) =< s(2774)
s(2826) =< s(2774)
s(2827) =< s(2774)
s(2934) =< aux(346)
s(2934) =< aux(349)
s(2934) =< aux(350)
s(2934) =< aux(347)
s(2938) =< aux(346)
s(2938) =< aux(349)
s(2938) =< aux(350)
s(3038) =< aux(346)
s(3038) =< aux(349)
s(3038) =< aux(347)

  with precondition: [A=0,C=1,D=0,B>=2] 

* Chain [122]: 13746*s(3705)+756*s(3706)+720*s(3707)+840*s(3708)+480*s(3709)+300*s(3711)+720*s(3713)+1200*s(3714)+480*s(3715)+396*s(3716)+1220*s(3717)+48*s(3743)+6196*s(3744)+96*s(3755)+30*s(3756)+90*s(3757)+630*s(3758)+90*s(3759)+180*s(3760)+540*s(3761)+360*s(3762)+360*s(3763)+180*s(3764)+46*s(3771)+138*s(3772)+966*s(3773)+138*s(3774)+276*s(3775)+828*s(3776)+552*s(3777)+552*s(3778)+276*s(3779)+16*s(3794)+48*s(3795)+336*s(3796)+48*s(3797)+96*s(3798)+288*s(3799)+192*s(3800)+192*s(3801)+96*s(3802)+156*s(3909)+288*s(3913)+144*s(4013)+4*s(4323)+12*s(4324)+84*s(4325)+12*s(4326)+24*s(4327)+72*s(4328)+48*s(4329)+48*s(4330)+24*s(4331)+16
  Such that:aux(417) =< B
aux(418) =< 4*B
aux(419) =< B/2
aux(420) =< B/3
aux(421) =< 4/3*B
s(3717) =< aux(417)
s(3706) =< aux(417)
s(3713) =< aux(417)
s(3714) =< aux(417)
s(3715) =< aux(417)
s(3713) =< aux(419)
s(3715) =< aux(419)
s(3706) =< aux(420)
s(3715) =< aux(420)
s(3713) =< aux(421)
s(3714) =< aux(421)
s(3715) =< aux(421)
s(3716) =< aux(421)
s(3705) =< aux(418)
s(3744) =< aux(417)
s(3744) =< aux(418)
s(3746) =< aux(418)* (1/12)
s(3747) =< s(3744)*aux(418)
s(3748) =< aux(418)* (1/8)
s(3749) =< aux(418)* (1/3)
s(3750) =< aux(418)* (1/4)
s(3751) =< s(3747)* (1/12)
s(3752) =< s(3747)* (1/8)
s(3753) =< s(3747)* (1/3)
s(3754) =< s(3747)* (1/4)
s(3755) =< s(3750)
s(3756) =< s(3747)
s(3757) =< s(3754)
s(3758) =< s(3754)
s(3757) =< s(3750)
s(3758) =< s(3750)
s(3758) =< s(3747)
s(3759) =< s(3747)
s(3758) =< aux(418)
s(3759) =< aux(418)
s(3760) =< s(3754)
s(3761) =< s(3754)
s(3762) =< s(3754)
s(3763) =< s(3754)
s(3760) =< s(3750)
s(3761) =< s(3750)
s(3762) =< s(3750)
s(3763) =< s(3750)
s(3761) =< s(3752)
s(3763) =< s(3752)
s(3761) =< s(3748)
s(3763) =< s(3748)
s(3760) =< s(3751)
s(3763) =< s(3751)
s(3760) =< s(3746)
s(3763) =< s(3746)
s(3761) =< s(3753)
s(3762) =< s(3753)
s(3763) =< s(3753)
s(3764) =< s(3753)
s(3761) =< s(3749)
s(3762) =< s(3749)
s(3763) =< s(3749)
s(3764) =< s(3749)
s(3766) =< s(3717)*aux(418)
s(3767) =< s(3766)* (1/12)
s(3768) =< s(3766)* (1/8)
s(3769) =< s(3766)* (1/3)
s(3770) =< s(3766)* (1/4)
s(3771) =< s(3766)
s(3772) =< s(3770)
s(3773) =< s(3770)
s(3772) =< s(3750)
s(3773) =< s(3750)
s(3773) =< s(3766)
s(3774) =< s(3766)
s(3773) =< aux(418)
s(3774) =< aux(418)
s(3775) =< s(3770)
s(3776) =< s(3770)
s(3777) =< s(3770)
s(3778) =< s(3770)
s(3775) =< s(3750)
s(3776) =< s(3750)
s(3777) =< s(3750)
s(3778) =< s(3750)
s(3776) =< s(3768)
s(3778) =< s(3768)
s(3776) =< s(3748)
s(3778) =< s(3748)
s(3775) =< s(3767)
s(3778) =< s(3767)
s(3775) =< s(3746)
s(3778) =< s(3746)
s(3776) =< s(3769)
s(3777) =< s(3769)
s(3778) =< s(3769)
s(3779) =< s(3769)
s(3776) =< s(3749)
s(3777) =< s(3749)
s(3778) =< s(3749)
s(3779) =< s(3749)
s(4314) =< s(3705)*aux(418)
s(4318) =< s(4314)* (1/12)
s(4319) =< s(4314)* (1/8)
s(4320) =< s(4314)* (1/3)
s(4321) =< s(4314)* (1/4)
s(4323) =< s(4314)
s(4324) =< s(4321)
s(4325) =< s(4321)
s(4324) =< s(3750)
s(4325) =< s(3750)
s(4325) =< s(4314)
s(4326) =< s(4314)
s(4325) =< aux(418)
s(4326) =< aux(418)
s(4327) =< s(4321)
s(4328) =< s(4321)
s(4329) =< s(4321)
s(4330) =< s(4321)
s(4327) =< s(3750)
s(4328) =< s(3750)
s(4329) =< s(3750)
s(4330) =< s(3750)
s(4328) =< s(4319)
s(4330) =< s(4319)
s(4328) =< s(3748)
s(4330) =< s(3748)
s(4327) =< s(4318)
s(4330) =< s(4318)
s(4327) =< s(3746)
s(4330) =< s(3746)
s(4328) =< s(4320)
s(4329) =< s(4320)
s(4330) =< s(4320)
s(4331) =< s(4320)
s(4328) =< s(3749)
s(4329) =< s(3749)
s(4330) =< s(3749)
s(4331) =< s(3749)
s(3707) =< aux(417)
s(3708) =< aux(417)
s(3709) =< aux(417)
s(3707) =< aux(419)
s(3709) =< aux(419)
s(3709) =< aux(420)
s(3707) =< aux(421)
s(3708) =< aux(421)
s(3709) =< aux(421)
s(3711) =< aux(421)
s(3707) =< aux(418)
s(3708) =< aux(418)
s(3709) =< aux(418)
s(3711) =< aux(418)
s(3743) =< aux(419)
s(3743) =< aux(417)
s(3789) =< s(3743)*aux(418)
s(3790) =< s(3789)* (1/12)
s(3791) =< s(3789)* (1/8)
s(3792) =< s(3789)* (1/3)
s(3793) =< s(3789)* (1/4)
s(3794) =< s(3789)
s(3795) =< s(3793)
s(3796) =< s(3793)
s(3795) =< s(3750)
s(3796) =< s(3750)
s(3796) =< s(3789)
s(3797) =< s(3789)
s(3796) =< aux(418)
s(3797) =< aux(418)
s(3798) =< s(3793)
s(3799) =< s(3793)
s(3800) =< s(3793)
s(3801) =< s(3793)
s(3798) =< s(3750)
s(3799) =< s(3750)
s(3800) =< s(3750)
s(3801) =< s(3750)
s(3799) =< s(3791)
s(3801) =< s(3791)
s(3799) =< s(3748)
s(3801) =< s(3748)
s(3798) =< s(3790)
s(3801) =< s(3790)
s(3798) =< s(3746)
s(3801) =< s(3746)
s(3799) =< s(3792)
s(3800) =< s(3792)
s(3801) =< s(3792)
s(3802) =< s(3792)
s(3799) =< s(3749)
s(3800) =< s(3749)
s(3801) =< s(3749)
s(3802) =< s(3749)
s(3909) =< aux(417)
s(3909) =< aux(420)
s(3909) =< aux(421)
s(3909) =< aux(418)
s(3913) =< aux(417)
s(3913) =< aux(420)
s(3913) =< aux(421)
s(4013) =< aux(417)
s(4013) =< aux(420)
s(4013) =< aux(418)

  with precondition: [A=0,C=1,D=1,B>=2] 

* Chain [121]: 10
  with precondition: [A=0,B=3,C=1,D=0] 

* Chain [120]: 10
  with precondition: [A=0,B=3,C=1,D=1] 

* Chain [119]: 12
  with precondition: [A=0,B=4,C=1,D=0] 

* Chain [118]: 12
  with precondition: [A=0,B=4,C=1,D=1] 


#### Cost of chains of n_evalrandom2dNodeBlock9in___23(A,B,C,D,E):
* Chain [133]: 3
  with precondition: [A=0,B=1,C=1,D=0] 

* Chain [132]: 3
  with precondition: [A=0,B=1,C=1,D=1] 

* Chain [131]: 3
  with precondition: [A=0,B=1,C=1,D=2] 

* Chain [130]: 1220*s(4841)+756*s(4842)+720*s(4843)+1200*s(4844)+480*s(4845)+396*s(4846)+13746*s(4847)+6196*s(4848)+96*s(4858)+30*s(4859)+90*s(4860)+630*s(4861)+90*s(4862)+180*s(4863)+540*s(4864)+360*s(4865)+360*s(4866)+180*s(4867)+46*s(4873)+138*s(4874)+966*s(4875)+138*s(4876)+276*s(4877)+828*s(4878)+552*s(4879)+552*s(4880)+276*s(4881)+4*s(4887)+12*s(4888)+84*s(4889)+12*s(4890)+24*s(4891)+72*s(4892)+48*s(4893)+48*s(4894)+24*s(4895)+720*s(4896)+840*s(4897)+480*s(4898)+300*s(4899)+48*s(4900)+16*s(4906)+48*s(4907)+336*s(4908)+48*s(4909)+96*s(4910)+288*s(4911)+192*s(4912)+192*s(4913)+96*s(4914)+156*s(4915)+288*s(4916)+144*s(4917)+17
  Such that:s(4836) =< B
s(4837) =< 4*B
s(4838) =< B/2
s(4839) =< B/3
s(4840) =< 4/3*B
s(4841) =< s(4836)
s(4842) =< s(4836)
s(4843) =< s(4836)
s(4844) =< s(4836)
s(4845) =< s(4836)
s(4843) =< s(4838)
s(4845) =< s(4838)
s(4842) =< s(4839)
s(4845) =< s(4839)
s(4843) =< s(4840)
s(4844) =< s(4840)
s(4845) =< s(4840)
s(4846) =< s(4840)
s(4847) =< s(4837)
s(4848) =< s(4836)
s(4848) =< s(4837)
s(4849) =< s(4837)* (1/12)
s(4850) =< s(4848)*s(4837)
s(4851) =< s(4837)* (1/8)
s(4852) =< s(4837)* (1/3)
s(4853) =< s(4837)* (1/4)
s(4854) =< s(4850)* (1/12)
s(4855) =< s(4850)* (1/8)
s(4856) =< s(4850)* (1/3)
s(4857) =< s(4850)* (1/4)
s(4858) =< s(4853)
s(4859) =< s(4850)
s(4860) =< s(4857)
s(4861) =< s(4857)
s(4860) =< s(4853)
s(4861) =< s(4853)
s(4861) =< s(4850)
s(4862) =< s(4850)
s(4861) =< s(4837)
s(4862) =< s(4837)
s(4863) =< s(4857)
s(4864) =< s(4857)
s(4865) =< s(4857)
s(4866) =< s(4857)
s(4863) =< s(4853)
s(4864) =< s(4853)
s(4865) =< s(4853)
s(4866) =< s(4853)
s(4864) =< s(4855)
s(4866) =< s(4855)
s(4864) =< s(4851)
s(4866) =< s(4851)
s(4863) =< s(4854)
s(4866) =< s(4854)
s(4863) =< s(4849)
s(4866) =< s(4849)
s(4864) =< s(4856)
s(4865) =< s(4856)
s(4866) =< s(4856)
s(4867) =< s(4856)
s(4864) =< s(4852)
s(4865) =< s(4852)
s(4866) =< s(4852)
s(4867) =< s(4852)
s(4868) =< s(4841)*s(4837)
s(4869) =< s(4868)* (1/12)
s(4870) =< s(4868)* (1/8)
s(4871) =< s(4868)* (1/3)
s(4872) =< s(4868)* (1/4)
s(4873) =< s(4868)
s(4874) =< s(4872)
s(4875) =< s(4872)
s(4874) =< s(4853)
s(4875) =< s(4853)
s(4875) =< s(4868)
s(4876) =< s(4868)
s(4875) =< s(4837)
s(4876) =< s(4837)
s(4877) =< s(4872)
s(4878) =< s(4872)
s(4879) =< s(4872)
s(4880) =< s(4872)
s(4877) =< s(4853)
s(4878) =< s(4853)
s(4879) =< s(4853)
s(4880) =< s(4853)
s(4878) =< s(4870)
s(4880) =< s(4870)
s(4878) =< s(4851)
s(4880) =< s(4851)
s(4877) =< s(4869)
s(4880) =< s(4869)
s(4877) =< s(4849)
s(4880) =< s(4849)
s(4878) =< s(4871)
s(4879) =< s(4871)
s(4880) =< s(4871)
s(4881) =< s(4871)
s(4878) =< s(4852)
s(4879) =< s(4852)
s(4880) =< s(4852)
s(4881) =< s(4852)
s(4882) =< s(4847)*s(4837)
s(4883) =< s(4882)* (1/12)
s(4884) =< s(4882)* (1/8)
s(4885) =< s(4882)* (1/3)
s(4886) =< s(4882)* (1/4)
s(4887) =< s(4882)
s(4888) =< s(4886)
s(4889) =< s(4886)
s(4888) =< s(4853)
s(4889) =< s(4853)
s(4889) =< s(4882)
s(4890) =< s(4882)
s(4889) =< s(4837)
s(4890) =< s(4837)
s(4891) =< s(4886)
s(4892) =< s(4886)
s(4893) =< s(4886)
s(4894) =< s(4886)
s(4891) =< s(4853)
s(4892) =< s(4853)
s(4893) =< s(4853)
s(4894) =< s(4853)
s(4892) =< s(4884)
s(4894) =< s(4884)
s(4892) =< s(4851)
s(4894) =< s(4851)
s(4891) =< s(4883)
s(4894) =< s(4883)
s(4891) =< s(4849)
s(4894) =< s(4849)
s(4892) =< s(4885)
s(4893) =< s(4885)
s(4894) =< s(4885)
s(4895) =< s(4885)
s(4892) =< s(4852)
s(4893) =< s(4852)
s(4894) =< s(4852)
s(4895) =< s(4852)
s(4896) =< s(4836)
s(4897) =< s(4836)
s(4898) =< s(4836)
s(4896) =< s(4838)
s(4898) =< s(4838)
s(4898) =< s(4839)
s(4896) =< s(4840)
s(4897) =< s(4840)
s(4898) =< s(4840)
s(4899) =< s(4840)
s(4896) =< s(4837)
s(4897) =< s(4837)
s(4898) =< s(4837)
s(4899) =< s(4837)
s(4900) =< s(4838)
s(4900) =< s(4836)
s(4901) =< s(4900)*s(4837)
s(4902) =< s(4901)* (1/12)
s(4903) =< s(4901)* (1/8)
s(4904) =< s(4901)* (1/3)
s(4905) =< s(4901)* (1/4)
s(4906) =< s(4901)
s(4907) =< s(4905)
s(4908) =< s(4905)
s(4907) =< s(4853)
s(4908) =< s(4853)
s(4908) =< s(4901)
s(4909) =< s(4901)
s(4908) =< s(4837)
s(4909) =< s(4837)
s(4910) =< s(4905)
s(4911) =< s(4905)
s(4912) =< s(4905)
s(4913) =< s(4905)
s(4910) =< s(4853)
s(4911) =< s(4853)
s(4912) =< s(4853)
s(4913) =< s(4853)
s(4911) =< s(4903)
s(4913) =< s(4903)
s(4911) =< s(4851)
s(4913) =< s(4851)
s(4910) =< s(4902)
s(4913) =< s(4902)
s(4910) =< s(4849)
s(4913) =< s(4849)
s(4911) =< s(4904)
s(4912) =< s(4904)
s(4913) =< s(4904)
s(4914) =< s(4904)
s(4911) =< s(4852)
s(4912) =< s(4852)
s(4913) =< s(4852)
s(4914) =< s(4852)
s(4915) =< s(4836)
s(4915) =< s(4839)
s(4915) =< s(4840)
s(4915) =< s(4837)
s(4916) =< s(4836)
s(4916) =< s(4839)
s(4916) =< s(4840)
s(4917) =< s(4836)
s(4917) =< s(4839)
s(4917) =< s(4837)

  with precondition: [A=0,C=1,D=3,B>=1] 

* Chain [129]: 1220*s(4923)+756*s(4924)+720*s(4925)+1200*s(4926)+480*s(4927)+396*s(4928)+13746*s(4929)+6196*s(4930)+96*s(4940)+30*s(4941)+90*s(4942)+630*s(4943)+90*s(4944)+180*s(4945)+540*s(4946)+360*s(4947)+360*s(4948)+180*s(4949)+46*s(4955)+138*s(4956)+966*s(4957)+138*s(4958)+276*s(4959)+828*s(4960)+552*s(4961)+552*s(4962)+276*s(4963)+4*s(4969)+12*s(4970)+84*s(4971)+12*s(4972)+24*s(4973)+72*s(4974)+48*s(4975)+48*s(4976)+24*s(4977)+720*s(4978)+840*s(4979)+480*s(4980)+300*s(4981)+48*s(4982)+16*s(4988)+48*s(4989)+336*s(4990)+48*s(4991)+96*s(4992)+288*s(4993)+192*s(4994)+192*s(4995)+96*s(4996)+156*s(4997)+288*s(4998)+144*s(4999)+17
  Such that:s(4918) =< B
s(4919) =< 4*B
s(4920) =< B/2
s(4921) =< B/3
s(4922) =< 4/3*B
s(4923) =< s(4918)
s(4924) =< s(4918)
s(4925) =< s(4918)
s(4926) =< s(4918)
s(4927) =< s(4918)
s(4925) =< s(4920)
s(4927) =< s(4920)
s(4924) =< s(4921)
s(4927) =< s(4921)
s(4925) =< s(4922)
s(4926) =< s(4922)
s(4927) =< s(4922)
s(4928) =< s(4922)
s(4929) =< s(4919)
s(4930) =< s(4918)
s(4930) =< s(4919)
s(4931) =< s(4919)* (1/12)
s(4932) =< s(4930)*s(4919)
s(4933) =< s(4919)* (1/8)
s(4934) =< s(4919)* (1/3)
s(4935) =< s(4919)* (1/4)
s(4936) =< s(4932)* (1/12)
s(4937) =< s(4932)* (1/8)
s(4938) =< s(4932)* (1/3)
s(4939) =< s(4932)* (1/4)
s(4940) =< s(4935)
s(4941) =< s(4932)
s(4942) =< s(4939)
s(4943) =< s(4939)
s(4942) =< s(4935)
s(4943) =< s(4935)
s(4943) =< s(4932)
s(4944) =< s(4932)
s(4943) =< s(4919)
s(4944) =< s(4919)
s(4945) =< s(4939)
s(4946) =< s(4939)
s(4947) =< s(4939)
s(4948) =< s(4939)
s(4945) =< s(4935)
s(4946) =< s(4935)
s(4947) =< s(4935)
s(4948) =< s(4935)
s(4946) =< s(4937)
s(4948) =< s(4937)
s(4946) =< s(4933)
s(4948) =< s(4933)
s(4945) =< s(4936)
s(4948) =< s(4936)
s(4945) =< s(4931)
s(4948) =< s(4931)
s(4946) =< s(4938)
s(4947) =< s(4938)
s(4948) =< s(4938)
s(4949) =< s(4938)
s(4946) =< s(4934)
s(4947) =< s(4934)
s(4948) =< s(4934)
s(4949) =< s(4934)
s(4950) =< s(4923)*s(4919)
s(4951) =< s(4950)* (1/12)
s(4952) =< s(4950)* (1/8)
s(4953) =< s(4950)* (1/3)
s(4954) =< s(4950)* (1/4)
s(4955) =< s(4950)
s(4956) =< s(4954)
s(4957) =< s(4954)
s(4956) =< s(4935)
s(4957) =< s(4935)
s(4957) =< s(4950)
s(4958) =< s(4950)
s(4957) =< s(4919)
s(4958) =< s(4919)
s(4959) =< s(4954)
s(4960) =< s(4954)
s(4961) =< s(4954)
s(4962) =< s(4954)
s(4959) =< s(4935)
s(4960) =< s(4935)
s(4961) =< s(4935)
s(4962) =< s(4935)
s(4960) =< s(4952)
s(4962) =< s(4952)
s(4960) =< s(4933)
s(4962) =< s(4933)
s(4959) =< s(4951)
s(4962) =< s(4951)
s(4959) =< s(4931)
s(4962) =< s(4931)
s(4960) =< s(4953)
s(4961) =< s(4953)
s(4962) =< s(4953)
s(4963) =< s(4953)
s(4960) =< s(4934)
s(4961) =< s(4934)
s(4962) =< s(4934)
s(4963) =< s(4934)
s(4964) =< s(4929)*s(4919)
s(4965) =< s(4964)* (1/12)
s(4966) =< s(4964)* (1/8)
s(4967) =< s(4964)* (1/3)
s(4968) =< s(4964)* (1/4)
s(4969) =< s(4964)
s(4970) =< s(4968)
s(4971) =< s(4968)
s(4970) =< s(4935)
s(4971) =< s(4935)
s(4971) =< s(4964)
s(4972) =< s(4964)
s(4971) =< s(4919)
s(4972) =< s(4919)
s(4973) =< s(4968)
s(4974) =< s(4968)
s(4975) =< s(4968)
s(4976) =< s(4968)
s(4973) =< s(4935)
s(4974) =< s(4935)
s(4975) =< s(4935)
s(4976) =< s(4935)
s(4974) =< s(4966)
s(4976) =< s(4966)
s(4974) =< s(4933)
s(4976) =< s(4933)
s(4973) =< s(4965)
s(4976) =< s(4965)
s(4973) =< s(4931)
s(4976) =< s(4931)
s(4974) =< s(4967)
s(4975) =< s(4967)
s(4976) =< s(4967)
s(4977) =< s(4967)
s(4974) =< s(4934)
s(4975) =< s(4934)
s(4976) =< s(4934)
s(4977) =< s(4934)
s(4978) =< s(4918)
s(4979) =< s(4918)
s(4980) =< s(4918)
s(4978) =< s(4920)
s(4980) =< s(4920)
s(4980) =< s(4921)
s(4978) =< s(4922)
s(4979) =< s(4922)
s(4980) =< s(4922)
s(4981) =< s(4922)
s(4978) =< s(4919)
s(4979) =< s(4919)
s(4980) =< s(4919)
s(4981) =< s(4919)
s(4982) =< s(4920)
s(4982) =< s(4918)
s(4983) =< s(4982)*s(4919)
s(4984) =< s(4983)* (1/12)
s(4985) =< s(4983)* (1/8)
s(4986) =< s(4983)* (1/3)
s(4987) =< s(4983)* (1/4)
s(4988) =< s(4983)
s(4989) =< s(4987)
s(4990) =< s(4987)
s(4989) =< s(4935)
s(4990) =< s(4935)
s(4990) =< s(4983)
s(4991) =< s(4983)
s(4990) =< s(4919)
s(4991) =< s(4919)
s(4992) =< s(4987)
s(4993) =< s(4987)
s(4994) =< s(4987)
s(4995) =< s(4987)
s(4992) =< s(4935)
s(4993) =< s(4935)
s(4994) =< s(4935)
s(4995) =< s(4935)
s(4993) =< s(4985)
s(4995) =< s(4985)
s(4993) =< s(4933)
s(4995) =< s(4933)
s(4992) =< s(4984)
s(4995) =< s(4984)
s(4992) =< s(4931)
s(4995) =< s(4931)
s(4993) =< s(4986)
s(4994) =< s(4986)
s(4995) =< s(4986)
s(4996) =< s(4986)
s(4993) =< s(4934)
s(4994) =< s(4934)
s(4995) =< s(4934)
s(4996) =< s(4934)
s(4997) =< s(4918)
s(4997) =< s(4921)
s(4997) =< s(4922)
s(4997) =< s(4919)
s(4998) =< s(4918)
s(4998) =< s(4921)
s(4998) =< s(4922)
s(4999) =< s(4918)
s(4999) =< s(4921)
s(4999) =< s(4919)

  with precondition: [A=0,C=1,D=0,B>=2] 

* Chain [128]: 1220*s(5005)+756*s(5006)+720*s(5007)+1200*s(5008)+480*s(5009)+396*s(5010)+13746*s(5011)+6196*s(5012)+96*s(5022)+30*s(5023)+90*s(5024)+630*s(5025)+90*s(5026)+180*s(5027)+540*s(5028)+360*s(5029)+360*s(5030)+180*s(5031)+46*s(5037)+138*s(5038)+966*s(5039)+138*s(5040)+276*s(5041)+828*s(5042)+552*s(5043)+552*s(5044)+276*s(5045)+4*s(5051)+12*s(5052)+84*s(5053)+12*s(5054)+24*s(5055)+72*s(5056)+48*s(5057)+48*s(5058)+24*s(5059)+720*s(5060)+840*s(5061)+480*s(5062)+300*s(5063)+48*s(5064)+16*s(5070)+48*s(5071)+336*s(5072)+48*s(5073)+96*s(5074)+288*s(5075)+192*s(5076)+192*s(5077)+96*s(5078)+156*s(5079)+288*s(5080)+144*s(5081)+17
  Such that:s(5000) =< B
s(5001) =< 4*B
s(5002) =< B/2
s(5003) =< B/3
s(5004) =< 4/3*B
s(5005) =< s(5000)
s(5006) =< s(5000)
s(5007) =< s(5000)
s(5008) =< s(5000)
s(5009) =< s(5000)
s(5007) =< s(5002)
s(5009) =< s(5002)
s(5006) =< s(5003)
s(5009) =< s(5003)
s(5007) =< s(5004)
s(5008) =< s(5004)
s(5009) =< s(5004)
s(5010) =< s(5004)
s(5011) =< s(5001)
s(5012) =< s(5000)
s(5012) =< s(5001)
s(5013) =< s(5001)* (1/12)
s(5014) =< s(5012)*s(5001)
s(5015) =< s(5001)* (1/8)
s(5016) =< s(5001)* (1/3)
s(5017) =< s(5001)* (1/4)
s(5018) =< s(5014)* (1/12)
s(5019) =< s(5014)* (1/8)
s(5020) =< s(5014)* (1/3)
s(5021) =< s(5014)* (1/4)
s(5022) =< s(5017)
s(5023) =< s(5014)
s(5024) =< s(5021)
s(5025) =< s(5021)
s(5024) =< s(5017)
s(5025) =< s(5017)
s(5025) =< s(5014)
s(5026) =< s(5014)
s(5025) =< s(5001)
s(5026) =< s(5001)
s(5027) =< s(5021)
s(5028) =< s(5021)
s(5029) =< s(5021)
s(5030) =< s(5021)
s(5027) =< s(5017)
s(5028) =< s(5017)
s(5029) =< s(5017)
s(5030) =< s(5017)
s(5028) =< s(5019)
s(5030) =< s(5019)
s(5028) =< s(5015)
s(5030) =< s(5015)
s(5027) =< s(5018)
s(5030) =< s(5018)
s(5027) =< s(5013)
s(5030) =< s(5013)
s(5028) =< s(5020)
s(5029) =< s(5020)
s(5030) =< s(5020)
s(5031) =< s(5020)
s(5028) =< s(5016)
s(5029) =< s(5016)
s(5030) =< s(5016)
s(5031) =< s(5016)
s(5032) =< s(5005)*s(5001)
s(5033) =< s(5032)* (1/12)
s(5034) =< s(5032)* (1/8)
s(5035) =< s(5032)* (1/3)
s(5036) =< s(5032)* (1/4)
s(5037) =< s(5032)
s(5038) =< s(5036)
s(5039) =< s(5036)
s(5038) =< s(5017)
s(5039) =< s(5017)
s(5039) =< s(5032)
s(5040) =< s(5032)
s(5039) =< s(5001)
s(5040) =< s(5001)
s(5041) =< s(5036)
s(5042) =< s(5036)
s(5043) =< s(5036)
s(5044) =< s(5036)
s(5041) =< s(5017)
s(5042) =< s(5017)
s(5043) =< s(5017)
s(5044) =< s(5017)
s(5042) =< s(5034)
s(5044) =< s(5034)
s(5042) =< s(5015)
s(5044) =< s(5015)
s(5041) =< s(5033)
s(5044) =< s(5033)
s(5041) =< s(5013)
s(5044) =< s(5013)
s(5042) =< s(5035)
s(5043) =< s(5035)
s(5044) =< s(5035)
s(5045) =< s(5035)
s(5042) =< s(5016)
s(5043) =< s(5016)
s(5044) =< s(5016)
s(5045) =< s(5016)
s(5046) =< s(5011)*s(5001)
s(5047) =< s(5046)* (1/12)
s(5048) =< s(5046)* (1/8)
s(5049) =< s(5046)* (1/3)
s(5050) =< s(5046)* (1/4)
s(5051) =< s(5046)
s(5052) =< s(5050)
s(5053) =< s(5050)
s(5052) =< s(5017)
s(5053) =< s(5017)
s(5053) =< s(5046)
s(5054) =< s(5046)
s(5053) =< s(5001)
s(5054) =< s(5001)
s(5055) =< s(5050)
s(5056) =< s(5050)
s(5057) =< s(5050)
s(5058) =< s(5050)
s(5055) =< s(5017)
s(5056) =< s(5017)
s(5057) =< s(5017)
s(5058) =< s(5017)
s(5056) =< s(5048)
s(5058) =< s(5048)
s(5056) =< s(5015)
s(5058) =< s(5015)
s(5055) =< s(5047)
s(5058) =< s(5047)
s(5055) =< s(5013)
s(5058) =< s(5013)
s(5056) =< s(5049)
s(5057) =< s(5049)
s(5058) =< s(5049)
s(5059) =< s(5049)
s(5056) =< s(5016)
s(5057) =< s(5016)
s(5058) =< s(5016)
s(5059) =< s(5016)
s(5060) =< s(5000)
s(5061) =< s(5000)
s(5062) =< s(5000)
s(5060) =< s(5002)
s(5062) =< s(5002)
s(5062) =< s(5003)
s(5060) =< s(5004)
s(5061) =< s(5004)
s(5062) =< s(5004)
s(5063) =< s(5004)
s(5060) =< s(5001)
s(5061) =< s(5001)
s(5062) =< s(5001)
s(5063) =< s(5001)
s(5064) =< s(5002)
s(5064) =< s(5000)
s(5065) =< s(5064)*s(5001)
s(5066) =< s(5065)* (1/12)
s(5067) =< s(5065)* (1/8)
s(5068) =< s(5065)* (1/3)
s(5069) =< s(5065)* (1/4)
s(5070) =< s(5065)
s(5071) =< s(5069)
s(5072) =< s(5069)
s(5071) =< s(5017)
s(5072) =< s(5017)
s(5072) =< s(5065)
s(5073) =< s(5065)
s(5072) =< s(5001)
s(5073) =< s(5001)
s(5074) =< s(5069)
s(5075) =< s(5069)
s(5076) =< s(5069)
s(5077) =< s(5069)
s(5074) =< s(5017)
s(5075) =< s(5017)
s(5076) =< s(5017)
s(5077) =< s(5017)
s(5075) =< s(5067)
s(5077) =< s(5067)
s(5075) =< s(5015)
s(5077) =< s(5015)
s(5074) =< s(5066)
s(5077) =< s(5066)
s(5074) =< s(5013)
s(5077) =< s(5013)
s(5075) =< s(5068)
s(5076) =< s(5068)
s(5077) =< s(5068)
s(5078) =< s(5068)
s(5075) =< s(5016)
s(5076) =< s(5016)
s(5077) =< s(5016)
s(5078) =< s(5016)
s(5079) =< s(5000)
s(5079) =< s(5003)
s(5079) =< s(5004)
s(5079) =< s(5001)
s(5080) =< s(5000)
s(5080) =< s(5003)
s(5080) =< s(5004)
s(5081) =< s(5000)
s(5081) =< s(5003)
s(5081) =< s(5001)

  with precondition: [A=0,C=1,D=1,B>=2] 

* Chain [127]: 1220*s(5087)+756*s(5088)+720*s(5089)+1200*s(5090)+480*s(5091)+396*s(5092)+13746*s(5093)+6196*s(5094)+96*s(5104)+30*s(5105)+90*s(5106)+630*s(5107)+90*s(5108)+180*s(5109)+540*s(5110)+360*s(5111)+360*s(5112)+180*s(5113)+46*s(5119)+138*s(5120)+966*s(5121)+138*s(5122)+276*s(5123)+828*s(5124)+552*s(5125)+552*s(5126)+276*s(5127)+4*s(5133)+12*s(5134)+84*s(5135)+12*s(5136)+24*s(5137)+72*s(5138)+48*s(5139)+48*s(5140)+24*s(5141)+720*s(5142)+840*s(5143)+480*s(5144)+300*s(5145)+48*s(5146)+16*s(5152)+48*s(5153)+336*s(5154)+48*s(5155)+96*s(5156)+288*s(5157)+192*s(5158)+192*s(5159)+96*s(5160)+156*s(5161)+288*s(5162)+144*s(5163)+17
  Such that:s(5082) =< B
s(5083) =< 4*B
s(5084) =< B/2
s(5085) =< B/3
s(5086) =< 4/3*B
s(5087) =< s(5082)
s(5088) =< s(5082)
s(5089) =< s(5082)
s(5090) =< s(5082)
s(5091) =< s(5082)
s(5089) =< s(5084)
s(5091) =< s(5084)
s(5088) =< s(5085)
s(5091) =< s(5085)
s(5089) =< s(5086)
s(5090) =< s(5086)
s(5091) =< s(5086)
s(5092) =< s(5086)
s(5093) =< s(5083)
s(5094) =< s(5082)
s(5094) =< s(5083)
s(5095) =< s(5083)* (1/12)
s(5096) =< s(5094)*s(5083)
s(5097) =< s(5083)* (1/8)
s(5098) =< s(5083)* (1/3)
s(5099) =< s(5083)* (1/4)
s(5100) =< s(5096)* (1/12)
s(5101) =< s(5096)* (1/8)
s(5102) =< s(5096)* (1/3)
s(5103) =< s(5096)* (1/4)
s(5104) =< s(5099)
s(5105) =< s(5096)
s(5106) =< s(5103)
s(5107) =< s(5103)
s(5106) =< s(5099)
s(5107) =< s(5099)
s(5107) =< s(5096)
s(5108) =< s(5096)
s(5107) =< s(5083)
s(5108) =< s(5083)
s(5109) =< s(5103)
s(5110) =< s(5103)
s(5111) =< s(5103)
s(5112) =< s(5103)
s(5109) =< s(5099)
s(5110) =< s(5099)
s(5111) =< s(5099)
s(5112) =< s(5099)
s(5110) =< s(5101)
s(5112) =< s(5101)
s(5110) =< s(5097)
s(5112) =< s(5097)
s(5109) =< s(5100)
s(5112) =< s(5100)
s(5109) =< s(5095)
s(5112) =< s(5095)
s(5110) =< s(5102)
s(5111) =< s(5102)
s(5112) =< s(5102)
s(5113) =< s(5102)
s(5110) =< s(5098)
s(5111) =< s(5098)
s(5112) =< s(5098)
s(5113) =< s(5098)
s(5114) =< s(5087)*s(5083)
s(5115) =< s(5114)* (1/12)
s(5116) =< s(5114)* (1/8)
s(5117) =< s(5114)* (1/3)
s(5118) =< s(5114)* (1/4)
s(5119) =< s(5114)
s(5120) =< s(5118)
s(5121) =< s(5118)
s(5120) =< s(5099)
s(5121) =< s(5099)
s(5121) =< s(5114)
s(5122) =< s(5114)
s(5121) =< s(5083)
s(5122) =< s(5083)
s(5123) =< s(5118)
s(5124) =< s(5118)
s(5125) =< s(5118)
s(5126) =< s(5118)
s(5123) =< s(5099)
s(5124) =< s(5099)
s(5125) =< s(5099)
s(5126) =< s(5099)
s(5124) =< s(5116)
s(5126) =< s(5116)
s(5124) =< s(5097)
s(5126) =< s(5097)
s(5123) =< s(5115)
s(5126) =< s(5115)
s(5123) =< s(5095)
s(5126) =< s(5095)
s(5124) =< s(5117)
s(5125) =< s(5117)
s(5126) =< s(5117)
s(5127) =< s(5117)
s(5124) =< s(5098)
s(5125) =< s(5098)
s(5126) =< s(5098)
s(5127) =< s(5098)
s(5128) =< s(5093)*s(5083)
s(5129) =< s(5128)* (1/12)
s(5130) =< s(5128)* (1/8)
s(5131) =< s(5128)* (1/3)
s(5132) =< s(5128)* (1/4)
s(5133) =< s(5128)
s(5134) =< s(5132)
s(5135) =< s(5132)
s(5134) =< s(5099)
s(5135) =< s(5099)
s(5135) =< s(5128)
s(5136) =< s(5128)
s(5135) =< s(5083)
s(5136) =< s(5083)
s(5137) =< s(5132)
s(5138) =< s(5132)
s(5139) =< s(5132)
s(5140) =< s(5132)
s(5137) =< s(5099)
s(5138) =< s(5099)
s(5139) =< s(5099)
s(5140) =< s(5099)
s(5138) =< s(5130)
s(5140) =< s(5130)
s(5138) =< s(5097)
s(5140) =< s(5097)
s(5137) =< s(5129)
s(5140) =< s(5129)
s(5137) =< s(5095)
s(5140) =< s(5095)
s(5138) =< s(5131)
s(5139) =< s(5131)
s(5140) =< s(5131)
s(5141) =< s(5131)
s(5138) =< s(5098)
s(5139) =< s(5098)
s(5140) =< s(5098)
s(5141) =< s(5098)
s(5142) =< s(5082)
s(5143) =< s(5082)
s(5144) =< s(5082)
s(5142) =< s(5084)
s(5144) =< s(5084)
s(5144) =< s(5085)
s(5142) =< s(5086)
s(5143) =< s(5086)
s(5144) =< s(5086)
s(5145) =< s(5086)
s(5142) =< s(5083)
s(5143) =< s(5083)
s(5144) =< s(5083)
s(5145) =< s(5083)
s(5146) =< s(5084)
s(5146) =< s(5082)
s(5147) =< s(5146)*s(5083)
s(5148) =< s(5147)* (1/12)
s(5149) =< s(5147)* (1/8)
s(5150) =< s(5147)* (1/3)
s(5151) =< s(5147)* (1/4)
s(5152) =< s(5147)
s(5153) =< s(5151)
s(5154) =< s(5151)
s(5153) =< s(5099)
s(5154) =< s(5099)
s(5154) =< s(5147)
s(5155) =< s(5147)
s(5154) =< s(5083)
s(5155) =< s(5083)
s(5156) =< s(5151)
s(5157) =< s(5151)
s(5158) =< s(5151)
s(5159) =< s(5151)
s(5156) =< s(5099)
s(5157) =< s(5099)
s(5158) =< s(5099)
s(5159) =< s(5099)
s(5157) =< s(5149)
s(5159) =< s(5149)
s(5157) =< s(5097)
s(5159) =< s(5097)
s(5156) =< s(5148)
s(5159) =< s(5148)
s(5156) =< s(5095)
s(5159) =< s(5095)
s(5157) =< s(5150)
s(5158) =< s(5150)
s(5159) =< s(5150)
s(5160) =< s(5150)
s(5157) =< s(5098)
s(5158) =< s(5098)
s(5159) =< s(5098)
s(5160) =< s(5098)
s(5161) =< s(5082)
s(5161) =< s(5085)
s(5161) =< s(5086)
s(5161) =< s(5083)
s(5162) =< s(5082)
s(5162) =< s(5085)
s(5162) =< s(5086)
s(5163) =< s(5082)
s(5163) =< s(5085)
s(5163) =< s(5083)

  with precondition: [A=0,C=1,D=2,B>=2] 

* Chain [126]: 13
  with precondition: [A=0,B=4,C=1,D=3] 


#### Cost of chains of n_evalrandom2dbb10in___24(A,B,C,D,E,F,G,H,I):
* Chain [[134],137]: 2*it(134)+1
  Such that:it(134) =< -A+B

  with precondition: [E=2,A>=1,B>=A+1] 

* Chain [[134],136]: 2*it(134)+0
  Such that:it(134) =< -A+B

  with precondition: [E=3,A>=1,B>=A+1] 

* Chain [[134],135]: 2*it(134)+2
  Such that:it(134) =< -A+F

  with precondition: [E=4,B=G,F+1=H,3>=I,A>=1,I>=0,F>=A+1,B>=F+1] 

* Chain [137]: 1
  with precondition: [E=2,B=A,B>=1] 

* Chain [136]: 0
  with precondition: [E=3,A>=1,B>=A] 

* Chain [135]: 2
  with precondition: [E=4,A=F,B=G,A+1=H,3>=I,A>=1,I>=0,B>=A+1] 


#### Cost of chains of n_evalrandom2dbb10in___24_loop_cont(A,B,C,D,E,F):
* Chain [140]: 0
  with precondition: [A=2] 

* Chain [139]: 0
  with precondition: [A=3] 

* Chain [138]: 2194*s(5255)+192*s(5256)+36*s(5257)+72*s(5258)+72*s(5259)+72*s(5260)+36*s(5261)+42*s(5262)+108*s(5263)+72*s(5264)+72*s(5265)+108*s(5266)+12*s(5267)+150*s(5287)+24*s(5293)+548*s(5294)+2146*s(5295)+16*s(5305)+4*s(5306)+12*s(5307)+84*s(5308)+12*s(5309)+24*s(5310)+72*s(5311)+48*s(5312)+48*s(5313)+24*s(5314)+4*s(5321)+12*s(5322)+84*s(5323)+12*s(5324)+24*s(5325)+72*s(5326)+48*s(5327)+48*s(5328)+24*s(5329)+144*s(5330)+216*s(5331)+144*s(5332)+144*s(5333)+72*s(5334)+216*s(5335)+144*s(5336)+144*s(5337)+8*s(5344)+24*s(5345)+168*s(5346)+24*s(5347)+48*s(5348)+144*s(5349)+96*s(5350)+96*s(5351)+48*s(5352)+36*s(5409)+204*s(5410)+24*s(5411)+42*s(5412)+174*s(5413)+728*s(5420)+16*s(5431)+4*s(5432)+12*s(5433)+84*s(5434)+12*s(5435)+24*s(5436)+72*s(5437)+48*s(5438)+48*s(5439)+24*s(5440)+12*s(5447)+36*s(5448)+252*s(5449)+36*s(5450)+72*s(5451)+216*s(5452)+144*s(5453)+144*s(5454)+72*s(5455)+78*s(5459)+372*s(5461)+144*s(5463)+84*s(5464)+18*s(5488)+12*s(5489)+12*s(5490)+6*s(5491)+18*s(5501)+12*s(5503)+72*s(5563)+11
  Such that:aux(436) =< -B+C
aux(437) =< C-D
aux(438) =< C-D+1
aux(439) =< 4*C-4*D
aux(440) =< 4*C-4*D+4
aux(441) =< C/2-D/2
aux(442) =< C/2-D/2+1/2
aux(443) =< C/3-D/3
aux(444) =< C/3-D/3+1/3
aux(445) =< 4/3*C-4/3*D
aux(446) =< 4/3*C-4/3*D+4/3
s(5267) =< aux(436)
s(5255) =< aux(440)
s(5256) =< aux(438)
s(5257) =< aux(438)
s(5258) =< aux(438)
s(5259) =< aux(438)
s(5260) =< aux(438)
s(5257) =< aux(442)
s(5259) =< aux(442)
s(5260) =< aux(442)
s(5256) =< aux(444)
s(5259) =< aux(444)
s(5258) =< aux(437)
s(5259) =< aux(437)
s(5260) =< aux(437)
s(5257) =< aux(441)
s(5259) =< aux(441)
s(5260) =< aux(441)
s(5257) =< aux(445)
s(5258) =< aux(445)
s(5259) =< aux(445)
s(5260) =< aux(445)
s(5261) =< aux(445)
s(5257) =< aux(440)
s(5258) =< aux(440)
s(5259) =< aux(440)
s(5260) =< aux(440)
s(5261) =< aux(440)
s(5262) =< aux(438)
s(5263) =< aux(438)
s(5264) =< aux(438)
s(5265) =< aux(438)
s(5262) =< aux(437)
s(5263) =< aux(437)
s(5264) =< aux(437)
s(5265) =< aux(437)
s(5263) =< aux(442)
s(5265) =< aux(442)
s(5263) =< aux(441)
s(5265) =< aux(441)
s(5262) =< aux(444)
s(5265) =< aux(444)
s(5262) =< aux(443)
s(5265) =< aux(443)
s(5263) =< aux(445)
s(5264) =< aux(445)
s(5265) =< aux(445)
s(5266) =< aux(445)
s(5488) =< aux(438)
s(5489) =< aux(438)
s(5490) =< aux(438)
s(5488) =< aux(437)
s(5489) =< aux(437)
s(5490) =< aux(437)
s(5488) =< aux(442)
s(5490) =< aux(442)
s(5488) =< aux(441)
s(5490) =< aux(441)
s(5490) =< aux(444)
s(5490) =< aux(443)
s(5488) =< aux(446)
s(5489) =< aux(446)
s(5490) =< aux(446)
s(5491) =< aux(446)
s(5488) =< aux(445)
s(5489) =< aux(445)
s(5490) =< aux(445)
s(5491) =< aux(445)
s(5501) =< aux(438)
s(5461) =< aux(438)
s(5503) =< aux(438)
s(5501) =< aux(442)
s(5503) =< aux(442)
s(5503) =< aux(444)
s(5501) =< aux(446)
s(5461) =< aux(446)
s(5503) =< aux(446)
s(5464) =< aux(446)
s(5287) =< aux(437)
s(5293) =< aux(441)
s(5294) =< aux(439)
s(5295) =< aux(439)
s(5294) =< aux(437)
s(5296) =< aux(439)* (1/12)
s(5297) =< s(5294)*aux(439)
s(5298) =< aux(439)* (1/8)
s(5299) =< aux(439)* (1/3)
s(5300) =< aux(439)* (1/4)
s(5301) =< s(5297)* (1/12)
s(5302) =< s(5297)* (1/8)
s(5303) =< s(5297)* (1/3)
s(5304) =< s(5297)* (1/4)
s(5305) =< s(5300)
s(5306) =< s(5297)
s(5307) =< s(5304)
s(5308) =< s(5304)
s(5307) =< s(5300)
s(5308) =< s(5300)
s(5308) =< s(5297)
s(5309) =< s(5297)
s(5308) =< aux(439)
s(5309) =< aux(439)
s(5310) =< s(5304)
s(5311) =< s(5304)
s(5312) =< s(5304)
s(5313) =< s(5304)
s(5310) =< s(5300)
s(5311) =< s(5300)
s(5312) =< s(5300)
s(5313) =< s(5300)
s(5311) =< s(5302)
s(5313) =< s(5302)
s(5311) =< s(5298)
s(5313) =< s(5298)
s(5310) =< s(5301)
s(5313) =< s(5301)
s(5310) =< s(5296)
s(5313) =< s(5296)
s(5311) =< s(5303)
s(5312) =< s(5303)
s(5313) =< s(5303)
s(5314) =< s(5303)
s(5311) =< s(5299)
s(5312) =< s(5299)
s(5313) =< s(5299)
s(5314) =< s(5299)
s(5316) =< s(5287)*aux(439)
s(5317) =< s(5316)* (1/12)
s(5318) =< s(5316)* (1/8)
s(5319) =< s(5316)* (1/3)
s(5320) =< s(5316)* (1/4)
s(5321) =< s(5316)
s(5322) =< s(5320)
s(5323) =< s(5320)
s(5322) =< s(5300)
s(5323) =< s(5300)
s(5323) =< s(5316)
s(5324) =< s(5316)
s(5323) =< aux(439)
s(5324) =< aux(439)
s(5325) =< s(5320)
s(5326) =< s(5320)
s(5327) =< s(5320)
s(5328) =< s(5320)
s(5325) =< s(5300)
s(5326) =< s(5300)
s(5327) =< s(5300)
s(5328) =< s(5300)
s(5326) =< s(5318)
s(5328) =< s(5318)
s(5326) =< s(5298)
s(5328) =< s(5298)
s(5325) =< s(5317)
s(5328) =< s(5317)
s(5325) =< s(5296)
s(5328) =< s(5296)
s(5326) =< s(5319)
s(5327) =< s(5319)
s(5328) =< s(5319)
s(5329) =< s(5319)
s(5326) =< s(5299)
s(5327) =< s(5299)
s(5328) =< s(5299)
s(5329) =< s(5299)
s(5330) =< aux(437)
s(5331) =< aux(437)
s(5332) =< aux(437)
s(5333) =< aux(437)
s(5331) =< aux(441)
s(5333) =< aux(441)
s(5330) =< aux(443)
s(5333) =< aux(443)
s(5331) =< aux(445)
s(5332) =< aux(445)
s(5333) =< aux(445)
s(5334) =< aux(445)
s(5331) =< aux(439)
s(5332) =< aux(439)
s(5333) =< aux(439)
s(5334) =< aux(439)
s(5335) =< aux(437)
s(5336) =< aux(437)
s(5337) =< aux(437)
s(5335) =< aux(441)
s(5337) =< aux(441)
s(5337) =< aux(443)
s(5335) =< aux(445)
s(5336) =< aux(445)
s(5337) =< aux(445)
s(5293) =< aux(437)
s(5339) =< s(5293)*aux(439)
s(5340) =< s(5339)* (1/12)
s(5341) =< s(5339)* (1/8)
s(5342) =< s(5339)* (1/3)
s(5343) =< s(5339)* (1/4)
s(5344) =< s(5339)
s(5345) =< s(5343)
s(5346) =< s(5343)
s(5345) =< s(5300)
s(5346) =< s(5300)
s(5346) =< s(5339)
s(5347) =< s(5339)
s(5346) =< aux(439)
s(5347) =< aux(439)
s(5348) =< s(5343)
s(5349) =< s(5343)
s(5350) =< s(5343)
s(5351) =< s(5343)
s(5348) =< s(5300)
s(5349) =< s(5300)
s(5350) =< s(5300)
s(5351) =< s(5300)
s(5349) =< s(5341)
s(5351) =< s(5341)
s(5349) =< s(5298)
s(5351) =< s(5298)
s(5348) =< s(5340)
s(5351) =< s(5340)
s(5348) =< s(5296)
s(5351) =< s(5296)
s(5349) =< s(5342)
s(5350) =< s(5342)
s(5351) =< s(5342)
s(5352) =< s(5342)
s(5349) =< s(5299)
s(5350) =< s(5299)
s(5351) =< s(5299)
s(5352) =< s(5299)
s(5413) =< aux(438)
s(5420) =< aux(440)
s(5420) =< aux(438)
s(5422) =< aux(440)* (1/12)
s(5423) =< s(5420)*aux(440)
s(5424) =< aux(440)* (1/8)
s(5425) =< aux(440)* (1/3)
s(5426) =< aux(440)* (1/4)
s(5427) =< s(5423)* (1/12)
s(5428) =< s(5423)* (1/8)
s(5429) =< s(5423)* (1/3)
s(5430) =< s(5423)* (1/4)
s(5431) =< s(5426)
s(5432) =< s(5423)
s(5433) =< s(5430)
s(5434) =< s(5430)
s(5433) =< s(5426)
s(5434) =< s(5426)
s(5434) =< s(5423)
s(5435) =< s(5423)
s(5434) =< aux(440)
s(5435) =< aux(440)
s(5436) =< s(5430)
s(5437) =< s(5430)
s(5438) =< s(5430)
s(5439) =< s(5430)
s(5436) =< s(5426)
s(5437) =< s(5426)
s(5438) =< s(5426)
s(5439) =< s(5426)
s(5437) =< s(5428)
s(5439) =< s(5428)
s(5437) =< s(5424)
s(5439) =< s(5424)
s(5436) =< s(5427)
s(5439) =< s(5427)
s(5436) =< s(5422)
s(5439) =< s(5422)
s(5437) =< s(5429)
s(5438) =< s(5429)
s(5439) =< s(5429)
s(5440) =< s(5429)
s(5437) =< s(5425)
s(5438) =< s(5425)
s(5439) =< s(5425)
s(5440) =< s(5425)
s(5442) =< s(5413)*aux(440)
s(5443) =< s(5442)* (1/12)
s(5444) =< s(5442)* (1/8)
s(5445) =< s(5442)* (1/3)
s(5446) =< s(5442)* (1/4)
s(5447) =< s(5442)
s(5448) =< s(5446)
s(5449) =< s(5446)
s(5448) =< s(5426)
s(5449) =< s(5426)
s(5449) =< s(5442)
s(5450) =< s(5442)
s(5449) =< aux(440)
s(5450) =< aux(440)
s(5451) =< s(5446)
s(5452) =< s(5446)
s(5453) =< s(5446)
s(5454) =< s(5446)
s(5451) =< s(5426)
s(5452) =< s(5426)
s(5453) =< s(5426)
s(5454) =< s(5426)
s(5452) =< s(5444)
s(5454) =< s(5444)
s(5452) =< s(5424)
s(5454) =< s(5424)
s(5451) =< s(5443)
s(5454) =< s(5443)
s(5451) =< s(5422)
s(5454) =< s(5422)
s(5452) =< s(5445)
s(5453) =< s(5445)
s(5454) =< s(5445)
s(5455) =< s(5445)
s(5452) =< s(5425)
s(5453) =< s(5425)
s(5454) =< s(5425)
s(5455) =< s(5425)
s(5410) =< aux(438)
s(5459) =< aux(438)
s(5459) =< aux(444)
s(5410) =< aux(446)
s(5459) =< aux(446)
s(5412) =< aux(446)
s(5410) =< aux(440)
s(5459) =< aux(440)
s(5412) =< aux(440)
s(5463) =< aux(438)
s(5463) =< aux(444)
s(5463) =< aux(446)
s(5409) =< aux(438)
s(5411) =< aux(438)
s(5409) =< aux(442)
s(5411) =< aux(442)
s(5411) =< aux(444)
s(5409) =< aux(446)
s(5411) =< aux(446)
s(5409) =< aux(440)
s(5411) =< aux(440)
s(5563) =< aux(438)
s(5563) =< aux(444)
s(5563) =< aux(440)

  with precondition: [A=4] 


#### Cost of chains of n_evalrandom2dbbin___26(A,B,C,D,E):
* Chain [141]: 5960*s(5570)+3402*s(5571)+3240*s(5572)+5400*s(5573)+2160*s(5574)+1782*s(5575)+64012*s(5576)+29850*s(5577)+448*s(5587)+136*s(5588)+408*s(5589)+2856*s(5590)+408*s(5591)+816*s(5592)+2448*s(5593)+1632*s(5594)+1632*s(5595)+816*s(5596)+224*s(5602)+672*s(5603)+4704*s(5604)+672*s(5605)+1344*s(5606)+4032*s(5607)+2688*s(5608)+2688*s(5609)+1344*s(5610)+16*s(5616)+48*s(5617)+336*s(5618)+48*s(5619)+96*s(5620)+288*s(5621)+192*s(5622)+192*s(5623)+96*s(5624)+3240*s(5625)+3780*s(5626)+2160*s(5627)+1350*s(5628)+216*s(5629)+72*s(5635)+216*s(5636)+1512*s(5637)+216*s(5638)+432*s(5639)+1296*s(5640)+864*s(5641)+864*s(5642)+432*s(5643)+702*s(5644)+1296*s(5645)+648*s(5646)+18
  Such that:aux(454) =< B
aux(455) =< 4*B
aux(456) =< B/2
aux(457) =< B/3
aux(458) =< 4/3*B
s(5570) =< aux(454)
s(5576) =< aux(455)
s(5571) =< aux(454)
s(5625) =< aux(454)
s(5626) =< aux(454)
s(5627) =< aux(454)
s(5625) =< aux(456)
s(5627) =< aux(456)
s(5571) =< aux(457)
s(5627) =< aux(457)
s(5625) =< aux(458)
s(5626) =< aux(458)
s(5627) =< aux(458)
s(5628) =< aux(458)
s(5625) =< aux(455)
s(5626) =< aux(455)
s(5627) =< aux(455)
s(5628) =< aux(455)
s(5572) =< aux(454)
s(5573) =< aux(454)
s(5574) =< aux(454)
s(5572) =< aux(456)
s(5574) =< aux(456)
s(5574) =< aux(457)
s(5572) =< aux(458)
s(5573) =< aux(458)
s(5574) =< aux(458)
s(5575) =< aux(458)
s(5629) =< aux(456)
s(5577) =< aux(455)
s(5577) =< aux(454)
s(5578) =< aux(455)* (1/12)
s(5579) =< s(5577)*aux(455)
s(5580) =< aux(455)* (1/8)
s(5581) =< aux(455)* (1/3)
s(5582) =< aux(455)* (1/4)
s(5583) =< s(5579)* (1/12)
s(5584) =< s(5579)* (1/8)
s(5585) =< s(5579)* (1/3)
s(5586) =< s(5579)* (1/4)
s(5587) =< s(5582)
s(5588) =< s(5579)
s(5589) =< s(5586)
s(5590) =< s(5586)
s(5589) =< s(5582)
s(5590) =< s(5582)
s(5590) =< s(5579)
s(5591) =< s(5579)
s(5590) =< aux(455)
s(5591) =< aux(455)
s(5592) =< s(5586)
s(5593) =< s(5586)
s(5594) =< s(5586)
s(5595) =< s(5586)
s(5592) =< s(5582)
s(5593) =< s(5582)
s(5594) =< s(5582)
s(5595) =< s(5582)
s(5593) =< s(5584)
s(5595) =< s(5584)
s(5593) =< s(5580)
s(5595) =< s(5580)
s(5592) =< s(5583)
s(5595) =< s(5583)
s(5592) =< s(5578)
s(5595) =< s(5578)
s(5593) =< s(5585)
s(5594) =< s(5585)
s(5595) =< s(5585)
s(5596) =< s(5585)
s(5593) =< s(5581)
s(5594) =< s(5581)
s(5595) =< s(5581)
s(5596) =< s(5581)
s(5597) =< s(5570)*aux(455)
s(5598) =< s(5597)* (1/12)
s(5599) =< s(5597)* (1/8)
s(5600) =< s(5597)* (1/3)
s(5601) =< s(5597)* (1/4)
s(5602) =< s(5597)
s(5603) =< s(5601)
s(5604) =< s(5601)
s(5603) =< s(5582)
s(5604) =< s(5582)
s(5604) =< s(5597)
s(5605) =< s(5597)
s(5604) =< aux(455)
s(5605) =< aux(455)
s(5606) =< s(5601)
s(5607) =< s(5601)
s(5608) =< s(5601)
s(5609) =< s(5601)
s(5606) =< s(5582)
s(5607) =< s(5582)
s(5608) =< s(5582)
s(5609) =< s(5582)
s(5607) =< s(5599)
s(5609) =< s(5599)
s(5607) =< s(5580)
s(5609) =< s(5580)
s(5606) =< s(5598)
s(5609) =< s(5598)
s(5606) =< s(5578)
s(5609) =< s(5578)
s(5607) =< s(5600)
s(5608) =< s(5600)
s(5609) =< s(5600)
s(5610) =< s(5600)
s(5607) =< s(5581)
s(5608) =< s(5581)
s(5609) =< s(5581)
s(5610) =< s(5581)
s(5629) =< aux(454)
s(5630) =< s(5629)*aux(455)
s(5631) =< s(5630)* (1/12)
s(5632) =< s(5630)* (1/8)
s(5633) =< s(5630)* (1/3)
s(5634) =< s(5630)* (1/4)
s(5635) =< s(5630)
s(5636) =< s(5634)
s(5637) =< s(5634)
s(5636) =< s(5582)
s(5637) =< s(5582)
s(5637) =< s(5630)
s(5638) =< s(5630)
s(5637) =< aux(455)
s(5638) =< aux(455)
s(5639) =< s(5634)
s(5640) =< s(5634)
s(5641) =< s(5634)
s(5642) =< s(5634)
s(5639) =< s(5582)
s(5640) =< s(5582)
s(5641) =< s(5582)
s(5642) =< s(5582)
s(5640) =< s(5632)
s(5642) =< s(5632)
s(5640) =< s(5580)
s(5642) =< s(5580)
s(5639) =< s(5631)
s(5642) =< s(5631)
s(5639) =< s(5578)
s(5642) =< s(5578)
s(5640) =< s(5633)
s(5641) =< s(5633)
s(5642) =< s(5633)
s(5643) =< s(5633)
s(5640) =< s(5581)
s(5641) =< s(5581)
s(5642) =< s(5581)
s(5643) =< s(5581)
s(5644) =< aux(454)
s(5644) =< aux(457)
s(5644) =< aux(458)
s(5644) =< aux(455)
s(5645) =< aux(454)
s(5645) =< aux(457)
s(5645) =< aux(458)
s(5646) =< aux(454)
s(5646) =< aux(457)
s(5646) =< aux(455)
s(5611) =< s(5576)*aux(455)
s(5612) =< s(5611)* (1/12)
s(5613) =< s(5611)* (1/8)
s(5614) =< s(5611)* (1/3)
s(5615) =< s(5611)* (1/4)
s(5616) =< s(5611)
s(5617) =< s(5615)
s(5618) =< s(5615)
s(5617) =< s(5582)
s(5618) =< s(5582)
s(5618) =< s(5611)
s(5619) =< s(5611)
s(5618) =< aux(455)
s(5619) =< aux(455)
s(5620) =< s(5615)
s(5621) =< s(5615)
s(5622) =< s(5615)
s(5623) =< s(5615)
s(5620) =< s(5582)
s(5621) =< s(5582)
s(5622) =< s(5582)
s(5623) =< s(5582)
s(5621) =< s(5613)
s(5623) =< s(5613)
s(5621) =< s(5580)
s(5623) =< s(5580)
s(5620) =< s(5612)
s(5623) =< s(5612)
s(5620) =< s(5578)
s(5623) =< s(5578)
s(5621) =< s(5614)
s(5622) =< s(5614)
s(5623) =< s(5614)
s(5624) =< s(5614)
s(5621) =< s(5581)
s(5622) =< s(5581)
s(5623) =< s(5581)
s(5624) =< s(5581)

  with precondition: [A=0,B>=1] 


#### Cost of chains of n_evalrandom2dbb10in___27(A,B,C,D,E):
* Chain [143]: 1
  with precondition: [A=0,0>=B] 

* Chain [142]: 5960*s(6167)+64012*s(6168)+3402*s(6169)+3240*s(6170)+3780*s(6171)+2160*s(6172)+1350*s(6173)+3240*s(6174)+5400*s(6175)+2160*s(6176)+1782*s(6177)+216*s(6178)+29850*s(6179)+448*s(6189)+136*s(6190)+408*s(6191)+2856*s(6192)+408*s(6193)+816*s(6194)+2448*s(6195)+1632*s(6196)+1632*s(6197)+816*s(6198)+224*s(6204)+672*s(6205)+4704*s(6206)+672*s(6207)+1344*s(6208)+4032*s(6209)+2688*s(6210)+2688*s(6211)+1344*s(6212)+72*s(6218)+216*s(6219)+1512*s(6220)+216*s(6221)+432*s(6222)+1296*s(6223)+864*s(6224)+864*s(6225)+432*s(6226)+702*s(6227)+1296*s(6228)+648*s(6229)+16*s(6235)+48*s(6236)+336*s(6237)+48*s(6238)+96*s(6239)+288*s(6240)+192*s(6241)+192*s(6242)+96*s(6243)+19
  Such that:s(6162) =< B
s(6163) =< 4*B
s(6164) =< B/2
s(6165) =< B/3
s(6166) =< 4/3*B
s(6167) =< s(6162)
s(6168) =< s(6163)
s(6169) =< s(6162)
s(6170) =< s(6162)
s(6171) =< s(6162)
s(6172) =< s(6162)
s(6170) =< s(6164)
s(6172) =< s(6164)
s(6169) =< s(6165)
s(6172) =< s(6165)
s(6170) =< s(6166)
s(6171) =< s(6166)
s(6172) =< s(6166)
s(6173) =< s(6166)
s(6170) =< s(6163)
s(6171) =< s(6163)
s(6172) =< s(6163)
s(6173) =< s(6163)
s(6174) =< s(6162)
s(6175) =< s(6162)
s(6176) =< s(6162)
s(6174) =< s(6164)
s(6176) =< s(6164)
s(6176) =< s(6165)
s(6174) =< s(6166)
s(6175) =< s(6166)
s(6176) =< s(6166)
s(6177) =< s(6166)
s(6178) =< s(6164)
s(6179) =< s(6163)
s(6179) =< s(6162)
s(6180) =< s(6163)* (1/12)
s(6181) =< s(6179)*s(6163)
s(6182) =< s(6163)* (1/8)
s(6183) =< s(6163)* (1/3)
s(6184) =< s(6163)* (1/4)
s(6185) =< s(6181)* (1/12)
s(6186) =< s(6181)* (1/8)
s(6187) =< s(6181)* (1/3)
s(6188) =< s(6181)* (1/4)
s(6189) =< s(6184)
s(6190) =< s(6181)
s(6191) =< s(6188)
s(6192) =< s(6188)
s(6191) =< s(6184)
s(6192) =< s(6184)
s(6192) =< s(6181)
s(6193) =< s(6181)
s(6192) =< s(6163)
s(6193) =< s(6163)
s(6194) =< s(6188)
s(6195) =< s(6188)
s(6196) =< s(6188)
s(6197) =< s(6188)
s(6194) =< s(6184)
s(6195) =< s(6184)
s(6196) =< s(6184)
s(6197) =< s(6184)
s(6195) =< s(6186)
s(6197) =< s(6186)
s(6195) =< s(6182)
s(6197) =< s(6182)
s(6194) =< s(6185)
s(6197) =< s(6185)
s(6194) =< s(6180)
s(6197) =< s(6180)
s(6195) =< s(6187)
s(6196) =< s(6187)
s(6197) =< s(6187)
s(6198) =< s(6187)
s(6195) =< s(6183)
s(6196) =< s(6183)
s(6197) =< s(6183)
s(6198) =< s(6183)
s(6199) =< s(6167)*s(6163)
s(6200) =< s(6199)* (1/12)
s(6201) =< s(6199)* (1/8)
s(6202) =< s(6199)* (1/3)
s(6203) =< s(6199)* (1/4)
s(6204) =< s(6199)
s(6205) =< s(6203)
s(6206) =< s(6203)
s(6205) =< s(6184)
s(6206) =< s(6184)
s(6206) =< s(6199)
s(6207) =< s(6199)
s(6206) =< s(6163)
s(6207) =< s(6163)
s(6208) =< s(6203)
s(6209) =< s(6203)
s(6210) =< s(6203)
s(6211) =< s(6203)
s(6208) =< s(6184)
s(6209) =< s(6184)
s(6210) =< s(6184)
s(6211) =< s(6184)
s(6209) =< s(6201)
s(6211) =< s(6201)
s(6209) =< s(6182)
s(6211) =< s(6182)
s(6208) =< s(6200)
s(6211) =< s(6200)
s(6208) =< s(6180)
s(6211) =< s(6180)
s(6209) =< s(6202)
s(6210) =< s(6202)
s(6211) =< s(6202)
s(6212) =< s(6202)
s(6209) =< s(6183)
s(6210) =< s(6183)
s(6211) =< s(6183)
s(6212) =< s(6183)
s(6178) =< s(6162)
s(6213) =< s(6178)*s(6163)
s(6214) =< s(6213)* (1/12)
s(6215) =< s(6213)* (1/8)
s(6216) =< s(6213)* (1/3)
s(6217) =< s(6213)* (1/4)
s(6218) =< s(6213)
s(6219) =< s(6217)
s(6220) =< s(6217)
s(6219) =< s(6184)
s(6220) =< s(6184)
s(6220) =< s(6213)
s(6221) =< s(6213)
s(6220) =< s(6163)
s(6221) =< s(6163)
s(6222) =< s(6217)
s(6223) =< s(6217)
s(6224) =< s(6217)
s(6225) =< s(6217)
s(6222) =< s(6184)
s(6223) =< s(6184)
s(6224) =< s(6184)
s(6225) =< s(6184)
s(6223) =< s(6215)
s(6225) =< s(6215)
s(6223) =< s(6182)
s(6225) =< s(6182)
s(6222) =< s(6214)
s(6225) =< s(6214)
s(6222) =< s(6180)
s(6225) =< s(6180)
s(6223) =< s(6216)
s(6224) =< s(6216)
s(6225) =< s(6216)
s(6226) =< s(6216)
s(6223) =< s(6183)
s(6224) =< s(6183)
s(6225) =< s(6183)
s(6226) =< s(6183)
s(6227) =< s(6162)
s(6227) =< s(6165)
s(6227) =< s(6166)
s(6227) =< s(6163)
s(6228) =< s(6162)
s(6228) =< s(6165)
s(6228) =< s(6166)
s(6229) =< s(6162)
s(6229) =< s(6165)
s(6229) =< s(6163)
s(6230) =< s(6168)*s(6163)
s(6231) =< s(6230)* (1/12)
s(6232) =< s(6230)* (1/8)
s(6233) =< s(6230)* (1/3)
s(6234) =< s(6230)* (1/4)
s(6235) =< s(6230)
s(6236) =< s(6234)
s(6237) =< s(6234)
s(6236) =< s(6184)
s(6237) =< s(6184)
s(6237) =< s(6230)
s(6238) =< s(6230)
s(6237) =< s(6163)
s(6238) =< s(6163)
s(6239) =< s(6234)
s(6240) =< s(6234)
s(6241) =< s(6234)
s(6242) =< s(6234)
s(6239) =< s(6184)
s(6240) =< s(6184)
s(6241) =< s(6184)
s(6242) =< s(6184)
s(6240) =< s(6232)
s(6242) =< s(6232)
s(6240) =< s(6182)
s(6242) =< s(6182)
s(6239) =< s(6231)
s(6242) =< s(6231)
s(6239) =< s(6180)
s(6242) =< s(6180)
s(6240) =< s(6233)
s(6241) =< s(6233)
s(6242) =< s(6233)
s(6243) =< s(6233)
s(6240) =< s(6183)
s(6241) =< s(6183)
s(6242) =< s(6183)
s(6243) =< s(6183)

  with precondition: [A=0,B>=1] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [145]: 3
  with precondition: [0>=B] 

* Chain [144]: 5960*s(6249)+64012*s(6250)+3402*s(6251)+3240*s(6252)+3780*s(6253)+2160*s(6254)+1350*s(6255)+3240*s(6256)+5400*s(6257)+2160*s(6258)+1782*s(6259)+216*s(6260)+29850*s(6261)+448*s(6271)+136*s(6272)+408*s(6273)+2856*s(6274)+408*s(6275)+816*s(6276)+2448*s(6277)+1632*s(6278)+1632*s(6279)+816*s(6280)+224*s(6286)+672*s(6287)+4704*s(6288)+672*s(6289)+1344*s(6290)+4032*s(6291)+2688*s(6292)+2688*s(6293)+1344*s(6294)+72*s(6300)+216*s(6301)+1512*s(6302)+216*s(6303)+432*s(6304)+1296*s(6305)+864*s(6306)+864*s(6307)+432*s(6308)+702*s(6309)+1296*s(6310)+648*s(6311)+16*s(6317)+48*s(6318)+336*s(6319)+48*s(6320)+96*s(6321)+288*s(6322)+192*s(6323)+192*s(6324)+96*s(6325)+21
  Such that:s(6244) =< B
s(6245) =< 4*B
s(6246) =< B/2
s(6247) =< B/3
s(6248) =< 4/3*B
s(6249) =< s(6244)
s(6250) =< s(6245)
s(6251) =< s(6244)
s(6252) =< s(6244)
s(6253) =< s(6244)
s(6254) =< s(6244)
s(6252) =< s(6246)
s(6254) =< s(6246)
s(6251) =< s(6247)
s(6254) =< s(6247)
s(6252) =< s(6248)
s(6253) =< s(6248)
s(6254) =< s(6248)
s(6255) =< s(6248)
s(6252) =< s(6245)
s(6253) =< s(6245)
s(6254) =< s(6245)
s(6255) =< s(6245)
s(6256) =< s(6244)
s(6257) =< s(6244)
s(6258) =< s(6244)
s(6256) =< s(6246)
s(6258) =< s(6246)
s(6258) =< s(6247)
s(6256) =< s(6248)
s(6257) =< s(6248)
s(6258) =< s(6248)
s(6259) =< s(6248)
s(6260) =< s(6246)
s(6261) =< s(6245)
s(6261) =< s(6244)
s(6262) =< s(6245)* (1/12)
s(6263) =< s(6261)*s(6245)
s(6264) =< s(6245)* (1/8)
s(6265) =< s(6245)* (1/3)
s(6266) =< s(6245)* (1/4)
s(6267) =< s(6263)* (1/12)
s(6268) =< s(6263)* (1/8)
s(6269) =< s(6263)* (1/3)
s(6270) =< s(6263)* (1/4)
s(6271) =< s(6266)
s(6272) =< s(6263)
s(6273) =< s(6270)
s(6274) =< s(6270)
s(6273) =< s(6266)
s(6274) =< s(6266)
s(6274) =< s(6263)
s(6275) =< s(6263)
s(6274) =< s(6245)
s(6275) =< s(6245)
s(6276) =< s(6270)
s(6277) =< s(6270)
s(6278) =< s(6270)
s(6279) =< s(6270)
s(6276) =< s(6266)
s(6277) =< s(6266)
s(6278) =< s(6266)
s(6279) =< s(6266)
s(6277) =< s(6268)
s(6279) =< s(6268)
s(6277) =< s(6264)
s(6279) =< s(6264)
s(6276) =< s(6267)
s(6279) =< s(6267)
s(6276) =< s(6262)
s(6279) =< s(6262)
s(6277) =< s(6269)
s(6278) =< s(6269)
s(6279) =< s(6269)
s(6280) =< s(6269)
s(6277) =< s(6265)
s(6278) =< s(6265)
s(6279) =< s(6265)
s(6280) =< s(6265)
s(6281) =< s(6249)*s(6245)
s(6282) =< s(6281)* (1/12)
s(6283) =< s(6281)* (1/8)
s(6284) =< s(6281)* (1/3)
s(6285) =< s(6281)* (1/4)
s(6286) =< s(6281)
s(6287) =< s(6285)
s(6288) =< s(6285)
s(6287) =< s(6266)
s(6288) =< s(6266)
s(6288) =< s(6281)
s(6289) =< s(6281)
s(6288) =< s(6245)
s(6289) =< s(6245)
s(6290) =< s(6285)
s(6291) =< s(6285)
s(6292) =< s(6285)
s(6293) =< s(6285)
s(6290) =< s(6266)
s(6291) =< s(6266)
s(6292) =< s(6266)
s(6293) =< s(6266)
s(6291) =< s(6283)
s(6293) =< s(6283)
s(6291) =< s(6264)
s(6293) =< s(6264)
s(6290) =< s(6282)
s(6293) =< s(6282)
s(6290) =< s(6262)
s(6293) =< s(6262)
s(6291) =< s(6284)
s(6292) =< s(6284)
s(6293) =< s(6284)
s(6294) =< s(6284)
s(6291) =< s(6265)
s(6292) =< s(6265)
s(6293) =< s(6265)
s(6294) =< s(6265)
s(6260) =< s(6244)
s(6295) =< s(6260)*s(6245)
s(6296) =< s(6295)* (1/12)
s(6297) =< s(6295)* (1/8)
s(6298) =< s(6295)* (1/3)
s(6299) =< s(6295)* (1/4)
s(6300) =< s(6295)
s(6301) =< s(6299)
s(6302) =< s(6299)
s(6301) =< s(6266)
s(6302) =< s(6266)
s(6302) =< s(6295)
s(6303) =< s(6295)
s(6302) =< s(6245)
s(6303) =< s(6245)
s(6304) =< s(6299)
s(6305) =< s(6299)
s(6306) =< s(6299)
s(6307) =< s(6299)
s(6304) =< s(6266)
s(6305) =< s(6266)
s(6306) =< s(6266)
s(6307) =< s(6266)
s(6305) =< s(6297)
s(6307) =< s(6297)
s(6305) =< s(6264)
s(6307) =< s(6264)
s(6304) =< s(6296)
s(6307) =< s(6296)
s(6304) =< s(6262)
s(6307) =< s(6262)
s(6305) =< s(6298)
s(6306) =< s(6298)
s(6307) =< s(6298)
s(6308) =< s(6298)
s(6305) =< s(6265)
s(6306) =< s(6265)
s(6307) =< s(6265)
s(6308) =< s(6265)
s(6309) =< s(6244)
s(6309) =< s(6247)
s(6309) =< s(6248)
s(6309) =< s(6245)
s(6310) =< s(6244)
s(6310) =< s(6247)
s(6310) =< s(6248)
s(6311) =< s(6244)
s(6311) =< s(6247)
s(6311) =< s(6245)
s(6312) =< s(6250)*s(6245)
s(6313) =< s(6312)* (1/12)
s(6314) =< s(6312)* (1/8)
s(6315) =< s(6312)* (1/3)
s(6316) =< s(6312)* (1/4)
s(6317) =< s(6312)
s(6318) =< s(6316)
s(6319) =< s(6316)
s(6318) =< s(6266)
s(6319) =< s(6266)
s(6319) =< s(6312)
s(6320) =< s(6312)
s(6319) =< s(6245)
s(6320) =< s(6245)
s(6321) =< s(6316)
s(6322) =< s(6316)
s(6323) =< s(6316)
s(6324) =< s(6316)
s(6321) =< s(6266)
s(6322) =< s(6266)
s(6323) =< s(6266)
s(6324) =< s(6266)
s(6322) =< s(6314)
s(6324) =< s(6314)
s(6322) =< s(6264)
s(6324) =< s(6264)
s(6321) =< s(6313)
s(6324) =< s(6313)
s(6321) =< s(6262)
s(6324) =< s(6262)
s(6322) =< s(6315)
s(6323) =< s(6315)
s(6324) =< s(6315)
s(6325) =< s(6315)
s(6322) =< s(6265)
s(6323) =< s(6265)
s(6324) =< s(6265)
s(6325) =< s(6265)

  with precondition: [B>=1] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [145] with precondition: [0>=B] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [144] with precondition: [B>=1] 
    - Upper bound: 449100*B+21+896*B*B+608*B* (4*B)+B/2* (288*B)+4176*B+108*B 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D,E): nat(B)*31988+18+nat(4*B)*104278+nat(4*B)*224*nat(B)+nat(4*B)*152*nat(4*B)+nat(4*B)*72*nat(B/2)+nat(4/3*B)*3132+nat(B/2)*216+3 
Asymptotic class: n^2 
* Total analysis performed in 24742 ms.


-- stats
realtime 0:27.33
usertime 27.08
systime 0.05

