WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalwisebb3in___1/5,n_evalwisebb6in___2/5]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_evalwisestop___13/3]
3. non_recursive  : [n_evalwisebb6in___2_loop_cont/4]
4. non_recursive  : [n_evalwisebb3in___3/3]
5. non_recursive  : [n_evalwisebb6in___4/3]
6. non_recursive  : [n_evalwisebb3in___11/3]
7. recursive  : [n_evalwisebb3in___5/5,n_evalwisebb6in___6/5]
8. non_recursive  : [n_evalwisebb6in___6_loop_cont/4]
9. non_recursive  : [n_evalwisebb3in___7/3]
10. non_recursive  : [n_evalwisebb6in___8/3]
11. non_recursive  : [n_evalwisebb3in___9/3]
12. non_recursive  : [n_evalwisebb6in___10/3]
13. non_recursive  : [n_evalwisebb3in___12/3]
14. non_recursive  : [n_evalwisebb6in___14/3]
15. non_recursive  : [n_evalwiseentryin___15/3]
16. non_recursive  : [n_evalwisestart/3]
17. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalwisebb6in___2/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalwisebb6in___2_loop_cont/4
4. SCC is partially evaluated into n_evalwisebb3in___3/3
5. SCC is partially evaluated into n_evalwisebb6in___4/3
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into n_evalwisebb6in___6/5
8. SCC is partially evaluated into n_evalwisebb6in___6_loop_cont/4
9. SCC is partially evaluated into n_evalwisebb3in___7/3
10. SCC is partially evaluated into n_evalwisebb6in___8/3
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into n_evalwisebb6in___10/3
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into n_evalwisebb6in___14/3
15. SCC is partially evaluated into n_evalwiseentryin___15/3
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalwisebb6in___2/5 
* CE 17 is refined into CE [26] 
* CE 16 is refined into CE [27] 
* CE 15 is refined into CE [28] 


### Cost equations --> "Loop" of n_evalwisebb6in___2/5 
* CEs [28] --> Loop 26 
* CEs [26] --> Loop 27 
* CEs [27] --> Loop 28 

### Ranking functions of CR n_evalwisebb6in___2(A,B,C,D,E) 
* RF of phase [26]: [A-B-2]

#### Partial ranking functions of CR n_evalwisebb6in___2(A,B,C,D,E) 
* Partial RF of phase [26]:
  - RF of loop [26:1]:
    A-B-2


### Specialization of cost equations n_evalwisebb6in___2_loop_cont/4 
* CE 19 is refined into CE [29] 
* CE 18 is refined into CE [30] 


### Cost equations --> "Loop" of n_evalwisebb6in___2_loop_cont/4 
* CEs [29] --> Loop 29 
* CEs [30] --> Loop 30 

### Ranking functions of CR n_evalwisebb6in___2_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evalwisebb6in___2_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evalwisebb3in___3/3 
* CE 12 is refined into CE [31,32,33] 


### Cost equations --> "Loop" of n_evalwisebb3in___3/3 
* CEs [31,32,33] --> Loop 31 

### Ranking functions of CR n_evalwisebb3in___3(A,B,C) 

#### Partial ranking functions of CR n_evalwisebb3in___3(A,B,C) 


### Specialization of cost equations n_evalwisebb6in___4/3 
* CE 8 is refined into CE [34] 
* CE 9 is refined into CE [35] 


### Cost equations --> "Loop" of n_evalwisebb6in___4/3 
* CEs [34] --> Loop 32 
* CEs [35] --> Loop 33 

### Ranking functions of CR n_evalwisebb6in___4(A,B,C) 

#### Partial ranking functions of CR n_evalwisebb6in___4(A,B,C) 


### Specialization of cost equations n_evalwisebb6in___6/5 
* CE 23 is refined into CE [36] 
* CE 22 is refined into CE [37] 
* CE 21 is refined into CE [38] 


### Cost equations --> "Loop" of n_evalwisebb6in___6/5 
* CEs [38] --> Loop 34 
* CEs [36] --> Loop 35 
* CEs [37] --> Loop 36 

### Ranking functions of CR n_evalwisebb6in___6(A,B,C,D,E) 
* RF of phase [34]: [-A+B-2]

#### Partial ranking functions of CR n_evalwisebb6in___6(A,B,C,D,E) 
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    -A+B-2


### Specialization of cost equations n_evalwisebb6in___6_loop_cont/4 
* CE 25 is refined into CE [39] 
* CE 24 is refined into CE [40] 


### Cost equations --> "Loop" of n_evalwisebb6in___6_loop_cont/4 
* CEs [39] --> Loop 37 
* CEs [40] --> Loop 38 

### Ranking functions of CR n_evalwisebb6in___6_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evalwisebb6in___6_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evalwisebb3in___7/3 
* CE 20 is refined into CE [41,42,43] 


### Cost equations --> "Loop" of n_evalwisebb3in___7/3 
* CEs [41,42,43] --> Loop 39 

### Ranking functions of CR n_evalwisebb3in___7(A,B,C) 

#### Partial ranking functions of CR n_evalwisebb3in___7(A,B,C) 


### Specialization of cost equations n_evalwisebb6in___8/3 
* CE 13 is refined into CE [44] 
* CE 14 is refined into CE [45] 


### Cost equations --> "Loop" of n_evalwisebb6in___8/3 
* CEs [44] --> Loop 40 
* CEs [45] --> Loop 41 

### Ranking functions of CR n_evalwisebb6in___8(A,B,C) 

#### Partial ranking functions of CR n_evalwisebb6in___8(A,B,C) 


### Specialization of cost equations n_evalwisebb6in___10/3 
* CE 10 is refined into CE [46,47] 
* CE 11 is refined into CE [48] 


### Cost equations --> "Loop" of n_evalwisebb6in___10/3 
* CEs [47] --> Loop 42 
* CEs [48] --> Loop 43 
* CEs [46] --> Loop 44 

### Ranking functions of CR n_evalwisebb6in___10(A,B,C) 

#### Partial ranking functions of CR n_evalwisebb6in___10(A,B,C) 


### Specialization of cost equations n_evalwisebb6in___14/3 
* CE 5 is refined into CE [49,50] 
* CE 6 is refined into CE [51,52,53] 
* CE 7 is refined into CE [54] 


### Cost equations --> "Loop" of n_evalwisebb6in___14/3 
* CEs [50] --> Loop 45 
* CEs [53] --> Loop 46 
* CEs [54] --> Loop 47 
* CEs [49] --> Loop 48 
* CEs [51] --> Loop 49 
* CEs [52] --> Loop 50 

### Ranking functions of CR n_evalwisebb6in___14(A,B,C) 

#### Partial ranking functions of CR n_evalwisebb6in___14(A,B,C) 


### Specialization of cost equations n_evalwiseentryin___15/3 
* CE 2 is refined into CE [55,56,57,58,59,60] 
* CE 4 is refined into CE [61] 
* CE 3 is refined into CE [62] 


### Cost equations --> "Loop" of n_evalwiseentryin___15/3 
* CEs [59] --> Loop 51 
* CEs [60] --> Loop 52 
* CEs [58] --> Loop 53 
* CEs [61] --> Loop 54 
* CEs [62] --> Loop 55 
* CEs [55] --> Loop 56 
* CEs [56] --> Loop 57 
* CEs [57] --> Loop 58 

### Ranking functions of CR n_evalwiseentryin___15(A,B,C) 

#### Partial ranking functions of CR n_evalwiseentryin___15(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [63,64,65,66,67,68,69,70] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [70] --> Loop 59 
* CEs [69] --> Loop 60 
* CEs [68] --> Loop 61 
* CEs [67] --> Loop 62 
* CEs [66] --> Loop 63 
* CEs [65] --> Loop 64 
* CEs [64] --> Loop 65 
* CEs [63] --> Loop 66 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_evalwisebb6in___2(A,B,C,D,E):
* Chain [[26],28]: 2*it(26)+1
  Such that:it(26) =< A-B

  with precondition: [C=2,B>=2,A>=B+3] 

* Chain [[26],27]: 2*it(26)+0
  Such that:it(26) =< A-B

  with precondition: [C=3,B>=2,A>=B+3] 

* Chain [28]: 1
  with precondition: [C=2,B+2=A,B>=2] 

* Chain [27]: 0
  with precondition: [C=3,B>=2,A>=B+2] 


#### Cost of chains of n_evalwisebb6in___2_loop_cont(A,B,C,D):
* Chain [30]: 0
  with precondition: [A=2] 

* Chain [29]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalwisebb3in___3(A,B,C):
* Chain [31]: 4*s(2)+2
  Such that:aux(1) =< A-B
s(2) =< aux(1)

  with precondition: [B>=1,A>=B+3] 


#### Cost of chains of n_evalwisebb6in___4(A,B,C):
* Chain [33]: 1
  with precondition: [B+2=A,B>=1] 

* Chain [32]: 4*s(5)+3
  Such that:s(4) =< A-B
s(5) =< s(4)

  with precondition: [B>=1,A>=B+3] 


#### Cost of chains of n_evalwisebb6in___6(A,B,C,D,E):
* Chain [[34],36]: 2*it(34)+1
  Such that:it(34) =< -A+B

  with precondition: [C=2,A>=3,B>=A+3] 

* Chain [[34],35]: 2*it(34)+0
  Such that:it(34) =< -A+B

  with precondition: [C=3,A>=3,B>=A+3] 

* Chain [36]: 1
  with precondition: [C=2,B=A+2,B>=5] 

* Chain [35]: 0
  with precondition: [C=3,A>=3,B>=A+2] 


#### Cost of chains of n_evalwisebb6in___6_loop_cont(A,B,C,D):
* Chain [38]: 0
  with precondition: [A=2] 

* Chain [37]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalwisebb3in___7(A,B,C):
* Chain [39]: 4*s(7)+2
  Such that:aux(2) =< -A+B
s(7) =< aux(2)

  with precondition: [A>=2,B>=A+3] 


#### Cost of chains of n_evalwisebb6in___8(A,B,C):
* Chain [41]: 1
  with precondition: [A+2=B,A>=2] 

* Chain [40]: 4*s(10)+3
  Such that:s(9) =< -A+B
s(10) =< s(9)

  with precondition: [A>=2,B>=A+3] 


#### Cost of chains of n_evalwisebb6in___10(A,B,C):
* Chain [44]: 3
  with precondition: [A+3=B,A>=1] 

* Chain [43]: 1
  with precondition: [A+2=B,A>=1] 

* Chain [42]: 4*s(12)+5
  Such that:s(11) =< -A+B
s(12) =< s(11)

  with precondition: [A>=1,B>=A+4] 


#### Cost of chains of n_evalwisebb6in___14(A,B,C):
* Chain [50]: 3
  with precondition: [A+3=B,A>=0] 

* Chain [49]: 5
  with precondition: [A+4=B,A>=0] 

* Chain [48]: 3
  with precondition: [A=B+3,A>=3] 

* Chain [47]: 1
  with precondition: [A>=0,B>=0,B+2>=A,A+2>=B] 

* Chain [46]: 4*s(14)+7
  Such that:s(13) =< -A+B
s(14) =< s(13)

  with precondition: [A>=0,B>=A+5] 

* Chain [45]: 4*s(16)+5
  Such that:s(15) =< A-B
s(16) =< s(15)

  with precondition: [B>=0,A>=B+4] 


#### Cost of chains of n_evalwiseentryin___15(A,B,C):
* Chain [58]: 4
  with precondition: [A+3=B,A>=0] 

* Chain [57]: 4
  with precondition: [A=B+3,A>=3] 

* Chain [56]: 6
  with precondition: [A=B+4,A>=4] 

* Chain [55]: 1
  with precondition: [0>=A+1] 

* Chain [54]: 1
  with precondition: [0>=B+1] 

* Chain [53]: 2
  with precondition: [A>=0,B>=0,B+2>=A,A+2>=B] 

* Chain [52]: 4*s(18)+6
  Such that:s(17) =< -A+B
s(18) =< s(17)

  with precondition: [A>=0,B>=A+4] 

* Chain [51]: 4*s(20)+8
  Such that:s(19) =< A-B
s(20) =< s(19)

  with precondition: [B>=0,A>=B+5] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [66]: 6
  with precondition: [A+3=B,A>=0] 

* Chain [65]: 6
  with precondition: [A=B+3,A>=3] 

* Chain [64]: 8
  with precondition: [A=B+4,A>=4] 

* Chain [63]: 3
  with precondition: [0>=A+1] 

* Chain [62]: 3
  with precondition: [0>=B+1] 

* Chain [61]: 4
  with precondition: [A>=0,B>=0,B+2>=A,A+2>=B] 

* Chain [60]: 4*s(22)+8
  Such that:s(21) =< -A+B
s(22) =< s(21)

  with precondition: [A>=0,B>=A+4] 

* Chain [59]: 4*s(24)+10
  Such that:s(23) =< A-B
s(24) =< s(23)

  with precondition: [B>=0,A>=B+5] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [66] with precondition: [A+3=B,A>=0] 
    - Upper bound: 6 
    - Complexity: constant 
* Chain [65] with precondition: [A=B+3,A>=3] 
    - Upper bound: 6 
    - Complexity: constant 
* Chain [64] with precondition: [A=B+4,A>=4] 
    - Upper bound: 8 
    - Complexity: constant 
* Chain [63] with precondition: [0>=A+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [62] with precondition: [0>=B+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [61] with precondition: [A>=0,B>=0,B+2>=A,A+2>=B] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [60] with precondition: [A>=0,B>=A+4] 
    - Upper bound: -4*A+4*B+8 
    - Complexity: n 
* Chain [59] with precondition: [B>=0,A>=B+5] 
    - Upper bound: 4*A-4*B+10 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C): max([5,nat(-A+B)*4+5,nat(A-B)*4+7])+3 
Asymptotic class: n 
* Total analysis performed in 272 ms.


-- stats
realtime 0:00.45
usertime 0.29
systime 0.01

