WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalwcet1bb1in___8/9,n_evalwcet1bb4in___7/9,n_evalwcet1bb6in___4/9,n_evalwcet1bb6in___6/9,n_evalwcet1bbin___9/9]
1. recursive  : [n_evalwcet1bb1in___13/9,n_evalwcet1bb4in___12/9,n_evalwcet1bb6in___10/9,n_evalwcet1bb6in___11/9,n_evalwcet1bb6in___2/9,n_evalwcet1bb6in___3/9,n_evalwcet1bb6in___5/9,n_evalwcet1bbin___14/9,n_evalwcet1bbin___9_loop_cont/10]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalwcet1stop___19/5]
4. non_recursive  : [n_evalwcet1bbin___14_loop_cont/6]
5. non_recursive  : [n_evalwcet1bb6in___15/5]
6. non_recursive  : [n_evalwcet1bb6in___16/5]
7. non_recursive  : [n_evalwcet1bb1in___18/5]
8. non_recursive  : [n_evalwcet1bb6in___1/5]
9. non_recursive  : [n_evalwcet1bb4in___17/5]
10. non_recursive  : [n_evalwcet1bbin___20/5]
11. non_recursive  : [n_evalwcet1entryin___21/5]
12. non_recursive  : [n_evalwcet1start/5]
13. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalwcet1bbin___9/9
1. SCC is partially evaluated into n_evalwcet1bbin___14/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalwcet1bbin___14_loop_cont/6
5. SCC is partially evaluated into n_evalwcet1bb6in___15/5
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into n_evalwcet1bb1in___18/5
8. SCC is partially evaluated into n_evalwcet1bb6in___1/5
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into n_evalwcet1bbin___20/5
11. SCC is partially evaluated into n_evalwcet1entryin___21/5
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalwcet1bbin___9/9 
* CE 17 is refined into CE [31] 
* CE 14 is refined into CE [32] 
* CE 15 is refined into CE [33] 
* CE 16 is refined into CE [34] 


### Cost equations --> "Loop" of n_evalwcet1bbin___9/9 
* CEs [34] --> Loop 25 
* CEs [31] --> Loop 26 
* CEs [32] --> Loop 27 
* CEs [33] --> Loop 28 

### Ranking functions of CR n_evalwcet1bbin___9(A,B,C,D,E,F,G,H,I) 
* RF of phase [25]: [C-1]

#### Partial ranking functions of CR n_evalwcet1bbin___9(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    C-1


### Specialization of cost equations n_evalwcet1bbin___14/9 
* CE 26 is refined into CE [35] 
* CE 29 is refined into CE [36] 
* CE 27 is refined into CE [37] 
* CE 20 is refined into CE [38] 
* CE 30 is refined into CE [39] 
* CE 21 is refined into CE [40,41] 
* CE 23 is refined into CE [42,43] 
* CE 24 is refined into CE [44] 
* CE 28 is refined into CE [45] 
* CE 25 is refined into CE [46] 
* CE 22 is refined into CE [47,48] 


### Cost equations --> "Loop" of n_evalwcet1bbin___14/9 
* CEs [45] --> Loop 29 
* CEs [46] --> Loop 30 
* CEs [48] --> Loop 31 
* CEs [47] --> Loop 32 
* CEs [35] --> Loop 33 
* CEs [36] --> Loop 34 
* CEs [37] --> Loop 35 
* CEs [38,39] --> Loop 36 
* CEs [41,43] --> Loop 37 
* CEs [40,42] --> Loop 38 
* CEs [44] --> Loop 39 

### Ranking functions of CR n_evalwcet1bbin___14(A,B,C,D,E,F,G,H,I) 
* RF of phase [29,30,31,32]: [C-1]

#### Partial ranking functions of CR n_evalwcet1bbin___14(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [29,30,31,32]:
  - RF of loop [29:1]:
    A-B-1 depends on loops [30:1] 
    A-D-1 depends on loops [30:1] 
  - RF of loop [29:1,30:1]:
    C-1
  - RF of loop [30:1]:
    B-1 depends on loops [29:1] 
    D-1 depends on loops [29:1] 
  - RF of loop [31:1]:
    C/3-1
  - RF of loop [32:1]:
    C/2-1


### Specialization of cost equations n_evalwcet1bbin___14_loop_cont/6 
* CE 19 is refined into CE [49] 
* CE 18 is refined into CE [50] 


### Cost equations --> "Loop" of n_evalwcet1bbin___14_loop_cont/6 
* CEs [49] --> Loop 40 
* CEs [50] --> Loop 41 

### Ranking functions of CR n_evalwcet1bbin___14_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalwcet1bbin___14_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalwcet1bb6in___15/5 
* CE 13 is refined into CE [51,52,53,54,55,56] 


### Cost equations --> "Loop" of n_evalwcet1bb6in___15/5 
* CEs [51,52,53,54,55,56] --> Loop 42 

### Ranking functions of CR n_evalwcet1bb6in___15(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalwcet1bb6in___15(A,B,C,D,E) 


### Specialization of cost equations n_evalwcet1bb1in___18/5 
* CE 6 is refined into CE [57] 
* CE 7 is refined into CE [58] 


### Cost equations --> "Loop" of n_evalwcet1bb1in___18/5 
* CEs [57] --> Loop 43 
* CEs [58] --> Loop 44 

### Ranking functions of CR n_evalwcet1bb1in___18(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalwcet1bb1in___18(A,B,C,D,E) 


### Specialization of cost equations n_evalwcet1bb6in___1/5 
* CE 8 is refined into CE [59] 
* CE 9 is refined into CE [60,61] 
* CE 10 is refined into CE [62,63,64,65,66,67,68,69,70,71] 
* CE 11 is refined into CE [72,73] 
* CE 12 is refined into CE [74] 


### Cost equations --> "Loop" of n_evalwcet1bb6in___1/5 
* CEs [62,65] --> Loop 45 
* CEs [59,60,61,63,64,66,67,68,69,70,71,72,73] --> Loop 46 
* CEs [74] --> Loop 47 

### Ranking functions of CR n_evalwcet1bb6in___1(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalwcet1bb6in___1(A,B,C,D,E) 


### Specialization of cost equations n_evalwcet1bbin___20/5 
* CE 4 is refined into CE [75,76] 
* CE 5 is refined into CE [77,78] 


### Cost equations --> "Loop" of n_evalwcet1bbin___20/5 
* CEs [76,78] --> Loop 48 
* CEs [75,77] --> Loop 49 

### Ranking functions of CR n_evalwcet1bbin___20(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalwcet1bbin___20(A,B,C,D,E) 


### Specialization of cost equations n_evalwcet1entryin___21/5 
* CE 2 is refined into CE [79,80] 
* CE 3 is refined into CE [81] 


### Cost equations --> "Loop" of n_evalwcet1entryin___21/5 
* CEs [80] --> Loop 50 
* CEs [81] --> Loop 51 
* CEs [79] --> Loop 52 

### Ranking functions of CR n_evalwcet1entryin___21(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalwcet1entryin___21(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [82,83,84] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [84] --> Loop 53 
* CEs [83] --> Loop 54 
* CEs [82] --> Loop 55 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalwcet1bbin___9(A,B,C,D,E,F,G,H,I):
* Chain [[25],28]: 3*it(25)+3
  Such that:it(25) =< C

  with precondition: [B=0,D=0,E=3,C>=2,A>=C+1] 

* Chain [[25],27]: 3*it(25)+2
  Such that:it(25) =< C-H

  with precondition: [B=0,D=0,E=2,G=0,I=1,A=F,H>=1,A>=C+1,C>=H+1] 

* Chain [[25],26]: 3*it(25)+0
  Such that:it(25) =< C

  with precondition: [B=0,D=0,E=4,C>=2,A>=C+1] 

* Chain [28]: 3
  with precondition: [B=0,C=1,D=0,E=3,A>=2] 

* Chain [27]: 2
  with precondition: [B=0,D=0,E=2,G=0,I=1,A=F,C=H,C>=1,A>=C+1] 

* Chain [26]: 0
  with precondition: [B=0,D=0,E=4,C>=1,A>=C+1] 


#### Cost of chains of n_evalwcet1bbin___14(A,B,C,D,E,F,G,H,I):
* Chain [[29,30,31,32],39]: 9*it(29)+6*it(31)+6*it(32)+3
  Such that:it(32) =< C/2
it(31) =< C/3
aux(11) =< C
it(29) =< aux(11)
it(31) =< aux(11)
it(32) =< aux(11)

  with precondition: [E=3,B=D,B>=1,C>=B,B+C>=4,A>=B+C] 

* Chain [[29,30,31,32],38]: 9*it(29)+6*it(31)+6*it(32)+6
  Such that:it(32) =< C/2
it(31) =< C/3
aux(12) =< C
it(29) =< aux(12)
it(31) =< aux(12)
it(32) =< aux(12)

  with precondition: [E=3,B=D,B>=1,C>=B+1,B+C>=5,A>=B+C] 

* Chain [[29,30,31,32],37]: 27*it(29)+6
  Such that:aux(14) =< C
it(29) =< aux(14)

  with precondition: [E=3,B=D,B>=1,C>=B+2,B+C>=6,A>=B+C] 

* Chain [[29,30,31,32],36]: 24*it(29)+3
  Such that:aux(15) =< C
it(29) =< aux(15)

  with precondition: [E=4,B=D,B>=1,C>=2,A>=B+C] 

* Chain [[29,30,31,32],35]: 9*it(29)+6*it(31)+6*it(32)+3
  Such that:it(32) =< A/2-D/2
it(31) =< A/3-D/3
aux(16) =< A-D
it(29) =< aux(16)
it(31) =< aux(16)
it(32) =< aux(16)

  with precondition: [E=3,B=D,B+C=A,B>=1,C>=2] 

* Chain [[29,30,31,32],34]: 9*it(29)+6*it(31)+6*it(32)+3
  Such that:it(32) =< C/2
it(31) =< C/3
aux(17) =< C
it(29) =< aux(17)
it(31) =< aux(17)
it(32) =< aux(17)

  with precondition: [E=3,B=D,A>=4,B>=1,C>=2,A>=B+C] 

* Chain [[29,30,31,32],33]: 9*it(29)+6*it(31)+6*it(32)+3
  Such that:it(32) =< C/2
it(31) =< C/3
aux(18) =< C
it(29) =< aux(18)
it(31) =< aux(18)
it(32) =< aux(18)

  with precondition: [E=3,B=D,B>=1,C>=2,A>=B+C] 

* Chain [39]: 3
  with precondition: [B=1,C=1,D=1,E=3,A>=2] 

* Chain [38]: 6
  with precondition: [B=1,C=2,D=1,E=3,A>=3] 

* Chain [37]: 6*s(5)+6
  Such that:aux(13) =< C
s(5) =< aux(13)

  with precondition: [B=1,D=1,E=3,C>=3,A>=C+1] 

* Chain [36]: 3*s(7)+3
  Such that:s(7) =< C

  with precondition: [E=4,D=B,C>=1,D>=1,A>=C+D] 

* Chain [35]: 3
  with precondition: [C=1,E=3,B+1=A,B=D,B>=1] 

* Chain [34]: 3
  with precondition: [C=1,E=3,D=B,D>=1,A>=D+2] 


#### Cost of chains of n_evalwcet1bbin___14_loop_cont(A,B,C,D,E,F):
* Chain [41]: 0
  with precondition: [A=3] 

* Chain [40]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalwcet1bb6in___15(A,B,C,D,E):
* Chain [42]: 30*s(34)+30*s(35)+78*s(36)+27*s(46)+7
  Such that:s(45) =< A
aux(24) =< C
aux(25) =< C/2
aux(26) =< C/3
s(34) =< aux(25)
s(35) =< aux(26)
s(46) =< s(45)
s(36) =< aux(24)
s(35) =< aux(24)
s(34) =< aux(24)

  with precondition: [B=0,D=1,C=A,C>=2] 


#### Cost of chains of n_evalwcet1bb1in___18(A,B,C,D,E):
* Chain [44]: 2
  with precondition: [A=1,B=0,C=1] 

* Chain [43]: 30*s(51)+30*s(52)+105*s(53)+8
  Such that:s(49) =< C/2
s(50) =< C/3
aux(27) =< C
s(51) =< s(49)
s(52) =< s(50)
s(53) =< aux(27)
s(52) =< aux(27)
s(51) =< aux(27)

  with precondition: [B=0,C=A,C>=2] 


#### Cost of chains of n_evalwcet1bb6in___1(A,B,C,D,E):
* Chain [47]: 1
  with precondition: [A=1,B=0,C=1,D=0] 

* Chain [46]: 42*s(55)+24*s(60)+24*s(61)+222*s(62)+10
  Such that:aux(31) =< A
aux(32) =< C
aux(33) =< C/2
aux(34) =< C/3
s(55) =< aux(31)
s(60) =< aux(33)
s(61) =< aux(34)
s(62) =< aux(32)
s(61) =< aux(32)
s(60) =< aux(32)

  with precondition: [B=0,D=0,C=A,C>=2] 

* Chain [45]: 7
  with precondition: [A=3,B=0,C=3,D=0] 


#### Cost of chains of n_evalwcet1bbin___20(A,B,C,D,E):
* Chain [49]: 3
  with precondition: [A=1,B=0,C=1] 

* Chain [48]: 54*s(98)+54*s(99)+369*s(100)+12
  Such that:aux(36) =< C
aux(37) =< C/2
aux(38) =< C/3
s(98) =< aux(37)
s(99) =< aux(38)
s(100) =< aux(36)
s(99) =< aux(36)
s(98) =< aux(36)

  with precondition: [B=0,C=A,C>=2] 


#### Cost of chains of n_evalwcet1entryin___21(A,B,C,D,E):
* Chain [52]: 4
  with precondition: [A=1] 

* Chain [51]: 1
  with precondition: [0>=A] 

* Chain [50]: 54*s(112)+54*s(113)+369*s(114)+13
  Such that:s(109) =< A
s(110) =< A/2
s(111) =< A/3
s(112) =< s(110)
s(113) =< s(111)
s(114) =< s(109)
s(113) =< s(109)
s(112) =< s(109)

  with precondition: [A>=2] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [55]: 6
  with precondition: [A=1] 

* Chain [54]: 3
  with precondition: [0>=A] 

* Chain [53]: 54*s(118)+54*s(119)+369*s(120)+15
  Such that:s(115) =< A
s(116) =< A/2
s(117) =< A/3
s(118) =< s(116)
s(119) =< s(117)
s(120) =< s(115)
s(119) =< s(115)
s(118) =< s(115)

  with precondition: [A>=2] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [55] with precondition: [A=1] 
    - Upper bound: 6 
    - Complexity: constant 
* Chain [54] with precondition: [0>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [53] with precondition: [A>=2] 
    - Upper bound: 414*A+15 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E): max([3,nat(A)*369+12+nat(A/2)*54+nat(A/3)*54])+3 
Asymptotic class: n 
* Total analysis performed in 1028 ms.


-- stats
realtime 0:01.21
usertime 1.08
systime 0.00

