WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalrsdbb1in___5/7,n_evalrsdbb4in___4/7]
1. recursive  : [n_evalrsdbb1in___2/7,n_evalrsdbb4in___1/7,n_evalrsdbb4in___3/7,n_evalrsdbb4in___4_loop_cont/8]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalrsdstop___9/4]
4. non_recursive  : [n_evalrsdbb1in___2_loop_cont/5]
5. non_recursive  : [n_evalrsdbb4in___6/4]
6. non_recursive  : [n_evalrsdbb4in___7/4]
7. non_recursive  : [n_evalrsdbb1in___8/4]
8. non_recursive  : [n_evalrsdbb4in___10/4]
9. non_recursive  : [n_evalrsdentryin___11/4]
10. non_recursive  : [n_evalrsdstart/4]
11. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalrsdbb4in___4/7
1. SCC is partially evaluated into n_evalrsdbb1in___2/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalrsdbb1in___2_loop_cont/5
5. SCC is partially evaluated into n_evalrsdbb4in___6/4
6. SCC is partially evaluated into n_evalrsdbb4in___7/4
7. SCC is partially evaluated into n_evalrsdbb1in___8/4
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into n_evalrsdentryin___11/4
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalrsdbb4in___4/7 
* CE 24 is refined into CE [25] 
* CE 23 is refined into CE [26] 
* CE 22 is refined into CE [27] 
* CE 21 is refined into CE [28] 


### Cost equations --> "Loop" of n_evalrsdbb4in___4/7 
* CEs [28] --> Loop 18 
* CEs [25] --> Loop 19 
* CEs [26] --> Loop 20 
* CEs [27] --> Loop 21 

### Ranking functions of CR n_evalrsdbb4in___4(A,B,C,D,E,F,G) 
* RF of phase [18]: [-A+C+1,-B/2+C+1/2,C-1]

#### Partial ranking functions of CR n_evalrsdbb4in___4(A,B,C,D,E,F,G) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    -A+C+1
    -B/2+C+1/2
    C-1


### Specialization of cost equations n_evalrsdbb1in___2/7 
* CE 13 is refined into CE [29] 
* CE 18 is refined into CE [30] 
* CE 14 is refined into CE [31,32] 
* CE 16 is refined into CE [33] 
* CE 15 is refined into CE [34] 
* CE 17 is refined into CE [35] 


### Cost equations --> "Loop" of n_evalrsdbb1in___2/7 
* CEs [34,35] --> Loop 22 
* CEs [29,30] --> Loop 23 
* CEs [32] --> Loop 24 
* CEs [31,33] --> Loop 25 

### Ranking functions of CR n_evalrsdbb1in___2(A,B,C,D,E,F,G) 
* RF of phase [22]: [-A+B,-A+C,B-2,C-2]

#### Partial ranking functions of CR n_evalrsdbb1in___2(A,B,C,D,E,F,G) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    -A+B
    -A+C
    B-2
    C-2


### Specialization of cost equations n_evalrsdbb1in___2_loop_cont/5 
* CE 19 is refined into CE [36] 
* CE 20 is refined into CE [37] 


### Cost equations --> "Loop" of n_evalrsdbb1in___2_loop_cont/5 
* CEs [36] --> Loop 26 
* CEs [37] --> Loop 27 

### Ranking functions of CR n_evalrsdbb1in___2_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalrsdbb1in___2_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalrsdbb4in___6/4 
* CE 6 is refined into CE [38,39,40] 
* CE 7 is refined into CE [41] 


### Cost equations --> "Loop" of n_evalrsdbb4in___6/4 
* CEs [38,39,40] --> Loop 28 
* CEs [41] --> Loop 29 

### Ranking functions of CR n_evalrsdbb4in___6(A,B,C,D) 

#### Partial ranking functions of CR n_evalrsdbb4in___6(A,B,C,D) 


### Specialization of cost equations n_evalrsdbb4in___7/4 
* CE 8 is refined into CE [42] 
* CE 9 is refined into CE [43,44] 
* CE 10 is refined into CE [45,46] 
* CE 11 is refined into CE [47,48,49] 
* CE 12 is refined into CE [50] 


### Cost equations --> "Loop" of n_evalrsdbb4in___7/4 
* CEs [42,43,44,45,46,47,48,49] --> Loop 30 
* CEs [50] --> Loop 31 

### Ranking functions of CR n_evalrsdbb4in___7(A,B,C,D) 

#### Partial ranking functions of CR n_evalrsdbb4in___7(A,B,C,D) 


### Specialization of cost equations n_evalrsdbb1in___8/4 
* CE 4 is refined into CE [51,52] 
* CE 5 is refined into CE [53,54] 


### Cost equations --> "Loop" of n_evalrsdbb1in___8/4 
* CEs [52,54] --> Loop 32 
* CEs [51,53] --> Loop 33 

### Ranking functions of CR n_evalrsdbb1in___8(A,B,C,D) 

#### Partial ranking functions of CR n_evalrsdbb1in___8(A,B,C,D) 


### Specialization of cost equations n_evalrsdentryin___11/4 
* CE 2 is refined into CE [55,56] 
* CE 3 is refined into CE [57] 


### Cost equations --> "Loop" of n_evalrsdentryin___11/4 
* CEs [56] --> Loop 34 
* CEs [57] --> Loop 35 
* CEs [55] --> Loop 36 

### Ranking functions of CR n_evalrsdentryin___11(A,B,C,D) 

#### Partial ranking functions of CR n_evalrsdentryin___11(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [58,59,60] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [60] --> Loop 37 
* CEs [59] --> Loop 38 
* CEs [58] --> Loop 39 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalrsdbb4in___4(A,B,C,D,E,F,G):
* Chain [[18],21]: 2*it(18)+2
  Such that:it(18) =< -A+C

  with precondition: [D=2,G+1=B,A=E,G=F,C>=A+1,G>=C,2*A>=C+2,2*A>=G+1] 

* Chain [[18],20]: 2*it(18)+1
  Such that:it(18) =< -A+C+1

  with precondition: [D=3,C>=A,2*A>=B,B>=C+1,2*A>=C+2] 

* Chain [[18],19]: 2*it(18)+0
  Such that:it(18) =< -B/2+C+1/2

  with precondition: [D=4,C>=A,2*A>=B,B>=C+1,2*A>=C+2] 

* Chain [21]: 2
  with precondition: [D=2,A=E,B=F+1,B=G+1,C>=A,2*A>=B,B>=C+1,2*A>=C+2] 

* Chain [20]: 1
  with precondition: [D=3,C+1=A,C>=0,2*C+2>=B,B>=C+1] 

* Chain [19]: 0
  with precondition: [D=4,C+1>=A,2*A>=B,B>=C+1,2*A>=C+2] 


#### Cost of chains of n_evalrsdbb1in___2(A,B,C,D,E,F,G):
* Chain [[22],25]: 4*it(22)+2*s(5)+2
  Such that:aux(3) =< -A+C
it(22) =< aux(3)
s(5) =< it(22)*aux(3)

  with precondition: [D=3,C=B,C>=A+1,2*A>=C+1] 

* Chain [[22],24]: 6*it(22)+2*s(5)+2
  Such that:aux(4) =< -A+C
it(22) =< aux(4)
s(5) =< it(22)*aux(4)

  with precondition: [D=3,C=B,C>=A+2,2*A>=C+1] 

* Chain [[22],23]: 4*it(22)+2*s(5)+2*s(7)+1
  Such that:aux(2) =< -A+C
aux(5) =< C
it(22) =< aux(5)
s(7) =< aux(5)
it(22) =< aux(2)
s(5) =< it(22)*aux(2)

  with precondition: [D=4,C=B,C>=A+1,2*A>=C+1] 

* Chain [25]: 2
  with precondition: [D=3,B=A,B=C,B>=1] 

* Chain [24]: 2*s(6)+2
  Such that:s(6) =< -A+C

  with precondition: [D=3,C=B,C>=A+1,2*A>=C+1] 

* Chain [23]: 2*s(7)+1
  Such that:s(7) =< B/2

  with precondition: [D=4,C=B,C>=A,2*A>=C+1] 


#### Cost of chains of n_evalrsdbb1in___2_loop_cont(A,B,C,D,E):
* Chain [27]: 0
  with precondition: [A=3] 

* Chain [26]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalrsdbb4in___6(A,B,C,D):
* Chain [29]: 1
  with precondition: [A=0,B+1=0,C+1=0] 

* Chain [28]: 12*s(22)+4*s(23)+2*s(25)+4*s(27)+2*s(28)+2*s(29)+3
  Such that:aux(7) =< A
s(26) =< 2*A
s(21) =< C/2
s(25) =< aux(7)
s(27) =< s(26)
s(28) =< s(26)
s(27) =< aux(7)
s(29) =< s(27)*aux(7)
s(22) =< s(21)
s(23) =< s(22)*s(21)

  with precondition: [2*A=B+1,2*A=C+1,A>=1] 


#### Cost of chains of n_evalrsdbb4in___7(A,B,C,D):
* Chain [31]: 1
  with precondition: [A=0,B=0,C+1=0] 

* Chain [30]: 2*s(30)+14*s(31)+20*s(32)+4*s(35)+8*s(40)+4*s(41)+4*s(42)+4*s(45)+7
  Such that:s(30) =< B/2
aux(11) =< A
aux(12) =< 2*A
aux(13) =< C/2
s(31) =< aux(13)
s(32) =< aux(11)
s(35) =< s(32)*aux(11)
s(40) =< aux(12)
s(41) =< aux(12)
s(40) =< aux(11)
s(42) =< s(40)*aux(11)
s(45) =< s(31)*aux(13)

  with precondition: [2*A=B,2*A=C+1,A>=1] 


#### Cost of chains of n_evalrsdbb1in___8(A,B,C,D):
* Chain [33]: 2
  with precondition: [A=0,B=0,C=0] 

* Chain [32]: 50*s(55)+12*s(56)+6*s(57)+6*s(58)+12*s(60)+8
  Such that:aux(16) =< C
aux(17) =< C/2
s(55) =< aux(17)
s(56) =< aux(16)
s(57) =< aux(16)
s(56) =< aux(17)
s(58) =< s(56)*aux(17)
s(60) =< s(55)*aux(17)

  with precondition: [2*A=B,2*A=C,A>=1] 


#### Cost of chains of n_evalrsdentryin___11(A,B,C,D):
* Chain [36]: 4
  with precondition: [A=0] 

* Chain [35]: 1
  with precondition: [0>=A+1] 

* Chain [34]: 50*s(74)+12*s(75)+6*s(76)+6*s(77)+12*s(78)+10
  Such that:s(73) =< A
s(72) =< 2*A
s(74) =< s(73)
s(75) =< s(72)
s(76) =< s(72)
s(75) =< s(73)
s(77) =< s(75)*s(73)
s(78) =< s(74)*s(73)

  with precondition: [A>=1] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [39]: 6
  with precondition: [A=0] 

* Chain [38]: 3
  with precondition: [0>=A+1] 

* Chain [37]: 50*s(81)+12*s(82)+6*s(83)+6*s(84)+12*s(85)+12
  Such that:s(79) =< A
s(80) =< 2*A
s(81) =< s(79)
s(82) =< s(80)
s(83) =< s(80)
s(82) =< s(79)
s(84) =< s(82)*s(79)
s(85) =< s(81)*s(79)

  with precondition: [A>=1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [39] with precondition: [A=0] 
    - Upper bound: 6 
    - Complexity: constant 
* Chain [38] with precondition: [0>=A+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [37] with precondition: [A>=1] 
    - Upper bound: 50*A+12+12*A*A+6*A* (2*A)+36*A 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D): max([3,nat(A)*50+9+nat(A)*12*nat(A)+nat(A)*6*nat(2*A)+nat(2*A)*18])+3 
Asymptotic class: n^2 
* Total analysis performed in 501 ms.


-- stats
realtime 0:00.66
usertime 0.54
systime 0.01

