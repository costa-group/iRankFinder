WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [lbl91/9]
1. recursive  : [lbl81/9,lbl91_loop_cont/10]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [stop/5]
4. non_recursive  : [lbl81_loop_cont/6]
5. non_recursive  : [start/5]
6. non_recursive  : [start0/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into lbl91/9
1. SCC is partially evaluated into lbl81/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into lbl81_loop_cont/6
5. SCC is partially evaluated into start/5
6. SCC is partially evaluated into start0/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations lbl91/9 
* CE 10 is refined into CE [16] 
* CE 8 is refined into CE [17] 
* CE 9 is refined into CE [18] 


### Cost equations --> "Loop" of lbl91/9 
* CEs [18] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [17] --> Loop 17 

### Ranking functions of CR lbl91(A,B,C,D,E,F,G,H,I) 
* RF of phase [15]: [A-B-2,-B+D-2]

#### Partial ranking functions of CR lbl91(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    A-B-2
    -B+D-2


### Specialization of cost equations lbl81/9 
* CE 15 is refined into CE [19] 
* CE 13 is refined into CE [20] 
* CE 14 is refined into CE [21] 


### Cost equations --> "Loop" of lbl81/9 
* CEs [21] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [20] --> Loop 20 

### Ranking functions of CR lbl81(A,B,C,D,E,F,G,H,I) 
* RF of phase [18]: [B-D-2,C-D-2]

#### Partial ranking functions of CR lbl81(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    B-D-2
    C-D-2


### Specialization of cost equations lbl81_loop_cont/6 
* CE 12 is refined into CE [22] 
* CE 11 is refined into CE [23] 


### Cost equations --> "Loop" of lbl81_loop_cont/6 
* CEs [22] --> Loop 21 
* CEs [23] --> Loop 22 

### Ranking functions of CR lbl81_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR lbl81_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations start/5 
* CE 2 is refined into CE [24] 
* CE 3 is refined into CE [25,26] 
* CE 7 is refined into CE [27,28,29] 
* CE 6 is refined into CE [30] 
* CE 5 is refined into CE [31] 
* CE 4 is refined into CE [32] 


### Cost equations --> "Loop" of start/5 
* CEs [30] --> Loop 23 
* CEs [31] --> Loop 24 
* CEs [32] --> Loop 25 
* CEs [24,25,26] --> Loop 26 
* CEs [27,28,29] --> Loop 27 

### Ranking functions of CR start(A,B,C,D,E) 

#### Partial ranking functions of CR start(A,B,C,D,E) 


### Specialization of cost equations start0/5 
* CE 1 is refined into CE [33,34,35,36,37] 


### Cost equations --> "Loop" of start0/5 
* CEs [36] --> Loop 28 
* CEs [37] --> Loop 29 
* CEs [35] --> Loop 30 
* CEs [33] --> Loop 31 
* CEs [34] --> Loop 32 

### Ranking functions of CR start0(A,B,C,D,E) 

#### Partial ranking functions of CR start0(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of lbl91(A,B,C,D,E,F,G,H,I):
* Chain [[15],17]: 1*it(15)+1
  Such that:it(15) =< -B+I

  with precondition: [E=2,A=D,A=F,A=G+2,C=H,A=I,C>=0,A>=B+3,B>=C+1] 

* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< A-B

  with precondition: [E=4,A=D,C>=0,A>=B+3,B>=C+1] 

* Chain [17]: 1
  with precondition: [E=2,A=B+2,A=D,A=F,A=G+2,C=H,A=I,C>=0,A>=C+3] 

* Chain [16]: 0
  with precondition: [E=4,D=A,C>=0,D>=B+2,B>=C+1] 


#### Cost of chains of lbl81(A,B,C,D,E,F,G,H,I):
* Chain [[18],20]: 1*it(18)+1
  Such that:it(18) =< -D+I

  with precondition: [E=2,B=C,A=F,B=G,B=H,B=I+2,A>=0,D>=A+1,B>=D+3] 

* Chain [[18],19]: 1*it(18)+0
  Such that:it(18) =< B-D

  with precondition: [E=4,B=C,A>=0,D>=A+1,B>=D+3] 

* Chain [20]: 1
  with precondition: [E=2,C=B,C=D+2,A=F,C=G,C=H,C=I+2,A>=0,C>=A+3] 

* Chain [19]: 0
  with precondition: [E=4,C=B,A>=0,D>=A+1,C>=D+2] 


#### Cost of chains of lbl81_loop_cont(A,B,C,D,E,F):
* Chain [22]: 0
  with precondition: [A=2] 

* Chain [21]: 0
  with precondition: [A=4] 


#### Cost of chains of start(A,B,C,D,E):
* Chain [27]: 2*s(3)+2
  Such that:aux(1) =< C-D
s(3) =< aux(1)

  with precondition: [D=A,C=B,D>=0,C>=D+3] 

* Chain [26]: 2*s(5)+2
  Such that:aux(2) =< -C+D
s(5) =< aux(2)

  with precondition: [D=A,C=B,C>=0,D>=C+3] 

* Chain [25]: 1
  with precondition: [D=A,C=B,0>=D+1] 

* Chain [24]: 1
  with precondition: [D=A,C=B,0>=C+1] 

* Chain [23]: 1
  with precondition: [D=A,C=B,C>=0,D>=0,D+2>=C,C+2>=D] 


#### Cost of chains of start0(A,B,C,D,E):
* Chain [32]: 2
  with precondition: [0>=A+1] 

* Chain [31]: 2
  with precondition: [0>=C+1] 

* Chain [30]: 2
  with precondition: [A>=0,C>=0,C+2>=A,A+2>=C] 

* Chain [29]: 2*s(8)+3
  Such that:s(7) =< -A+C
s(8) =< s(7)

  with precondition: [A>=0,C>=A+3] 

* Chain [28]: 2*s(10)+3
  Such that:s(9) =< A-C
s(10) =< s(9)

  with precondition: [C>=0,A>=C+3] 


Closed-form bounds of start0(A,B,C,D,E): 
-------------------------------------
* Chain [32] with precondition: [0>=A+1] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [31] with precondition: [0>=C+1] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [30] with precondition: [A>=0,C>=0,C+2>=A,A+2>=C] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [29] with precondition: [A>=0,C>=A+3] 
    - Upper bound: -2*A+2*C+3 
    - Complexity: n 
* Chain [28] with precondition: [C>=0,A>=C+3] 
    - Upper bound: 2*A-2*C+3 
    - Complexity: n 

### Maximum cost of start0(A,B,C,D,E): max([nat(-A+C)*2+1,nat(A-C)*2+1])+2 
Asymptotic class: n 
* Total analysis performed in 366 ms.


-- stats
realtime 0:00.51
usertime 0.41
systime 0.00

