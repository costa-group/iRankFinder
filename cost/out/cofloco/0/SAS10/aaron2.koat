WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [lbl101/13]
1. recursive  : [lbl101_loop_cont/14,lbl91/13]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [stop/7]
4. non_recursive  : [lbl91_loop_cont/8]
5. non_recursive  : [start/7]
6. non_recursive  : [start0/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into lbl101/13
1. SCC is partially evaluated into lbl91/13
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into lbl91_loop_cont/8
5. SCC is partially evaluated into start/7
6. SCC is partially evaluated into start0/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations lbl101/13 
* CE 11 is refined into CE [20] 
* CE 9 is refined into CE [21] 
* CE 8 is refined into CE [22] 
* CE 10 is refined into CE [23] 


### Cost equations --> "Loop" of lbl101/13 
* CEs [23] --> Loop 15 
* CEs [20] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [22] --> Loop 18 

### Ranking functions of CR lbl101(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [15]: [-B+D+1,-B+E+1]

#### Partial ranking functions of CR lbl101(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    -B+D+1
    -B+E+1


### Specialization of cost equations lbl91/13 
* CE 14 is refined into CE [24] 
* CE 19 is refined into CE [25] 
* CE 16 is refined into CE [26,27] 
* CE 17 is refined into CE [28] 
* CE 15 is refined into CE [29,30] 
* CE 18 is refined into CE [31] 


### Cost equations --> "Loop" of lbl91/13 
* CEs [30] --> Loop 19 
* CEs [29] --> Loop 20 
* CEs [31] --> Loop 21 
* CEs [24,25] --> Loop 22 
* CEs [27] --> Loop 23 
* CEs [26] --> Loop 24 
* CEs [28] --> Loop 25 

### Ranking functions of CR lbl91(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [19,20,21]: [-B+D+1,-C+D+1]

#### Partial ranking functions of CR lbl91(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [19,20,21]:
  - RF of loop [19:1]:
    -2*A-C+D-1
    -3/2*A-B/2+E/2-1
    -2/3*A-B/3+D/3-1/3
    -B/2+E/2-1
    -B/2+E/2-3/2*F-1
    -B/3+D/3-1/3
    -B/3+D/3-2/3*F-1/3
    -C+D-1
    -C+D-2*F-1
  - RF of loop [20:1]:
    -2*A-B+E-1
    -A-C+D
    -A/2-B/2+D/2
    -B+E-1
    -B+E-2*F-1
    -B/2+D/2
    -B/2+D/2-F/2
    -C+D
    -C+D-F
  - RF of loop [21:1]:
    -B+D+1
    -C+D+1


### Specialization of cost equations lbl91_loop_cont/8 
* CE 13 is refined into CE [32] 
* CE 12 is refined into CE [33] 


### Cost equations --> "Loop" of lbl91_loop_cont/8 
* CEs [32] --> Loop 26 
* CEs [33] --> Loop 27 

### Ranking functions of CR lbl91_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR lbl91_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations start/7 
* CE 6 is refined into CE [34] 
* CE 2 is refined into CE [35] 
* CE 3 is refined into CE [36,37,38,39,40,41,42,43,44,45] 
* CE 4 is refined into CE [46,47] 
* CE 7 is refined into CE [48,49,50,51,52] 
* CE 5 is refined into CE [53] 


### Cost equations --> "Loop" of start/7 
* CEs [34] --> Loop 28 
* CEs [53] --> Loop 29 
* CEs [35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52] --> Loop 30 

### Ranking functions of CR start(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR start(A,B,C,D,E,F,G) 


### Specialization of cost equations start0/7 
* CE 1 is refined into CE [54,55,56] 


### Cost equations --> "Loop" of start0/7 
* CEs [56] --> Loop 31 
* CEs [55] --> Loop 32 
* CEs [54] --> Loop 33 

### Ranking functions of CR start0(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR start0(A,B,C,D,E,F,G) 


Computing Bounds
=====================================

#### Cost of chains of lbl101(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[15],18]: 1*it(15)+1
  Such that:it(15) =< -B+K+1

  with precondition: [G=2,A=F,A=H,C=J,D=K,E=L,A=M,E>=D,I>=D+1,I>=A+B+1,B>=A+C+1,A+D+1>=I] 

* Chain [[15],17]: 1*it(15)+1
  Such that:it(15) =< -B+I

  with precondition: [G=3,A=F,A=H,C=J,E=L,A=M,A+K+1=D,A>=0,E>=D,D>=I,I>=A+B+1,B>=A+C+1] 

* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< -B+D+1

  with precondition: [G=4,A=F,A>=0,D>=B,E>=D,B>=A+C+1] 

* Chain [18]: 1
  with precondition: [G=2,F=A,F=H,B=I,C=J,D=K,E=L,F=M,B>=D+1,E>=D,D+F+1>=B,B>=C+F+1] 

* Chain [17]: 1
  with precondition: [G=3,F=A,F=H,B=I,C=J,E=L,F=M,F+K+1=D,F>=0,D>=B,E>=D,B>=C+F+1] 

* Chain [16]: 0
  with precondition: [G=4,F=A,F>=0,E>=D,D+F+1>=B,B>=C+F+1] 


#### Cost of chains of lbl91(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[19,20,21],25]: 2*it(19)+2*it(20)+1*it(21)+1*s(4)+1
  Such that:it(20) =< -2*A-B+E
it(19) =< -2*A-C+D
it(20) =< -A-C+D
it(19) =< -3/2*A-B/2+E/2
it(19) =< -2/3*A-B/3+D/3
it(20) =< -A/2-B/2+D/2
aux(3) =< -B+D
aux(4) =< -B+D+1
aux(5) =< -B+D+I-K
it(20) =< -B+E-2*F
it(20) =< -B/2+D/2
it(20) =< -B/2+D/2-F/2
it(19) =< -B/2+E/2-3/2*F
it(19) =< -B/3+D/3
it(19) =< -B/3+D/3-2/3*F
it(19) =< -C+D-2*F
it(20) =< -C+D-F
aux(6) =< D-J
aux(7) =< D-J+1
aux(11) =< D-K
it(19) =< aux(11)
it(20) =< aux(11)
it(21) =< aux(11)
it(20) =< aux(3)
s(4) =< aux(3)
it(19) =< aux(4)
it(20) =< aux(4)
it(21) =< aux(4)
it(19) =< aux(5)
it(20) =< aux(5)
it(21) =< aux(5)
s(4) =< aux(5)
it(19) =< aux(6)
it(20) =< aux(6)
it(19) =< aux(7)
it(20) =< aux(7)
it(21) =< aux(7)

  with precondition: [G=2,A=F,A=H,C=J,E=L,A=M,I>=B,B>=C,I>=K+1,E>=A+D+1,D>=A+K+1,A+K+1>=I] 

* Chain [[19,20,21],24]: 2*it(19)+2*it(20)+1*it(21)+1*s(4)+2
  Such that:it(19) =< -2*A-C+D
aux(5) =< -A-B+D+I-K
it(19) =< -3/2*A-B/2+E/2
it(19) =< -2/3*A-B/3+D/3
it(20) =< -A/2-B/2+D/2
it(19) =< -A/2-B/2+I/2
aux(3) =< -B+D
aux(4) =< -B+D+1
it(19) =< -B/2+E/2-3/2*F
it(19) =< -B/3+D/3-2/3*F
it(19) =< -C+D-2*F
aux(6) =< D-J
aux(7) =< D-J+1
aux(12) =< D-K
it(19) =< aux(12)
it(20) =< aux(12)
it(21) =< aux(12)
it(20) =< aux(3)
s(4) =< aux(3)
it(19) =< aux(4)
it(20) =< aux(4)
it(21) =< aux(4)
it(19) =< aux(5)
it(20) =< aux(5)
it(21) =< aux(5)
s(4) =< aux(5)
it(19) =< aux(6)
it(20) =< aux(6)
it(19) =< aux(7)
it(20) =< aux(7)
it(21) =< aux(7)

  with precondition: [G=2,A=F,A=H,C=J,E=L,A=M,B>=C,I>=K+1,I>=A+B+1,E>=A+D+1,D>=A+K+1,A+K+1>=I] 

* Chain [[19,20,21],23]: 2*it(19)+2*it(20)+1*it(21)+1*s(4)+1*s(5)+2
  Such that:aux(3) =< -B+D
aux(4) =< -B+D+1
aux(6) =< D-J
aux(7) =< D-J+1
aux(13) =< -A-B+D
aux(14) =< D-K
it(19) =< aux(13)
it(20) =< aux(13)
s(5) =< aux(13)
it(19) =< aux(14)
it(20) =< aux(14)
it(21) =< aux(14)
it(20) =< aux(3)
s(4) =< aux(3)
it(19) =< aux(4)
it(20) =< aux(4)
it(21) =< aux(4)
it(21) =< aux(13)
s(4) =< aux(13)
it(19) =< aux(6)
it(20) =< aux(6)
it(19) =< aux(7)
it(20) =< aux(7)
it(21) =< aux(7)

  with precondition: [G=2,A=F,A=H,C=J,E=L,A=M,B>=C,I>=K+1,I>=2*A+B+2,E>=A+D+1,D>=A+K+1,A+K+1>=I] 

* Chain [[19,20,21],22]: 2*it(19)+2*it(20)+1*it(21)+1*s(4)+1*s(6)+1
  Such that:s(6) =< -2*A-B+D
it(20) =< -2*A-B+E
it(19) =< -2*A-C+D
it(20) =< -A-C+D
it(19) =< -3/2*A-B/2+E/2
it(19) =< -2/3*A-B/3+D/3
it(20) =< -A/2-B/2+D/2
aux(3) =< -B+D
aux(4) =< -B+D+1
it(20) =< -B+E-2*F
it(20) =< -B/2+D/2-F/2
it(19) =< -B/2+E/2-3/2*F
it(19) =< -B/3+D/3-2/3*F
aux(6) =< -C+D
aux(7) =< -C+D+1
it(19) =< -C+D-2*F
it(20) =< -C+D-F
aux(15) =< -B+D+F+1
it(19) =< aux(15)
it(20) =< aux(15)
it(21) =< aux(15)
it(20) =< aux(3)
s(4) =< aux(3)
it(19) =< aux(4)
it(20) =< aux(4)
it(21) =< aux(4)
s(4) =< aux(15)
it(19) =< aux(6)
it(20) =< aux(6)
it(19) =< aux(7)
it(20) =< aux(7)
it(21) =< aux(7)

  with precondition: [G=4,A=F,A>=0,D>=B,B>=C,E>=A+D+1] 

* Chain [25]: 1
  with precondition: [G=2,A=F,A=H,B=I,C=J,D=K,E=L,A=M,B>=C,B>=D+1,E>=A+D+1,A+D+1>=B] 

* Chain [24]: 2
  with precondition: [G=2,A=F,A=H,C=J,D=K,E=L,A=M,A+B+1=I,D>=B,B>=C,E>=A+D+1,A+B>=D] 

* Chain [23]: 1*s(5)+2
  Such that:s(5) =< -B+D-F

  with precondition: [G=2,A=F,A=H,C=J,D=K,E=L,A=M,B>=C,I>=D+1,I>=2*A+B+2,E>=A+D+1,A+D+1>=I] 

* Chain [22]: 1*s(6)+1
  Such that:s(6) =< -B+D-F

  with precondition: [G=4] 


#### Cost of chains of lbl91_loop_cont(A,B,C,D,E,F,G,H):
* Chain [27]: 0
  with precondition: [A=2] 

* Chain [26]: 0
  with precondition: [A=4] 


#### Cost of chains of start(A,B,C,D,E,F,G):
* Chain [30]: 2*s(49)+3*s(50)+2*s(51)+2*s(54)+2*s(56)+2*s(69)+3*s(70)+1*s(73)+5*s(74)+1*s(76)+1*s(78)+1*s(79)+2*s(80)+2*s(81)+2*s(84)+1*s(88)+4*s(89)+2*s(90)+2*s(91)+3*s(94)+2*s(95)+2*s(98)+2*s(100)+2*s(113)+5*s(118)+1*s(120)+1*s(122)+1*s(124)+2*s(125)+2*s(126)+1*s(129)+1*s(133)+1*s(134)+2*s(137)+2*s(140)+2*s(142)+2*s(155)+3*s(156)+1*s(159)+5*s(160)+1*s(164)+2*s(166)+2*s(167)+1*s(170)+1*s(174)+1*s(175)+4
  Such that:s(124) =< -5*A-B+D
s(98) =< -2*A-B/2+D/2
aux(47) =< -A-B/2+D/2
s(166) =< -A-B/2+E/2
s(167) =< -A-B/3+E/3
s(126) =< -5/2*A-B/2+D/2
aux(43) =< -5/3*A-B/3+D/3
s(126) =< -5/3*A-B/3+E/3
s(81) =< -4/3*A-B/3+E/3
aux(28) =< -3/2*A-B/2+D/2
s(80) =< -3/2*A-B/2+E/2
s(79) =< -B+E-4*F
aux(56) =< -B+E-F
aux(32) =< -B/2+D/2-2*F
s(137) =< -B/2+D/2-F/2
s(81) =< -B/2+E/2-2*F
s(167) =< -B/2+E/2-3/2*F
aux(52) =< -B/3+D/3-F
aux(33) =< -B/3+D/3-4/3*F
s(56) =< -B/3+D/3-2/3*F
s(142) =< -B/3+D/3-F/3
aux(57) =< -4*A-B+D
aux(58) =< -4*A-B+E
aux(59) =< -3*A-B+D
aux(60) =< -3*A-B+E
aux(61) =< -2*A-B+D
aux(62) =< -2*A-B+E
aux(63) =< -2*A-B/2+E/2
aux(64) =< -A-B+D
aux(65) =< -A-B+E
aux(66) =< -5/2*A-B/2+E/2
aux(67) =< -B+D
aux(68) =< -B+D-3*F
aux(69) =< -B+D-2*F
aux(70) =< -B+D-F
aux(71) =< -B+E-3*F
aux(72) =< -B+E-2*F
aux(73) =< -B/2+D/2-F
aux(74) =< -B/2+D/2-3/2*F
s(95) =< aux(57)
s(125) =< aux(58)
s(50) =< aux(60)
s(91) =< aux(61)
s(125) =< aux(61)
s(94) =< aux(62)
s(125) =< aux(63)
s(49) =< aux(64)
s(90) =< aux(65)
s(126) =< aux(66)
s(137) =< aux(69)
s(126) =< aux(71)
s(51) =< aux(73)
s(140) =< aux(73)
s(54) =< aux(74)
s(125) =< aux(57)
s(129) =< aux(57)
s(126) =< aux(64)
s(125) =< aux(64)
s(133) =< aux(64)
s(125) =< aux(60)
s(134) =< aux(60)
s(126) =< aux(59)
s(125) =< aux(59)
s(133) =< aux(59)
s(134) =< aux(64)
s(95) =< aux(62)
s(100) =< aux(62)
s(95) =< aux(63)
s(98) =< aux(60)
s(100) =< aux(60)
s(98) =< aux(66)
s(100) =< aux(66)
s(98) =< aux(43)
s(100) =< aux(43)
s(113) =< aux(63)
s(100) =< aux(65)
s(95) =< aux(65)
s(89) =< aux(65)
s(89) =< aux(62)
s(98) =< aux(65)
s(113) =< aux(65)
s(113) =< aux(62)
s(98) =< aux(62)
s(118) =< aux(58)
s(120) =< aux(58)
s(118) =< aux(65)
s(118) =< aux(62)
s(122) =< aux(62)
s(122) =< aux(58)
s(51) =< aux(28)
s(51) =< aux(68)
s(54) =< aux(68)
s(56) =< aux(68)
s(54) =< aux(32)
s(56) =< aux(32)
s(54) =< aux(33)
s(56) =< aux(33)
s(69) =< aux(28)
s(56) =< aux(70)
s(51) =< aux(70)
s(70) =< aux(70)
s(51) =< aux(69)
s(70) =< aux(69)
s(56) =< aux(69)
s(54) =< aux(70)
s(69) =< aux(70)
s(69) =< aux(69)
s(73) =< aux(69)
s(54) =< aux(69)
s(74) =< aux(59)
s(76) =< aux(59)
s(74) =< aux(70)
s(74) =< aux(69)
s(78) =< aux(69)
s(78) =< aux(59)
s(80) =< aux(71)
s(81) =< aux(71)
s(84) =< aux(71)
s(80) =< aux(72)
s(81) =< aux(65)
s(80) =< aux(65)
s(88) =< aux(65)
s(80) =< aux(62)
s(81) =< aux(72)
s(88) =< aux(72)
s(167) =< aux(71)
s(166) =< aux(72)
s(170) =< aux(72)
s(167) =< aux(67)
s(166) =< aux(67)
s(174) =< aux(67)
s(166) =< aux(65)
s(175) =< aux(65)
s(167) =< aux(56)
s(166) =< aux(56)
s(174) =< aux(56)
s(175) =< aux(67)
s(167) =< aux(65)
s(137) =< aux(61)
s(137) =< aux(47)
s(140) =< aux(68)
s(142) =< aux(68)
s(140) =< aux(74)
s(142) =< aux(74)
s(140) =< aux(52)
s(142) =< aux(52)
s(155) =< aux(47)
s(142) =< aux(67)
s(137) =< aux(67)
s(156) =< aux(67)
s(137) =< aux(70)
s(156) =< aux(70)
s(142) =< aux(70)
s(140) =< aux(67)
s(155) =< aux(67)
s(155) =< aux(70)
s(159) =< aux(70)
s(140) =< aux(70)
s(160) =< aux(61)
s(160) =< aux(67)
s(160) =< aux(70)
s(164) =< aux(70)
s(164) =< aux(61)

  with precondition: [F=A,C=B,E=D,F>=0,E>=C] 

* Chain [29]: 1
  with precondition: [F=A,C=B,E=D,0>=F+1] 

* Chain [28]: 1
  with precondition: [F=A,C=B,E=D,F>=0,C>=E+1] 


#### Cost of chains of start0(A,B,C,D,E,F,G):
* Chain [33]: 2
  with precondition: [0>=A+1] 

* Chain [32]: 1*s(176)+2*s(177)+2*s(179)+2*s(180)+2*s(181)+2*s(183)+2*s(185)+3*s(186)+2*s(189)+2*s(192)+2*s(193)+2*s(212)+2*s(213)+6*s(214)+7*s(215)+5*s(217)+2*s(219)+2*s(220)+2*s(221)+2*s(223)+2*s(225)+2*s(226)+9*s(227)+5*s(228)+1*s(230)+2*s(231)+5*s(234)+1*s(236)+5*s(240)+2*s(242)+5*s(245)+5
  Such that:s(176) =< -5*A-C+E
s(192) =< -2/3*A-C/3+E/3
s(189) =< -A/2-C/2+E/2
s(193) =< -A/3-C/3+E/3
s(204) =< -C+E
aux(75) =< -4*A-C+E
aux(76) =< -3*A-C+E
aux(77) =< -2*A-C+E
aux(78) =< -2*A-C/2+E/2
aux(79) =< -A-C+E
aux(80) =< -A-C/2+E/2
aux(81) =< -A-C/3+E/3
aux(82) =< -5/2*A-C/2+E/2
aux(83) =< -5/3*A-C/3+E/3
aux(84) =< -4/3*A-C/3+E/3
aux(85) =< -3/2*A-C/2+E/2
s(186) =< aux(75)
s(177) =< aux(78)
s(183) =< aux(78)
s(179) =< aux(80)
s(180) =< aux(81)
s(181) =< aux(82)
s(181) =< aux(83)
s(183) =< aux(84)
s(180) =< aux(85)
s(185) =< aux(85)
s(212) =< aux(75)
s(213) =< aux(75)
s(214) =< aux(76)
s(215) =< aux(77)
s(213) =< aux(77)
s(213) =< aux(78)
s(217) =< aux(79)
s(189) =< aux(77)
s(181) =< aux(76)
s(219) =< aux(80)
s(220) =< aux(80)
s(221) =< aux(85)
s(181) =< aux(79)
s(213) =< aux(79)
s(223) =< aux(79)
s(213) =< aux(76)
s(223) =< aux(76)
s(212) =< aux(77)
s(225) =< aux(77)
s(212) =< aux(78)
s(177) =< aux(76)
s(225) =< aux(76)
s(177) =< aux(82)
s(225) =< aux(82)
s(177) =< aux(83)
s(225) =< aux(83)
s(226) =< aux(78)
s(225) =< aux(79)
s(212) =< aux(79)
s(227) =< aux(79)
s(227) =< aux(77)
s(177) =< aux(79)
s(226) =< aux(79)
s(226) =< aux(77)
s(177) =< aux(77)
s(228) =< aux(75)
s(228) =< aux(79)
s(228) =< aux(77)
s(230) =< aux(77)
s(230) =< aux(75)
s(219) =< aux(85)
s(219) =< aux(76)
s(221) =< aux(76)
s(192) =< aux(76)
s(221) =< aux(78)
s(192) =< aux(78)
s(221) =< aux(84)
s(192) =< aux(84)
s(231) =< aux(85)
s(192) =< aux(79)
s(219) =< aux(79)
s(219) =< aux(77)
s(192) =< aux(77)
s(221) =< aux(79)
s(231) =< aux(79)
s(231) =< aux(77)
s(221) =< aux(77)
s(234) =< aux(76)
s(234) =< aux(79)
s(234) =< aux(77)
s(236) =< aux(77)
s(236) =< aux(76)
s(185) =< aux(76)
s(183) =< aux(76)
s(185) =< aux(77)
s(183) =< aux(79)
s(185) =< aux(79)
s(183) =< aux(77)
s(180) =< aux(76)
s(179) =< aux(77)
s(180) =< s(204)
s(179) =< s(204)
s(240) =< s(204)
s(179) =< aux(79)
s(240) =< aux(79)
s(180) =< aux(79)
s(189) =< aux(80)
s(220) =< aux(76)
s(193) =< aux(76)
s(220) =< aux(85)
s(193) =< aux(85)
s(220) =< aux(81)
s(193) =< aux(81)
s(242) =< aux(80)
s(193) =< s(204)
s(189) =< s(204)
s(189) =< aux(79)
s(193) =< aux(79)
s(220) =< s(204)
s(242) =< s(204)
s(242) =< aux(79)
s(220) =< aux(79)
s(245) =< aux(77)
s(245) =< s(204)
s(245) =< aux(79)

  with precondition: [A>=0,E>=C] 

* Chain [31]: 2
  with precondition: [A>=0,C>=E+1] 


Closed-form bounds of start0(A,B,C,D,E,F,G): 
-------------------------------------
* Chain [33] with precondition: [0>=A+1] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [32] with precondition: [A>=0,E>=C] 
    - Upper bound: -5*C+5*E+5+nat(-A-C+E)*16+nat(-A-C/2+E/2)*8+nat(-A-C/3+E/3)*2+nat(-5*A-C+E)+nat(-4*A-C+E)*12+nat(-3*A-C+E)*11+nat(-2*A-C+E)*16+nat(-2*A-C/2+E/2)*6+nat(-5/2*A-C/2+E/2)*2+nat(-3/2*A-C/2+E/2)*6+nat(-2/3*A-C/3+E/3)*2+nat(-A/2-C/2+E/2)*2+nat(-A/3-C/3+E/3)*2 
    - Complexity: n 
* Chain [31] with precondition: [A>=0,C>=E+1] 
    - Upper bound: 2 
    - Complexity: constant 

### Maximum cost of start0(A,B,C,D,E,F,G): nat(-C+E)*5+3+nat(-A-C+E)*16+nat(-A-C/2+E/2)*8+nat(-A-C/3+E/3)*2+nat(-5*A-C+E)+nat(-4*A-C+E)*12+nat(-3*A-C+E)*11+nat(-2*A-C+E)*16+nat(-2*A-C/2+E/2)*6+nat(-5/2*A-C/2+E/2)*2+nat(-3/2*A-C/2+E/2)*6+nat(-2/3*A-C/3+E/3)*2+nat(-A/2-C/2+E/2)*2+nat(-A/3-C/3+E/3)*2+2 
Asymptotic class: n 
* Total analysis performed in 2437 ms.


-- stats
realtime 0:03.13
usertime 2.60
systime 0.03

