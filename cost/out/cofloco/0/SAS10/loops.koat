WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [lbl101/13]
1. recursive  : [lbl101_loop_cont/14,lbl121/13]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [stop/7]
4. non_recursive  : [lbl121_loop_cont/8]
5. non_recursive  : [start/7]
6. non_recursive  : [start0/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into lbl101/13
1. SCC is partially evaluated into lbl121/13
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into lbl121_loop_cont/8
5. SCC is partially evaluated into start/7
6. SCC is partially evaluated into start0/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations lbl101/13 
* CE 8 is refined into CE [16] 
* CE 7 is refined into CE [17] 
* CE 6 is refined into CE [18] 


### Cost equations --> "Loop" of lbl101/13 
* CEs [18] --> Loop 14 
* CEs [16] --> Loop 15 
* CEs [17] --> Loop 16 

### Ranking functions of CR lbl101(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [14]: [A-B,-B+D,-B+F]

#### Partial ranking functions of CR lbl101(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    A-B
    -B+D
    -B+F


### Specialization of cost equations lbl121/13 
* CE 11 is refined into CE [19] 
* CE 15 is refined into CE [20] 
* CE 13 is refined into CE [21] 
* CE 12 is refined into CE [22,23] 
* CE 14 is refined into CE [24] 


### Cost equations --> "Loop" of lbl121/13 
* CEs [23] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [19,20] --> Loop 20 
* CEs [21] --> Loop 21 

### Ranking functions of CR lbl121(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [17]: [D-2]
* RF of phase [18]: [D+1]

#### Partial ranking functions of CR lbl121(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    D-2
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    D+1


### Specialization of cost equations lbl121_loop_cont/8 
* CE 9 is refined into CE [25] 
* CE 10 is refined into CE [26] 


### Cost equations --> "Loop" of lbl121_loop_cont/8 
* CEs [25] --> Loop 22 
* CEs [26] --> Loop 23 

### Ranking functions of CR lbl121_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR lbl121_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations start/7 
* CE 2 is refined into CE [27] 
* CE 3 is refined into CE [28,29,30,31,32] 
* CE 4 is refined into CE [33] 
* CE 5 is refined into CE [34,35,36] 


### Cost equations --> "Loop" of start/7 
* CEs [33] --> Loop 24 
* CEs [31] --> Loop 25 
* CEs [27,28,29,30,32] --> Loop 26 
* CEs [36] --> Loop 27 
* CEs [34,35] --> Loop 28 

### Ranking functions of CR start(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR start(A,B,C,D,E,F,G) 


### Specialization of cost equations start0/7 
* CE 1 is refined into CE [37,38,39] 


### Cost equations --> "Loop" of start0/7 
* CEs [38] --> Loop 29 
* CEs [39] --> Loop 30 
* CEs [37] --> Loop 31 

### Ranking functions of CR start0(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR start0(A,B,C,D,E,F,G) 


Computing Bounds
=====================================

#### Cost of chains of lbl101(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[14],16]: 1*it(14)+1
  Such that:it(14) =< -B+K+1

  with precondition: [G=2,A=F,A=H,C=J,D=K+1,E=L,A=M,B>=2,I>=2*B,A>=D,I>=D,2*D>=I+2] 

* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< -B+D

  with precondition: [G=3,A=F,B>=2,D>=B+1,A>=D] 

* Chain [16]: 1
  with precondition: [G=2,F=A,J=C,L=E,F=H,B=I,D=K+1,F=M,2*D>=B+2,B>=D,F>=D] 

* Chain [15]: 0
  with precondition: [G=3,F=A,B>=2,2*D>=B+2,F>=D] 


#### Cost of chains of lbl121(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[18],21]: 1*it(18)+1
  Such that:it(18) =< D+1

  with precondition: [G=4,I=1,K+1=0,A=F,A=H,C=J,E=L,A=M,1>=D,D>=0,A>=D+1,B>=D+1] 

* Chain [[18],20]: 1*it(18)+1*s(2)+1
  Such that:s(2) =< D
it(18) =< D+1

  with precondition: [G=3,A=F,1>=D,D>=0,A>=D+1,B>=D+1] 

* Chain [[17],20]: 3*it(17)+1*s(5)+1
  Such that:aux(3) =< D
it(17) =< aux(3)
s(5) =< it(17)*aux(3)

  with precondition: [G=3,A=F,D>=3,A>=D+1,B>=D+1] 

* Chain [[17],19,[18],21]: 2*it(17)+1*it(18)+1*s(5)+3
  Such that:it(18) =< 2
aux(4) =< D
it(17) =< aux(4)
s(5) =< it(17)*aux(4)

  with precondition: [G=4,I=1,K+1=0,A=F,A=H,C=J,E=L,A=M,D>=3,A>=D+1,B>=D+1] 

* Chain [[17],19,[18],20]: 2*it(17)+1*it(18)+1*s(2)+1*s(5)+3
  Such that:s(2) =< 1
it(18) =< 2
aux(5) =< D
it(17) =< aux(5)
s(5) =< it(17)*aux(5)

  with precondition: [G=3,A=F,D>=3,A>=D+1,B>=D+1] 

* Chain [[17],19,20]: 2*it(17)+1*s(2)+1*s(5)+3
  Such that:s(2) =< 1
aux(6) =< D
it(17) =< aux(6)
s(5) =< it(17)*aux(6)

  with precondition: [G=3,A=F,D>=3,A>=D+1,B>=D+1] 

* Chain [21]: 1
  with precondition: [D+1=0,G=4,K+1=0,J=C,L=E,A=F,A=H,B=I,A=M,A>=0,B>=1] 

* Chain [20]: 1*s(2)+1
  Such that:s(2) =< D

  with precondition: [G=3] 

* Chain [19,[18],21]: 1*it(18)+3
  Such that:it(18) =< 2

  with precondition: [D=2,G=4,I=1,K+1=0,A=F,A=H,C=J,E=L,A=M,A>=3,B>=3] 

* Chain [19,[18],20]: 1*it(18)+1*s(2)+3
  Such that:s(2) =< 1
it(18) =< 2

  with precondition: [D=2,G=3,A=F,A>=3,B>=3] 

* Chain [19,20]: 1*s(2)+3
  Such that:s(2) =< 1

  with precondition: [D=2,G=3,A=F,A>=3,B>=3] 


#### Cost of chains of lbl121_loop_cont(A,B,C,D,E,F,G,H):
* Chain [23]: 0
  with precondition: [A=3] 

* Chain [22]: 0
  with precondition: [A=4] 


#### Cost of chains of start(A,B,C,D,E,F,G):
* Chain [28]: 10*s(24)+4*s(28)+2*s(29)+3*s(31)+4
  Such that:s(25) =< 1
s(26) =< 2
aux(10) =< F
s(24) =< aux(10)
s(28) =< s(25)
s(29) =< s(26)
s(31) =< s(24)*aux(10)

  with precondition: [F=A,C=B,E=D,1>=F,F>=0] 

* Chain [27]: 1*s(32)+2
  Such that:s(32) =< 1

  with precondition: [A=1,F=1,C=B,E=D] 

* Chain [26]: 4*s(33)+7*s(34)+17*s(38)+3*s(41)+11*s(43)+3*s(51)+1*s(56)+5
  Such that:aux(13) =< A
aux(15) =< 1
aux(16) =< 2
aux(17) =< F
s(34) =< aux(16)
s(33) =< aux(17)
s(38) =< aux(15)
s(41) =< s(38)*aux(15)
s(43) =< aux(13)
s(51) =< s(43)*aux(13)
s(56) =< s(33)*aux(17)

  with precondition: [F=A,C=B,E=D,F>=2] 

* Chain [25]: 1*s(57)+1*s(58)+5
  Such that:s(57) =< 1
s(58) =< 2

  with precondition: [A=3,F=3,C=B,E=D] 

* Chain [24]: 1
  with precondition: [F=A,C=B,E=D,0>=F+1] 


#### Cost of chains of start0(A,B,C,D,E,F,G):
* Chain [31]: 5*s(83)+10*s(84)+2*s(85)+3*s(86)+5
  Such that:s(82) =< 1
s(80) =< 2
s(81) =< A
s(83) =< s(82)
s(84) =< s(81)
s(85) =< s(80)
s(86) =< s(84)*s(81)

  with precondition: [1>=A,A>=0] 

* Chain [30]: 2
  with precondition: [0>=A+1] 

* Chain [29]: 18*s(91)+8*s(92)+15*s(93)+3*s(94)+4*s(96)+6
  Such that:s(89) =< 1
s(90) =< 2
aux(21) =< A
s(91) =< s(89)
s(92) =< s(90)
s(93) =< aux(21)
s(94) =< s(91)*s(89)
s(96) =< s(93)*aux(21)

  with precondition: [A>=2] 


Closed-form bounds of start0(A,B,C,D,E,F,G): 
-------------------------------------
* Chain [31] with precondition: [1>=A,A>=0] 
    - Upper bound: 10*A+14+3*A*A 
    - Complexity: n^2 
* Chain [30] with precondition: [0>=A+1] 
    - Upper bound: 2 
    - Complexity: constant 
* Chain [29] with precondition: [A>=2] 
    - Upper bound: 15*A+43+4*A*A 
    - Complexity: n^2 

### Maximum cost of start0(A,B,C,D,E,F,G): nat(A)*10+12+nat(A)*3*nat(A)+ (nat(A)*5+29+nat(A)*nat(A))+2 
Asymptotic class: n^2 
* Total analysis performed in 809 ms.


-- stats
realtime 0:00.96
usertime 0.89
systime 0.00

