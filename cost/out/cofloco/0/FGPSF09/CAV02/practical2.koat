WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [end/5]
1. recursive  : [eval3/9]
2. recursive  : [eval11/5,eval5/5,eval7/5,eval9/5]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [eval5_loop_cont/2]
5. non_recursive  : [eval3_loop_cont/6]
6. non_recursive  : [eval1/5]
7. non_recursive  : [eval0/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into eval3/9
2. SCC is partially evaluated into eval5/5
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval3_loop_cont/6
6. SCC is partially evaluated into eval1/5
7. SCC is partially evaluated into eval0/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval3/9 
* CE 5 is refined into CE [13] 
* CE 6 is refined into CE [14] 
* CE 4 is refined into CE [15] 


### Cost equations --> "Loop" of eval3/9 
* CEs [15] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [14] --> Loop 15 

### Ranking functions of CR eval3(A,B,C,D,E,F,G,H,I) 
* RF of phase [13]: [-A/11+101/11,-B/11-C+112/11]

#### Partial ranking functions of CR eval3(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    -A/11+101/11
    -B/11-C+112/11


### Specialization of cost equations eval5/5 
* CE 12 is refined into CE [16] 
* CE 10 is refined into CE [17] 
* CE 11 is refined into CE [18] 
* CE 9 is refined into CE [19] 


### Cost equations --> "Loop" of eval5/5 
* CEs [17] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [19] --> Loop 18 
* CEs [16] --> Loop 19 

### Ranking functions of CR eval5(A,B,C,D,E) 

#### Partial ranking functions of CR eval5(A,B,C,D,E) 
* Partial RF of phase [16,17]:
  - RF of loop [16:1]:
    -A+111 depends on loops [17:1] 
  - RF of loop [17:1]:
    A/9-110/9 depends on loops [16:1] 
    C-1


### Specialization of cost equations eval3_loop_cont/6 
* CE 7 is refined into CE [20] 
* CE 8 is refined into CE [21] 


### Cost equations --> "Loop" of eval3_loop_cont/6 
* CEs [20] --> Loop 20 
* CEs [21] --> Loop 21 

### Ranking functions of CR eval3_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR eval3_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations eval1/5 
* CE 2 is refined into CE [22] 
* CE 3 is refined into CE [23,24] 


### Cost equations --> "Loop" of eval1/5 
* CEs [22] --> Loop 22 
* CEs [23,24] --> Loop 23 

### Ranking functions of CR eval1(A,B,C,D,E) 

#### Partial ranking functions of CR eval1(A,B,C,D,E) 


### Specialization of cost equations eval0/5 
* CE 1 is refined into CE [25,26] 


### Cost equations --> "Loop" of eval0/5 
* CEs [26] --> Loop 24 
* CEs [25] --> Loop 25 

### Ranking functions of CR eval0(A,B,C,D,E) 

#### Partial ranking functions of CR eval0(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of eval3(A,B,C,D,E,F,G,H,I):
* Chain [[13],15]: 1*it(13)+0
  Such that:it(13) =< -A/11+101/11

  with precondition: [E=2,A+11=11*C+B,100>=A,C>=1] 

* Chain [[13],14]: 1*it(13)+1
  Such that:it(13) =< -A/11+101/11

  with precondition: [E=3,B=G,D=I,B+11*C=A+11,B+11*H=F+11,111>=F,F>=101,F>=A+11,A>=B] 

* Chain [15]: 0
  with precondition: [E=2,B+11*C=A+11,100>=B,C>=1] 


#### Cost of chains of eval5(A,B,C,D,E):
* Chain [[16,17],19]: 4*it(16)+4*it(17)+0
  Such that:aux(1) =< -A+111
it(17) =< C
it(16) =< it(17)*9+aux(1)

  with precondition: [E=2,C>=2] 

* Chain [[16,17],18,19]: 4*it(16)+4*it(17)+2
  Such that:aux(1) =< -A+111
it(17) =< C
it(16) =< it(17)*9+aux(1)

  with precondition: [E=2,C>=2] 

* Chain [19]: 0
  with precondition: [E=2] 

* Chain [18,19]: 2
  with precondition: [C=2,E=2,A>=111] 


#### Cost of chains of eval3_loop_cont(A,B,C,D,E,F):
* Chain [21]: 0
  with precondition: [A=2] 

* Chain [20]: 8*s(10)+8*s(11)+2
  Such that:s(8) =< -B+111
s(9) =< D
s(10) =< s(9)
s(11) =< s(10)*9+s(8)

  with precondition: [A=3] 


#### Cost of chains of eval1(A,B,C,D,E):
* Chain [23]: 1*s(12)+1*s(13)+8*s(16)+8*s(17)+4
  Such that:s(14) =< 10
s(12) =< -A/11+101/11
s(15) =< -B+122
s(13) =< -B/11+101/11
s(16) =< s(15)
s(17) =< s(16)*9+s(14)

  with precondition: [C=1,B=A,100>=B] 

* Chain [22]: 1
  with precondition: [C=1,B=A,B>=101] 


#### Cost of chains of eval0(A,B,C,D,E):
* Chain [25]: 2*s(19)+8*s(22)+8*s(23)+5
  Such that:s(18) =< 10
s(20) =< -B+122
aux(7) =< -B/11+101/11
s(19) =< aux(7)
s(22) =< s(20)
s(23) =< s(22)*9+s(18)

  with precondition: [100>=B] 

* Chain [24]: 2
  with precondition: [B>=101] 


Closed-form bounds of eval0(A,B,C,D,E): 
-------------------------------------
* Chain [25] with precondition: [100>=B] 
    - Upper bound: -882/11*B+108497/11 
    - Complexity: n 
* Chain [24] with precondition: [B>=101] 
    - Upper bound: 2 
    - Complexity: constant 

### Maximum cost of eval0(A,B,C,D,E): nat(-B+122)*80+83+nat(-B/11+101/11)*2+2 
Asymptotic class: n 
* Total analysis performed in 270 ms.


-- stats
realtime 0:00.33
usertime 0.31
systime 0.00

