WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalSimpleSingle2bb1in/9,evalSimpleSingle2bb2in/9,evalSimpleSingle2bb3in/9,evalSimpleSingle2bb4in/9,evalSimpleSingle2bbin/9]
1. non_recursive  : [evalSimpleSingle2stop/5]
2. non_recursive  : [evalSimpleSingle2returnin/5]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalSimpleSingle2bb4in_loop_cont/6]
5. non_recursive  : [evalSimpleSingle2entryin/5]
6. non_recursive  : [evalSimpleSingle2start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalSimpleSingle2bb4in/9
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalSimpleSingle2bb4in_loop_cont/6
5. SCC is partially evaluated into evalSimpleSingle2entryin/5
6. SCC is partially evaluated into evalSimpleSingle2start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalSimpleSingle2bb4in/9 
* CE 7 is refined into CE [10] 
* CE 3 is refined into CE [11] 
* CE 6 is refined into CE [12] 
* CE 5 is refined into CE [13] 
* CE 4 is refined into CE [14] 


### Cost equations --> "Loop" of evalSimpleSingle2bb4in/9 
* CEs [14] --> Loop 9 
* CEs [13] --> Loop 10 
* CEs [10] --> Loop 11 
* CEs [11,12] --> Loop 12 

### Ranking functions of CR evalSimpleSingle2bb4in(A,B,C,D,F,G,H,I,J) 
* RF of phase [9]: [-A+D,-B+D]
* RF of phase [10]: [-A+C,-B+C]

#### Partial ranking functions of CR evalSimpleSingle2bb4in(A,B,C,D,F,G,H,I,J) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -A+D
    -B+D
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    -A+C
    -B+C


### Specialization of cost equations evalSimpleSingle2bb4in_loop_cont/6 
* CE 9 is refined into CE [15] 
* CE 8 is refined into CE [16] 


### Cost equations --> "Loop" of evalSimpleSingle2bb4in_loop_cont/6 
* CEs [15] --> Loop 13 
* CEs [16] --> Loop 14 

### Ranking functions of CR evalSimpleSingle2bb4in_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR evalSimpleSingle2bb4in_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations evalSimpleSingle2entryin/5 
* CE 2 is refined into CE [17,18,19,20,21] 


### Cost equations --> "Loop" of evalSimpleSingle2entryin/5 
* CEs [17,18,19,20,21] --> Loop 15 

### Ranking functions of CR evalSimpleSingle2entryin(A,B,C,D,F) 

#### Partial ranking functions of CR evalSimpleSingle2entryin(A,B,C,D,F) 


### Specialization of cost equations evalSimpleSingle2start/5 
* CE 1 is refined into CE [22] 


### Cost equations --> "Loop" of evalSimpleSingle2start/5 
* CEs [22] --> Loop 16 

### Ranking functions of CR evalSimpleSingle2start(A,B,C,D,F) 

#### Partial ranking functions of CR evalSimpleSingle2start(A,B,C,D,F) 


Computing Bounds
=====================================

#### Cost of chains of evalSimpleSingle2bb4in(A,B,C,D,F,G,H,I,J):
* Chain [[10],[9],12]: 4*it(9)+3*it(10)+3
  Such that:it(10) =< -A+I
it(9) =< H-I

  with precondition: [F=2,A=B,G=H,C=I,D=J,A>=0,C>=A+1,G>=C+1,D>=G] 

* Chain [[10],[9],11]: 4*it(9)+3*it(10)+0
  Such that:it(10) =< -A+C
it(9) =< -C+D

  with precondition: [F=3,A=B,A>=0,C>=A+1,D>=C+1] 

* Chain [[10],12]: 3*it(10)+3
  Such that:it(10) =< -A+H

  with precondition: [F=2,A=B,G=H,C=I,D=J,A>=0,G>=A+1,C>=G] 

* Chain [[10],11]: 3*it(10)+0
  Such that:it(10) =< -A+C

  with precondition: [F=3,A=B,A>=0,C>=A+1] 

* Chain [[9],12]: 4*it(9)+3
  Such that:it(9) =< -A+H

  with precondition: [F=2,A=B,G=H,C=I,D=J,A>=0,G>=A+1,A>=C,D>=G] 

* Chain [[9],11]: 4*it(9)+0
  Such that:it(9) =< -A+D

  with precondition: [F=3,A=B,A>=0,D>=A+1,A>=C] 

* Chain [12]: 3
  with precondition: [F=2,B=A,I=C,J=D,B=G,B=H,B>=0] 

* Chain [11]: 0
  with precondition: [F=3,B=A,B>=0] 


#### Cost of chains of evalSimpleSingle2bb4in_loop_cont(A,B,C,D,E,F):
* Chain [14]: 1
  with precondition: [A=2] 

* Chain [13]: 0
  with precondition: [A=3] 


#### Cost of chains of evalSimpleSingle2entryin(A,B,C,D,F):
* Chain [15]: 12*s(5)+8*s(6)+8*s(7)+5
  Such that:aux(2) =< -C+D
aux(3) =< C
aux(4) =< D
s(6) =< aux(2)
s(5) =< aux(3)
s(7) =< aux(4)

  with precondition: [] 


#### Cost of chains of evalSimpleSingle2start(A,B,C,D,F):
* Chain [16]: 8*s(16)+12*s(17)+8*s(18)+6
  Such that:s(13) =< -C+D
s(14) =< C
s(15) =< D
s(16) =< s(13)
s(17) =< s(14)
s(18) =< s(15)

  with precondition: [] 


Closed-form bounds of evalSimpleSingle2start(A,B,C,D,F): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: nat(C)*12+6+nat(D)*8+nat(-C+D)*8 
    - Complexity: n 

### Maximum cost of evalSimpleSingle2start(A,B,C,D,F): nat(C)*12+6+nat(D)*8+nat(-C+D)*8 
Asymptotic class: n 
* Total analysis performed in 285 ms.


-- stats
realtime 0:00.33
usertime 0.32
systime 0.01

