WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalNestedSinglebb1in/7,evalNestedSinglebb2in/7,evalNestedSinglebb3in/7]
1. recursive  : [evalNestedSinglebb2in_loop_cont/8,evalNestedSinglebb4in/7,evalNestedSinglebb5in/7]
2. non_recursive  : [evalNestedSinglestop/4]
3. non_recursive  : [evalNestedSinglereturnin/4]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [evalNestedSinglebb5in_loop_cont/5]
6. non_recursive  : [evalNestedSingleentryin/4]
7. non_recursive  : [evalNestedSinglestart/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalNestedSinglebb2in/7
1. SCC is partially evaluated into evalNestedSinglebb5in/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into evalNestedSinglebb5in_loop_cont/5
6. SCC is partially evaluated into evalNestedSingleentryin/4
7. SCC is partially evaluated into evalNestedSinglestart/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalNestedSinglebb2in/7 
* CE 12 is refined into CE [13] 
* CE 9 is refined into CE [14] 
* CE 11 is refined into CE [15] 
* CE 10 is refined into CE [16] 


### Cost equations --> "Loop" of evalNestedSinglebb2in/7 
* CEs [16] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

### Ranking functions of CR evalNestedSinglebb2in(A,B,C,E,F,G,H) 
* RF of phase [12]: [B-C]

#### Partial ranking functions of CR evalNestedSinglebb2in(A,B,C,E,F,G,H) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    B-C


### Specialization of cost equations evalNestedSinglebb5in/7 
* CE 5 is refined into CE [17] 
* CE 3 is refined into CE [18] 
* CE 6 is refined into CE [19] 
* CE 4 is refined into CE [20,21,22] 


### Cost equations --> "Loop" of evalNestedSinglebb5in/7 
* CEs [22] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [21] --> Loop 18 
* CEs [17] --> Loop 19 
* CEs [18,19] --> Loop 20 

### Ranking functions of CR evalNestedSinglebb5in(A,B,C,E,F,G,H) 
* RF of phase [16,18]: [-A+B]

#### Partial ranking functions of CR evalNestedSinglebb5in(A,B,C,E,F,G,H) 
* Partial RF of phase [16,18]:
  - RF of loop [16:1]:
    -A/2+B/2-1/2
  - RF of loop [18:1]:
    -A+B


### Specialization of cost equations evalNestedSinglebb5in_loop_cont/5 
* CE 7 is refined into CE [23] 
* CE 8 is refined into CE [24] 


### Cost equations --> "Loop" of evalNestedSinglebb5in_loop_cont/5 
* CEs [23] --> Loop 21 
* CEs [24] --> Loop 22 

### Ranking functions of CR evalNestedSinglebb5in_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR evalNestedSinglebb5in_loop_cont(A,B,C,D,E) 


### Specialization of cost equations evalNestedSingleentryin/4 
* CE 2 is refined into CE [25,26,27,28] 


### Cost equations --> "Loop" of evalNestedSingleentryin/4 
* CEs [25,26,27,28] --> Loop 23 

### Ranking functions of CR evalNestedSingleentryin(A,B,C,E) 

#### Partial ranking functions of CR evalNestedSingleentryin(A,B,C,E) 


### Specialization of cost equations evalNestedSinglestart/4 
* CE 1 is refined into CE [29] 


### Cost equations --> "Loop" of evalNestedSinglestart/4 
* CEs [29] --> Loop 24 

### Ranking functions of CR evalNestedSinglestart(A,B,C,E) 

#### Partial ranking functions of CR evalNestedSinglestart(A,B,C,E) 


Computing Bounds
=====================================

#### Cost of chains of evalNestedSinglebb2in(A,B,C,E,F,G,H):
* Chain [[12],15]: 3*it(12)+1
  Such that:it(12) =< -C+G

  with precondition: [E=2,A=F,B=G,B=H,C>=A,B>=C+1] 

* Chain [[12],14]: 3*it(12)+2
  Such that:it(12) =< -C+H

  with precondition: [E=2,A=F,B=G,C>=A,H>=C+1,B>=H+1] 

* Chain [[12],13]: 3*it(12)+0
  Such that:it(12) =< B-C

  with precondition: [E=3,C>=A,B>=C+1] 

* Chain [14]: 2
  with precondition: [E=2,A=F,B=G,C=H,C>=A,B>=C+1] 

* Chain [13]: 0
  with precondition: [E=3,B>=A+1,C>=A] 


#### Cost of chains of evalNestedSinglebb5in(A,B,C,E,F,G,H):
* Chain [[16,18],20]: 14*it(16)+1
  Such that:aux(3) =< -A+B
it(16) =< aux(3)

  with precondition: [E=3,A>=0,B>=A+1] 

* Chain [[16,18],19]: 4*it(16)+7*it(18)+1
  Such that:it(16) =< -A/2+G/2
aux(4) =< -A+G
it(16) =< aux(4)
it(18) =< aux(4)

  with precondition: [E=4,B=F,B=G,B=H+1,A>=0,B>=A+1] 

* Chain [[16,18],17,20]: 14*it(16)+4
  Such that:aux(5) =< -A+B
it(16) =< aux(5)

  with precondition: [E=3,A>=0,B>=A+2] 

* Chain [[16,18],17,19]: 14*it(16)+4
  Such that:aux(6) =< -A+G
it(16) =< aux(6)

  with precondition: [E=4,B+1=F,B=G,B=H,A>=0,B>=A+2] 

* Chain [20]: 3*s(2)+1
  Such that:s(2) =< -A+B

  with precondition: [E=3,A>=0] 

* Chain [19]: 1
  with precondition: [E=4,H=C,A=F,B=G,A>=0,A>=B] 

* Chain [17,20]: 3*s(6)+4
  Such that:s(6) =< -A+B

  with precondition: [E=3,A>=0,B>=A+1] 

* Chain [17,19]: 3*s(6)+4
  Such that:s(6) =< -A+G

  with precondition: [E=4,B+1=F,B=G,B=H,A>=0,B>=A+1] 


#### Cost of chains of evalNestedSinglebb5in_loop_cont(A,B,C,D,E):
* Chain [22]: 0
  with precondition: [A=3] 

* Chain [21]: 1
  with precondition: [A=4] 


#### Cost of chains of evalNestedSingleentryin(A,B,C,E):
* Chain [23]: 58*s(17)+4*s(20)+6
  Such that:s(20) =< B/2
aux(9) =< B
s(17) =< aux(9)
s(20) =< aux(9)

  with precondition: [] 


#### Cost of chains of evalNestedSinglestart(A,B,C,E):
* Chain [24]: 4*s(23)+58*s(25)+7
  Such that:s(24) =< B
s(23) =< B/2
s(25) =< s(24)
s(23) =< s(24)

  with precondition: [] 


Closed-form bounds of evalNestedSinglestart(A,B,C,E): 
-------------------------------------
* Chain [24] with precondition: [] 
    - Upper bound: nat(B)*58+7+nat(B/2)*4 
    - Complexity: n 

### Maximum cost of evalNestedSinglestart(A,B,C,E): nat(B)*58+7+nat(B/2)*4 
Asymptotic class: n 
* Total analysis performed in 321 ms.


-- stats
realtime 0:00.47
usertime 0.35
systime 0.01

