WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalNestedMultiplebb1in/11,evalNestedMultiplebb2in/11,evalNestedMultiplebb3in/11]
1. recursive  : [evalNestedMultiplebb2in_loop_cont/12,evalNestedMultiplebb4in/11,evalNestedMultiplebb5in/11]
2. non_recursive  : [evalNestedMultiplestop/6]
3. non_recursive  : [evalNestedMultiplereturnin/6]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [evalNestedMultiplebb5in_loop_cont/7]
6. non_recursive  : [evalNestedMultipleentryin/6]
7. non_recursive  : [evalNestedMultiplestart/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalNestedMultiplebb2in/11
1. SCC is partially evaluated into evalNestedMultiplebb5in/11
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into evalNestedMultiplebb5in_loop_cont/7
6. SCC is partially evaluated into evalNestedMultipleentryin/6
7. SCC is partially evaluated into evalNestedMultiplestart/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalNestedMultiplebb2in/11 
* CE 12 is refined into CE [13] 
* CE 9 is refined into CE [14] 
* CE 11 is refined into CE [15] 
* CE 10 is refined into CE [16] 


### Cost equations --> "Loop" of evalNestedMultiplebb2in/11 
* CEs [16] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

### Ranking functions of CR evalNestedMultiplebb2in(A,B,C,D,E,G,H,I,J,K,L) 
* RF of phase [12]: [C-E]

#### Partial ranking functions of CR evalNestedMultiplebb2in(A,B,C,D,E,G,H,I,J,K,L) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    C-E


### Specialization of cost equations evalNestedMultiplebb5in/11 
* CE 5 is refined into CE [17] 
* CE 3 is refined into CE [18] 
* CE 6 is refined into CE [19] 
* CE 4 is refined into CE [20,21,22,23] 


### Cost equations --> "Loop" of evalNestedMultiplebb5in/11 
* CEs [23] --> Loop 16 
* CEs [22] --> Loop 17 
* CEs [21] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [17] --> Loop 20 
* CEs [18,19] --> Loop 21 

### Ranking functions of CR evalNestedMultiplebb5in(A,B,C,D,E,G,H,I,J,K,L) 
* RF of phase [16,17]: [A-B]
* RF of phase [18]: [A-B]

#### Partial ranking functions of CR evalNestedMultiplebb5in(A,B,C,D,E,G,H,I,J,K,L) 
* Partial RF of phase [16,17]:
  - RF of loop [16:1]:
    C-D-1
  - RF of loop [16:1,17:1]:
    A-B
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    A-B


### Specialization of cost equations evalNestedMultiplebb5in_loop_cont/7 
* CE 7 is refined into CE [24] 
* CE 8 is refined into CE [25] 


### Cost equations --> "Loop" of evalNestedMultiplebb5in_loop_cont/7 
* CEs [24] --> Loop 22 
* CEs [25] --> Loop 23 

### Ranking functions of CR evalNestedMultiplebb5in_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR evalNestedMultiplebb5in_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations evalNestedMultipleentryin/6 
* CE 2 is refined into CE [26,27,28,29,30,31] 


### Cost equations --> "Loop" of evalNestedMultipleentryin/6 
* CEs [26,27,28,29,30,31] --> Loop 24 

### Ranking functions of CR evalNestedMultipleentryin(A,B,C,D,E,G) 

#### Partial ranking functions of CR evalNestedMultipleentryin(A,B,C,D,E,G) 


### Specialization of cost equations evalNestedMultiplestart/6 
* CE 1 is refined into CE [32] 


### Cost equations --> "Loop" of evalNestedMultiplestart/6 
* CEs [32] --> Loop 25 

### Ranking functions of CR evalNestedMultiplestart(A,B,C,D,E,G) 

#### Partial ranking functions of CR evalNestedMultiplestart(A,B,C,D,E,G) 


Computing Bounds
=====================================

#### Cost of chains of evalNestedMultiplebb2in(A,B,C,D,E,G,H,I,J,K,L):
* Chain [[12],15]: 3*it(12)+1
  Such that:it(12) =< C-E

  with precondition: [G=2,A=H,B=I,C=J,D=K,C=L,A>=B+1,E>=D,C>=E+1] 

* Chain [[12],14]: 3*it(12)+2
  Such that:it(12) =< -E+L

  with precondition: [G=2,A=H,B=I,C=J,D=K,A>=B+1,E>=D,L>=E+1,C>=L+1] 

* Chain [[12],13]: 3*it(12)+0
  Such that:it(12) =< C-E

  with precondition: [G=3,A>=B+1,E>=D,C>=E+1] 

* Chain [15]: 1
  with precondition: [G=2,A=H,B=I,C=J,D=K,E=L,A>=B+1,E>=C,E>=D] 

* Chain [14]: 2
  with precondition: [G=2,A=H,B=I,C=J,D=K,E=L,A>=B+1,E>=D,C>=E+1] 

* Chain [13]: 0
  with precondition: [G=3,A>=B+1,E>=D] 


#### Cost of chains of evalNestedMultiplebb5in(A,B,C,D,E,G,H,I,J,K,L):
* Chain [[18],21]: 3*it(18)+3*s(2)+1
  Such that:it(18) =< A-B
s(2) =< C-D

  with precondition: [G=3,A>=B+1,D>=C] 

* Chain [[18],20]: 3*it(18)+1
  Such that:it(18) =< A-B

  with precondition: [G=4,A=H,A=I,C=J,D=K,D=L,A>=B+1,D>=C] 

* Chain [[16,17],21]: 4*it(16)+4*it(17)+6*s(2)+1
  Such that:aux(5) =< A-B
aux(6) =< C-D
s(2) =< aux(6)
it(16) =< aux(5)
it(17) =< aux(5)
it(16) =< aux(6)

  with precondition: [G=3,A>=B+1,C>=D+1] 

* Chain [[16,17],20]: 4*it(16)+4*it(17)+3*s(5)+1
  Such that:aux(3) =< C-D
aux(4) =< -D+L
aux(7) =< A-B
it(16) =< aux(7)
it(17) =< aux(7)
it(16) =< aux(3)
s(5) =< aux(3)
it(16) =< aux(4)
s(5) =< aux(4)

  with precondition: [G=4,A=H,A=I,C=J,K=L,A>=B+1,K>=D,C>=K+1] 

* Chain [[16,17],19,[18],21]: 4*it(16)+7*it(17)+6*s(5)+4
  Such that:aux(8) =< A-B
aux(9) =< C-D
it(17) =< aux(8)
s(5) =< aux(9)
it(16) =< aux(8)
it(16) =< aux(9)

  with precondition: [G=3,A>=B+3,C>=D+1] 

* Chain [[16,17],19,[18],20]: 4*it(16)+7*it(17)+6*s(5)+4
  Such that:aux(10) =< A-B
aux(11) =< C-D
it(17) =< aux(10)
s(5) =< aux(11)
it(16) =< aux(10)
it(16) =< aux(11)

  with precondition: [G=4,A=H,A=I,C=J,C=K,C=L,A>=B+3,C>=D+1] 

* Chain [[16,17],19,21]: 4*it(16)+4*it(17)+6*s(5)+4
  Such that:aux(12) =< A-B
aux(13) =< C-D
s(5) =< aux(13)
it(16) =< aux(12)
it(17) =< aux(12)
it(16) =< aux(13)

  with precondition: [G=3,A>=B+2,C>=D+1] 

* Chain [[16,17],19,20]: 4*it(16)+4*it(17)+6*s(5)+4
  Such that:aux(14) =< A-B
aux(15) =< C-D
s(5) =< aux(15)
it(16) =< aux(14)
it(17) =< aux(14)
it(16) =< aux(15)

  with precondition: [G=4,A=H,A=I,C=J,C=K,C=L,A>=B+2,C>=D+1] 

* Chain [21]: 3*s(2)+1
  Such that:s(2) =< C-D

  with precondition: [G=3] 

* Chain [20]: 1
  with precondition: [G=4,J=C,K=D,L=E,A=H,B=I,B>=A] 

* Chain [19,[18],21]: 3*it(18)+3*s(6)+4
  Such that:it(18) =< A-B
s(6) =< C-D

  with precondition: [G=3,A>=B+2,C>=D+1] 

* Chain [19,[18],20]: 3*it(18)+3*s(6)+4
  Such that:it(18) =< A-B
s(6) =< C-D

  with precondition: [G=4,A=H,A=I,C=J,C=K,C=L,A>=B+2,C>=D+1] 

* Chain [19,21]: 3*s(6)+4
  Such that:s(6) =< C-D

  with precondition: [G=3,A>=B+1,C>=D+1] 

* Chain [19,20]: 3*s(6)+4
  Such that:s(6) =< C-D

  with precondition: [G=4,A=B+1,A=H,A=I,C=J,C=K,C=L,C>=D+1] 


#### Cost of chains of evalNestedMultiplebb5in_loop_cont(A,B,C,D,E,F,G):
* Chain [23]: 0
  with precondition: [A=3] 

* Chain [22]: 1
  with precondition: [A=4] 


#### Cost of chains of evalNestedMultipleentryin(A,B,C,D,E,G):
* Chain [24]: 42*s(42)+51*s(43)+24*s(44)+6
  Such that:aux(21) =< -A+B
aux(22) =< -C+D
s(42) =< aux(21)
s(43) =< aux(22)
s(44) =< aux(21)
s(44) =< aux(22)

  with precondition: [] 


#### Cost of chains of evalNestedMultiplestart(A,B,C,D,E,G):
* Chain [25]: 42*s(60)+51*s(61)+24*s(62)+7
  Such that:s(58) =< -A+B
s(59) =< -C+D
s(60) =< s(58)
s(61) =< s(59)
s(62) =< s(58)
s(62) =< s(59)

  with precondition: [] 


Closed-form bounds of evalNestedMultiplestart(A,B,C,D,E,G): 
-------------------------------------
* Chain [25] with precondition: [] 
    - Upper bound: nat(-A+B)*66+7+nat(-C+D)*51 
    - Complexity: n 

### Maximum cost of evalNestedMultiplestart(A,B,C,D,E,G): nat(-A+B)*66+7+nat(-C+D)*51 
Asymptotic class: n 
* Total analysis performed in 647 ms.


-- stats
realtime 0:00.78
usertime 0.70
systime 0.01

