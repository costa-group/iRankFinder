WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalfbb1in/7,evalfbb2in/7,evalfbb3in/7,evalfbbin/7]
1. non_recursive  : [evalfstop/4]
2. non_recursive  : [evalfreturnin/4]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalfbb3in_loop_cont/5]
5. non_recursive  : [evalfentryin/4]
6. non_recursive  : [evalfstart/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalfbb3in/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalfbb3in_loop_cont/5
5. SCC is partially evaluated into evalfentryin/4
6. SCC is partially evaluated into evalfstart/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalfbb3in/7 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13] 
* CE 3 is refined into CE [14] 


### Cost equations --> "Loop" of evalfbb3in/7 
* CEs [13] --> Loop 10 
* CEs [14] --> Loop 11 
* CEs [10] --> Loop 12 
* CEs [11] --> Loop 13 
* CEs [12] --> Loop 14 

### Ranking functions of CR evalfbb3in(A,B,C,D,E,F,G) 
* RF of phase [10]: [C]
* RF of phase [11]: [B-C]

#### Partial ranking functions of CR evalfbb3in(A,B,C,D,E,F,G) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    C
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    B-C


### Specialization of cost equations evalfbb3in_loop_cont/5 
* CE 9 is refined into CE [15] 
* CE 8 is refined into CE [16] 


### Cost equations --> "Loop" of evalfbb3in_loop_cont/5 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR evalfbb3in_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR evalfbb3in_loop_cont(A,B,C,D,E) 


### Specialization of cost equations evalfentryin/4 
* CE 2 is refined into CE [17,18,19,20] 


### Cost equations --> "Loop" of evalfentryin/4 
* CEs [18,20] --> Loop 17 
* CEs [17,19] --> Loop 18 

### Ranking functions of CR evalfentryin(A,B,C,D) 

#### Partial ranking functions of CR evalfentryin(A,B,C,D) 


### Specialization of cost equations evalfstart/4 
* CE 1 is refined into CE [21] 


### Cost equations --> "Loop" of evalfstart/4 
* CEs [21] --> Loop 19 

### Ranking functions of CR evalfstart(A,B,C,D) 

#### Partial ranking functions of CR evalfstart(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of evalfbb3in(A,B,C,D,E,F,G):
* Chain [[11],13]: 3*it(11)+1
  Such that:it(11) =< -C+G

  with precondition: [D=2,A=E,B=F,B=G,A>=1,C>=1,B>=C+1] 

* Chain [[11],12]: 3*it(11)+0
  Such that:it(11) =< B-C

  with precondition: [D=3,A>=1,C>=1,B>=C+1] 

* Chain [[10],14]: 3*it(10)+1
  Such that:it(10) =< C

  with precondition: [D=2,G=0,A=E,B=F,0>=A,C>=1,B>=C+1] 

* Chain [[10],12]: 3*it(10)+0
  Such that:it(10) =< C

  with precondition: [D=3,0>=A,C>=1,B>=C+1] 

* Chain [12]: 0
  with precondition: [D=3,B>=2,C>=0,B>=C] 


#### Cost of chains of evalfbb3in_loop_cont(A,B,C,D,E):
* Chain [16]: 1
  with precondition: [A=2] 

* Chain [15]: 0
  with precondition: [A=3] 


#### Cost of chains of evalfentryin(A,B,C,D):
* Chain [18]: 6*s(2)+3
  Such that:aux(1) =< A
s(2) =< aux(1)

  with precondition: [A>=1,B>=A+1] 

* Chain [17]: 6*s(4)+3
  Such that:aux(2) =< -A+B
s(4) =< aux(2)

  with precondition: [A>=1,C>=1,B>=A+1] 


#### Cost of chains of evalfstart(A,B,C,D):
* Chain [19]: 6*s(12)+6*s(13)+4
  Such that:s(10) =< -A+B
s(11) =< A
s(12) =< s(10)
s(13) =< s(11)

  with precondition: [A>=1,B>=A+1] 


Closed-form bounds of evalfstart(A,B,C,D): 
-------------------------------------
* Chain [19] with precondition: [A>=1,B>=A+1] 
    - Upper bound: 6*B+4 
    - Complexity: n 

### Maximum cost of evalfstart(A,B,C,D): 6*B+4 
Asymptotic class: n 
* Total analysis performed in 195 ms.


-- stats
realtime 0:00.26
usertime 0.23
systime 0.01

