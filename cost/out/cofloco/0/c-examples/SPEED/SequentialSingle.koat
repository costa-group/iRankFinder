WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalSequentialSinglebb1in/5,evalSequentialSinglebb2in/5,evalSequentialSinglebbin/5]
1. recursive  : [evalSequentialSinglebb4in/5,evalSequentialSinglebb5in/5]
2. non_recursive  : [evalSequentialSinglestop/3]
3. non_recursive  : [evalSequentialSinglereturnin/3]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [evalSequentialSinglebb5in_loop_cont/4]
6. non_recursive  : [evalSequentialSinglebb1in_loop_cont/4]
7. non_recursive  : [evalSequentialSingleentryin/3]
8. non_recursive  : [evalSequentialSinglestart/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalSequentialSinglebb1in/5
1. SCC is partially evaluated into evalSequentialSinglebb5in/5
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into evalSequentialSinglebb5in_loop_cont/4
6. SCC is partially evaluated into evalSequentialSinglebb1in_loop_cont/4
7. SCC is partially evaluated into evalSequentialSingleentryin/3
8. SCC is partially evaluated into evalSequentialSinglestart/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalSequentialSinglebb1in/5 
* CE 5 is refined into CE [14] 
* CE 3 is refined into CE [15] 
* CE 6 is refined into CE [16] 
* CE 4 is refined into CE [17] 


### Cost equations --> "Loop" of evalSequentialSinglebb1in/5 
* CEs [17] --> Loop 14 
* CEs [14] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16] --> Loop 17 

### Ranking functions of CR evalSequentialSinglebb1in(A,B,D,E,F) 
* RF of phase [14]: [-A+B]

#### Partial ranking functions of CR evalSequentialSinglebb1in(A,B,D,E,F) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    -A+B


### Specialization of cost equations evalSequentialSinglebb5in/5 
* CE 11 is refined into CE [18] 
* CE 10 is refined into CE [19] 
* CE 9 is refined into CE [20] 


### Cost equations --> "Loop" of evalSequentialSinglebb5in/5 
* CEs [20] --> Loop 18 
* CEs [18] --> Loop 19 
* CEs [19] --> Loop 20 

### Ranking functions of CR evalSequentialSinglebb5in(A,B,D,E,F) 
* RF of phase [18]: [-A+B]

#### Partial ranking functions of CR evalSequentialSinglebb5in(A,B,D,E,F) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    -A+B


### Specialization of cost equations evalSequentialSinglebb5in_loop_cont/4 
* CE 13 is refined into CE [21] 
* CE 12 is refined into CE [22] 


### Cost equations --> "Loop" of evalSequentialSinglebb5in_loop_cont/4 
* CEs [21] --> Loop 21 
* CEs [22] --> Loop 22 

### Ranking functions of CR evalSequentialSinglebb5in_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR evalSequentialSinglebb5in_loop_cont(A,B,C,D) 


### Specialization of cost equations evalSequentialSinglebb1in_loop_cont/4 
* CE 7 is refined into CE [23,24,25] 
* CE 8 is refined into CE [26] 


### Cost equations --> "Loop" of evalSequentialSinglebb1in_loop_cont/4 
* CEs [23,24,25] --> Loop 23 
* CEs [26] --> Loop 24 

### Ranking functions of CR evalSequentialSinglebb1in_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR evalSequentialSinglebb1in_loop_cont(A,B,C,D) 


### Specialization of cost equations evalSequentialSingleentryin/3 
* CE 2 is refined into CE [27,28,29,30,31] 


### Cost equations --> "Loop" of evalSequentialSingleentryin/3 
* CEs [27,28,29,30,31] --> Loop 25 

### Ranking functions of CR evalSequentialSingleentryin(A,B,D) 

#### Partial ranking functions of CR evalSequentialSingleentryin(A,B,D) 


### Specialization of cost equations evalSequentialSinglestart/3 
* CE 1 is refined into CE [32] 


### Cost equations --> "Loop" of evalSequentialSinglestart/3 
* CEs [32] --> Loop 26 

### Ranking functions of CR evalSequentialSinglestart(A,B,D) 

#### Partial ranking functions of CR evalSequentialSinglestart(A,B,D) 


Computing Bounds
=====================================

#### Cost of chains of evalSequentialSinglebb1in(A,B,D,E,F):
* Chain [[14],17]: 3*it(14)+0
  Such that:it(14) =< -A+B

  with precondition: [D=3,A>=0,B>=A+1] 

* Chain [[14],16]: 3*it(14)+2
  Such that:it(14) =< -A+E

  with precondition: [D=4,B=F,A>=0,E>=A+1,B>=E+1] 

* Chain [[14],15]: 3*it(14)+1
  Such that:it(14) =< -A+F

  with precondition: [D=4,B=E,B=F,A>=0,B>=A+1] 

* Chain [17]: 0
  with precondition: [D=3,A>=0] 

* Chain [16]: 2
  with precondition: [D=4,A=E,B=F,A>=0,B>=A+1] 

* Chain [15]: 1
  with precondition: [D=4,A=E,B=F,A>=0,A>=B] 


#### Cost of chains of evalSequentialSinglebb5in(A,B,D,E,F):
* Chain [[18],20]: 2*it(18)+1
  Such that:it(18) =< -A+E

  with precondition: [D=2,B=E,B=F,B>=A+1] 

* Chain [[18],19]: 2*it(18)+0
  Such that:it(18) =< -A+B

  with precondition: [D=3,B>=A+1] 

* Chain [20]: 1
  with precondition: [D=2,A=E,B=F,A>=B] 

* Chain [19]: 0
  with precondition: [D=3] 


#### Cost of chains of evalSequentialSinglebb5in_loop_cont(A,B,C,D):
* Chain [22]: 1
  with precondition: [A=2] 

* Chain [21]: 0
  with precondition: [A=3] 


#### Cost of chains of evalSequentialSinglebb1in_loop_cont(A,B,C,D):
* Chain [24]: 0
  with precondition: [A=3] 

* Chain [23]: 4*s(3)+2
  Such that:aux(1) =< -B+C
s(3) =< aux(1)

  with precondition: [A=4] 


#### Cost of chains of evalSequentialSingleentryin(A,B,D):
* Chain [25]: 21*s(5)+5
  Such that:aux(3) =< B
s(5) =< aux(3)

  with precondition: [] 


#### Cost of chains of evalSequentialSinglestart(A,B,D):
* Chain [26]: 21*s(17)+6
  Such that:s(16) =< B
s(17) =< s(16)

  with precondition: [] 


Closed-form bounds of evalSequentialSinglestart(A,B,D): 
-------------------------------------
* Chain [26] with precondition: [] 
    - Upper bound: nat(B)*21+6 
    - Complexity: n 

### Maximum cost of evalSequentialSinglestart(A,B,D): nat(B)*21+6 
Asymptotic class: n 
* Total analysis performed in 168 ms.


-- stats
realtime 0:00.23
usertime 0.20
systime 0.01

