WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalNestedLoopbb2in/17,evalNestedLoopbb3in/17,evalNestedLoopbb4in/17]
1. recursive  : [evalNestedLoopbb1in/17,evalNestedLoopbb3in_loop_cont/18,evalNestedLoopbb6in/17,evalNestedLoopbb7in/17]
2. recursive  : [evalNestedLoopbb10in/17,evalNestedLoopbb6in_loop_cont/18,evalNestedLoopbb8in/17,evalNestedLoopbb9in/17]
3. non_recursive  : [evalNestedLoopstop/9]
4. non_recursive  : [evalNestedLoopreturnin/9]
5. non_recursive  : [exit_location/1]
6. non_recursive  : [evalNestedLoopbb9in_loop_cont/10]
7. non_recursive  : [evalNestedLoopentryin/9]
8. non_recursive  : [evalNestedLoopstart/9]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalNestedLoopbb3in/17
1. SCC is partially evaluated into evalNestedLoopbb6in/17
2. SCC is partially evaluated into evalNestedLoopbb9in/17
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into evalNestedLoopbb9in_loop_cont/10
7. SCC is partially evaluated into evalNestedLoopentryin/9
8. SCC is partially evaluated into evalNestedLoopstart/9

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalNestedLoopbb3in/17 
* CE 18 is refined into CE [19] 
* CE 15 is refined into CE [20] 
* CE 17 is refined into CE [21] 
* CE 16 is refined into CE [22] 


### Cost equations --> "Loop" of evalNestedLoopbb3in/17 
* CEs [22] --> Loop 17 
* CEs [19] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [21] --> Loop 20 

### Ranking functions of CR evalNestedLoopbb3in(A,B,C,D,E,F,G,H,J,K,L,M,N,O,P,Q,R) 
* RF of phase [17]: [C-H]

#### Partial ranking functions of CR evalNestedLoopbb3in(A,B,C,D,E,F,G,H,J,K,L,M,N,O,P,Q,R) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    C-H


### Specialization of cost equations evalNestedLoopbb6in/17 
* CE 12 is refined into CE [23] 
* CE 13 is refined into CE [24] 
* CE 10 is refined into CE [25] 
* CE 14 is refined into CE [26] 
* CE 11 is refined into CE [27,28,29,30] 


### Cost equations --> "Loop" of evalNestedLoopbb6in/17 
* CEs [30] --> Loop 21 
* CEs [28] --> Loop 22 
* CEs [27] --> Loop 23 
* CEs [29] --> Loop 24 
* CEs [23] --> Loop 25 
* CEs [24] --> Loop 26 
* CEs [25,26] --> Loop 27 

### Ranking functions of CR evalNestedLoopbb6in(A,B,C,D,E,F,G,H,J,K,L,M,N,O,P,Q,R) 
* RF of phase [21,22]: [B-E]
* RF of phase [23]: [B-E]

#### Partial ranking functions of CR evalNestedLoopbb6in(A,B,C,D,E,F,G,H,J,K,L,M,N,O,P,Q,R) 
* Partial RF of phase [21,22]:
  - RF of loop [21:1]:
    C-F-1
  - RF of loop [21:1,22:1]:
    B-E
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    B-E


### Specialization of cost equations evalNestedLoopbb9in/17 
* CE 3 is refined into CE [31] 
* CE 6 is refined into CE [32] 
* CE 5 is refined into CE [33] 
* CE 7 is refined into CE [34] 
* CE 4 is refined into CE [35,36,37,38,39,40,41,42,43,44] 


### Cost equations --> "Loop" of evalNestedLoopbb9in/17 
* CEs [44] --> Loop 28 
* CEs [42] --> Loop 29 
* CEs [43] --> Loop 30 
* CEs [41] --> Loop 31 
* CEs [38] --> Loop 32 
* CEs [35] --> Loop 33 
* CEs [40] --> Loop 34 
* CEs [37] --> Loop 35 
* CEs [36] --> Loop 36 
* CEs [39] --> Loop 37 
* CEs [31] --> Loop 38 
* CEs [32] --> Loop 39 
* CEs [33,34] --> Loop 40 

### Ranking functions of CR evalNestedLoopbb9in(A,B,C,D,E,F,G,H,J,K,L,M,N,O,P,Q,R) 
* RF of phase [28,29,30,31,32,33,34,35,37]: [A-D]
* RF of phase [36]: [A-D]

#### Partial ranking functions of CR evalNestedLoopbb9in(A,B,C,D,E,F,G,H,J,K,L,M,N,O,P,Q,R) 
* Partial RF of phase [28,29,30,31,32,33,34,35,37]:
  - RF of loop [28:1,29:1]:
    C-D
  - RF of loop [28:1,29:1,30:1,31:1,35:1]:
    A-D
  - RF of loop [32:1,33:1,34:1,37:1]:
    A/2-D/2
    C/2-D/2
* Partial RF of phase [36]:
  - RF of loop [36:1]:
    A-D


### Specialization of cost equations evalNestedLoopbb9in_loop_cont/10 
* CE 8 is refined into CE [45] 
* CE 9 is refined into CE [46] 


### Cost equations --> "Loop" of evalNestedLoopbb9in_loop_cont/10 
* CEs [45] --> Loop 41 
* CEs [46] --> Loop 42 

### Ranking functions of CR evalNestedLoopbb9in_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR evalNestedLoopbb9in_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations evalNestedLoopentryin/9 
* CE 2 is refined into CE [47,48,49,50,51,52,53] 


### Cost equations --> "Loop" of evalNestedLoopentryin/9 
* CEs [48,49] --> Loop 43 
* CEs [47,50,51,52,53] --> Loop 44 

### Ranking functions of CR evalNestedLoopentryin(A,B,C,D,E,F,G,H,J) 

#### Partial ranking functions of CR evalNestedLoopentryin(A,B,C,D,E,F,G,H,J) 


### Specialization of cost equations evalNestedLoopstart/9 
* CE 1 is refined into CE [54] 


### Cost equations --> "Loop" of evalNestedLoopstart/9 
* CEs [54] --> Loop 45 

### Ranking functions of CR evalNestedLoopstart(A,B,C,D,E,F,G,H,J) 

#### Partial ranking functions of CR evalNestedLoopstart(A,B,C,D,E,F,G,H,J) 


Computing Bounds
=====================================

#### Cost of chains of evalNestedLoopbb3in(A,B,C,D,E,F,G,H,J,K,L,M,N,O,P,Q,R):
* Chain [[17],20]: 3*it(17)+1
  Such that:it(17) =< C-H

  with precondition: [J=2,E+1=G,A=K,B=L,C=M,D=N,E+1=O,C=P,E+1=Q,C=R,B>=E+1,H>=F,C>=H+1] 

* Chain [[17],19]: 3*it(17)+2
  Such that:it(17) =< -H+P

  with precondition: [J=2,E+1=G,A=K,B=L,C=M,D=N,E+1=O,E+1=Q,P=R,B>=E+1,H>=F,P>=H+1,C>=P+1] 

* Chain [[17],18]: 3*it(17)+0
  Such that:it(17) =< C-H

  with precondition: [J=3,G=E+1,H>=F,B>=G,C>=H+1] 

* Chain [20]: 1
  with precondition: [J=2,K=A,N=D,G=E+1,B=L,C=M,G=O,H=P,G=Q,H=R,H>=C,H>=F,B>=G] 

* Chain [19]: 2
  with precondition: [J=2,K=A,N=D,G=E+1,B=L,C=M,G=O,H=P,G=Q,H=R,H>=F,B>=G,C>=H+1] 

* Chain [18]: 0
  with precondition: [J=3,G=E+1,H>=F,B>=G] 


#### Cost of chains of evalNestedLoopbb6in(A,B,C,D,E,F,G,H,J,K,L,M,N,O,P,Q,R):
* Chain [[23],27]: 4*it(23)+3*s(2)+3
  Such that:it(23) =< B-E
s(2) =< C-F

  with precondition: [J=3,E>=0,F>=C,A>=D+1,F>=D,B>=E+1] 

* Chain [[23],26]: 4*it(23)+1
  Such that:it(23) =< -E+O

  with precondition: [J=4,A=K,B=L,C=M,D=N,B=O,F=P,B=Q,F=R,E>=0,F>=C,A>=D+1,F>=D,B>=E+1] 

* Chain [[23],25]: 4*it(23)+2
  Such that:it(23) =< -E+O

  with precondition: [J=4,A=K,B=L,C=M,D=N,F=P,O=Q,F=R,E>=0,F>=C,A>=D+1,F>=D,O>=E+1,B>=O+1] 

* Chain [[21,22],27]: 5*it(21)+5*it(22)+6*s(2)+3
  Such that:aux(5) =< B-E
aux(6) =< C-F
s(2) =< aux(6)
it(21) =< aux(5)
it(22) =< aux(5)
it(21) =< aux(6)

  with precondition: [J=3,E>=0,A>=D+1,F>=D,B>=E+1,C>=F+1] 

* Chain [[21,22],26]: 5*it(21)+5*it(22)+3*s(5)+1
  Such that:aux(3) =< -F+M
aux(4) =< -F+R
aux(7) =< -E+O
it(21) =< aux(7)
it(22) =< aux(7)
it(21) =< aux(3)
s(5) =< aux(3)
it(21) =< aux(4)
s(5) =< aux(4)

  with precondition: [J=4,A=K,B=L,C=M,D=N,B=O,B=Q,P=R,E>=0,A>=D+1,F>=D,B>=E+1,P>=F,C>=P+1] 

* Chain [[21,22],25]: 5*it(21)+5*it(22)+3*s(5)+2
  Such that:aux(1) =< -E+L
aux(2) =< -E+O
aux(3) =< -F+M
aux(4) =< -F+R
it(21) =< aux(1)
it(22) =< aux(1)
it(21) =< aux(2)
it(22) =< aux(2)
it(21) =< aux(3)
s(5) =< aux(3)
it(21) =< aux(4)
s(5) =< aux(4)

  with precondition: [J=4,A=K,B=L,C=M,D=N,O=Q,P=R,E>=0,A>=D+1,F>=D,O>=E+1,P>=F,B>=O+1,C>=P+1] 

* Chain [[21,22],24,[23],27]: 5*it(21)+9*it(22)+6*s(5)+7
  Such that:aux(8) =< B-E
aux(9) =< C-F
it(22) =< aux(8)
s(5) =< aux(9)
it(21) =< aux(8)
it(21) =< aux(9)

  with precondition: [J=3,E>=0,A>=D+1,F>=D,B>=E+3,C>=F+1] 

* Chain [[21,22],24,[23],26]: 5*it(21)+9*it(22)+6*s(5)+5
  Such that:aux(10) =< -E+O
aux(11) =< -F+R
it(22) =< aux(10)
s(5) =< aux(11)
it(21) =< aux(10)
it(21) =< aux(11)

  with precondition: [J=4,O=B,A=K,O=L,C=M,D=N,C=P,O=Q,C=R,E>=0,A>=D+1,F>=D,O>=E+3,C>=F+1] 

* Chain [[21,22],24,[23],25]: 5*it(21)+5*it(22)+4*it(23)+6*s(5)+6
  Such that:aux(1) =< -E+L
aux(12) =< -E+O
aux(13) =< -F+R
it(23) =< aux(12)
s(5) =< aux(13)
it(21) =< aux(1)
it(22) =< aux(1)
it(21) =< aux(12)
it(22) =< aux(12)
it(21) =< aux(13)

  with precondition: [J=4,P=C,A=K,B=L,P=M,D=N,O=Q,P=R,E>=0,A>=D+1,F>=D,O>=E+3,P>=F+1,B>=O+1] 

* Chain [[21,22],24,27]: 5*it(21)+5*it(22)+6*s(5)+7
  Such that:aux(14) =< B-E
aux(15) =< C-F
s(5) =< aux(15)
it(21) =< aux(14)
it(22) =< aux(14)
it(21) =< aux(15)

  with precondition: [J=3,E>=0,A>=D+1,F>=D,B>=E+2,C>=F+1] 

* Chain [[21,22],24,26]: 5*it(21)+5*it(22)+6*s(5)+5
  Such that:aux(16) =< -E+O
aux(17) =< -F+M
s(5) =< aux(17)
it(21) =< aux(16)
it(22) =< aux(16)
it(21) =< aux(17)

  with precondition: [J=4,A=K,B=L,C=M,D=N,B=O,C=P,B=Q,C=R,E>=0,A>=D+1,F>=D,B>=E+2,C>=F+1] 

* Chain [[21,22],24,25]: 5*it(21)+5*it(22)+6*s(5)+6
  Such that:aux(1) =< -E+L
aux(2) =< -E+O
aux(18) =< -F+M
s(5) =< aux(18)
it(21) =< aux(1)
it(22) =< aux(1)
it(21) =< aux(2)
it(22) =< aux(2)
it(21) =< aux(18)

  with precondition: [J=4,A=K,B=L,C=M,D=N,C=P,O=Q,C=R,E>=0,A>=D+1,F>=D,O>=E+2,C>=F+1,B>=O+1] 

* Chain [27]: 3*s(2)+3
  Such that:s(2) =< C-F

  with precondition: [J=3,E>=0,A>=D+1,F>=D] 

* Chain [26]: 1
  with precondition: [J=4,M=C,Q=G,R=H,A=K,B=L,D=N,E=O,F=P,E>=0,E>=B,A>=D+1,F>=D] 

* Chain [25]: 2
  with precondition: [J=4,M=C,Q=G,R=H,A=K,B=L,D=N,E=O,F=P,E>=0,A>=D+1,F>=D,B>=E+1] 

* Chain [24,[23],27]: 4*it(23)+3*s(6)+7
  Such that:it(23) =< B-E
s(6) =< C-F

  with precondition: [J=3,E>=0,A>=D+1,F>=D,B>=E+2,C>=F+1] 

* Chain [24,[23],26]: 4*it(23)+3*s(6)+5
  Such that:it(23) =< -E+O
s(6) =< -F+P

  with precondition: [J=4,A=K,B=L,C=M,D=N,B=O,C=P,B=Q,C=R,E>=0,A>=D+1,F>=D,B>=E+2,C>=F+1] 

* Chain [24,[23],25]: 4*it(23)+3*s(6)+6
  Such that:it(23) =< -E+O
s(6) =< -F+P

  with precondition: [J=4,A=K,B=L,C=M,D=N,C=P,O=Q,C=R,E>=0,A>=D+1,F>=D,O>=E+2,C>=F+1,B>=O+1] 

* Chain [24,27]: 3*s(6)+7
  Such that:s(6) =< C-F

  with precondition: [J=3,E>=0,A>=D+1,F>=D,B>=E+1,C>=F+1] 

* Chain [24,26]: 3*s(6)+5
  Such that:s(6) =< -F+P

  with precondition: [J=4,B=E+1,A=K,B=L,C=M,D=N,B=O,C=P,B=Q,C=R,B>=1,A>=D+1,F>=D,C>=F+1] 

* Chain [24,25]: 3*s(6)+6
  Such that:s(6) =< -F+P

  with precondition: [J=4,O=E+1,A=K,B=L,C=M,D=N,C=P,O=Q,C=R,O>=1,A>=D+1,F>=D,C>=F+1,B>=O+1] 


#### Cost of chains of evalNestedLoopbb9in(A,B,C,D,E,F,G,H,J,K,L,M,N,O,P,Q,R):
* Chain [[36],40]: 4*it(36)+30*s(58)+9
  Such that:it(36) =< A-D
s(56) =< C-D
s(58) =< s(56)

  with precondition: [B=0,J=3,C>=0,D>=0,A>=D+1] 

* Chain [[36],39]: 4*it(36)+1
  Such that:it(36) =< -D+N

  with precondition: [B=0,J=5,L=0,O=0,A=K,C=M,A=N,A=P+1,G=Q,H=R,C>=0,D>=0,A>=D+1] 

* Chain [[36],38]: 4*it(36)+2
  Such that:it(36) =< -D+N

  with precondition: [B=0,J=5,L=0,O=0,A=K,C=M,N=P+1,G=Q,H=R,C>=0,D>=0,N>=D+1,A>=N+1] 

* Chain [[28,29,30,31,32,33,34,35,37],40]: 9*it(28)+14*it(30)+9*it(32)+25*it(33)+27*s(57)+30*s(58)+15*s(59)+5*s(126)+5*s(127)+3*s(128)+5*s(133)+5*s(134)+3*s(135)+4*s(139)+4*s(140)+30*s(141)+8*s(142)+10*s(143)+10*s(144)+18*s(149)+10*s(150)+6*s(153)+9
  Such that:aux(36) =< A-D
aux(38) =< A/2-D/2
aux(41) =< C-D+1
aux(43) =< C/2-D/2
aux(45) =< A+C-D
aux(46) =< A/2+C/2-D/2
aux(47) =< B
aux(48) =< C-D
s(57) =< aux(47)
s(58) =< aux(48)
s(59) =< aux(47)
s(59) =< aux(48)
it(28) =< aux(36)
it(30) =< aux(36)
it(32) =< aux(36)
it(33) =< aux(36)
it(28) =< aux(45)
it(30) =< aux(45)
it(32) =< aux(45)
it(33) =< aux(45)
it(32) =< aux(38)
it(33) =< aux(38)
it(32) =< aux(46)
it(33) =< aux(46)
it(28) =< aux(48)
it(32) =< aux(48)
it(33) =< aux(48)
s(129) =< aux(48)
it(33) =< aux(41)
s(145) =< aux(41)
s(153) =< aux(41)
s(129) =< aux(45)
s(145) =< aux(45)
s(153) =< aux(45)
it(32) =< aux(43)
it(33) =< aux(43)
aux(30) =< aux(47)
aux(28) =< aux(47)-1
aux(29) =< aux(48)
s(132) =< it(28)*aux(47)
s(130) =< it(28)*aux(48)
s(152) =< it(33)*aux(30)
s(146) =< it(32)*aux(28)
s(147) =< it(32)*aux(30)
s(140) =< it(30)*aux(30)
s(139) =< it(30)*aux(28)
s(138) =< it(28)*aux(30)
s(137) =< it(28)*aux(29)
s(131) =< it(28)*aux(28)
s(141) =< s(145)
s(149) =< s(152)
s(150) =< s(152)
s(150) =< s(145)
s(142) =< s(146)
s(143) =< s(147)
s(144) =< s(147)
s(143) =< s(146)
s(144) =< s(146)
s(143) =< s(145)
s(133) =< s(138)
s(134) =< s(138)
s(133) =< s(137)
s(135) =< s(137)
s(133) =< s(129)
s(135) =< s(129)
s(126) =< s(132)
s(127) =< s(132)
s(126) =< s(131)
s(127) =< s(131)
s(126) =< s(130)
s(128) =< s(130)
s(126) =< s(129)
s(128) =< s(129)

  with precondition: [J=3,B>=1,C>=0,D>=0,A>=D+1] 

* Chain [[28,29,30,31,32,33,34,35,37],39]: 9*it(28)+14*it(30)+9*it(32)+25*it(33)+5*s(126)+5*s(127)+3*s(128)+5*s(133)+5*s(134)+3*s(135)+4*s(139)+4*s(140)+30*s(141)+8*s(142)+10*s(143)+10*s(144)+18*s(149)+10*s(150)+6*s(153)+1
  Such that:aux(36) =< A-D
aux(38) =< A/2-D/2
aux(27) =< B
aux(40) =< C-D
aux(41) =< C-D+1
aux(43) =< C/2-D/2
aux(49) =< -D+P+1
aux(50) =< -D/2+P/2+1/2
it(28) =< aux(36)
it(30) =< aux(36)
it(32) =< aux(36)
it(33) =< aux(36)
it(28) =< aux(49)
it(30) =< aux(49)
it(32) =< aux(49)
it(33) =< aux(49)
it(32) =< aux(38)
it(33) =< aux(38)
it(32) =< aux(50)
it(33) =< aux(50)
it(28) =< aux(40)
it(32) =< aux(40)
it(33) =< aux(40)
s(129) =< aux(40)
it(33) =< aux(41)
s(145) =< aux(41)
s(153) =< aux(41)
s(129) =< aux(49)
s(145) =< aux(49)
s(153) =< aux(49)
it(32) =< aux(43)
it(33) =< aux(43)
aux(30) =< aux(27)
aux(28) =< aux(27)-1
aux(29) =< aux(40)
s(132) =< it(28)*aux(27)
s(130) =< it(28)*aux(40)
s(152) =< it(33)*aux(30)
s(146) =< it(32)*aux(28)
s(147) =< it(32)*aux(30)
s(140) =< it(30)*aux(30)
s(139) =< it(30)*aux(28)
s(138) =< it(28)*aux(30)
s(137) =< it(28)*aux(29)
s(131) =< it(28)*aux(28)
s(141) =< s(145)
s(149) =< s(152)
s(150) =< s(152)
s(150) =< s(145)
s(142) =< s(146)
s(143) =< s(147)
s(144) =< s(147)
s(143) =< s(146)
s(144) =< s(146)
s(143) =< s(145)
s(133) =< s(138)
s(134) =< s(138)
s(133) =< s(137)
s(135) =< s(137)
s(133) =< s(129)
s(135) =< s(129)
s(126) =< s(132)
s(127) =< s(132)
s(126) =< s(131)
s(127) =< s(131)
s(126) =< s(130)
s(128) =< s(130)
s(126) =< s(129)
s(128) =< s(129)

  with precondition: [J=5,A=K,B=L,C=M,N=P+1,B>=1,D>=0,O>=0,N>=A,A>=D+1,B>=O,A+C>=N] 

* Chain [[28,29,30,31,32,33,34,35,37],38]: 9*it(28)+14*it(30)+9*it(32)+25*it(33)+5*s(126)+5*s(127)+3*s(128)+5*s(133)+5*s(134)+3*s(135)+4*s(139)+4*s(140)+30*s(141)+8*s(142)+10*s(143)+10*s(144)+18*s(149)+10*s(150)+6*s(153)+2
  Such that:aux(36) =< A-D
aux(38) =< A/2-D/2
aux(27) =< B
aux(40) =< C-D
aux(41) =< C-D+1
aux(43) =< C/2-D/2
aux(51) =< -D+P+1
aux(52) =< -D/2+P/2+1/2
it(28) =< aux(36)
it(30) =< aux(36)
it(32) =< aux(36)
it(33) =< aux(36)
it(28) =< aux(51)
it(30) =< aux(51)
it(32) =< aux(51)
it(33) =< aux(51)
it(32) =< aux(38)
it(33) =< aux(38)
it(32) =< aux(52)
it(33) =< aux(52)
it(28) =< aux(40)
it(32) =< aux(40)
it(33) =< aux(40)
s(129) =< aux(40)
it(33) =< aux(41)
s(145) =< aux(41)
s(153) =< aux(41)
s(129) =< aux(51)
s(145) =< aux(51)
s(153) =< aux(51)
it(32) =< aux(43)
it(33) =< aux(43)
aux(30) =< aux(27)
aux(28) =< aux(27)-1
aux(29) =< aux(40)
s(132) =< it(28)*aux(27)
s(130) =< it(28)*aux(40)
s(152) =< it(33)*aux(30)
s(146) =< it(32)*aux(28)
s(147) =< it(32)*aux(30)
s(140) =< it(30)*aux(30)
s(139) =< it(30)*aux(28)
s(138) =< it(28)*aux(30)
s(137) =< it(28)*aux(29)
s(131) =< it(28)*aux(28)
s(141) =< s(145)
s(149) =< s(152)
s(150) =< s(152)
s(150) =< s(145)
s(142) =< s(146)
s(143) =< s(147)
s(144) =< s(147)
s(143) =< s(146)
s(144) =< s(146)
s(143) =< s(145)
s(133) =< s(138)
s(134) =< s(138)
s(133) =< s(137)
s(135) =< s(137)
s(133) =< s(129)
s(135) =< s(129)
s(126) =< s(132)
s(127) =< s(132)
s(126) =< s(131)
s(127) =< s(131)
s(126) =< s(130)
s(128) =< s(130)
s(126) =< s(129)
s(128) =< s(129)

  with precondition: [J=5,A=K,B=L,C=M,N=P+1,B>=1,C>=0,D>=0,O>=0,N>=D+1,A>=N+1,B>=O] 

* Chain [40]: 27*s(57)+30*s(58)+15*s(59)+9
  Such that:s(55) =< B
s(56) =< C-D
s(57) =< s(55)
s(58) =< s(56)
s(59) =< s(55)
s(59) =< s(56)

  with precondition: [J=3,A>=0,B>=0,C>=0,D>=0,A+C>=D] 

* Chain [39]: 1
  with precondition: [J=5,O=E,P=F,Q=G,R=H,A=K,B=L,C=M,D=N,A>=0,B>=0,D>=A,A+C>=D] 

* Chain [38]: 2
  with precondition: [J=5,O=E,P=F,Q=G,R=H,A=K,B=L,C=M,D=N,B>=0,C>=0,D>=0,A>=D+1] 


#### Cost of chains of evalNestedLoopbb9in_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [42]: 0
  with precondition: [A=3] 

* Chain [41]: 1
  with precondition: [A=5] 


#### Cost of chains of evalNestedLoopentryin(A,B,C,D,E,F,G,H,J):
* Chain [44]: 18*s(214)+54*s(215)+90*s(216)+30*s(217)+18*s(218)+28*s(219)+18*s(220)+50*s(221)+12*s(224)+8*s(233)+8*s(234)+60*s(238)+36*s(239)+20*s(240)+16*s(241)+20*s(242)+20*s(243)+10*s(244)+10*s(245)+6*s(246)+10*s(247)+10*s(248)+6*s(249)+9*s(258)+9*s(260)+25*s(261)+6*s(264)+4*s(273)+4*s(274)+30*s(278)+18*s(279)+10*s(280)+8*s(281)+10*s(282)+10*s(283)+5*s(284)+5*s(285)+3*s(286)+5*s(287)+5*s(288)+3*s(289)+10
  Such that:aux(58) =< A
aux(59) =< A+C
aux(60) =< A/2
aux(61) =< A/2+C/2
aux(62) =< B
aux(63) =< C
aux(64) =< C+1
aux(65) =< C/2
s(214) =< aux(58)
s(215) =< aux(62)
s(216) =< aux(63)
s(217) =< aux(62)
s(217) =< aux(63)
s(218) =< aux(58)
s(219) =< aux(58)
s(220) =< aux(58)
s(221) =< aux(58)
s(218) =< aux(59)
s(219) =< aux(59)
s(220) =< aux(59)
s(221) =< aux(59)
s(220) =< aux(60)
s(221) =< aux(60)
s(220) =< aux(61)
s(221) =< aux(61)
s(218) =< aux(63)
s(220) =< aux(63)
s(221) =< aux(63)
s(222) =< aux(63)
s(221) =< aux(64)
s(223) =< aux(64)
s(224) =< aux(64)
s(222) =< aux(59)
s(223) =< aux(59)
s(224) =< aux(59)
s(220) =< aux(65)
s(221) =< aux(65)
s(225) =< aux(62)
s(226) =< aux(62)-1
s(227) =< aux(63)
s(228) =< s(218)*aux(62)
s(229) =< s(218)*aux(63)
s(230) =< s(221)*s(225)
s(231) =< s(220)*s(226)
s(232) =< s(220)*s(225)
s(233) =< s(219)*s(225)
s(234) =< s(219)*s(226)
s(235) =< s(218)*s(225)
s(236) =< s(218)*s(227)
s(237) =< s(218)*s(226)
s(238) =< s(223)
s(239) =< s(230)
s(240) =< s(230)
s(240) =< s(223)
s(241) =< s(231)
s(242) =< s(232)
s(243) =< s(232)
s(242) =< s(231)
s(243) =< s(231)
s(242) =< s(223)
s(244) =< s(235)
s(245) =< s(235)
s(244) =< s(236)
s(246) =< s(236)
s(244) =< s(222)
s(246) =< s(222)
s(247) =< s(228)
s(248) =< s(228)
s(247) =< s(237)
s(248) =< s(237)
s(247) =< s(229)
s(249) =< s(229)
s(247) =< s(222)
s(249) =< s(222)
s(258) =< aux(58)
s(260) =< aux(58)
s(261) =< aux(58)
s(260) =< aux(60)
s(261) =< aux(60)
s(258) =< aux(63)
s(260) =< aux(63)
s(261) =< aux(63)
s(262) =< aux(63)
s(261) =< aux(64)
s(263) =< aux(64)
s(264) =< aux(64)
s(262) =< aux(58)
s(263) =< aux(58)
s(264) =< aux(58)
s(260) =< aux(65)
s(261) =< aux(65)
s(268) =< s(258)*aux(62)
s(269) =< s(258)*aux(63)
s(270) =< s(261)*s(225)
s(271) =< s(260)*s(226)
s(272) =< s(260)*s(225)
s(273) =< s(214)*s(225)
s(274) =< s(214)*s(226)
s(275) =< s(258)*s(225)
s(276) =< s(258)*s(227)
s(277) =< s(258)*s(226)
s(278) =< s(263)
s(279) =< s(270)
s(280) =< s(270)
s(280) =< s(263)
s(281) =< s(271)
s(282) =< s(272)
s(283) =< s(272)
s(282) =< s(271)
s(283) =< s(271)
s(282) =< s(263)
s(284) =< s(275)
s(285) =< s(275)
s(284) =< s(276)
s(286) =< s(276)
s(284) =< s(262)
s(286) =< s(262)
s(287) =< s(268)
s(288) =< s(268)
s(287) =< s(277)
s(288) =< s(277)
s(287) =< s(269)
s(289) =< s(269)
s(287) =< s(262)
s(289) =< s(262)

  with precondition: [A>=0,B>=0,C>=0] 

* Chain [43]: 8*s(330)+4
  Such that:aux(66) =< A
s(330) =< aux(66)

  with precondition: [B=0,A>=1,C>=0] 


#### Cost of chains of evalNestedLoopstart(A,B,C,D,E,F,G,H,J):
* Chain [45]: 26*s(414)+54*s(415)+90*s(416)+30*s(417)+18*s(418)+28*s(419)+18*s(420)+50*s(421)+12*s(424)+8*s(433)+8*s(434)+60*s(438)+36*s(439)+20*s(440)+16*s(441)+20*s(442)+20*s(443)+10*s(444)+10*s(445)+6*s(446)+10*s(447)+10*s(448)+6*s(449)+9*s(450)+9*s(451)+25*s(452)+6*s(455)+4*s(461)+4*s(462)+30*s(466)+18*s(467)+10*s(468)+8*s(469)+10*s(470)+10*s(471)+5*s(472)+5*s(473)+3*s(474)+5*s(475)+5*s(476)+3*s(477)+11
  Such that:s(413) =< A
s(406) =< A+C
s(407) =< A/2
s(408) =< A/2+C/2
s(409) =< B
s(410) =< C
s(411) =< C+1
s(412) =< C/2
s(414) =< s(413)
s(415) =< s(409)
s(416) =< s(410)
s(417) =< s(409)
s(417) =< s(410)
s(418) =< s(413)
s(419) =< s(413)
s(420) =< s(413)
s(421) =< s(413)
s(418) =< s(406)
s(419) =< s(406)
s(420) =< s(406)
s(421) =< s(406)
s(420) =< s(407)
s(421) =< s(407)
s(420) =< s(408)
s(421) =< s(408)
s(418) =< s(410)
s(420) =< s(410)
s(421) =< s(410)
s(422) =< s(410)
s(421) =< s(411)
s(423) =< s(411)
s(424) =< s(411)
s(422) =< s(406)
s(423) =< s(406)
s(424) =< s(406)
s(420) =< s(412)
s(421) =< s(412)
s(425) =< s(409)
s(426) =< s(409)-1
s(427) =< s(410)
s(428) =< s(418)*s(409)
s(429) =< s(418)*s(410)
s(430) =< s(421)*s(425)
s(431) =< s(420)*s(426)
s(432) =< s(420)*s(425)
s(433) =< s(419)*s(425)
s(434) =< s(419)*s(426)
s(435) =< s(418)*s(425)
s(436) =< s(418)*s(427)
s(437) =< s(418)*s(426)
s(438) =< s(423)
s(439) =< s(430)
s(440) =< s(430)
s(440) =< s(423)
s(441) =< s(431)
s(442) =< s(432)
s(443) =< s(432)
s(442) =< s(431)
s(443) =< s(431)
s(442) =< s(423)
s(444) =< s(435)
s(445) =< s(435)
s(444) =< s(436)
s(446) =< s(436)
s(444) =< s(422)
s(446) =< s(422)
s(447) =< s(428)
s(448) =< s(428)
s(447) =< s(437)
s(448) =< s(437)
s(447) =< s(429)
s(449) =< s(429)
s(447) =< s(422)
s(449) =< s(422)
s(450) =< s(413)
s(451) =< s(413)
s(452) =< s(413)
s(451) =< s(407)
s(452) =< s(407)
s(450) =< s(410)
s(451) =< s(410)
s(452) =< s(410)
s(453) =< s(410)
s(452) =< s(411)
s(454) =< s(411)
s(455) =< s(411)
s(453) =< s(413)
s(454) =< s(413)
s(455) =< s(413)
s(451) =< s(412)
s(452) =< s(412)
s(456) =< s(450)*s(409)
s(457) =< s(450)*s(410)
s(458) =< s(452)*s(425)
s(459) =< s(451)*s(426)
s(460) =< s(451)*s(425)
s(461) =< s(414)*s(425)
s(462) =< s(414)*s(426)
s(463) =< s(450)*s(425)
s(464) =< s(450)*s(427)
s(465) =< s(450)*s(426)
s(466) =< s(454)
s(467) =< s(458)
s(468) =< s(458)
s(468) =< s(454)
s(469) =< s(459)
s(470) =< s(460)
s(471) =< s(460)
s(470) =< s(459)
s(471) =< s(459)
s(470) =< s(454)
s(472) =< s(463)
s(473) =< s(463)
s(472) =< s(464)
s(474) =< s(464)
s(472) =< s(453)
s(474) =< s(453)
s(475) =< s(456)
s(476) =< s(456)
s(475) =< s(465)
s(476) =< s(465)
s(475) =< s(457)
s(477) =< s(457)
s(475) =< s(453)
s(477) =< s(453)

  with precondition: [A>=0,B>=0,C>=0] 


Closed-form bounds of evalNestedLoopstart(A,B,C,D,E,F,G,H,J): 
-------------------------------------
* Chain [45] with precondition: [A>=0,B>=0,C>=0] 
    - Upper bound: 183*A+84*B+11+126*B*A+138*C+nat(B-1)*36*A+ (168*C+168) 
    - Complexity: n^2 

### Maximum cost of evalNestedLoopstart(A,B,C,D,E,F,G,H,J): 183*A+84*B+11+126*B*A+138*C+nat(B-1)*36*A+ (168*C+168) 
Asymptotic class: n^2 
* Total analysis performed in 4209 ms.


-- stats
realtime 0:04.68
usertime 4.43
systime 0.06

