WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalfbb2in/11,evalfbb3in/11,evalfbb4in/11]
1. recursive  : [evalfbb3in_loop_cont/12,evalfbb5in/11,evalfbb6in/11,evalfbb7in/11,evalfbbin/11]
2. non_recursive  : [evalfstop/6]
3. non_recursive  : [evalfreturnin/6]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [evalfbb7in_loop_cont/7]
6. non_recursive  : [evalfentryin/6]
7. non_recursive  : [evalfstart/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalfbb3in/11
1. SCC is partially evaluated into evalfbb7in/11
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into evalfbb7in_loop_cont/7
6. SCC is partially evaluated into evalfentryin/6
7. SCC is partially evaluated into evalfstart/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalfbb3in/11 
* CE 14 is refined into CE [15] 
* CE 11 is refined into CE [16] 
* CE 13 is refined into CE [17] 
* CE 12 is refined into CE [18] 


### Cost equations --> "Loop" of evalfbb3in/11 
* CEs [18] --> Loop 13 
* CEs [15] --> Loop 14 
* CEs [16] --> Loop 15 
* CEs [17] --> Loop 16 

### Ranking functions of CR evalfbb3in(A,B,C,D,E,G,H,I,J,K,L) 
* RF of phase [13]: [B-D+1]

#### Partial ranking functions of CR evalfbb3in(A,B,C,D,E,G,H,I,J,K,L) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    B-D+1


### Specialization of cost equations evalfbb7in/11 
* CE 7 is refined into CE [19] 
* CE 6 is refined into CE [20] 
* CE 3 is refined into CE [21] 
* CE 8 is refined into CE [22] 
* CE 4 is refined into CE [23,24,25,26] 
* CE 5 is refined into CE [27] 


### Cost equations --> "Loop" of evalfbb7in/11 
* CEs [26] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [23] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [27] --> Loop 21 
* CEs [19] --> Loop 22 
* CEs [20] --> Loop 23 
* CEs [21,22] --> Loop 24 

### Ranking functions of CR evalfbb7in(A,B,C,D,E,G,H,I,J,K,L) 

#### Partial ranking functions of CR evalfbb7in(A,B,C,D,E,G,H,I,J,K,L) 
* Partial RF of phase [17,18,19,20,21]:
  - RF of loop [17:1,18:1,19:1,20:1]:
    A+1
  - RF of loop [18:1,21:1]:
    C+1 depends on loops [17:1,20:1] 
  - RF of loop [19:1]:
    -B+C depends on loops [17:1,20:1] 
    C depends on loops [17:1,20:1] 


### Specialization of cost equations evalfbb7in_loop_cont/7 
* CE 9 is refined into CE [28] 
* CE 10 is refined into CE [29] 


### Cost equations --> "Loop" of evalfbb7in_loop_cont/7 
* CEs [28] --> Loop 25 
* CEs [29] --> Loop 26 

### Ranking functions of CR evalfbb7in_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR evalfbb7in_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations evalfentryin/6 
* CE 2 is refined into CE [30,31,32,33] 


### Cost equations --> "Loop" of evalfentryin/6 
* CEs [30,31,32,33] --> Loop 27 

### Ranking functions of CR evalfentryin(A,B,C,D,E,G) 

#### Partial ranking functions of CR evalfentryin(A,B,C,D,E,G) 


### Specialization of cost equations evalfstart/6 
* CE 1 is refined into CE [34] 


### Cost equations --> "Loop" of evalfstart/6 
* CEs [34] --> Loop 28 

### Ranking functions of CR evalfstart(A,B,C,D,E,G) 

#### Partial ranking functions of CR evalfstart(A,B,C,D,E,G) 


Computing Bounds
=====================================

#### Cost of chains of evalfbb3in(A,B,C,D,E,G,H,I,J,K,L):
* Chain [[13],16]: 3*it(13)+1
  Such that:it(13) =< -D+K

  with precondition: [G=2,A=H,B=I,C=J,B+1=K,E=L,A>=0,C>=0,D>=C,B>=D] 

* Chain [[13],15]: 3*it(13)+2
  Such that:it(13) =< -D+K

  with precondition: [G=2,A=H,B=I,C=J,E=L,A>=0,C>=0,D>=C,K>=D+1,B>=K] 

* Chain [[13],14]: 3*it(13)+0
  Such that:it(13) =< B-D+1

  with precondition: [G=3,A>=0,C>=0,D>=C,B>=D] 

* Chain [16]: 1
  with precondition: [G=2,L=E,A=H,B=I,C=J,D=K,A>=0,C>=0,D>=B+1,D>=C] 

* Chain [15]: 2
  with precondition: [G=2,L=E,A=H,B=I,C=J,D=K,A>=0,C>=0,D>=C,B>=D] 

* Chain [14]: 0
  with precondition: [G=3,A>=0,C>=0,D>=C] 


#### Cost of chains of evalfbb7in(A,B,C,D,E,G,H,I,J,K,L):
* Chain [[17,18,19,20,21],24]: 11*it(17)+11*it(18)+3*it(21)+3*s(2)+3*s(7)+3*s(8)+2
  Such that:aux(28) =< A+B-C+1
aux(42) =< B
s(2) =< B+2
aux(45) =< A+1
aux(46) =< C+1
it(17) =< aux(45)
it(18) =< aux(45)
aux(30) =< aux(42)+1
aux(4) =< it(17)*aux(42)
s(7) =< it(17)*aux(42)
aux(5) =< it(17)*aux(30)
s(8) =< it(17)*aux(30)
it(18) =< aux(5)+aux(4)+aux(46)
it(21) =< aux(5)+aux(4)+aux(46)
s(8) =< it(21)+aux(28)

  with precondition: [G=3,A>=0,C>=0,B>=A] 

* Chain [[17,18,19,20,21],23]: 11*it(17)+11*it(18)+3*it(21)+3*s(7)+3*s(8)+1
  Such that:aux(28) =< A+B-C+1
aux(40) =< A-C+L
aux(43) =< C+1
aux(42) =< I
aux(47) =< A+1
aux(48) =< C-L+1
it(17) =< aux(47)
it(18) =< aux(47)
aux(30) =< aux(42)+1
aux(4) =< it(17)*aux(42)
s(7) =< it(17)*aux(42)
aux(5) =< it(17)*aux(30)
s(8) =< it(17)*aux(30)
it(18) =< aux(5)+aux(4)+aux(43)
it(21) =< aux(5)+aux(4)+aux(43)
it(18) =< aux(5)+aux(4)+aux(48)
it(21) =< aux(5)+aux(4)+aux(48)
s(8) =< it(21)+aux(40)
s(8) =< it(21)+aux(28)

  with precondition: [G=4,H+1=0,K+1=0,B=I,J+1=L,A>=0,C>=0,J+1>=0,B>=A] 

* Chain [[17,18,19,20,21],22]: 11*it(17)+11*it(18)+3*it(21)+3*s(7)+3*s(8)+1
  Such that:aux(39) =< A+1
aux(28) =< A+B-C+1
aux(40) =< A-C-H
aux(41) =< A-H
aux(42) =< I
aux(49) =< C+1
it(17) =< aux(39)
it(18) =< aux(39)
it(17) =< aux(41)
it(18) =< aux(41)
aux(30) =< aux(42)+1
aux(4) =< it(17)*aux(42)
s(7) =< it(17)*aux(42)
aux(5) =< it(17)*aux(30)
s(8) =< it(17)*aux(30)
it(18) =< aux(5)+aux(4)+aux(49)
it(21) =< aux(5)+aux(4)+aux(49)
s(8) =< it(21)+aux(40)
s(8) =< it(21)+aux(28)

  with precondition: [G=4,J+1=0,L=0,B=I,H=K,A>=0,C>=0,H+1>=0,B>=A,A>=H] 

* Chain [24]: 3*s(2)+2
  Such that:s(2) =< B-C+1

  with precondition: [G=3,C+1>=0,B>=A] 

* Chain [23]: 1
  with precondition: [G=4,K=D,L=E,A=H,B=I,C=J,0>=A+1,C+1>=0,B>=A] 


#### Cost of chains of evalfbb7in_loop_cont(A,B,C,D,E,F,G):
* Chain [26]: 0
  with precondition: [A=3] 

* Chain [25]: 1
  with precondition: [A=4] 


#### Cost of chains of evalfentryin(A,B,C,D,E,G):
* Chain [27]: 3*s(26)+36*s(27)+33*s(30)+9*s(33)+6*s(35)+9*s(36)+3*s(63)+3
  Such that:s(26) =< B+2
aux(53) =< 1
aux(54) =< B
aux(55) =< B+1
aux(56) =< 2*B+1
s(27) =< aux(55)
s(30) =< aux(55)
s(31) =< aux(54)+1
s(32) =< s(27)*aux(54)
s(33) =< s(27)*aux(54)
s(34) =< s(27)*s(31)
s(35) =< s(27)*s(31)
s(30) =< s(34)+s(32)+aux(53)
s(36) =< s(34)+s(32)+aux(53)
s(35) =< s(36)+aux(56)
s(63) =< s(27)*s(31)
s(63) =< s(36)+aux(55)
s(63) =< s(36)+aux(56)

  with precondition: [] 


#### Cost of chains of evalfstart(A,B,C,D,E,G):
* Chain [28]: 3*s(65)+36*s(70)+33*s(71)+9*s(74)+6*s(76)+9*s(77)+3*s(78)+4
  Such that:s(66) =< 1
s(67) =< B
s(68) =< B+1
s(65) =< B+2
s(69) =< 2*B+1
s(70) =< s(68)
s(71) =< s(68)
s(72) =< s(67)+1
s(73) =< s(70)*s(67)
s(74) =< s(70)*s(67)
s(75) =< s(70)*s(72)
s(76) =< s(70)*s(72)
s(71) =< s(75)+s(73)+s(66)
s(77) =< s(75)+s(73)+s(66)
s(76) =< s(77)+s(69)
s(78) =< s(70)*s(72)
s(78) =< s(77)+s(68)
s(78) =< s(77)+s(69)

  with precondition: [] 


Closed-form bounds of evalfstart(A,B,C,D,E,G): 
-------------------------------------
* Chain [28] with precondition: [] 
    - Upper bound: nat(B)*36*nat(B+1)+13+nat(B+1)*87+nat(B+2)*3 
    - Complexity: n^2 

### Maximum cost of evalfstart(A,B,C,D,E,G): nat(B)*36*nat(B+1)+13+nat(B+1)*87+nat(B+2)*3 
Asymptotic class: n^2 
* Total analysis performed in 922 ms.


-- stats
realtime 0:01.18
usertime 1.02
systime 0.01

