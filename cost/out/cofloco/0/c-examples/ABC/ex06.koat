WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalfbb1in/7,evalfbb2in/7]
1. recursive  : [evalfbb2in_loop_cont/8,evalfbb3in/7,evalfbb4in/7]
2. non_recursive  : [evalfstop/4]
3. non_recursive  : [evalfreturnin/4]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [evalfbb4in_loop_cont/5]
6. non_recursive  : [evalfentryin/4]
7. non_recursive  : [evalfstart/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalfbb2in/7
1. SCC is partially evaluated into evalfbb4in/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into evalfbb4in_loop_cont/5
6. SCC is partially evaluated into evalfentryin/4
7. SCC is partially evaluated into evalfstart/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalfbb2in/7 
* CE 11 is refined into CE [12] 
* CE 10 is refined into CE [13] 
* CE 9 is refined into CE [14] 


### Cost equations --> "Loop" of evalfbb2in/7 
* CEs [14] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

### Ranking functions of CR evalfbb2in(A,B,C,D,E,F,G) 
* RF of phase [11]: [B-C+1]

#### Partial ranking functions of CR evalfbb2in(A,B,C,D,E,F,G) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    B-C+1


### Specialization of cost equations evalfbb4in/7 
* CE 5 is refined into CE [15] 
* CE 3 is refined into CE [16] 
* CE 6 is refined into CE [17] 
* CE 4 is refined into CE [18] 


### Cost equations --> "Loop" of evalfbb4in/7 
* CEs [18] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [16,17] --> Loop 16 

### Ranking functions of CR evalfbb4in(A,B,C,D,E,F,G) 
* RF of phase [14]: [-A+B+1]

#### Partial ranking functions of CR evalfbb4in(A,B,C,D,E,F,G) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    -A+B+1


### Specialization of cost equations evalfbb4in_loop_cont/5 
* CE 7 is refined into CE [19] 
* CE 8 is refined into CE [20] 


### Cost equations --> "Loop" of evalfbb4in_loop_cont/5 
* CEs [19] --> Loop 17 
* CEs [20] --> Loop 18 

### Ranking functions of CR evalfbb4in_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR evalfbb4in_loop_cont(A,B,C,D,E) 


### Specialization of cost equations evalfentryin/4 
* CE 2 is refined into CE [21,22,23] 


### Cost equations --> "Loop" of evalfentryin/4 
* CEs [21,22,23] --> Loop 19 

### Ranking functions of CR evalfentryin(A,B,C,D) 

#### Partial ranking functions of CR evalfentryin(A,B,C,D) 


### Specialization of cost equations evalfstart/4 
* CE 1 is refined into CE [24] 


### Cost equations --> "Loop" of evalfstart/4 
* CEs [24] --> Loop 20 

### Ranking functions of CR evalfstart(A,B,C,D) 

#### Partial ranking functions of CR evalfstart(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of evalfbb2in(A,B,C,D,E,F,G):
* Chain [[11],13]: 2*it(11)+1
  Such that:it(11) =< -C+F+1

  with precondition: [D=2,A=E,B=F,B+1=G,C>=A,B>=C] 

* Chain [[11],12]: 2*it(11)+0
  Such that:it(11) =< B-C+1

  with precondition: [D=3,C>=A,B>=C] 

* Chain [12]: 0
  with precondition: [D=3,B>=A,C>=A] 


#### Cost of chains of evalfbb4in(A,B,C,D,E,F,G):
* Chain [[14],16]: 5*it(14)+2*s(5)+1
  Such that:aux(3) =< -A+B+1
it(14) =< aux(3)
s(5) =< it(14)*aux(3)

  with precondition: [D=3,A>=1,B>=A] 

* Chain [[14],15]: 3*it(14)+2*s(5)+1
  Such that:aux(4) =< -A+F+1
it(14) =< aux(4)
s(5) =< it(14)*aux(4)

  with precondition: [D=4,B+1=E,B=F,B+1=G,A>=1,B>=A] 

* Chain [16]: 2*s(2)+1
  Such that:s(2) =< -A+B+1

  with precondition: [D=3,A>=1] 

* Chain [15]: 1
  with precondition: [D=4,G=C,A=E,B=F,A>=1,A>=B+1] 


#### Cost of chains of evalfbb4in_loop_cont(A,B,C,D,E):
* Chain [18]: 0
  with precondition: [A=3] 

* Chain [17]: 1
  with precondition: [A=4] 


#### Cost of chains of evalfentryin(A,B,C,D):
* Chain [19]: 10*s(11)+4*s(12)+3
  Such that:aux(6) =< B
s(11) =< aux(6)
s(12) =< s(11)*aux(6)

  with precondition: [] 


#### Cost of chains of evalfstart(A,B,C,D):
* Chain [20]: 10*s(17)+4*s(18)+4
  Such that:s(16) =< B
s(17) =< s(16)
s(18) =< s(17)*s(16)

  with precondition: [] 


Closed-form bounds of evalfstart(A,B,C,D): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: nat(B)*10+4+nat(B)*4*nat(B) 
    - Complexity: n^2 

### Maximum cost of evalfstart(A,B,C,D): nat(B)*10+4+nat(B)*4*nat(B) 
Asymptotic class: n^2 
* Total analysis performed in 208 ms.


-- stats
realtime 0:00.29
usertime 0.24
systime 0.01

