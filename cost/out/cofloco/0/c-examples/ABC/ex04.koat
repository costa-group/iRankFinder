MAYBE
WARNING: Excluded non-linear constraints:[B*B*B>=0,0>=B*B*B]
WARNING: Excluded non-linear constraints:[B*B*B>=1,B*B*B>=2*O,1+2*O>=B*B*B]
WARNING: Excluded non-linear constraints:[0>=B*B*B+1,2*O>=B*B*B,1+B*B*B>=2*O]
WARNING: Excluded non-linear constraints:[B*B*B>=0,0>=B*B*B]
WARNING: Excluded non-linear constraints:[B*B*B>=1,B*B*B>=2*E,1+2*E>=B*B*B]
WARNING: Excluded non-linear constraints:[0>=B*B*B+1,2*E>=B*B*B,1+B*B*B>=2*E]
WARNING: Excluded non-linear constraints:[F*F*F>=0,0>=F*F*F]
WARNING: Excluded non-linear constraints:[F*F*F>=1,F*F*F>=2*G,1+2*G>=F*F*F]
WARNING: Excluded non-linear constraints:[0>=F*F*F+1,2*G>=F*F*F,1+F*F*F>=2*G]

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalfbb2in/9,evalfbb3in/9]
1. recursive  : [evalfbb3in_loop_cont/10,evalfbb4in/9,evalfbb5in/9]
2. recursive  : [evalfbb5in_loop_cont/10,evalfbb6in/9,evalfbb7in/9]
3. non_recursive  : [evalfstop/5]
4. non_recursive  : [evalfreturnin/5]
5. non_recursive  : [exit_location/1]
6. non_recursive  : [evalfbb7in_loop_cont/6]
7. non_recursive  : [evalfentryin/5]
8. non_recursive  : [evalfstart/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalfbb3in/9
1. SCC is partially evaluated into evalfbb5in/9
2. SCC is partially evaluated into evalfbb7in/9
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into evalfbb7in_loop_cont/6
7. SCC is partially evaluated into evalfentryin/5
8. SCC is partially evaluated into evalfstart/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalfbb3in/9 
* CE 15 is refined into CE [16] 
* CE 14 is refined into CE [17] 
* CE 13 is refined into CE [18] 


### Cost equations --> "Loop" of evalfbb3in/9 
* CEs [18] --> Loop 14 
* CEs [16] --> Loop 15 
* CEs [17] --> Loop 16 

### Ranking functions of CR evalfbb3in(A,B,C,D,F,G,H,I,J) 
* RF of phase [14]: [B-D-1,C-D]

#### Partial ranking functions of CR evalfbb3in(A,B,C,D,F,G,H,I,J) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    B-D-1
    C-D


### Specialization of cost equations evalfbb5in/9 
* CE 11 is refined into CE [19] 
* CE 9 is refined into CE [20] 
* CE 12 is refined into CE [21] 
* CE 10 is refined into CE [22,23] 


### Cost equations --> "Loop" of evalfbb5in/9 
* CEs [23] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [20,21] --> Loop 20 

### Ranking functions of CR evalfbb5in(A,B,C,D,F,G,H,I,J) 
* RF of phase [17]: [B-C]
* RF of phase [18]: [-C+1]

#### Partial ranking functions of CR evalfbb5in(A,B,C,D,F,G,H,I,J) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    B-C
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    -C+1


### Specialization of cost equations evalfbb7in/9 
* CE 5 is refined into CE [24] 
* CE 3 is refined into CE [25] 
* CE 6 is refined into CE [26] 
* CE 4 is refined into CE [27,28,29] 


### Cost equations --> "Loop" of evalfbb7in/9 
* CEs [28] --> Loop 21 
* CEs [29] --> Loop 22 
* CEs [27] --> Loop 23 
* CEs [24] --> Loop 24 
* CEs [25,26] --> Loop 25 

### Ranking functions of CR evalfbb7in(A,B,C,D,F,G,H,I,J) 

#### Partial ranking functions of CR evalfbb7in(A,B,C,D,F,G,H,I,J) 


### Specialization of cost equations evalfbb7in_loop_cont/6 
* CE 7 is refined into CE [30] 
* CE 8 is refined into CE [31] 


### Cost equations --> "Loop" of evalfbb7in_loop_cont/6 
* CEs [30] --> Loop 26 
* CEs [31] --> Loop 27 

### Ranking functions of CR evalfbb7in_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR evalfbb7in_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations evalfentryin/5 
* CE 2 is refined into CE [32,33,34,35,36,37,38,39,40,41,42,43] 


### Cost equations --> "Loop" of evalfentryin/5 
* CEs [42,43] --> Loop 28 
* CEs [40,41] --> Loop 29 
* CEs [38,39] --> Loop 30 
* CEs [32,33,34,35,36,37] --> Loop 31 

### Ranking functions of CR evalfentryin(A,B,C,D,F) 

#### Partial ranking functions of CR evalfentryin(A,B,C,D,F) 


### Specialization of cost equations evalfstart/5 
* CE 1 is refined into CE [44,45,46,47] 


### Cost equations --> "Loop" of evalfstart/5 
* CEs [47] --> Loop 32 
* CEs [46] --> Loop 33 
* CEs [45] --> Loop 34 
* CEs [44] --> Loop 35 

### Ranking functions of CR evalfstart(A,B,C,D,F) 

#### Partial ranking functions of CR evalfstart(A,B,C,D,F) 


Computing Bounds
=====================================

#### Cost of chains of evalfbb3in(A,B,C,D,F,G,H,I,J):
* Chain [[14],16]: 2*it(14)+1
  Such that:it(14) =< -D+I

  with precondition: [F=2,A=G,B=H,C=I,C=J,D>=0,B>=C+1,C>=D+1] 

* Chain [[14],15]: 2*it(14)+0
  Such that:it(14) =< C-D

  with precondition: [F=3,D>=0,B>=C+1,C>=D+1] 

* Chain [16]: 1
  with precondition: [F=2,G=A,B=H,C=I,D=J,D>=0,B>=C+1,D>=C] 

* Chain [15]: 0
  with precondition: [F=3,D>=0,B>=C+1] 


#### Cost of chains of evalfbb5in(A,B,C,D,F,G,H,I,J):
* Chain [[18],[17],20]: 5*it(17)+3*it(18)+2*s(5)+1
  Such that:it(18) =< 1
aux(3) =< B
it(17) =< aux(3)
s(5) =< it(17)*aux(3)

  with precondition: [C=0,F=3,B>=2] 

* Chain [[18],[17],19]: 3*it(17)+3*it(18)+2*s(5)+1
  Such that:it(18) =< 1
aux(4) =< H
it(17) =< aux(4)
s(5) =< it(17)*aux(4)

  with precondition: [C=0,F=4,I=B,A=G,I=H,I=J+1,I>=2] 

* Chain [[18],20]: 5*it(18)+1
  Such that:aux(5) =< 1
it(18) =< aux(5)

  with precondition: [C=0,F=3,B>=1] 

* Chain [[18],19]: 3*it(18)+1
  Such that:it(18) =< 1

  with precondition: [B=1,C=0,F=4,H=1,I=1,J=0,A=G] 

* Chain [20]: 2*s(2)+1
  Such that:s(2) =< C

  with precondition: [F=3,C>=0] 

* Chain [19]: 1
  with precondition: [F=4,G=A,J=D,B=H,C=I,C>=0,C>=B] 


#### Cost of chains of evalfbb7in(A,B,C,D,F,G,H,I,J):
* Chain [[23]]...: 6*it(23)+0
  with precondition: [B=1] 

* Chain [[23],25]: 6*it(23)+13*s(19)+2*s(21)+2
  Such that:aux(7) =< 1
s(19) =< aux(7)
s(21) =< s(19)*aux(7)

  with precondition: [B=1,F=3,A>=0] 

* Chain [[23],24]: 6*it(23)+1
  with precondition: [B=1,F=5,H=1,I=1,J=0,A>=0,G>=A+1] 

* Chain [[22]]...: 3*it(22)+0
  with precondition: [0>=B] 

* Chain [[22],25]: 3*it(22)+8*s(19)+5*s(20)+2*s(21)+2
  Such that:s(18) =< 1
s(16) =< B
s(19) =< s(18)
s(20) =< s(16)
s(21) =< s(20)*s(16)

  with precondition: [F=3,0>=B,A>=0] 

* Chain [[22],24]: 3*it(22)+1
  with precondition: [F=5,I=0,B=H,D=J,0>=B,A>=0,G>=A+1] 

* Chain [[21]]...: 11*it(21)+0
  with precondition: [B>=2] 

* Chain [[21],25]: 11*it(21)+8*s(19)+5*s(20)+2*s(21)+2
  Such that:s(18) =< 1
s(16) =< B
s(19) =< s(18)
s(20) =< s(16)
s(21) =< s(20)*s(16)

  with precondition: [F=3,A>=0,B>=2] 

* Chain [[21],24]: 11*it(21)+1
  with precondition: [F=5,B=H,B=I,B=J+1,A>=0,B>=2,G>=A+1] 

* Chain [25]: 8*s(19)+5*s(20)+2*s(21)+2
  Such that:s(18) =< 1
s(16) =< B
s(19) =< s(18)
s(20) =< s(16)
s(21) =< s(20)*s(16)

  with precondition: [F=3,A>=0] 

* Chain [24]: 1
  with precondition: [F=5,H=B,I=C,J=D,A=G,A>=0] 


#### Cost of chains of evalfbb7in_loop_cont(A,B,C,D,E,F):
* Chain [27]: 0
  with precondition: [A=3] 

* Chain [26]: 1
  with precondition: [A=5] 


#### Cost of chains of evalfentryin(A,B,C,D,F):
* Chain [31]: 37*s(51)+15*s(52)+6*s(53)+2*s(54)+40*s(55)+3
  Such that:aux(11) =< 1
aux(12) =< B
s(51) =< aux(11)
s(52) =< aux(12)
s(53) =< s(52)*aux(12)
s(54) =< s(51)*aux(11)

  with precondition: [] 

* Chain [30]...: 1*aux(13)+0
  with precondition: [B=1] 

* Chain [29]...: 1*aux(14)+0
  with precondition: [0>=B] 

* Chain [28]...: 1*aux(15)+0
  with precondition: [B>=2] 


#### Cost of chains of evalfstart(A,B,C,D,F):
* Chain [35]: 37*s(73)+15*s(74)+6*s(75)+2*s(76)+40*s(77)+4
  Such that:s(71) =< 1
s(72) =< B
s(73) =< s(71)
s(74) =< s(72)
s(75) =< s(74)*s(72)
s(76) =< s(73)*s(71)

  with precondition: [] 

* Chain [34]...: 1*s(78)+1
  with precondition: [B=1] 

* Chain [33]...: 1*s(79)+1
  with precondition: [0>=B] 

* Chain [32]...: 1*s(80)+1
  with precondition: [B>=2] 


Closed-form bounds of evalfstart(A,B,C,D,F): 
-------------------------------------
* Chain [35] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [34]... with precondition: [B=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [33]... with precondition: [0>=B] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [32]... with precondition: [B>=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of evalfstart(A,B,C,D,F): inf 
Asymptotic class: infinity 
* Total analysis performed in 650 ms.


-- stats
realtime 0:00.89
usertime 0.70
systime 0.01

