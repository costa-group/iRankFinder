WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalbinsearchStepSize2bb10in/19,evalbinsearchStepSize2bb12in/19,evalbinsearchStepSize2bb13in/19,evalbinsearchStepSize2bb1in/19,evalbinsearchStepSize2bb2in/19,evalbinsearchStepSize2bb3in/19,evalbinsearchStepSize2bb4in/19,evalbinsearchStepSize2bb6in/19,evalbinsearchStepSize2bb7in/19,evalbinsearchStepSize2bb9in/19,evalbinsearchStepSize2bbin/19]
1. non_recursive  : [evalbinsearchStepSize2stop/10]
2. non_recursive  : [evalbinsearchStepSize2returnin/10]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalbinsearchStepSize2bbin_loop_cont/11]
5. non_recursive  : [evalbinsearchStepSize2entryin/10]
6. non_recursive  : [evalbinsearchStepSize2start/10]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalbinsearchStepSize2bbin/19
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalbinsearchStepSize2bbin_loop_cont/11
5. SCC is partially evaluated into evalbinsearchStepSize2entryin/10
6. SCC is partially evaluated into evalbinsearchStepSize2start/10

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalbinsearchStepSize2bbin/19 
* CE 64 is refined into CE [67] 
* CE 8 is refined into CE [68] 
* CE 34 is refined into CE [69] 
* CE 4 is discarded (unfeasible) 
* CE 30 is discarded (unfeasible) 
* CE 10 is discarded (unfeasible) 
* CE 36 is discarded (unfeasible) 
* CE 6 is discarded (unfeasible) 
* CE 32 is discarded (unfeasible) 
* CE 57 is refined into CE [70] 
* CE 55 is discarded (unfeasible) 
* CE 58 is discarded (unfeasible) 
* CE 56 is discarded (unfeasible) 
* CE 63 is refined into CE [71] 
* CE 59 is discarded (unfeasible) 
* CE 60 is discarded (unfeasible) 
* CE 12 is discarded (unfeasible) 
* CE 38 is discarded (unfeasible) 
* CE 14 is discarded (unfeasible) 
* CE 40 is discarded (unfeasible) 
* CE 61 is refined into CE [72] 
* CE 62 is discarded (unfeasible) 
* CE 45 is discarded (unfeasible) 
* CE 19 is refined into CE [73] 
* CE 53 is discarded (unfeasible) 
* CE 27 is discarded (unfeasible) 
* CE 20 is refined into CE [74] 
* CE 28 is discarded (unfeasible) 
* CE 46 is refined into CE [75] 
* CE 54 is discarded (unfeasible) 
* CE 41 is refined into CE [76] 
* CE 48 is discarded (unfeasible) 
* CE 47 is discarded (unfeasible) 
* CE 15 is refined into CE [77] 
* CE 22 is discarded (unfeasible) 
* CE 21 is discarded (unfeasible) 
* CE 7 is refined into CE [78] 
* CE 3 is discarded (unfeasible) 
* CE 9 is discarded (unfeasible) 
* CE 5 is discarded (unfeasible) 
* CE 33 is refined into CE [79] 
* CE 29 is discarded (unfeasible) 
* CE 35 is discarded (unfeasible) 
* CE 31 is discarded (unfeasible) 
* CE 11 is discarded (unfeasible) 
* CE 13 is discarded (unfeasible) 
* CE 37 is discarded (unfeasible) 
* CE 39 is discarded (unfeasible) 
* CE 17 is refined into CE [80] 
* CE 25 is discarded (unfeasible) 
* CE 18 is refined into CE [81] 
* CE 26 is discarded (unfeasible) 
* CE 43 is discarded (unfeasible) 
* CE 51 is discarded (unfeasible) 
* CE 44 is refined into CE [82] 
* CE 52 is discarded (unfeasible) 
* CE 42 is refined into CE [83] 
* CE 50 is discarded (unfeasible) 
* CE 49 is discarded (unfeasible) 
* CE 16 is refined into CE [84] 
* CE 24 is discarded (unfeasible) 
* CE 23 is discarded (unfeasible) 


### Cost equations --> "Loop" of evalbinsearchStepSize2bbin/19 
* CEs [78] --> Loop 67 
* CEs [79] --> Loop 68 
* CEs [82] --> Loop 69 
* CEs [80] --> Loop 70 
* CEs [83] --> Loop 71 
* CEs [84] --> Loop 72 
* CEs [81] --> Loop 73 
* CEs [67] --> Loop 74 
* CEs [69] --> Loop 75 
* CEs [70] --> Loop 76 
* CEs [71] --> Loop 77 
* CEs [72] --> Loop 78 
* CEs [75] --> Loop 79 
* CEs [68] --> Loop 80 
* CEs [76] --> Loop 81 
* CEs [73] --> Loop 82 
* CEs [77] --> Loop 83 
* CEs [74] --> Loop 84 

### Ranking functions of CR evalbinsearchStepSize2bbin(A,B,C,D,E,F,G,H,I,K,L,M,N,O,P,Q,R,S,T) 
* RF of phase [69]: [D/4-3/4]
* RF of phase [70]: [-D/4+63]

#### Partial ranking functions of CR evalbinsearchStepSize2bbin(A,B,C,D,E,F,G,H,I,K,L,M,N,O,P,Q,R,S,T) 
* Partial RF of phase [69]:
  - RF of loop [69:1]:
    D/4-3/4
* Partial RF of phase [70]:
  - RF of loop [70:1]:
    -D/4+63


### Specialization of cost equations evalbinsearchStepSize2bbin_loop_cont/11 
* CE 66 is refined into CE [85] 
* CE 65 is refined into CE [86] 


### Cost equations --> "Loop" of evalbinsearchStepSize2bbin_loop_cont/11 
* CEs [85] --> Loop 85 
* CEs [86] --> Loop 86 

### Ranking functions of CR evalbinsearchStepSize2bbin_loop_cont(A,B,C,D,E,F,G,H,I,J,K) 

#### Partial ranking functions of CR evalbinsearchStepSize2bbin_loop_cont(A,B,C,D,E,F,G,H,I,J,K) 


### Specialization of cost equations evalbinsearchStepSize2entryin/10 
* CE 2 is refined into CE [87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112] 


### Cost equations --> "Loop" of evalbinsearchStepSize2entryin/10 
* CEs [87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112] --> Loop 87 

### Ranking functions of CR evalbinsearchStepSize2entryin(A,B,C,D,E,F,G,H,I,K) 

#### Partial ranking functions of CR evalbinsearchStepSize2entryin(A,B,C,D,E,F,G,H,I,K) 


### Specialization of cost equations evalbinsearchStepSize2start/10 
* CE 1 is refined into CE [113] 


### Cost equations --> "Loop" of evalbinsearchStepSize2start/10 
* CEs [113] --> Loop 88 

### Ranking functions of CR evalbinsearchStepSize2start(A,B,C,D,E,F,G,H,I,K) 

#### Partial ranking functions of CR evalbinsearchStepSize2start(A,B,C,D,E,F,G,H,I,K) 


Computing Bounds
=====================================

#### Cost of chains of evalbinsearchStepSize2bbin(A,B,C,D,E,F,G,H,I,K,L,M,N,O,P,Q,R,S,T):
* Chain [[69],83]: 6*it(69)+6
  Such that:it(69) =< D/4-O/4

  with precondition: [B=0,C=4,K=2,L=1,M=0,N=4,Q=4,S=1,G=R,1>=A,2>=T,A>=0,2*T>=3,P>=G+1,D>=O+4,O+T>=256] 

* Chain [[69],79]: 6*it(69)+6
  Such that:it(69) =< D/4-O/4

  with precondition: [B=0,C=4,K=2,L=1,M=0,N=4,Q=4,S=0,T=4,G=R,1>=A,3>=O,A>=0,O>=0,D>=O+4,G>=P+1] 

* Chain [[69],78]: 6*it(69)+4
  Such that:it(69) =< D/4-O/4

  with precondition: [B=0,C=4,K=2,L=1,M=0,N=4,Q=4,S=0,T=4,G=P,G=R,1>=A,A>=0,O>=0,D>=O+4] 

* Chain [[69],74]: 6*it(69)+0
  Such that:it(69) =< D/4

  with precondition: [B=0,C=4,K=3,1>=A,A>=0,D>=4] 

* Chain [[69],72,80]: 6*it(69)+12
  Such that:it(69) =< D/4

  with precondition: [B=0,C=4,K=2,L=2,M=1,N=2,O=255,Q=1,S=1,T=1,G=R,1>=A,A>=0,D>=257,P>=G+1] 

* Chain [[69],72,76]: 6*it(69)+11
  Such that:it(69) =< D/4-O/4+1/2

  with precondition: [B=0,C=4,K=2,L=2,M=1,N=2,S=1,T=2,G=P,G=R,1>=A,255>=O,1>=Q,A>=0,O>=2,2*Q>=1,D>=O+2] 

* Chain [[69],72,74]: 6*it(69)+6
  Such that:it(69) =< D/4

  with precondition: [B=0,C=4,K=3,1>=A,A>=0,D>=4] 

* Chain [[69],72,68,77]: 6*it(69)+14
  Such that:it(69) =< D/4-O/4+1/4

  with precondition: [B=0,C=4,K=2,L=1,M=1,N=1,Q=1,S=1,T=1,G=R,1>=A,254>=O,A>=0,O>=1,D>=O+3,G>=P+1] 

* Chain [[69],72,68,74]: 6*it(69)+13
  Such that:it(69) =< D/4

  with precondition: [B=0,C=4,K=3,1>=A,A>=0,D>=4] 

* Chain [[69],72,67,77]: 6*it(69)+13
  Such that:it(69) =< D/4-O/4+3/4

  with precondition: [B=0,C=4,K=2,L=2,M=1,N=1,Q=1,S=1,T=1,G=R,1>=A,255>=O,A>=0,O>=3,P>=G+1,D>=O+1] 

* Chain [[69],72,67,74]: 6*it(69)+12
  Such that:it(69) =< D/4

  with precondition: [B=0,C=4,K=3,1>=A,A>=0,D>=4] 

* Chain [84]: 5
  with precondition: [A=0,B=0,C=4,K=2,L=0,M=0,N=4,Q=4,S=0,T=4,D=O,G=R,D>=252,P>=G+1] 

* Chain [79]: 6
  with precondition: [B=0,C=4,K=2,M=0,N=4,Q=4,S=0,T=4,A=L,D=O,G=R,1>=A,3>=D,A>=0,G>=P+1] 

* Chain [78]: 4
  with precondition: [B=0,C=4,K=2,M=0,N=4,Q=4,O=D,S=H,T=I,A=L,G=P,G=R,2>=A,A>=0] 

* Chain [74]: 0
  with precondition: [K=3,2>=A,1>=B,4>=2*B+C,A>=B,2*C+7*B>=8] 

* Chain [73,[70],82]: 5*it(70)+10
  Such that:it(70) =< -D/4+62

  with precondition: [A=0,B=0,C=4,K=2,L=2,M=0,N=4,Q=4,S=0,T=4,G=R,255>=O,O>=252,O>=D+8,P>=G+1] 

* Chain [73,[70],81]: 5*it(70)+12
  Such that:it(70) =< -D/4+O/4

  with precondition: [A=0,B=0,C=4,K=2,L=2,M=0,N=4,Q=4,S=1,G=R,2>=T,2*T>=3,O>=D+8,T>=O+1,G>=P+1] 

* Chain [73,[70],78]: 5*it(70)+9
  Such that:it(70) =< -D/4+62

  with precondition: [A=0,B=0,C=4,K=2,L=2,M=0,N=4,Q=4,S=0,T=4,G=P,G=R,255>=O,O>=D+8] 

* Chain [73,[70],74]: 5*it(70)+5
  Such that:it(70) =< -D/4+62

  with precondition: [A=0,B=0,C=4,K=3,247>=D] 

* Chain [73,[70],71,76]: 5*it(70)+17
  Such that:it(70) =< -D/4+62

  with precondition: [A=0,B=0,C=4,K=2,L=1,M=1,N=2,S=1,T=2,G=P,G=R,253>=O,1>=Q,O>=0,2*Q>=1,O>=D+6] 

* Chain [73,[70],71,75]: 5*it(70)+19
  Such that:it(70) =< -D/4

  with precondition: [A=0,B=0,C=4,K=2,L=1,M=1,N=2,O=0,Q=1,S=1,T=1,G=R,0>=D+6,G>=P+1] 

* Chain [73,[70],71,74]: 5*it(70)+12
  Such that:it(70) =< -D/4+62

  with precondition: [A=0,B=0,C=4,K=3,247>=D] 

* Chain [73,[70],71,68,77]: 5*it(70)+20
  Such that:it(70) =< -D/4+62

  with precondition: [A=0,B=0,C=4,K=2,L=1,M=1,N=1,Q=1,S=1,T=1,G=R,252>=O,O>=0,O>=D+5,G>=P+1] 

* Chain [73,[70],71,68,74]: 5*it(70)+19
  Such that:it(70) =< -D/4+62

  with precondition: [A=0,B=0,C=4,K=3,247>=D] 

* Chain [73,[70],71,67,77]: 5*it(70)+19
  Such that:it(70) =< -D/4+62

  with precondition: [A=0,B=0,C=4,K=2,L=2,M=1,N=1,Q=1,S=1,T=1,G=R,254>=O,O>=1,O>=D+7,P>=G+1] 

* Chain [73,[70],71,67,74]: 5*it(70)+18
  Such that:it(70) =< -D/4+62

  with precondition: [A=0,B=0,C=4,K=3,247>=D] 

* Chain [73,82]: 10
  with precondition: [A=0,B=0,C=4,K=2,L=2,M=0,N=4,Q=4,S=0,T=4,O=D+4,G=R,255>=O,O>=252,P>=G+1] 

* Chain [73,81]: 12
  with precondition: [A=0,B=0,C=4,K=2,L=2,M=0,N=4,Q=4,S=1,O=D+4,G=R,2>=T,2*T>=3,T>=O+1,G>=P+1] 

* Chain [73,78]: 9
  with precondition: [A=0,B=0,C=4,K=2,L=2,M=0,N=4,Q=4,S=0,T=4,D+4=O,G=P,G=R,251>=D] 

* Chain [73,74]: 5
  with precondition: [A=0,B=0,C=4,K=3,251>=D] 

* Chain [73,71,76]: 17
  with precondition: [A=0,B=0,C=4,K=2,L=1,M=1,N=2,S=1,T=2,O=D+2,G=P,G=R,253>=O,1>=Q,O>=0,2*Q>=1] 

* Chain [73,71,75]: 19
  with precondition: [A=0,B=0,C=4,D+2=0,K=2,L=1,M=1,N=2,O=0,Q=1,S=1,T=1,G=R,G>=P+1] 

* Chain [73,71,74]: 12
  with precondition: [A=0,B=0,C=4,K=3,251>=D,2*D+5>=0] 

* Chain [73,71,68,77]: 20
  with precondition: [A=0,B=0,C=4,K=2,L=1,M=1,N=1,Q=1,S=1,T=1,O=D+1,G=R,252>=O,O>=0,G>=P+1] 

* Chain [73,71,68,74]: 19
  with precondition: [A=0,B=0,C=4,K=3,251>=D,2*D+3>=0] 

* Chain [73,71,67,77]: 19
  with precondition: [A=0,B=0,C=4,K=2,L=2,M=1,N=1,Q=1,S=1,T=1,O=D+3,G=R,254>=O,O>=1,P>=G+1] 

* Chain [73,71,67,74]: 18
  with precondition: [A=0,B=0,C=4,K=3,251>=D,D+2>=0] 


#### Cost of chains of evalbinsearchStepSize2bbin_loop_cont(A,B,C,D,E,F,G,H,I,J,K):
* Chain [86]: 1
  with precondition: [A=2] 

* Chain [85]: 0
  with precondition: [A=3] 


#### Cost of chains of evalbinsearchStepSize2entryin(A,B,C,D,E,F,G,H,I,K):
* Chain [87]: 45*s(9)+5*s(10)+5*s(14)+66*s(18)+22
  Such that:s(10) =< -A/4
s(14) =< -A/4+1/4
aux(3) =< -A/4+62
aux(4) =< A/4
s(9) =< aux(3)
s(18) =< aux(4)

  with precondition: [] 


#### Cost of chains of evalbinsearchStepSize2start(A,B,C,D,E,F,G,H,I,K):
* Chain [88]: 5*s(27)+5*s(28)+45*s(31)+66*s(32)+23
  Such that:s(27) =< -A/4
s(29) =< -A/4+62
s(28) =< -A/4+1/4
s(30) =< A/4
s(31) =< s(29)
s(32) =< s(30)

  with precondition: [] 


Closed-form bounds of evalbinsearchStepSize2start(A,B,C,D,E,F,G,H,I,K): 
-------------------------------------
* Chain [88] with precondition: [] 
    - Upper bound: nat(-A/4+62)*45+23+nat(-A/4+1/4)*5+nat(A/4)*66+nat(-A/4)*5 
    - Complexity: n 

### Maximum cost of evalbinsearchStepSize2start(A,B,C,D,E,F,G,H,I,K): nat(-A/4+62)*45+23+nat(-A/4+1/4)*5+nat(A/4)*66+nat(-A/4)*5 
Asymptotic class: n 
* Total analysis performed in 6553 ms.


-- stats
realtime 0:07.52
usertime 6.76
systime 0.06

