WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalgcdbb4in/5,evalgcdbb5in/5,evalgcdbb6in/5,evalgcdbb7in/5]
1. non_recursive  : [evalgcdstop/3]
2. non_recursive  : [evalgcdreturnin/3]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalgcdbb7in_loop_cont/4]
5. non_recursive  : [evalgcdentryin/3]
6. non_recursive  : [evalgcdstart/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalgcdbb7in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalgcdbb7in_loop_cont/4
5. SCC is partially evaluated into evalgcdentryin/3
6. SCC is partially evaluated into evalgcdstart/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalgcdbb7in/5 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 5 is refined into CE [13] 
* CE 6 is refined into CE [14] 


### Cost equations --> "Loop" of evalgcdbb7in/5 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [11] --> Loop 13 
* CEs [12] --> Loop 14 

### Ranking functions of CR evalgcdbb7in(A,B,C,D,E) 
* RF of phase [11,12]: [A+B-2]

#### Partial ranking functions of CR evalgcdbb7in(A,B,C,D,E) 
* Partial RF of phase [11,12]:
  - RF of loop [11:1]:
    A-1
    A-B depends on loops [12:1] 
  - RF of loop [12:1]:
    -A+B depends on loops [11:1] 
    B-1


### Specialization of cost equations evalgcdbb7in_loop_cont/4 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


### Cost equations --> "Loop" of evalgcdbb7in_loop_cont/4 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR evalgcdbb7in_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR evalgcdbb7in_loop_cont(A,B,C,D) 


### Specialization of cost equations evalgcdentryin/3 
* CE 4 is refined into CE [17,18,19] 
* CE 3 is refined into CE [20] 
* CE 2 is refined into CE [21] 


### Cost equations --> "Loop" of evalgcdentryin/3 
* CEs [20] --> Loop 17 
* CEs [21] --> Loop 18 
* CEs [17,18,19] --> Loop 19 

### Ranking functions of CR evalgcdentryin(A,B,C) 

#### Partial ranking functions of CR evalgcdentryin(A,B,C) 


### Specialization of cost equations evalgcdstart/3 
* CE 1 is refined into CE [22,23,24] 


### Cost equations --> "Loop" of evalgcdstart/3 
* CEs [24] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [22] --> Loop 22 

### Ranking functions of CR evalgcdstart(A,B,C) 

#### Partial ranking functions of CR evalgcdstart(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of evalgcdbb7in(A,B,C,D,E):
* Chain [[11,12],14]: 3*it(11)+3*it(12)+1
  Such that:aux(4) =< -A+B
aux(5) =< A
aux(2) =< A-B
aux(6) =< A+B
aux(7) =< A+B-2*D
aux(8) =< A-D
aux(9) =< B
aux(10) =< B-D
aux(3) =< aux(5)
it(11) =< aux(5)
it(11) =< aux(6)
it(12) =< aux(6)
it(11) =< aux(7)
it(12) =< aux(7)
aux(3) =< aux(8)
it(11) =< aux(8)
aux(1) =< aux(9)
it(12) =< aux(9)
aux(1) =< aux(10)
it(12) =< aux(10)
it(12) =< aux(3)+aux(4)
it(11) =< aux(1)+aux(2)

  with precondition: [C=2,D=E,D>=1,A>=D,B>=D,A+B>=3*D] 

* Chain [[11,12],13]: 3*it(11)+3*it(12)+0
  Such that:aux(4) =< -A+B
aux(2) =< A-B
aux(11) =< A
aux(12) =< A+B
aux(13) =< B
it(11) =< aux(11)
it(11) =< aux(12)
it(12) =< aux(12)
it(12) =< aux(13)
it(12) =< aux(11)+aux(4)
it(11) =< aux(13)+aux(2)

  with precondition: [C=3,A>=1,B>=1,A+B>=3] 

* Chain [14]: 1
  with precondition: [C=2,B=A,B=D,B=E,B>=1] 

* Chain [13]: 0
  with precondition: [C=3,A>=1,B>=1] 


#### Cost of chains of evalgcdbb7in_loop_cont(A,B,C,D):
* Chain [16]: 1
  with precondition: [A=2] 

* Chain [15]: 0
  with precondition: [A=3] 


#### Cost of chains of evalgcdentryin(A,B,C):
* Chain [19]: 6*s(17)+6*s(18)+3
  Such that:aux(17) =< -A+B
aux(18) =< A
aux(19) =< A-B
aux(20) =< A+B
aux(21) =< B
s(17) =< aux(21)
s(17) =< aux(20)
s(18) =< aux(20)
s(18) =< aux(18)
s(18) =< aux(21)+aux(19)
s(17) =< aux(18)+aux(17)

  with precondition: [A>=1,B>=1] 

* Chain [18]: 2
  with precondition: [0>=A] 

* Chain [17]: 2
  with precondition: [0>=B] 


#### Cost of chains of evalgcdstart(A,B,C):
* Chain [22]: 3
  with precondition: [0>=A] 

* Chain [21]: 3
  with precondition: [0>=B] 

* Chain [20]: 6*s(32)+6*s(33)+4
  Such that:s(27) =< -A+B
s(28) =< A
s(29) =< A-B
s(30) =< A+B
s(31) =< B
s(32) =< s(31)
s(32) =< s(30)
s(33) =< s(30)
s(33) =< s(28)
s(33) =< s(31)+s(29)
s(32) =< s(28)+s(27)

  with precondition: [A>=1,B>=1] 


Closed-form bounds of evalgcdstart(A,B,C): 
-------------------------------------
* Chain [22] with precondition: [0>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [21] with precondition: [0>=B] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [20] with precondition: [A>=1,B>=1] 
    - Upper bound: 6*A+12*B+4 
    - Complexity: n 

### Maximum cost of evalgcdstart(A,B,C): nat(B)*6+1+nat(A+B)*6+3 
Asymptotic class: n 
* Total analysis performed in 218 ms.


-- stats
realtime 0:00.28
usertime 0.26
systime 0.01

