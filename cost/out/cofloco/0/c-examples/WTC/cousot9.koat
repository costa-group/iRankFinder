MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalcousot9bb1in/7,evalcousot9bb2in/7,evalcousot9bb3in/7,evalcousot9bbin/7]
1. non_recursive  : [evalcousot9stop/4]
2. non_recursive  : [evalcousot9returnin/4]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalcousot9bb3in_loop_cont/5]
5. non_recursive  : [evalcousot9entryin/4]
6. non_recursive  : [evalcousot9start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalcousot9bb3in/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalcousot9bb3in_loop_cont/5
5. SCC is partially evaluated into evalcousot9entryin/4
6. SCC is partially evaluated into evalcousot9start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalcousot9bb3in/7 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12] 


### Cost equations --> "Loop" of evalcousot9bb3in/7 
* CEs [11] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [9] --> Loop 11 
* CEs [10] --> Loop 12 

### Ranking functions of CR evalcousot9bb3in(A,B,C,E,F,G,H) 

#### Partial ranking functions of CR evalcousot9bb3in(A,B,C,E,F,G,H) 
* Partial RF of phase [9,10]:
  - RF of loop [9:1]:
    -A+1 depends on loops [10:1] 
    B
  - RF of loop [10:1]:
    A depends on loops [9:1] 


### Specialization of cost equations evalcousot9bb3in_loop_cont/5 
* CE 8 is refined into CE [13] 
* CE 7 is refined into CE [14] 


### Cost equations --> "Loop" of evalcousot9bb3in_loop_cont/5 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

### Ranking functions of CR evalcousot9bb3in_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR evalcousot9bb3in_loop_cont(A,B,C,D,E) 


### Specialization of cost equations evalcousot9entryin/4 
* CE 2 is refined into CE [15,16,17] 


### Cost equations --> "Loop" of evalcousot9entryin/4 
* CEs [15,16,17] --> Loop 15 

### Ranking functions of CR evalcousot9entryin(A,B,C,E) 

#### Partial ranking functions of CR evalcousot9entryin(A,B,C,E) 


### Specialization of cost equations evalcousot9start/4 
* CE 1 is refined into CE [18] 


### Cost equations --> "Loop" of evalcousot9start/4 
* CEs [18] --> Loop 16 

### Ranking functions of CR evalcousot9start(A,B,C,E) 

#### Partial ranking functions of CR evalcousot9start(A,B,C,E) 


Computing Bounds
=====================================

#### Cost of chains of evalcousot9bb3in(A,B,C,E,F,G,H):
* Chain [[9,10],12]: 3*it(9)+3*it(10)+1
  Such that:aux(4) =< A
it(9) =< B
aux(7) =< H
aux(3) =< it(9)*aux(7)
it(10) =< aux(3)+aux(4)

  with precondition: [E=2,G=0,C=F,C=H,B>=1,C>=B] 

* Chain [[9,10],11]: 3*it(9)+3*it(10)+0
  Such that:aux(4) =< A
it(9) =< B
aux(7) =< C
aux(3) =< it(9)*aux(7)
it(10) =< aux(3)+aux(4)

  with precondition: [E=3,B>=1,C>=B] 

* Chain [12]: 1
  with precondition: [E=2,F=A,B=G,C=H,0>=B,C>=B] 

* Chain [11]: 0
  with precondition: [E=3,C>=B] 


#### Cost of chains of evalcousot9bb3in_loop_cont(A,B,C,D,E):
* Chain [14]: 1
  with precondition: [A=2] 

* Chain [13]: 0
  with precondition: [A=3] 


#### Cost of chains of evalcousot9entryin(A,B,C,E):
* Chain [15]: 6*s(7)+6*s(10)+3
  Such that:aux(10) =< C
s(7) =< aux(10)

  with precondition: [] 


#### Cost of chains of evalcousot9start(A,B,C,E):
* Chain [16]: 6*s(17)+6*s(18)+4
  Such that:s(16) =< C
s(17) =< s(16)

  with precondition: [] 


Closed-form bounds of evalcousot9start(A,B,C,E): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of evalcousot9start(A,B,C,E): inf 
Asymptotic class: infinity 
* Total analysis performed in 162 ms.


-- stats
realtime 0:00.21
usertime 0.20
systime 0.00

