WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalloopsbb3in/5,evalloopsbb4in/5]
1. recursive  : [evalloopsbb1in/5,evalloopsbb4in_loop_cont/6,evalloopsbb5in/5,evalloopsbb6in/5]
2. non_recursive  : [evalloopsstop/3]
3. non_recursive  : [evalloopsreturnin/3]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [evalloopsbb6in_loop_cont/4]
6. non_recursive  : [evalloopsentryin/3]
7. non_recursive  : [evalloopsstart/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalloopsbb4in/5
1. SCC is partially evaluated into evalloopsbb6in/5
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into evalloopsbb6in_loop_cont/4
6. SCC is partially evaluated into evalloopsentryin/3
7. SCC is partially evaluated into evalloopsstart/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalloopsbb4in/5 
* CE 13 is refined into CE [14] 
* CE 12 is refined into CE [15] 
* CE 11 is refined into CE [16] 


### Cost equations --> "Loop" of evalloopsbb4in/5 
* CEs [16] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

### Ranking functions of CR evalloopsbb4in(A,B,D,E,F) 
* RF of phase [13]: [2*A-2*B-1]

#### Partial ranking functions of CR evalloopsbb4in(A,B,D,E,F) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    2*A-2*B-1


### Specialization of cost equations evalloopsbb6in/5 
* CE 7 is refined into CE [17] 
* CE 6 is refined into CE [18] 
* CE 8 is refined into CE [19] 
* CE 5 is refined into CE [20] 
* CE 4 is refined into CE [21] 


### Cost equations --> "Loop" of evalloopsbb6in/5 
* CEs [20] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [18,19] --> Loop 19 

### Ranking functions of CR evalloopsbb6in(A,B,D,E,F) 
* RF of phase [16]: [A-1]
* RF of phase [17]: [A+1]

#### Partial ranking functions of CR evalloopsbb6in(A,B,D,E,F) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    A-1
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    A+1


### Specialization of cost equations evalloopsbb6in_loop_cont/4 
* CE 9 is refined into CE [22] 
* CE 10 is refined into CE [23] 


### Cost equations --> "Loop" of evalloopsbb6in_loop_cont/4 
* CEs [22] --> Loop 20 
* CEs [23] --> Loop 21 

### Ranking functions of CR evalloopsbb6in_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR evalloopsbb6in_loop_cont(A,B,C,D) 


### Specialization of cost equations evalloopsentryin/3 
* CE 2 is refined into CE [24,25,26] 
* CE 3 is refined into CE [27] 


### Cost equations --> "Loop" of evalloopsentryin/3 
* CEs [27] --> Loop 22 
* CEs [24,25,26] --> Loop 23 

### Ranking functions of CR evalloopsentryin(A,B,D) 

#### Partial ranking functions of CR evalloopsentryin(A,B,D) 


### Specialization of cost equations evalloopsstart/3 
* CE 1 is refined into CE [28,29] 


### Cost equations --> "Loop" of evalloopsstart/3 
* CEs [29] --> Loop 24 
* CEs [28] --> Loop 25 

### Ranking functions of CR evalloopsstart(A,B,D) 

#### Partial ranking functions of CR evalloopsstart(A,B,D) 


Computing Bounds
=====================================

#### Cost of chains of evalloopsbb4in(A,B,D,E,F):
* Chain [[13],15]: 2*it(13)+1
  Such that:it(13) =< -2*B+2*E

  with precondition: [D=2,A=E,B>=1,F>=2*B,F>=A,2*A>=F+2] 

* Chain [[13],14]: 2*it(13)+0
  Such that:it(13) =< 2*A-2*B

  with precondition: [D=3,B>=1,A>=B+1] 

* Chain [14]: 0
  with precondition: [D=3,A>=2,B>=1] 


#### Cost of chains of evalloopsbb6in(A,B,D,E,F):
* Chain [[17],19]: 3*it(17)+2*s(2)+2
  Such that:it(17) =< A+1
s(2) =< 2*A

  with precondition: [D=3,1>=A,A>=0] 

* Chain [[17],18]: 3*it(17)+1
  Such that:it(17) =< A+1

  with precondition: [D=4,E+1=0,1>=A,A>=0] 

* Chain [[16],[17],19]: 4*it(16)+5*it(17)+2*s(5)+2
  Such that:it(16) =< A
aux(1) =< 2*A
aux(2) =< 2
it(17) =< aux(2)
s(5) =< it(16)*aux(1)

  with precondition: [D=3,A>=2] 

* Chain [[16],[17],18]: 4*it(16)+3*it(17)+2*s(5)+1
  Such that:it(17) =< 2
it(16) =< A
aux(1) =< 2*A
s(5) =< it(16)*aux(1)

  with precondition: [D=4,E+1=0,A>=2] 

* Chain [[16],19]: 6*it(16)+2*s(5)+2
  Such that:aux(3) =< 2*A
it(16) =< aux(3)
s(5) =< it(16)*aux(3)

  with precondition: [D=3,A>=2] 

* Chain [19]: 2*s(2)+2
  Such that:s(2) =< 2*A

  with precondition: [D=3,A+1>=0] 


#### Cost of chains of evalloopsbb6in_loop_cont(A,B,C,D):
* Chain [21]: 0
  with precondition: [A=3] 

* Chain [20]: 1
  with precondition: [A=4] 


#### Cost of chains of evalloopsentryin(A,B,D):
* Chain [23]: 8*s(18)+6*s(19)+10*s(21)+8*s(22)+4*s(23)+2*s(24)+3
  Such that:aux(5) =< 2
aux(6) =< A
aux(7) =< A+1
aux(8) =< 2*A
s(22) =< aux(5)
s(18) =< aux(6)
s(19) =< aux(7)
s(21) =< aux(8)
s(23) =< s(18)*aux(8)
s(24) =< s(21)*aux(8)

  with precondition: [A>=0] 

* Chain [22]: 2
  with precondition: [0>=A+1] 


#### Cost of chains of evalloopsstart(A,B,D):
* Chain [25]: 3
  with precondition: [0>=A+1] 

* Chain [24]: 8*s(34)+8*s(35)+6*s(36)+10*s(37)+4*s(38)+2*s(39)+4
  Such that:s(30) =< 2
s(31) =< A
s(32) =< A+1
s(33) =< 2*A
s(34) =< s(30)
s(35) =< s(31)
s(36) =< s(32)
s(37) =< s(33)
s(38) =< s(35)*s(33)
s(39) =< s(37)*s(33)

  with precondition: [A>=0] 


Closed-form bounds of evalloopsstart(A,B,D): 
-------------------------------------
* Chain [25] with precondition: [0>=A+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [24] with precondition: [A>=0] 
    - Upper bound: 28*A+20+8*A*A+4*A* (2*A)+ (6*A+6) 
    - Complexity: n^2 

### Maximum cost of evalloopsstart(A,B,D): nat(A)*8+17+nat(2*A)*10+nat(2*A)*4*nat(A)+nat(2*A)*2*nat(2*A)+nat(A+1)*6+3 
Asymptotic class: n^2 
* Total analysis performed in 214 ms.


-- stats
realtime 0:00.33
usertime 0.25
systime 0.01

