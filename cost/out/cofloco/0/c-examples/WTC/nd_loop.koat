WORST_CASE(?,O(1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalndloopbbin/3]
1. non_recursive  : [evalndloopstop/2]
2. non_recursive  : [evalndloopreturnin/2]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalndloopbbin_loop_cont/3]
5. non_recursive  : [evalndloopentryin/2]
6. non_recursive  : [evalndloopstart/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalndloopbbin/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalndloopbbin_loop_cont/3
5. SCC is partially evaluated into evalndloopentryin/2
6. SCC is partially evaluated into evalndloopstart/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalndloopbbin/3 
* CE 5 is refined into CE [8] 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10] 


### Cost equations --> "Loop" of evalndloopbbin/3 
* CEs [10] --> Loop 8 
* CEs [8] --> Loop 9 
* CEs [9] --> Loop 10 

### Ranking functions of CR evalndloopbbin(A,C,D) 
* RF of phase [8]: [-A+9]

#### Partial ranking functions of CR evalndloopbbin(A,C,D) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    -A+9


### Specialization of cost equations evalndloopbbin_loop_cont/3 
* CE 7 is refined into CE [11] 
* CE 6 is refined into CE [12] 


### Cost equations --> "Loop" of evalndloopbbin_loop_cont/3 
* CEs [11] --> Loop 11 
* CEs [12] --> Loop 12 

### Ranking functions of CR evalndloopbbin_loop_cont(A,B,C) 

#### Partial ranking functions of CR evalndloopbbin_loop_cont(A,B,C) 


### Specialization of cost equations evalndloopentryin/2 
* CE 2 is refined into CE [13,14,15] 


### Cost equations --> "Loop" of evalndloopentryin/2 
* CEs [13,14,15] --> Loop 13 

### Ranking functions of CR evalndloopentryin(A,C) 

#### Partial ranking functions of CR evalndloopentryin(A,C) 


### Specialization of cost equations evalndloopstart/2 
* CE 1 is refined into CE [16] 


### Cost equations --> "Loop" of evalndloopstart/2 
* CEs [16] --> Loop 14 

### Ranking functions of CR evalndloopstart(A,C) 

#### Partial ranking functions of CR evalndloopstart(A,C) 


Computing Bounds
=====================================

#### Cost of chains of evalndloopbbin(A,C,D):
* Chain [[8],10]: 1*it(8)+1
  Such that:it(8) =< -A+D

  with precondition: [C=2,9>=D,A>=0,D>=A+1] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< -A+9

  with precondition: [C=3,8>=A,A>=0] 

* Chain [10]: 1
  with precondition: [C=2,A=D,A>=0] 

* Chain [9]: 0
  with precondition: [C=3,A>=0] 


#### Cost of chains of evalndloopbbin_loop_cont(A,B,C):
* Chain [12]: 1
  with precondition: [A=2] 

* Chain [11]: 0
  with precondition: [A=3] 


#### Cost of chains of evalndloopentryin(A,C):
* Chain [13]: 21
  with precondition: [] 


#### Cost of chains of evalndloopstart(A,C):
* Chain [14]: 22
  with precondition: [] 


Closed-form bounds of evalndloopstart(A,C): 
-------------------------------------
* Chain [14] with precondition: [] 
    - Upper bound: 22 
    - Complexity: constant 

### Maximum cost of evalndloopstart(A,C): 22 
Asymptotic class: constant 
* Total analysis performed in 68 ms.


-- stats
realtime 0:00.12
usertime 0.10
systime 0.01

