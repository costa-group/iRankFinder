WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalrealheapsortstep1bb2in/7,evalrealheapsortstep1bb3in/7,evalrealheapsortstep1bb4in/7]
1. recursive  : [evalrealheapsortstep1bb3in_loop_cont/8,evalrealheapsortstep1bb5in/7,evalrealheapsortstep1bb6in/7]
2. non_recursive  : [evalrealheapsortstep1stop/4]
3. non_recursive  : [evalrealheapsortstep1returnin/4]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [evalrealheapsortstep1bb6in_loop_cont/5]
6. non_recursive  : [evalrealheapsortstep1entryin/4]
7. non_recursive  : [evalrealheapsortstep1start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalrealheapsortstep1bb3in/7
1. SCC is partially evaluated into evalrealheapsortstep1bb6in/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into evalrealheapsortstep1bb6in_loop_cont/5
6. SCC is partially evaluated into evalrealheapsortstep1entryin/4
7. SCC is partially evaluated into evalrealheapsortstep1start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalrealheapsortstep1bb3in/7 
* CE 13 is refined into CE [14] 
* CE 10 is refined into CE [15] 
* CE 12 is refined into CE [16] 
* CE 11 is refined into CE [17] 


### Cost equations --> "Loop" of evalrealheapsortstep1bb3in/7 
* CEs [17] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR evalrealheapsortstep1bb3in(A,B,C,G,H,I,J) 
* RF of phase [13]: [C]

#### Partial ranking functions of CR evalrealheapsortstep1bb3in(A,B,C,G,H,I,J) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    C


### Specialization of cost equations evalrealheapsortstep1bb6in/7 
* CE 6 is refined into CE [18] 
* CE 4 is refined into CE [19] 
* CE 7 is refined into CE [20] 
* CE 5 is refined into CE [21,22,23,24] 


### Cost equations --> "Loop" of evalrealheapsortstep1bb6in/7 
* CEs [24] --> Loop 17 
* CEs [23] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [18] --> Loop 21 
* CEs [19,20] --> Loop 22 

### Ranking functions of CR evalrealheapsortstep1bb6in(A,B,C,G,H,I,J) 
* RF of phase [17,18,19]: [A-B]

#### Partial ranking functions of CR evalrealheapsortstep1bb6in(A,B,C,G,H,I,J) 
* Partial RF of phase [17,18,19]:
  - RF of loop [17:1,18:1,19:1]:
    A-B


### Specialization of cost equations evalrealheapsortstep1bb6in_loop_cont/5 
* CE 8 is refined into CE [25] 
* CE 9 is refined into CE [26] 


### Cost equations --> "Loop" of evalrealheapsortstep1bb6in_loop_cont/5 
* CEs [25] --> Loop 23 
* CEs [26] --> Loop 24 

### Ranking functions of CR evalrealheapsortstep1bb6in_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR evalrealheapsortstep1bb6in_loop_cont(A,B,C,D,E) 


### Specialization of cost equations evalrealheapsortstep1entryin/4 
* CE 2 is refined into CE [27,28] 
* CE 3 is refined into CE [29] 


### Cost equations --> "Loop" of evalrealheapsortstep1entryin/4 
* CEs [27,28] --> Loop 25 
* CEs [29] --> Loop 26 

### Ranking functions of CR evalrealheapsortstep1entryin(A,B,C,G) 

#### Partial ranking functions of CR evalrealheapsortstep1entryin(A,B,C,G) 


### Specialization of cost equations evalrealheapsortstep1start/4 
* CE 1 is refined into CE [30,31] 


### Cost equations --> "Loop" of evalrealheapsortstep1start/4 
* CEs [31] --> Loop 27 
* CEs [30] --> Loop 28 

### Ranking functions of CR evalrealheapsortstep1start(A,B,C,G) 

#### Partial ranking functions of CR evalrealheapsortstep1start(A,B,C,G) 


Computing Bounds
=====================================

#### Cost of chains of evalrealheapsortstep1bb3in(A,B,C,G,H,I,J):
* Chain [[13],16]: 3*it(13)+1
  Such that:it(13) =< C

  with precondition: [G=2,A=H,B=I,0>=J,C>=1,2*J+1>=0,A>=B+1,B>=C] 

* Chain [[13],15]: 3*it(13)+2
  Such that:it(13) =< C-J

  with precondition: [G=2,A=H,B=I,J>=1,C>=2*J+1,A>=B+1,B>=C] 

* Chain [[13],14]: 3*it(13)+0
  Such that:it(13) =< C

  with precondition: [G=3,C>=1,A>=B+1,B>=C] 

* Chain [16]: 1
  with precondition: [G=2,A=H,B=I,C=J,0>=C,A>=B+1,B>=C] 

* Chain [15]: 2
  with precondition: [G=2,A=H,B=I,C=J,C>=1,A>=B+1,B>=C] 

* Chain [14]: 0
  with precondition: [G=3,A>=B+1,B>=C] 


#### Cost of chains of evalrealheapsortstep1bb6in(A,B,C,G,H,I,J):
* Chain [[17,18,19],22]: 11*it(17)+3*s(2)+3*s(7)+3*s(8)+1
  Such that:aux(5) =< A
aux(6) =< A-B
s(2) =< aux(5)
it(17) =< aux(6)
aux(2) =< aux(5)+1
s(7) =< it(17)*aux(5)
s(8) =< it(17)*aux(2)

  with precondition: [G=3,A>=3,B>=1,A>=B+1] 

* Chain [[17,18,19],21]: 11*it(17)+3*s(7)+3*s(8)+1
  Such that:aux(1) =< I
aux(7) =< -B+I
it(17) =< aux(7)
aux(2) =< aux(1)+1
s(7) =< it(17)*aux(1)
s(8) =< it(17)*aux(2)

  with precondition: [G=4,A=H,A=I,A>=3,B>=1,2*J+1>=0,A>=B+1,A>=J+1] 

* Chain [22]: 3*s(2)+1
  Such that:s(2) =< B

  with precondition: [G=3,A>=3,B>=1] 


#### Cost of chains of evalrealheapsortstep1bb6in_loop_cont(A,B,C,D,E):
* Chain [24]: 0
  with precondition: [A=3] 

* Chain [23]: 1
  with precondition: [A=4] 


#### Cost of chains of evalrealheapsortstep1entryin(A,B,C,G):
* Chain [26]: 2
  with precondition: [2>=A] 

* Chain [25]: 3*s(19)+25*s(20)+6*s(23)+6*s(24)+3
  Such that:s(19) =< 1
aux(10) =< A
s(20) =< aux(10)
s(22) =< aux(10)+1
s(23) =< s(20)*aux(10)
s(24) =< s(20)*s(22)

  with precondition: [A>=3] 


#### Cost of chains of evalrealheapsortstep1start(A,B,C,G):
* Chain [28]: 3
  with precondition: [2>=A] 

* Chain [27]: 3*s(31)+25*s(33)+6*s(35)+6*s(36)+4
  Such that:s(31) =< 1
s(32) =< A
s(33) =< s(32)
s(34) =< s(32)+1
s(35) =< s(33)*s(32)
s(36) =< s(33)*s(34)

  with precondition: [A>=3] 


Closed-form bounds of evalrealheapsortstep1start(A,B,C,G): 
-------------------------------------
* Chain [28] with precondition: [2>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [27] with precondition: [A>=3] 
    - Upper bound: 31*A+7+12*A*A 
    - Complexity: n^2 

### Maximum cost of evalrealheapsortstep1start(A,B,C,G): nat(A)*31+4+nat(A)*12*nat(A)+3 
Asymptotic class: n^2 
* Total analysis performed in 379 ms.


-- stats
realtime 0:00.49
usertime 0.43
systime 0.00

