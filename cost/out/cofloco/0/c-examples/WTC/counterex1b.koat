MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalfbb1in/13,evalfbb2in/13,evalfbb3in/13]
1. recursive  : [evalfbb5in/13,evalfbb6in/13,evalfbb7in/13]
2. recursive  : [evalfbb2in_loop_cont/14,evalfbb4in/13,evalfbb6in_loop_cont/14,evalfbb8in/13]
3. non_recursive  : [evalfstop/7]
4. non_recursive  : [evalfreturnin/7]
5. non_recursive  : [exit_location/1]
6. non_recursive  : [evalfbb8in_loop_cont/8]
7. non_recursive  : [evalfentryin/7]
8. non_recursive  : [evalfstart/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalfbb2in/13
1. SCC is partially evaluated into evalfbb6in/13
2. SCC is partially evaluated into evalfbb8in/13
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into evalfbb8in_loop_cont/8
7. SCC is partially evaluated into evalfentryin/7
8. SCC is partially evaluated into evalfstart/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalfbb2in/13 
* CE 13 is refined into CE [18] 
* CE 10 is refined into CE [19] 
* CE 12 is refined into CE [20] 
* CE 11 is refined into CE [21] 


### Cost equations --> "Loop" of evalfbb2in/13 
* CEs [21] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [19] --> Loop 18 
* CEs [20] --> Loop 19 

### Ranking functions of CR evalfbb2in(A,B,C,D,E,F,H,I,J,K,L,M,N) 
* RF of phase [16]: [C+1]

#### Partial ranking functions of CR evalfbb2in(A,B,C,D,E,F,H,I,J,K,L,M,N) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    C+1


### Specialization of cost equations evalfbb6in/13 
* CE 16 is refined into CE [22] 
* CE 14 is refined into CE [23] 
* CE 17 is refined into CE [24] 
* CE 15 is refined into CE [25] 


### Cost equations --> "Loop" of evalfbb6in/13 
* CEs [25] --> Loop 20 
* CEs [22] --> Loop 21 
* CEs [23] --> Loop 22 
* CEs [24] --> Loop 23 

### Ranking functions of CR evalfbb6in(A,B,C,D,E,F,H,I,J,K,L,M,N) 
* RF of phase [20]: [-E+F+1]

#### Partial ranking functions of CR evalfbb6in(A,B,C,D,E,F,H,I,J,K,L,M,N) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    -E+F+1


### Specialization of cost equations evalfbb8in/13 
* CE 6 is refined into CE [26] 
* CE 3 is refined into CE [27] 
* CE 5 is refined into CE [28,29,30,31] 
* CE 7 is refined into CE [32] 
* CE 4 is refined into CE [33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48] 


### Cost equations --> "Loop" of evalfbb8in/13 
* CEs [48] --> Loop 24 
* CEs [45] --> Loop 25 
* CEs [46] --> Loop 26 
* CEs [44] --> Loop 27 
* CEs [40] --> Loop 28 
* CEs [42] --> Loop 29 
* CEs [41] --> Loop 30 
* CEs [38] --> Loop 31 
* CEs [37] --> Loop 32 
* CEs [47] --> Loop 33 
* CEs [43] --> Loop 34 
* CEs [39] --> Loop 35 
* CEs [36] --> Loop 36 
* CEs [35] --> Loop 37 
* CEs [33] --> Loop 38 
* CEs [34] --> Loop 39 
* CEs [26] --> Loop 40 
* CEs [27,28,29,30,31,32] --> Loop 41 

### Ranking functions of CR evalfbb8in(A,B,C,D,E,F,H,I,J,K,L,M,N) 
* RF of phase [24,25,26,27,28,29,30,32,33,34,35,36,37,38]: [B+1]
* RF of phase [31]: [B+1]

#### Partial ranking functions of CR evalfbb8in(A,B,C,D,E,F,H,I,J,K,L,M,N) 
* Partial RF of phase [24,25,26,27,28,29,30,32,33,34,35,36,37,38]:
  - RF of loop [24:1,25:1,26:1,27:1,28:1,29:1,30:1,32:1,33:1,34:1,35:1,36:1,37:1,38:1]:
    B+1
  - RF of loop [25:1,26:1]:
    A depends on loops [24:1,27:1,28:1,33:1,34:1,35:1,36:1,37:1] 
  - RF of loop [26:1]:
    A-F-1 depends on loops [24:1,27:1,28:1,33:1,34:1,35:1,36:1,37:1] 
  - RF of loop [27:1,28:1]:
    -A+F depends on loops [24:1,25:1,26:1,33:1,36:1,37:1,38:1] 
  - RF of loop [28:1,35:1]:
    -A depends on loops [24:1,25:1,26:1,33:1,36:1,37:1,38:1] 
  - RF of loop [34:1,35:1]:
    -A+F+1 depends on loops [24:1,25:1,26:1,33:1,36:1,37:1,38:1] 
  - RF of loop [38:1]:
    A+1 depends on loops [24:1,27:1,28:1,33:1,34:1,35:1,36:1,37:1] 
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    B+1


### Specialization of cost equations evalfbb8in_loop_cont/8 
* CE 8 is refined into CE [49] 
* CE 9 is refined into CE [50] 


### Cost equations --> "Loop" of evalfbb8in_loop_cont/8 
* CEs [49] --> Loop 42 
* CEs [50] --> Loop 43 

### Ranking functions of CR evalfbb8in_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR evalfbb8in_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations evalfentryin/7 
* CE 2 is refined into CE [51,52,53,54,55,56] 


### Cost equations --> "Loop" of evalfentryin/7 
* CEs [51,52,53,54,55,56] --> Loop 44 

### Ranking functions of CR evalfentryin(A,B,C,D,E,F,H) 

#### Partial ranking functions of CR evalfentryin(A,B,C,D,E,F,H) 


### Specialization of cost equations evalfstart/7 
* CE 1 is refined into CE [57] 


### Cost equations --> "Loop" of evalfstart/7 
* CEs [57] --> Loop 45 

### Ranking functions of CR evalfstart(A,B,C,D,E,F,H) 

#### Partial ranking functions of CR evalfstart(A,B,C,D,E,F,H) 


Computing Bounds
=====================================

#### Cost of chains of evalfbb2in(A,B,C,D,E,F,H,I,J,K,L,M,N):
* Chain [[16],19]: 3*it(16)+1
  Such that:it(16) =< C+1

  with precondition: [H=2,K+1=0,A=I,B=J,D=L,E=M,F=N,B>=0,C>=0,A>=C] 

* Chain [[16],18]: 3*it(16)+2
  Such that:it(16) =< C-K

  with precondition: [H=2,A=I,B=J,D=L,E=M,F=N,B>=0,K>=0,A>=C,C>=K+1] 

* Chain [[16],17]: 3*it(16)+0
  Such that:it(16) =< C+1

  with precondition: [H=3,B>=0,C>=0,A>=C] 

* Chain [19]: 1
  with precondition: [H=2,L=D,M=E,N=F,A=I,B=J,C=K,0>=C+1,B>=0,A>=C] 

* Chain [18]: 2
  with precondition: [H=2,L=D,M=E,N=F,A=I,B=J,C=K,B>=0,C>=0,A>=C] 

* Chain [17]: 0
  with precondition: [H=3,B>=0,A>=C] 


#### Cost of chains of evalfbb6in(A,B,C,D,E,F,H,I,J,K,L,M,N):
* Chain [[20],23]: 3*it(20)+0
  Such that:it(20) =< -E+F+1

  with precondition: [H=3,B=D+1,E>=C,F>=E] 

* Chain [[20],22]: 3*it(20)+2
  Such that:it(20) =< -E+M

  with precondition: [H=4,B=D+1,B=J+1,C=K,B=L+1,I=M,F=N,E>=C,I>=E+1,F>=I] 

* Chain [[20],21]: 3*it(20)+1
  Such that:it(20) =< -E+M

  with precondition: [H=4,B=D+1,F+1=I,B=J+1,C=K,B=L+1,F+1=M,F=N,E>=C,F>=E] 

* Chain [23]: 0
  with precondition: [H=3,D+1=B,E>=C] 

* Chain [22]: 2
  with precondition: [H=4,D+1=B,E=I,D=J,C=K,D=L,E=M,F=N,E>=C,F>=E] 

* Chain [21]: 1
  with precondition: [H=4,D+1=B,E=I,D=J,C=K,D=L,E=M,F=N,E>=C,E>=F+1] 


#### Cost of chains of evalfbb8in(A,B,C,D,E,F,H,I,J,K,L,M,N):
* Chain [[31],41]: 4*it(31)+6*s(3)+3*s(5)+6*s(6)+3*s(8)+3*s(9)+4
  Such that:aux(1) =< -A+F+1
s(8) =< A
aux(2) =< A+1
it(31) =< B+1
s(9) =< F+1
s(5) =< F+2
s(6) =< aux(1)
s(3) =< aux(2)

  with precondition: [H=3,0>=A+1,B>=0,A>=F+1] 

* Chain [[31],40]: 4*it(31)+1
  Such that:it(31) =< B+1

  with precondition: [H=5,J+1=0,L+1=0,A=I,A=K,A=M,F=N,0>=A+1,B>=0,A>=F+1] 

* Chain [[24,25,26,27,28,29,30,32,33,34,35,36,37,38],[31],41]: 76*it(24)+3*s(5)+3*s(9)+33*s(40)+3*s(41)+6*s(47)+3*s(53)+4
  Such that:aux(13) =< F
s(9) =< F+1
s(5) =< F+2
aux(215) =< B+1
it(24) =< aux(215)
aux(155) =< aux(13)+2
aux(86) =< aux(13)+1
s(41) =< it(24)*aux(13)
s(53) =< it(24)*aux(155)
s(47) =< it(24)*aux(86)

  with precondition: [H=3,0>=F+2,B>=1,F>=A] 

* Chain [[24,25,26,27,28,29,30,32,33,34,35,36,37,38],[31],40]: 76*it(24)+33*s(40)+3*s(41)+6*s(47)+3*s(53)+1
  Such that:aux(13) =< F
aux(216) =< B+1
it(24) =< aux(216)
aux(155) =< aux(13)+2
aux(86) =< aux(13)+1
s(41) =< it(24)*aux(13)
s(53) =< it(24)*aux(155)
s(47) =< it(24)*aux(86)

  with precondition: [H=5,J+1=0,L+1=0,K=F+1,K=I,K=M,K=N+1,0>=K+1,B>=1,K>=A+1] 

* Chain [[24,25,26,27,28,29,30,32,33,34,35,36,37,38],41]: 72*it(24)+4*it([41])+36*s(40)+3*s(41)+6*s(47)+3*s(53)+6*s(55)+3*s(56)+6*s(57)+3*s(59)+0
  Such that:it([41]) =< 1
aux(227) =< F
aux(438) =< -A+F
aux(443) =< B+1
it(24) =< aux(443)
aux(360) =< aux(227)+2
aux(297) =< aux(227)+1
aux(284) =< aux(227)
aux(228) =< aux(227)-1
s(41) =< it(24)*aux(227)
aux(289) =< max([aux(438),aux(228),aux(284),0,0,aux(284),0,aux(297)])
s(56) =< it([41])*aux(360)
s(59) =< it([41])*aux(297)
s(53) =< it(24)*aux(360)
s(47) =< it(24)*aux(297)
aux(336) =< aux(289)+1
s(61) =< it([41])*aux(336)
s(57) =< s(61)

  with precondition: [H=3,B>=0] 

* Chain [[24,25,26,27,28,29,30,32,33,34,35,36,37,38],40]: 72*it(24)+33*s(40)+3*s(41)+6*s(47)+3*s(53)+1
  Such that:aux(13) =< F
aux(445) =< B+1
it(24) =< aux(445)
aux(155) =< aux(13)+2
aux(86) =< aux(13)+1
s(41) =< it(24)*aux(13)
s(53) =< it(24)*aux(155)
s(47) =< it(24)*aux(86)

  with precondition: [H=5,J+1=0,L+1=0,I=M,F=N,B>=0,I>=K] 

* Chain [[24,25,26,27,28,29,30,32,33,34,35,36,37,38],39,[31],41]: 72*it(24)+8*it([39,[31],41])+36*s(40)+3*s(41)+6*s(47)+3*s(53)+4*s(63)+0
  Such that:it([39,[31],41]) =< 1
s(63) =< B
aux(458) =< F
aux(688) =< B+1
aux(689) =< -F
it(24) =< aux(688)
it([39,[31],41]) =< aux(688)
it([39,[31],41]) =< aux(689)
aux(600) =< aux(458)+2
aux(531) =< aux(458)+1
s(41) =< it(24)*aux(458)
s(53) =< it(24)*aux(600)
s(47) =< it(24)*aux(531)

  with precondition: [H=3,0>=F+2,A>=0,B>=2] 

* Chain [[24,25,26,27,28,29,30,32,33,34,35,36,37,38],39,[31],40]: 72*it(24)+5*it([39,[31],40])+36*s(40)+3*s(41)+6*s(47)+3*s(53)+4*s(68)+0
  Such that:it([39,[31],40]) =< 1
s(68) =< B
aux(700) =< F
aux(930) =< B+1
aux(931) =< -F
it(24) =< aux(930)
it([39,[31],40]) =< aux(930)
it([39,[31],40]) =< aux(931)
aux(842) =< aux(700)+2
aux(773) =< aux(700)+1
s(41) =< it(24)*aux(700)
s(53) =< it(24)*aux(842)
s(47) =< it(24)*aux(773)

  with precondition: [H=5,I+1=0,J+1=0,K+1=0,L+1=0,M+1=0,N=F,0>=N+2,A>=0,B>=2] 

* Chain [[24,25,26,27,28,29,30,32,33,34,35,36,37,38],39,41]: 72*it(24)+8*it([39,41])+36*s(40)+3*s(41)+6*s(47)+3*s(53)+0
  Such that:it([39,41]) =< 1
aux(944) =< F
aux(1174) =< B+1
aux(1175) =< -F
it(24) =< aux(1174)
it([39,41]) =< aux(1174)
it([39,41]) =< aux(1175)
aux(1086) =< aux(944)+2
aux(1017) =< aux(944)+1
s(41) =< it(24)*aux(944)
s(53) =< it(24)*aux(1086)
s(47) =< it(24)*aux(1017)

  with precondition: [H=3,0>=F+2,A>=0,B>=1] 

* Chain [[24,25,26,27,28,29,30,32,33,34,35,36,37,38],39,40]: 72*it(24)+5*it([39,40])+36*s(40)+3*s(41)+6*s(47)+3*s(53)+0
  Such that:it([39,40]) =< 1
aux(1186) =< F
aux(1416) =< B+1
aux(1417) =< -F
it(24) =< aux(1416)
it([39,40]) =< aux(1416)
it([39,40]) =< aux(1417)
aux(1328) =< aux(1186)+2
aux(1259) =< aux(1186)+1
s(41) =< it(24)*aux(1186)
s(53) =< it(24)*aux(1328)
s(47) =< it(24)*aux(1259)

  with precondition: [H=5,I+1=0,J+1=0,K+1=0,L+1=0,M+1=0,F=N,0>=F+2,A>=0,B>=1] 

* Chain [41]: 6*s(3)+3*s(5)+6*s(6)+3*s(8)+3*s(9)+4
  Such that:s(8) =< A
s(9) =< F+1
s(5) =< F+2
aux(1) =< -A+F+1
aux(2) =< A+1
s(6) =< aux(1)
s(3) =< aux(2)

  with precondition: [H=3] 

* Chain [40]: 1
  with precondition: [H=5,I=A,K=C,L=D,M=E,N=F,B=J,0>=B+1] 

* Chain [39,[31],41]: 4*it(31)+9*s(5)+3*s(9)+3*s(62)+8
  Such that:s(62) =< A+1
it(31) =< B
s(9) =< F+1
aux(447) =< F+2
s(5) =< aux(447)

  with precondition: [H=3,0>=F+2,A>=0,B>=1] 

* Chain [39,[31],40]: 4*it(31)+3*s(62)+5
  Such that:s(62) =< A+1
it(31) =< B

  with precondition: [H=5,I+1=0,J+1=0,K+1=0,L+1=0,M+1=0,F=N,0>=F+2,A>=0,B>=1] 

* Chain [39,41]: 9*s(5)+3*s(9)+3*s(62)+8
  Such that:s(62) =< A+1
s(9) =< F+1
aux(933) =< F+2
s(5) =< aux(933)

  with precondition: [H=3,0>=F+2,A>=0,B>=0] 

* Chain [39,40]: 3*s(62)+5
  Such that:s(62) =< A+1

  with precondition: [B=0,H=5,I+1=0,J+1=0,K+1=0,L+1=0,M+1=0,F=N,0>=F+2,A>=0] 


#### Cost of chains of evalfbb8in_loop_cont(A,B,C,D,E,F,G,H):
* Chain [43]: 0
  with precondition: [A=3] 

* Chain [42]: 1
  with precondition: [A=5] 


#### Cost of chains of evalfentryin(A,B,C,D,E,F,H):
* Chain [44]: 24*s(188)+592*s(191)+24*s(194)+24*s(195)+48*s(196)+285*s(197)+26*s(209)+4*s(210)+6*s(211)+16*s(213)+15*s(215)+27*s(216)+3*s(225)+3*s(226)+6*s(229)+12*s(230)+9
  Such that:s(198) =< -B+F
s(200) =< -B+F+1
s(201) =< B
s(207) =< F+1
s(208) =< F+2
aux(1433) =< 1
aux(1434) =< A
aux(1435) =< A+1
aux(1436) =< B+1
aux(1437) =< -F
aux(1438) =< F
s(191) =< aux(1435)
s(188) =< aux(1436)
s(209) =< aux(1433)
s(210) =< aux(1433)
s(211) =< s(201)
s(213) =< aux(1434)
s(215) =< s(207)
s(216) =< s(208)
s(209) =< aux(1435)
s(209) =< aux(1437)
s(192) =< aux(1438)+2
s(193) =< aux(1438)+1
s(194) =< s(191)*aux(1438)
s(195) =< s(191)*s(192)
s(196) =< s(191)*s(193)
s(222) =< aux(1438)
s(223) =< aux(1438)-1
s(224) =< max([s(198),s(223),s(222),0,0,s(222),0,s(193)])
s(225) =< s(210)*s(192)
s(226) =< s(210)*s(193)
s(227) =< s(224)+1
s(228) =< s(210)*s(227)
s(229) =< s(228)
s(230) =< s(200)

  with precondition: [] 


#### Cost of chains of evalfstart(A,B,C,D,E,F,H):
* Chain [45]: 592*s(268)+24*s(269)+26*s(270)+4*s(271)+6*s(272)+16*s(273)+15*s(274)+27*s(275)+24*s(278)+24*s(279)+48*s(280)+3*s(284)+3*s(285)+6*s(288)+12*s(289)+285*s(290)+10
  Such that:s(262) =< 1
s(263) =< A
s(264) =< A+1
s(257) =< -B+F
s(258) =< -B+F+1
s(259) =< B
s(265) =< B+1
s(266) =< -F
s(267) =< F
s(260) =< F+1
s(261) =< F+2
s(268) =< s(264)
s(269) =< s(265)
s(270) =< s(262)
s(271) =< s(262)
s(272) =< s(259)
s(273) =< s(263)
s(274) =< s(260)
s(275) =< s(261)
s(270) =< s(264)
s(270) =< s(266)
s(276) =< s(267)+2
s(277) =< s(267)+1
s(278) =< s(268)*s(267)
s(279) =< s(268)*s(276)
s(280) =< s(268)*s(277)
s(281) =< s(267)
s(282) =< s(267)-1
s(283) =< max([s(257),s(282),s(281),0,0,s(281),0,s(277)])
s(284) =< s(271)*s(276)
s(285) =< s(271)*s(277)
s(286) =< s(283)+1
s(287) =< s(271)*s(286)
s(288) =< s(287)
s(289) =< s(258)

  with precondition: [] 


Closed-form bounds of evalfstart(A,B,C,D,E,F,H): 
-------------------------------------
* Chain [45] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of evalfstart(A,B,C,D,E,F,H): inf 
Asymptotic class: infinity 
* Total analysis performed in 12482 ms.


-- stats
realtime 0:13.54
usertime 12.88
systime 0.26

