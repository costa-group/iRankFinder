WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalinsertsortbb1in/9,evalinsertsortbb2in/9,evalinsertsortbb3in/9]
1. recursive  : [evalinsertsortbb2in_loop_cont/10,evalinsertsortbb4in/9,evalinsertsortbb5in/9,evalinsertsortbbin/9]
2. non_recursive  : [evalinsertsortstop/5]
3. non_recursive  : [evalinsertsortreturnin/5]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [evalinsertsortbb5in_loop_cont/6]
6. non_recursive  : [evalinsertsortentryin/5]
7. non_recursive  : [evalinsertsortstart/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalinsertsortbb2in/9
1. SCC is partially evaluated into evalinsertsortbb5in/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into evalinsertsortbb5in_loop_cont/6
6. SCC is partially evaluated into evalinsertsortentryin/5
7. SCC is partially evaluated into evalinsertsortstart/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalinsertsortbb2in/9 
* CE 12 is refined into CE [13] 
* CE 9 is refined into CE [14] 
* CE 11 is refined into CE [15] 
* CE 10 is refined into CE [16] 


### Cost equations --> "Loop" of evalinsertsortbb2in/9 
* CEs [16] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

### Ranking functions of CR evalinsertsortbb2in(A,B,C,D,F,G,H,I,J) 
* RF of phase [12]: [D+1]

#### Partial ranking functions of CR evalinsertsortbb2in(A,B,C,D,F,G,H,I,J) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    D+1


### Specialization of cost equations evalinsertsortbb5in/9 
* CE 5 is refined into CE [17] 
* CE 3 is refined into CE [18] 
* CE 6 is refined into CE [19] 
* CE 4 is refined into CE [20,21,22,23] 


### Cost equations --> "Loop" of evalinsertsortbb5in/9 
* CEs [23] --> Loop 16 
* CEs [22] --> Loop 17 
* CEs [21] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [17] --> Loop 20 
* CEs [18,19] --> Loop 21 

### Ranking functions of CR evalinsertsortbb5in(A,B,C,D,F,G,H,I,J) 
* RF of phase [16,17,19]: [-A+B]

#### Partial ranking functions of CR evalinsertsortbb5in(A,B,C,D,F,G,H,I,J) 
* Partial RF of phase [16,17,19]:
  - RF of loop [16:1,17:1,19:1]:
    -A+B


### Specialization of cost equations evalinsertsortbb5in_loop_cont/6 
* CE 7 is refined into CE [24] 
* CE 8 is refined into CE [25] 


### Cost equations --> "Loop" of evalinsertsortbb5in_loop_cont/6 
* CEs [24] --> Loop 22 
* CEs [25] --> Loop 23 

### Ranking functions of CR evalinsertsortbb5in_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR evalinsertsortbb5in_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations evalinsertsortentryin/5 
* CE 2 is refined into CE [26,27,28] 


### Cost equations --> "Loop" of evalinsertsortentryin/5 
* CEs [26,27,28] --> Loop 24 

### Ranking functions of CR evalinsertsortentryin(A,B,C,D,F) 

#### Partial ranking functions of CR evalinsertsortentryin(A,B,C,D,F) 


### Specialization of cost equations evalinsertsortstart/5 
* CE 1 is refined into CE [29] 


### Cost equations --> "Loop" of evalinsertsortstart/5 
* CEs [29] --> Loop 25 

### Ranking functions of CR evalinsertsortstart(A,B,C,D,F) 

#### Partial ranking functions of CR evalinsertsortstart(A,B,C,D,F) 


Computing Bounds
=====================================

#### Cost of chains of evalinsertsortbb2in(A,B,C,D,F,G,H,I,J):
* Chain [[12],15]: 3*it(12)+1
  Such that:it(12) =< D+1

  with precondition: [F=2,J+1=0,A=G,B=H,C=I,D>=0,B>=A+1,A>=D+1] 

* Chain [[12],14]: 3*it(12)+2
  Such that:it(12) =< D-J

  with precondition: [F=2,A=G,B=H,C=I,J>=0,B>=A+1,A>=D+1,D>=J+1] 

* Chain [[12],13]: 3*it(12)+0
  Such that:it(12) =< D+1

  with precondition: [F=3,D>=0,B>=A+1,A>=D+1] 

* Chain [15]: 1
  with precondition: [F=2,I=C,A=G,B=H,D=J,0>=D+1,B>=A+1,A>=D+1] 

* Chain [14]: 2
  with precondition: [F=2,I=C,A=G,B=H,D=J,D>=0,B>=A+1,A>=D+1] 

* Chain [13]: 0
  with precondition: [F=3,B>=A+1,A>=D+1] 


#### Cost of chains of evalinsertsortbb5in(A,B,C,D,F,G,H,I,J):
* Chain [[16,17,19],21]: 14*it(16)+3*s(2)+3*s(7)+3*s(8)+2
  Such that:aux(5) =< -A+B
aux(6) =< B
s(2) =< aux(6)
it(16) =< aux(5)
aux(2) =< aux(6)
s(7) =< it(16)*aux(6)
s(8) =< it(16)*aux(2)

  with precondition: [F=3,A>=1,B>=A+1] 

* Chain [[16,17,19],20]: 14*it(16)+3*s(7)+3*s(8)+1
  Such that:aux(1) =< G
aux(7) =< -A+G
it(16) =< aux(7)
aux(2) =< aux(1)
s(7) =< it(16)*aux(1)
s(8) =< it(16)*aux(2)

  with precondition: [F=4,B=G,B=H,A>=1,J+1>=0,B>=A+1,B>=J+2] 

* Chain [21]: 3*s(2)+2
  Such that:s(2) =< A

  with precondition: [F=3,A>=1] 

* Chain [20]: 1
  with precondition: [F=4,I=C,J=D,A=G,B=H,A>=1,A>=B] 


#### Cost of chains of evalinsertsortbb5in_loop_cont(A,B,C,D,E,F):
* Chain [23]: 0
  with precondition: [A=3] 

* Chain [22]: 1
  with precondition: [A=4] 


#### Cost of chains of evalinsertsortentryin(A,B,C,D,F):
* Chain [24]: 3*s(18)+31*s(20)+6*s(23)+6*s(24)+3
  Such that:s(18) =< 1
aux(10) =< B
s(20) =< aux(10)
s(22) =< aux(10)
s(23) =< s(20)*aux(10)
s(24) =< s(20)*s(22)

  with precondition: [] 


#### Cost of chains of evalinsertsortstart(A,B,C,D,F):
* Chain [25]: 3*s(31)+31*s(33)+6*s(35)+6*s(36)+4
  Such that:s(31) =< 1
s(32) =< B
s(33) =< s(32)
s(34) =< s(32)
s(35) =< s(33)*s(32)
s(36) =< s(33)*s(34)

  with precondition: [] 


Closed-form bounds of evalinsertsortstart(A,B,C,D,F): 
-------------------------------------
* Chain [25] with precondition: [] 
    - Upper bound: nat(B)*31+7+nat(B)*12*nat(B) 
    - Complexity: n^2 

### Maximum cost of evalinsertsortstart(A,B,C,D,F): nat(B)*31+7+nat(B)*12*nat(B) 
Asymptotic class: n^2 
* Total analysis performed in 381 ms.


-- stats
realtime 0:00.57
usertime 0.43
systime 0.01

