WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalwhile2bb1in/7,evalwhile2bb2in/7]
1. recursive  : [evalwhile2bb2in_loop_cont/8,evalwhile2bb3in/7,evalwhile2bb4in/7]
2. non_recursive  : [evalwhile2stop/4]
3. non_recursive  : [evalwhile2returnin/4]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [evalwhile2bb4in_loop_cont/5]
6. non_recursive  : [evalwhile2entryin/4]
7. non_recursive  : [evalwhile2start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalwhile2bb2in/7
1. SCC is partially evaluated into evalwhile2bb4in/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into evalwhile2bb4in_loop_cont/5
6. SCC is partially evaluated into evalwhile2entryin/4
7. SCC is partially evaluated into evalwhile2start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalwhile2bb2in/7 
* CE 11 is refined into CE [12] 
* CE 10 is refined into CE [13] 
* CE 9 is refined into CE [14] 


### Cost equations --> "Loop" of evalwhile2bb2in/7 
* CEs [14] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

### Ranking functions of CR evalwhile2bb2in(A,B,C,D,E,F,G) 
* RF of phase [11]: [C]

#### Partial ranking functions of CR evalwhile2bb2in(A,B,C,D,E,F,G) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    C


### Specialization of cost equations evalwhile2bb4in/7 
* CE 5 is refined into CE [15] 
* CE 3 is refined into CE [16] 
* CE 6 is refined into CE [17] 
* CE 4 is refined into CE [18,19] 


### Cost equations --> "Loop" of evalwhile2bb4in/7 
* CEs [19] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16,17] --> Loop 17 

### Ranking functions of CR evalwhile2bb4in(A,B,C,D,E,F,G) 
* RF of phase [15]: [A]

#### Partial ranking functions of CR evalwhile2bb4in(A,B,C,D,E,F,G) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    A


### Specialization of cost equations evalwhile2bb4in_loop_cont/5 
* CE 7 is refined into CE [20] 
* CE 8 is refined into CE [21] 


### Cost equations --> "Loop" of evalwhile2bb4in_loop_cont/5 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 

### Ranking functions of CR evalwhile2bb4in_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR evalwhile2bb4in_loop_cont(A,B,C,D,E) 


### Specialization of cost equations evalwhile2entryin/4 
* CE 2 is refined into CE [22,23,24] 


### Cost equations --> "Loop" of evalwhile2entryin/4 
* CEs [22,23,24] --> Loop 20 

### Ranking functions of CR evalwhile2entryin(A,B,C,D) 

#### Partial ranking functions of CR evalwhile2entryin(A,B,C,D) 


### Specialization of cost equations evalwhile2start/4 
* CE 1 is refined into CE [25] 


### Cost equations --> "Loop" of evalwhile2start/4 
* CEs [25] --> Loop 21 

### Ranking functions of CR evalwhile2start(A,B,C,D) 

#### Partial ranking functions of CR evalwhile2start(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of evalwhile2bb2in(A,B,C,D,E,F,G):
* Chain [[11],13]: 2*it(11)+1
  Such that:it(11) =< C

  with precondition: [D=2,G=0,A=E,B=F,A>=1,C>=1,B>=C] 

* Chain [[11],12]: 2*it(11)+0
  Such that:it(11) =< C

  with precondition: [D=3,A>=1,C>=1,B>=C] 

* Chain [13]: 1
  with precondition: [D=2,A=E,B=F,C=G,0>=C,A>=1,B>=C] 

* Chain [12]: 0
  with precondition: [D=3,A>=1,B>=C] 


#### Cost of chains of evalwhile2bb4in(A,B,C,D,E,F,G):
* Chain [[15],17]: 3*it(15)+2*s(2)+2*s(5)+1
  Such that:it(15) =< A
aux(2) =< B
s(2) =< aux(2)
s(5) =< it(15)*aux(2)

  with precondition: [D=3,A>=1,B>=A] 

* Chain [[15],16]: 3*it(15)+2*s(5)+1
  Such that:it(15) =< A
aux(1) =< F
s(5) =< it(15)*aux(1)

  with precondition: [D=4,E=0,G=0,B=F,A>=1,B>=A] 

* Chain [17]: 2*s(2)+1
  Such that:s(2) =< B

  with precondition: [D=3,B>=A] 

* Chain [16]: 1
  with precondition: [D=4,G=C,A=E,B=F,0>=A,B>=A] 


#### Cost of chains of evalwhile2bb4in_loop_cont(A,B,C,D,E):
* Chain [19]: 0
  with precondition: [A=3] 

* Chain [18]: 1
  with precondition: [A=4] 


#### Cost of chains of evalwhile2entryin(A,B,C,D):
* Chain [20]: 10*s(11)+4*s(14)+3
  Such that:aux(6) =< B
s(11) =< aux(6)
s(14) =< s(11)*aux(6)

  with precondition: [] 


#### Cost of chains of evalwhile2start(A,B,C,D):
* Chain [21]: 10*s(19)+4*s(20)+4
  Such that:s(18) =< B
s(19) =< s(18)
s(20) =< s(19)*s(18)

  with precondition: [] 


Closed-form bounds of evalwhile2start(A,B,C,D): 
-------------------------------------
* Chain [21] with precondition: [] 
    - Upper bound: nat(B)*10+4+nat(B)*4*nat(B) 
    - Complexity: n^2 

### Maximum cost of evalwhile2start(A,B,C,D): nat(B)*10+4+nat(B)*4*nat(B) 
Asymptotic class: n^2 
* Total analysis performed in 219 ms.


-- stats
realtime 0:00.28
usertime 0.25
systime 0.01

