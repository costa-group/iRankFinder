MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalrealheapsortbb2in/9,evalrealheapsortbb3in/9,evalrealheapsortbb4in/9]
1. recursive  : [evalrealheapsortbb3in_loop_cont/10,evalrealheapsortbb5in/9,evalrealheapsortbb6in/9]
2. recursive  : [evalrealheapsortbb10in/9,evalrealheapsortbb11in/9,evalrealheapsortbb12in/9,evalrealheapsortbb13in/9,evalrealheapsortbb14in/9,evalrealheapsortbb16in/9,evalrealheapsortbb9in/9]
3. recursive  : [evalrealheapsortbb16in_loop_cont/10,evalrealheapsortbb17in/9,evalrealheapsortbb18in/9,evalrealheapsortbb8in/9]
4. non_recursive  : [evalrealheapsortstop/5]
5. non_recursive  : [evalrealheapsortreturnin/5]
6. non_recursive  : [exit_location/1]
7. non_recursive  : [evalrealheapsortbb18in_loop_cont/6]
8. non_recursive  : [evalrealheapsortbb7in/5]
9. non_recursive  : [evalrealheapsortbb6in_loop_cont/6]
10. non_recursive  : [evalrealheapsortentryin/5]
11. non_recursive  : [evalrealheapsortstart/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalrealheapsortbb3in/9
1. SCC is partially evaluated into evalrealheapsortbb6in/9
2. SCC is partially evaluated into evalrealheapsortbb16in/9
3. SCC is partially evaluated into evalrealheapsortbb18in/9
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into evalrealheapsortbb18in_loop_cont/6
8. SCC is partially evaluated into evalrealheapsortbb7in/5
9. SCC is partially evaluated into evalrealheapsortbb6in_loop_cont/6
10. SCC is partially evaluated into evalrealheapsortentryin/5
11. SCC is partially evaluated into evalrealheapsortstart/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalrealheapsortbb3in/9 
* CE 10 is refined into CE [29] 
* CE 12 is refined into CE [30] 
* CE 13 is refined into CE [31] 
* CE 11 is refined into CE [32] 


### Cost equations --> "Loop" of evalrealheapsortbb3in/9 
* CEs [32] --> Loop 27 
* CEs [29] --> Loop 28 
* CEs [30] --> Loop 29 
* CEs [31] --> Loop 30 

### Ranking functions of CR evalrealheapsortbb3in(A,B,C,D,H,I,J,K,L) 
* RF of phase [27]: [C]

#### Partial ranking functions of CR evalrealheapsortbb3in(A,B,C,D,H,I,J,K,L) 
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    C


### Specialization of cost equations evalrealheapsortbb6in/9 
* CE 6 is refined into CE [33] 
* CE 4 is refined into CE [34] 
* CE 7 is refined into CE [35] 
* CE 5 is refined into CE [36,37,38,39] 


### Cost equations --> "Loop" of evalrealheapsortbb6in/9 
* CEs [39] --> Loop 31 
* CEs [38] --> Loop 32 
* CEs [37] --> Loop 33 
* CEs [36] --> Loop 34 
* CEs [33] --> Loop 35 
* CEs [34,35] --> Loop 36 

### Ranking functions of CR evalrealheapsortbb6in(A,B,C,D,H,I,J,K,L) 
* RF of phase [31,32,33]: [A-B]

#### Partial ranking functions of CR evalrealheapsortbb6in(A,B,C,D,H,I,J,K,L) 
* Partial RF of phase [31,32,33]:
  - RF of loop [31:1,32:1,33:1]:
    A-B


### Specialization of cost equations evalrealheapsortbb16in/9 
* CE 28 is refined into CE [40] 
* CE 27 is refined into CE [41] 
* CE 26 is refined into CE [42] 
* CE 23 is refined into CE [43] 
* CE 24 is refined into CE [44] 
* CE 22 is refined into CE [45] 
* CE 25 is refined into CE [46] 
* CE 21 is refined into CE [47] 


### Cost equations --> "Loop" of evalrealheapsortbb16in/9 
* CEs [42] --> Loop 37 
* CEs [43] --> Loop 38 
* CEs [44] --> Loop 39 
* CEs [45] --> Loop 40 
* CEs [46] --> Loop 41 
* CEs [47] --> Loop 42 
* CEs [40] --> Loop 43 
* CEs [41] --> Loop 44 

### Ranking functions of CR evalrealheapsortbb16in(A,B,C,D,H,I,J,K,L) 

#### Partial ranking functions of CR evalrealheapsortbb16in(A,B,C,D,H,I,J,K,L) 


### Specialization of cost equations evalrealheapsortbb18in/9 
* CE 17 is refined into CE [48] 
* CE 15 is refined into CE [49,50] 
* CE 18 is refined into CE [51] 
* CE 16 is refined into CE [52,53,54] 


### Cost equations --> "Loop" of evalrealheapsortbb18in/9 
* CEs [54] --> Loop 45 
* CEs [52] --> Loop 46 
* CEs [53] --> Loop 47 
* CEs [48] --> Loop 48 
* CEs [49,51] --> Loop 49 
* CEs [50] --> Loop 50 

### Ranking functions of CR evalrealheapsortbb18in(A,B,C,D,H,I,J,K,L) 

#### Partial ranking functions of CR evalrealheapsortbb18in(A,B,C,D,H,I,J,K,L) 
* Partial RF of phase [45,46]:
  - RF of loop [46:1]:
    A-B-2 depends on loops [45:1] 


### Specialization of cost equations evalrealheapsortbb18in_loop_cont/6 
* CE 19 is refined into CE [55] 
* CE 20 is refined into CE [56] 


### Cost equations --> "Loop" of evalrealheapsortbb18in_loop_cont/6 
* CEs [55] --> Loop 51 
* CEs [56] --> Loop 52 

### Ranking functions of CR evalrealheapsortbb18in_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR evalrealheapsortbb18in_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations evalrealheapsortbb7in/5 
* CE 14 is refined into CE [57,58,59,60,61,62,63] 


### Cost equations --> "Loop" of evalrealheapsortbb7in/5 
* CEs [61,62,63] --> Loop 53 
* CEs [57,58,59,60] --> Loop 54 

### Ranking functions of CR evalrealheapsortbb7in(A,B,C,D,H) 

#### Partial ranking functions of CR evalrealheapsortbb7in(A,B,C,D,H) 


### Specialization of cost equations evalrealheapsortbb6in_loop_cont/6 
* CE 8 is refined into CE [64,65] 
* CE 9 is refined into CE [66] 


### Cost equations --> "Loop" of evalrealheapsortbb6in_loop_cont/6 
* CEs [64] --> Loop 55 
* CEs [66] --> Loop 56 
* CEs [65] --> Loop 57 

### Ranking functions of CR evalrealheapsortbb6in_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR evalrealheapsortbb6in_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations evalrealheapsortentryin/5 
* CE 2 is refined into CE [67,68,69] 
* CE 3 is refined into CE [70] 


### Cost equations --> "Loop" of evalrealheapsortentryin/5 
* CEs [67,68] --> Loop 58 
* CEs [70] --> Loop 59 
* CEs [69] --> Loop 60 

### Ranking functions of CR evalrealheapsortentryin(A,B,C,D,H) 

#### Partial ranking functions of CR evalrealheapsortentryin(A,B,C,D,H) 


### Specialization of cost equations evalrealheapsortstart/5 
* CE 1 is refined into CE [71,72,73] 


### Cost equations --> "Loop" of evalrealheapsortstart/5 
* CEs [73] --> Loop 61 
* CEs [72] --> Loop 62 
* CEs [71] --> Loop 63 

### Ranking functions of CR evalrealheapsortstart(A,B,C,D,H) 

#### Partial ranking functions of CR evalrealheapsortstart(A,B,C,D,H) 


Computing Bounds
=====================================

#### Cost of chains of evalrealheapsortbb3in(A,B,C,D,H,I,J,K,L):
* Chain [[27],30]: 3*it(27)+0
  Such that:it(27) =< C

  with precondition: [H=3,C>=1,A>=B+1,B>=C] 

* Chain [[27],29]: 3*it(27)+1
  Such that:it(27) =< C

  with precondition: [H=4,A=I,B=J,D=L,0>=K,C>=1,2*K+1>=0,A>=B+1,B>=C] 

* Chain [[27],28]: 3*it(27)+2
  Such that:it(27) =< C-K

  with precondition: [H=4,A=I,B=J,D=L,K>=1,C>=2*K+1,A>=B+1,B>=C] 

* Chain [30]: 0
  with precondition: [H=3,A>=B+1,B>=C] 

* Chain [29]: 1
  with precondition: [H=4,L=D,A=I,B=J,C=K,0>=C,A>=B+1,B>=C] 

* Chain [28]: 2
  with precondition: [H=4,L=D,A=I,B=J,C=K,C>=1,A>=B+1,B>=C] 


#### Cost of chains of evalrealheapsortbb6in(A,B,C,D,H,I,J,K,L):
* Chain [[31,32,33],36]: 11*it(31)+3*s(2)+3*s(7)+3*s(8)+1
  Such that:aux(5) =< A
aux(6) =< A-B
s(2) =< aux(5)
it(31) =< aux(6)
aux(2) =< aux(5)+1
s(7) =< it(31)*aux(5)
s(8) =< it(31)*aux(2)

  with precondition: [H=3,A>=3,B>=1,A>=B+1] 

* Chain [[31,32,33],35]: 11*it(31)+3*s(7)+3*s(8)+1
  Such that:aux(1) =< J
aux(7) =< -B+J
it(31) =< aux(7)
aux(2) =< aux(1)+1
s(7) =< it(31)*aux(1)
s(8) =< it(31)*aux(2)

  with precondition: [H=6,A=I,A=J,D=L,A>=3,B>=1,2*K+1>=0,A>=B+1,A>=K+1] 

* Chain [36]: 3*s(2)+1
  Such that:s(2) =< B

  with precondition: [H=3,A>=3,B>=1] 


#### Cost of chains of evalrealheapsortbb16in(A,B,C,D,H,I,J,K,L):
* Chain [[37,38,39,40,42]]...: 26*it(37)+0
  with precondition: [A>=2*C+B+3,A>=B+2,H>=2,3>=H] 

* Chain [[37,38,39,40,42],44]: 26*it(37)+1
  with precondition: [H=2,A=I,B=J,A>=B+2,A>=2*C+B+3,B+2*K+2>=A,A>=B+L+2] 

* Chain [[37,38,39,40,42],43]: 26*it(37)+0
  with precondition: [H=3,A>=B+2,A>=2*C+B+3] 

* Chain [[37,38,39,40,42],41,44]: 26*it(37)+6
  with precondition: [H=2,J=B,A=I,A=J+K+2,A=J+L+2,A>=J+2,A>=2*C+J+3] 

* Chain [[37,38,39,40,42],41,43]: 26*it(37)+5
  with precondition: [H=3,A>=B+2,A>=2*C+B+3] 

* Chain [44]: 1
  with precondition: [H=2,L=D,A=I,B=J,C=K,A>=B+2,B+2*C+2>=A] 

* Chain [43]: 0
  with precondition: [H=3,A>=B+2] 

* Chain [41,44]: 6
  with precondition: [H=2,A=I,B=J,B+K+2=A,B+L+2=A,B+2*C+3=A,A>=B+2] 

* Chain [41,43]: 5
  with precondition: [H=3,B+2*C+3=A,2*C+1>=0] 


#### Cost of chains of evalrealheapsortbb18in(A,B,C,D,H,I,J,K,L):
* Chain [[45,46]]...: 33*it(45)+0
  with precondition: [A>=B+3] 

* Chain [[45,46],50]...: 59*it(45)+2
  with precondition: [H=3,A>=B+3] 

* Chain [[45,46],49]: 34*aux(10)+0
  with precondition: [H=3,A>=B+3] 

* Chain [[45,46],48]: 33*it(45)+1
  with precondition: [H=5,A>=B+3,J+1>=I] 

* Chain [[45,46],47,49]: 34*aux(10)+4
  with precondition: [H=3,A>=B+3] 

* Chain [[45,46],47,48]: 33*it(45)+5
  with precondition: [H=5,K=0,I=J+1,A>=B+3] 

* Chain [50]...: 26*s(27)+2
  with precondition: [H=3,A>=B+3] 

* Chain [49]: 1*aux(10)+0
  with precondition: [H=3] 

* Chain [48]: 1
  with precondition: [H=5,K=C,L=D,A=I,B=J,B+1>=A] 

* Chain [47,49]: 1*aux(10)+4
  with precondition: [H=3,A=B+2] 

* Chain [47,48]: 5
  with precondition: [H=5,K=0,A=B+2,A=I,A=J+1,D=L] 


#### Cost of chains of evalrealheapsortbb18in_loop_cont(A,B,C,D,E,F):
* Chain [52]: 0
  with precondition: [A=3] 

* Chain [51]: 1
  with precondition: [A=5] 


#### Cost of chains of evalrealheapsortbb7in(A,B,C,D,H):
* Chain [54]: 1*aux(14)+0
  with precondition: [] 

* Chain [53]...: 1*aux(15)+0
  with precondition: [A>=3] 


#### Cost of chains of evalrealheapsortbb6in_loop_cont(A,B,C,D,E,F):
* Chain [57]...: 1*s(42)+0
  with precondition: [A=6,B>=3] 

* Chain [56]: 0
  with precondition: [A=3] 

* Chain [55]: 1*s(43)+0
  with precondition: [A=6] 


#### Cost of chains of evalrealheapsortentryin(A,B,C,D,H):
* Chain [60]...: 11*s(46)+3*s(48)+3*s(49)+1*s(50)+2
  Such that:aux(16) =< A
s(46) =< aux(16)
s(47) =< aux(16)+1
s(48) =< s(46)*aux(16)
s(49) =< s(46)*s(47)

  with precondition: [A>=3] 

* Chain [59]: 2
  with precondition: [2>=A] 

* Chain [58]: 3*s(53)+25*s(54)+6*s(57)+6*s(58)+1*s(65)+2
  Such that:s(53) =< 1
aux(19) =< A
s(54) =< aux(19)
s(56) =< aux(19)+1
s(57) =< s(54)*aux(19)
s(58) =< s(54)*s(56)

  with precondition: [A>=3] 


#### Cost of chains of evalrealheapsortstart(A,B,C,D,H):
* Chain [63]: 3
  with precondition: [2>=A] 

* Chain [62]: 3*s(66)+25*s(68)+6*s(70)+6*s(71)+1*s(72)+3
  Such that:s(66) =< 1
s(67) =< A
s(68) =< s(67)
s(69) =< s(67)+1
s(70) =< s(68)*s(67)
s(71) =< s(68)*s(69)

  with precondition: [A>=3] 

* Chain [61]...: 11*s(74)+3*s(76)+3*s(77)+1*s(78)+3
  Such that:s(73) =< A
s(74) =< s(73)
s(75) =< s(73)+1
s(76) =< s(74)*s(73)
s(77) =< s(74)*s(75)

  with precondition: [A>=3] 


Closed-form bounds of evalrealheapsortstart(A,B,C,D,H): 
-------------------------------------
* Chain [63] with precondition: [2>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [62] with precondition: [A>=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [61]... with precondition: [A>=3] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of evalrealheapsortstart(A,B,C,D,H): inf 
Asymptotic class: infinity 
* Total analysis performed in 1063 ms.


-- stats
realtime 0:01.25
usertime 1.14
systime 0.02

