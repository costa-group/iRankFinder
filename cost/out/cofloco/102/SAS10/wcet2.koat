WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_lbl82___4/17]
1. recursive  : [n_lbl82___2/17,n_lbl82___4_loop_cont/18,n_lbl82___5/17,n_lbl92___3/17]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_stop___6/9]
4. non_recursive  : [n_lbl82___5_loop_cont/10]
5. non_recursive  : [n_lbl82___8/9]
6. recursive  : [n_lbl92___1/17]
7. non_recursive  : [n_lbl92___1_loop_cont/10]
8. non_recursive  : [n_lbl92___7/9]
9. non_recursive  : [n_start___9/9]
10. non_recursive  : [n_start0/9]
11. non_recursive  : [pyRinit/9]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_lbl82___4/17
1. SCC is partially evaluated into n_lbl82___2/17
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_lbl82___5_loop_cont/10
5. SCC is partially evaluated into n_lbl82___8/9
6. SCC is partially evaluated into n_lbl92___1/17
7. SCC is partially evaluated into n_lbl92___1_loop_cont/10
8. SCC is partially evaluated into n_lbl92___7/9
9. SCC is partially evaluated into n_start___9/9
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into pyRinit/9

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_lbl82___4/17 
* CE 13 is refined into CE [25] 
* CE 12 is refined into CE [26] 
* CE 11 is refined into CE [27] 


### Cost equations --> "Loop" of n_lbl82___4/17 
* CEs [27] --> Loop 21 
* CEs [25] --> Loop 22 
* CEs [26] --> Loop 23 

### Ranking functions of CR n_lbl82___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [21]: [-B+9,-F+10]

#### Partial ranking functions of CR n_lbl82___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    -B+9
    -F+10


### Specialization of cost equations n_lbl82___2/17 
* CE 18 is refined into CE [28] 
* CE 16 is refined into CE [29] 
* CE 19 is refined into CE [30] 
* CE 17 is refined into CE [31] 


### Cost equations --> "Loop" of n_lbl82___2/17 
* CEs [31] --> Loop 24 
* CEs [29,30] --> Loop 25 
* CEs [28] --> Loop 26 

### Ranking functions of CR n_lbl82___2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 

#### Partial ranking functions of CR n_lbl82___2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 


### Specialization of cost equations n_lbl82___5_loop_cont/10 
* CE 15 is refined into CE [32] 
* CE 14 is refined into CE [33] 


### Cost equations --> "Loop" of n_lbl82___5_loop_cont/10 
* CEs [32] --> Loop 27 
* CEs [33] --> Loop 28 

### Ranking functions of CR n_lbl82___5_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR n_lbl82___5_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations n_lbl82___8/9 
* CE 5 is refined into CE [34] 
* CE 6 is refined into CE [35,36] 
* CE 7 is refined into CE [37] 
* CE 8 is refined into CE [38] 


### Cost equations --> "Loop" of n_lbl82___8/9 
* CEs [37] --> Loop 29 
* CEs [34,35,36,38] --> Loop 30 

### Ranking functions of CR n_lbl82___8(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_lbl82___8(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_lbl92___1/17 
* CE 22 is refined into CE [39] 
* CE 20 is refined into CE [40] 
* CE 21 is refined into CE [41] 


### Cost equations --> "Loop" of n_lbl92___1/17 
* CEs [41] --> Loop 31 
* CEs [39] --> Loop 32 
* CEs [40] --> Loop 33 

### Ranking functions of CR n_lbl92___1(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [31]: [-D+2,-H+3]

#### Partial ranking functions of CR n_lbl92___1(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    -D+2
    -H+3


### Specialization of cost equations n_lbl92___1_loop_cont/10 
* CE 23 is refined into CE [42,43,44] 
* CE 24 is refined into CE [45] 


### Cost equations --> "Loop" of n_lbl92___1_loop_cont/10 
* CEs [44] --> Loop 34 
* CEs [42,43] --> Loop 35 
* CEs [45] --> Loop 36 

### Ranking functions of CR n_lbl92___1_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR n_lbl92___1_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations n_lbl92___7/9 
* CE 10 is refined into CE [46,47,48] 
* CE 9 is refined into CE [49,50] 


### Cost equations --> "Loop" of n_lbl92___7/9 
* CEs [49,50] --> Loop 37 
* CEs [46,47,48] --> Loop 38 

### Ranking functions of CR n_lbl92___7(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_lbl92___7(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_start___9/9 
* CE 4 is refined into CE [51] 
* CE 3 is refined into CE [52,53] 
* CE 2 is refined into CE [54] 


### Cost equations --> "Loop" of n_start___9/9 
* CEs [51] --> Loop 39 
* CEs [53] --> Loop 40 
* CEs [54] --> Loop 41 
* CEs [52] --> Loop 42 

### Ranking functions of CR n_start___9(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_start___9(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations pyRinit/9 
* CE 1 is refined into CE [55,56,57,58] 


### Cost equations --> "Loop" of pyRinit/9 
* CEs [58] --> Loop 43 
* CEs [57] --> Loop 44 
* CEs [56] --> Loop 45 
* CEs [55] --> Loop 46 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 


Computing Bounds
=====================================

#### Cost of chains of n_lbl82___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[21],23]: 1*it(21)+1
  Such that:it(21) =< -B+9

  with precondition: [I=2,K=9,O=10,F=B+1,A=J,C=L,H=M,E=N,G=P,H+1=Q,9>=F,4>=H,F>=3,H>=3,H>=A] 

* Chain [[21],22]: 1*it(21)+0
  Such that:it(21) =< -F+10

  with precondition: [I=3,F=B+1,9>=F,4>=H,F>=3,H>=3,H>=A] 

* Chain [22]: 0
  with precondition: [I=3,F=B+1,4>=H,F>=3,H>=3,H>=A] 


#### Cost of chains of n_lbl82___2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [26]: 1*s(2)+4
  Such that:s(2) =< 7

  with precondition: [B=0,D=3,F=1,H=4,I=4,3>=A] 

* Chain [25]: 9
  with precondition: [B=0,F=1,I=3,D+1=H,3>=D,D>=2,D>=A] 

* Chain [24,26]: 2*s(2)+8
  Such that:aux(1) =< 7
s(2) =< aux(1)

  with precondition: [B=0,D=2,F=1,H=3,I=4,2>=A] 

* Chain [24,25]: 1*s(4)+13
  Such that:s(4) =< 7

  with precondition: [B=0,D=2,F=1,H=3,I=3,2>=A] 


#### Cost of chains of n_lbl82___5_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [28]: 0
  with precondition: [A=3] 

* Chain [27]: 0
  with precondition: [A=4] 


#### Cost of chains of n_lbl82___8(A,B,C,D,E,F,G,H,I):
* Chain [30]: 52
  with precondition: [B=0,F=1,H=A,E=D,4>=H,H>=3] 

* Chain [29]: 1*s(10)+4
  Such that:s(10) =< 7

  with precondition: [A=4,B=0,F=1,H=4,E=D] 


#### Cost of chains of n_lbl92___1(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[31],33]: 1*it(31)+1
  Such that:it(31) =< -D+2

  with precondition: [F=0,I=5,K=0,M=2,O=1,Q=3,B=C,H=D+1,A=J,B=L,E=N,G=P,2>=H,H>=A+2] 

* Chain [[31],32]: 1*it(31)+0
  Such that:it(31) =< -H+3

  with precondition: [F=0,I=3,B=C,H=D+1,2>=H,H>=A+2] 

* Chain [33]: 1
  with precondition: [D=2,F=0,H=3,I=5,K=0,M=2,O=1,Q=3,C=B,N=E,P=G,A=J,C=L,1>=A] 

* Chain [32]: 0
  with precondition: [F=0,I=3,C=B,H=D+1,3>=H,H>=A+2] 


#### Cost of chains of n_lbl92___1_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [36]: 0
  with precondition: [A=3] 

* Chain [35]: 34
  with precondition: [A=5,C=0,G=1,E+1=I,3>=E,E>=2,E>=B] 

* Chain [34]: 1*s(15)+4
  Such that:s(15) =< 7

  with precondition: [A=5,C=0,E=3,G=1,I=4,3>=B] 


#### Cost of chains of n_lbl92___7(A,B,C,D,E,F,G,H,I):
* Chain [38]: 1*s(17)+1*s(18)+43
  Such that:s(17) =< -D+1
s(18) =< -H+2

  with precondition: [F=0,D=A,C=B,D+1=H,1>=D] 

* Chain [37]: 35
  with precondition: [A=2,D=2,F=0,H=3,C=B] 


#### Cost of chains of n_start___9(A,B,C,D,E,F,G,H,I):
* Chain [42]: 36
  with precondition: [A=2,H=2,C=B,E=D,G=F] 

* Chain [41]: 60
  with precondition: [H=A,C=B,E=D,G=F,4>=H,H>=3] 

* Chain [40]: 2*s(21)+44
  Such that:aux(4) =< -A+1
s(21) =< aux(4)

  with precondition: [H=A,C=B,E=D,G=F,1>=H] 

* Chain [39]: 1
  with precondition: [H=A,C=B,E=D,G=F,H>=5] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G,H,I):
* Chain [46]: 38
  with precondition: [A=2] 

* Chain [45]: 62
  with precondition: [4>=A,A>=3] 

* Chain [44]: 2*s(24)+46
  Such that:s(23) =< -A+1
s(24) =< s(23)

  with precondition: [1>=A] 

* Chain [43]: 3
  with precondition: [A>=5] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G,H,I): 
-------------------------------------
* Chain [46] with precondition: [A=2] 
    - Upper bound: 38 
    - Complexity: constant 
* Chain [45] with precondition: [4>=A,A>=3] 
    - Upper bound: 62 
    - Complexity: constant 
* Chain [44] with precondition: [1>=A] 
    - Upper bound: -2*A+48 
    - Complexity: n 
* Chain [43] with precondition: [A>=5] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C,D,E,F,G,H,I): max([59,nat(-A+1)*2+43])+3 
Asymptotic class: n 
* Total analysis performed in 862 ms.


-- stats
realtime 0:00.97
usertime 0.92
systime 0.01

