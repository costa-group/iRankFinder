WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb3in___3/7,n_evalfbb4in___2/7,n_evalfbbin___1/7]
1. recursive  : [n_evalfbb3in___3_loop_cont/8,n_evalfbb3in___7/7,n_evalfbb4in___6/7,n_evalfbbin___5/7]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalfstop___4/4]
4. non_recursive  : [n_evalfbb3in___7_loop_cont/5]
5. non_recursive  : [n_evalfstart/4]
6. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb3in___3/7
1. SCC is partially evaluated into n_evalfbb3in___7/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalfbb3in___7_loop_cont/5
5. SCC is partially evaluated into n_evalfstart/4
6. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb3in___3/7 
* CE 12 is refined into CE [15] 
* CE 14 is refined into CE [16] 
* CE 10 is refined into CE [17] 
* CE 13 is refined into CE [18] 
* CE 11 is refined into CE [19] 


### Cost equations --> "Loop" of n_evalfbb3in___3/7 
* CEs [19] --> Loop 13 
* CEs [15] --> Loop 14 
* CEs [16] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [18] --> Loop 17 

### Ranking functions of CR n_evalfbb3in___3(A,B,C,D,E,F,G) 
* RF of phase [13]: [A-C,B]

#### Partial ranking functions of CR n_evalfbb3in___3(A,B,C,D,E,F,G) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    A-C
    B


### Specialization of cost equations n_evalfbb3in___7/7 
* CE 4 is refined into CE [20] 
* CE 7 is refined into CE [21] 
* CE 5 is refined into CE [22,23] 
* CE 6 is refined into CE [24] 
* CE 3 is refined into CE [25,26] 


### Cost equations --> "Loop" of n_evalfbb3in___7/7 
* CEs [26] --> Loop 18 
* CEs [25] --> Loop 19 
* CEs [20,21] --> Loop 20 
* CEs [22,23,24] --> Loop 21 

### Ranking functions of CR n_evalfbb3in___7(A,B,C,D,E,F,G) 
* RF of phase [18]: [-A/2+B/2,B/2-1]
* RF of phase [19]: [B-1]

#### Partial ranking functions of CR n_evalfbb3in___7(A,B,C,D,E,F,G) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    -A/2+B/2
    B/2-1
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    B-1


### Specialization of cost equations n_evalfbb3in___7_loop_cont/5 
* CE 8 is refined into CE [27] 
* CE 9 is refined into CE [28] 


### Cost equations --> "Loop" of n_evalfbb3in___7_loop_cont/5 
* CEs [27] --> Loop 22 
* CEs [28] --> Loop 23 

### Ranking functions of CR n_evalfbb3in___7_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb3in___7_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalfstart/4 
* CE 2 is refined into CE [29,30] 


### Cost equations --> "Loop" of n_evalfstart/4 
* CEs [29,30] --> Loop 24 

### Ranking functions of CR n_evalfstart(A,B,C,D) 

#### Partial ranking functions of CR n_evalfstart(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [31] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [31] --> Loop 25 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb3in___3(A,B,C,D,E,F,G):
* Chain [[13],17]: 3*it(13)+1
  Such that:it(13) =< B

  with precondition: [D=2,B>=1,C>=1,A>=B+C] 

* Chain [[13],16]: 3*it(13)+2
  Such that:it(13) =< B

  with precondition: [D=2,B>=2,C>=1,A>=C+1] 

* Chain [[13],15]: 3*it(13)+0
  Such that:it(13) =< B

  with precondition: [D=3,B>=1,C>=1,A>=C+1] 

* Chain [[13],14]: 3*it(13)+3
  Such that:it(13) =< B-F

  with precondition: [D=4,G=0,A=E,A+F=B+C,C>=1,A>=C+1,B+C>=A+1] 

* Chain [17]: 1
  with precondition: [B=0,D=2,C>=1,A>=C] 

* Chain [16]: 2
  with precondition: [D=2,B>=1,C>=1,A>=C] 

* Chain [15]: 0
  with precondition: [D=3,B>=0,C>=1,A>=C] 

* Chain [14]: 3
  with precondition: [D=4,G=0,C=A,C=E,B=F,B>=1,C>=1] 


#### Cost of chains of n_evalfbb3in___7(A,B,C,D,E,F,G):
* Chain [[19],21]: 12*it(19)+5
  Such that:aux(2) =< B
it(19) =< aux(2)

  with precondition: [A=1,C=0,D=2,B>=2] 

* Chain [[19],20]: 9*it(19)+3
  Such that:aux(3) =< B
it(19) =< aux(3)

  with precondition: [A=1,C=0,D=3,B>=2] 

* Chain [[18],21]: 15*it(18)+5
  Such that:aux(4) =< B
it(18) =< aux(4)

  with precondition: [C=0,D=2,A>=2,B>=A+1] 

* Chain [[18],20]: 12*it(18)+3
  Such that:aux(5) =< B
it(18) =< aux(5)

  with precondition: [C=0,D=3,A>=2,B>=A+1] 

* Chain [21]: 6*s(5)+5
  Such that:s(4) =< B
s(5) =< s(4)

  with precondition: [C=0,D=2,A>=1,B>=1] 

* Chain [20]: 3*s(6)+3
  Such that:s(6) =< B

  with precondition: [C=0,D=3,A>=1,B>=1] 


#### Cost of chains of n_evalfbb3in___7_loop_cont(A,B,C,D,E):
* Chain [23]: 0
  with precondition: [A=2] 

* Chain [22]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalfstart(A,B,C,D):
* Chain [24]: 57*s(22)+6
  Such that:aux(8) =< A
s(22) =< aux(8)

  with precondition: [A>=1,B>=1] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [25]: 57*s(26)+7
  Such that:s(25) =< A
s(26) =< s(25)

  with precondition: [A>=1,B>=1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [25] with precondition: [A>=1,B>=1] 
    - Upper bound: 57*A+7 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): 57*A+7 
Asymptotic class: n 
* Total analysis performed in 348 ms.


-- stats
realtime 0:00.40
usertime 0.39
systime 0.01

