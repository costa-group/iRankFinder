WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalNestedSinglebb2in___4/7,n_evalNestedSinglebb3in___2/7]
1. recursive  : [n_evalNestedSinglebb2in___4_loop_cont/8,n_evalNestedSinglebb2in___7/7,n_evalNestedSinglebb3in___5/7,n_evalNestedSinglebb5in___3/7]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalNestedSinglestop___6/4]
4. non_recursive  : [n_evalNestedSinglebb5in___1/4]
5. non_recursive  : [n_evalNestedSinglebb2in___7_loop_cont/5]
6. non_recursive  : [n_evalNestedSinglebb5in___8/4]
7. non_recursive  : [n_evalNestedSinglestart/4]
8. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalNestedSinglebb2in___4/7
1. SCC is partially evaluated into n_evalNestedSinglebb2in___7/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_evalNestedSinglebb2in___7_loop_cont/5
6. SCC is partially evaluated into n_evalNestedSinglebb5in___8/4
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalNestedSinglebb2in___4/7 
* CE 14 is refined into CE [18] 
* CE 17 is refined into CE [19] 
* CE 16 is refined into CE [20] 
* CE 15 is refined into CE [21] 


### Cost equations --> "Loop" of n_evalNestedSinglebb2in___4/7 
* CEs [21] --> Loop 15 
* CEs [18] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [20] --> Loop 18 

### Ranking functions of CR n_evalNestedSinglebb2in___4(A,B,C,D,E,F,G) 
* RF of phase [15]: [B-C]

#### Partial ranking functions of CR n_evalNestedSinglebb2in___4(A,B,C,D,E,F,G) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    B-C


### Specialization of cost equations n_evalNestedSinglebb2in___7/7 
* CE 7 is refined into CE [22,23] 
* CE 9 is refined into CE [24] 
* CE 4 is refined into CE [25] 
* CE 10 is refined into CE [26] 
* CE 5 is refined into CE [27,28] 
* CE 6 is refined into CE [29,30] 
* CE 8 is refined into CE [31] 


### Cost equations --> "Loop" of n_evalNestedSinglebb2in___7/7 
* CEs [30] --> Loop 19 
* CEs [29] --> Loop 20 
* CEs [31] --> Loop 21 
* CEs [23] --> Loop 22 
* CEs [24] --> Loop 23 
* CEs [22] --> Loop 24 
* CEs [25,26] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [27] --> Loop 27 

### Ranking functions of CR n_evalNestedSinglebb2in___7(A,B,C,D,E,F,G) 
* RF of phase [19,20,21]: [-A+B-1]

#### Partial ranking functions of CR n_evalNestedSinglebb2in___7(A,B,C,D,E,F,G) 
* Partial RF of phase [19,20,21]:
  - RF of loop [19:1]:
    -A/3+B/3-1
  - RF of loop [20:1]:
    -A/2+B/2-1
    B/2-C/2-1
  - RF of loop [21:1]:
    -A+B-1
    B-C-1


### Specialization of cost equations n_evalNestedSinglebb2in___7_loop_cont/5 
* CE 12 is refined into CE [32] 
* CE 11 is refined into CE [33] 
* CE 13 is refined into CE [34] 


### Cost equations --> "Loop" of n_evalNestedSinglebb2in___7_loop_cont/5 
* CEs [32] --> Loop 28 
* CEs [33] --> Loop 29 
* CEs [34] --> Loop 30 

### Ranking functions of CR n_evalNestedSinglebb2in___7_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalNestedSinglebb2in___7_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalNestedSinglebb5in___8/4 
* CE 2 is refined into CE [35,36,37,38,39,40] 
* CE 3 is refined into CE [41] 


### Cost equations --> "Loop" of n_evalNestedSinglebb5in___8/4 
* CEs [41] --> Loop 31 
* CEs [39] --> Loop 32 
* CEs [35,36,37,38,40] --> Loop 33 

### Ranking functions of CR n_evalNestedSinglebb5in___8(A,B,C,D) 

#### Partial ranking functions of CR n_evalNestedSinglebb5in___8(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [42,43] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [42] --> Loop 34 
* CEs [43] --> Loop 35 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalNestedSinglebb2in___4(A,B,C,D,E,F,G):
* Chain [[15],18]: 2*it(15)+1
  Such that:it(15) =< -C+G

  with precondition: [D=2,B+1=E,B=F,B=G,A>=0,C>=A+1,B>=C+1] 

* Chain [[15],17]: 2*it(15)+0
  Such that:it(15) =< B-C

  with precondition: [D=3,A>=0,C>=A+1,B>=C+1] 

* Chain [[15],16]: 2*it(15)+2
  Such that:it(15) =< -C+G

  with precondition: [D=4,B=F,E=G+1,A>=0,C>=A+1,E>=C+2,B>=E] 

* Chain [18]: 1
  with precondition: [D=2,C=B,C+1=E,C=F,C=G,A>=0,C>=A+1] 

* Chain [17]: 0
  with precondition: [D=3,A>=0,C>=A+1,B>=C] 

* Chain [16]: 2
  with precondition: [D=4,C+1=E,B=F,C=G,A>=0,C>=A+1,B>=C+1] 


#### Cost of chains of n_evalNestedSinglebb2in___7(A,B,C,D,E,F,G):
* Chain [[19,20,21],27]: 5*it(19)+5*it(20)+5*it(21)+3
  Such that:it(20) =< -A/2+G/2
it(19) =< -A/3+G/3
aux(5) =< -A+G
it(19) =< aux(5)
it(20) =< aux(5)
it(21) =< aux(5)

  with precondition: [D=2,A=C,B+1=E,B=F,B=G,A>=0,B>=A+2] 

* Chain [[19,20,21],26]: 17*it(19)+3
  Such that:aux(6) =< -A+G
it(19) =< aux(6)

  with precondition: [D=2,A=C,B+1=E,B=F,B=G,A>=0,B>=A+3] 

* Chain [[19,20,21],25]: 17*it(19)+2
  Such that:aux(7) =< B-C
it(19) =< aux(7)

  with precondition: [D=3,A=C,A>=0,B>=A+2] 

* Chain [[19,20,21],24]: 5*it(19)+5*it(20)+5*it(21)+5
  Such that:it(20) =< B/2-C/2
it(19) =< B/3-C/3
aux(8) =< B-C
it(19) =< aux(8)
it(20) =< aux(8)
it(21) =< aux(8)

  with precondition: [D=5,A=C,A>=0,B>=A+3] 

* Chain [[19,20,21],23]: 5*it(19)+5*it(20)+5*it(21)+3
  Such that:it(20) =< B/2-C/2
it(19) =< B/3-C/3
aux(9) =< B-C
it(19) =< aux(9)
it(20) =< aux(9)
it(21) =< aux(9)

  with precondition: [D=5,A=C,A>=0,B>=A+2] 

* Chain [[19,20,21],22]: 17*it(19)+5
  Such that:aux(10) =< B-C
it(19) =< aux(10)

  with precondition: [D=5,A=C,A>=0,B>=A+4] 

* Chain [27]: 3
  with precondition: [D=2,A+1=B,A=C,A+2=E,A+1=F,A+1=G,A>=0] 

* Chain [26]: 2*s(5)+3
  Such that:s(5) =< B-C

  with precondition: [D=2,C=A,B+1=E,B=F,B=G,C>=0,B>=C+2] 

* Chain [25]: 2*s(6)+2
  Such that:s(6) =< -A+B

  with precondition: [D=3,C=A,C>=0,B>=C+1] 

* Chain [24]: 5
  with precondition: [D=5,A+2=B,A=C,A>=0] 

* Chain [23]: 3
  with precondition: [D=5,A+1=B,A=C,A>=0] 

* Chain [22]: 2*s(7)+5
  Such that:s(7) =< B-C

  with precondition: [D=5,C=A,C>=0,B>=C+3] 


#### Cost of chains of n_evalNestedSinglebb2in___7_loop_cont(A,B,C,D,E):
* Chain [30]: 1
  with precondition: [A=2,B=C+1,B=D+1,B>=2] 

* Chain [29]: 0
  with precondition: [A=3] 

* Chain [28]: 0
  with precondition: [A=5] 


#### Cost of chains of n_evalNestedSinglebb5in___8(A,B,C,D):
* Chain [33]: 15*s(29)+15*s(30)+72*s(31)+6
  Such that:aux(17) =< B
aux(18) =< B/2
aux(19) =< B/3
s(29) =< aux(18)
s(30) =< aux(19)
s(31) =< aux(17)
s(30) =< aux(17)
s(29) =< aux(17)

  with precondition: [A=0,B>=1] 

* Chain [32]: 6
  with precondition: [A=0,B=2] 

* Chain [31]: 1
  with precondition: [A=0,0>=B] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [35]: 3
  with precondition: [0>=B] 

* Chain [34]: 15*s(52)+15*s(53)+72*s(54)+8
  Such that:s(49) =< B
s(50) =< B/2
s(51) =< B/3
s(52) =< s(50)
s(53) =< s(51)
s(54) =< s(49)
s(53) =< s(49)
s(52) =< s(49)

  with precondition: [B>=1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [35] with precondition: [0>=B] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [34] with precondition: [B>=1] 
    - Upper bound: 169/2*B+8 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): nat(B)*72+5+nat(B/2)*15+nat(B/3)*15+3 
Asymptotic class: n 
* Total analysis performed in 530 ms.


-- stats
realtime 0:00.59
usertime 0.58
systime 0.00

