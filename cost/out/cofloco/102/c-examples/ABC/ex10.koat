WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb2in___2/7]
1. recursive  : [n_evalfbb2in___2_loop_cont/8,n_evalfbb2in___4/7,n_evalfbb4in___1/7]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalfstop___3/4]
4. non_recursive  : [n_evalfbb2in___4_loop_cont/5]
5. non_recursive  : [n_evalfbb4in___5/4]
6. non_recursive  : [n_evalfstart/4]
7. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb2in___2/7
1. SCC is partially evaluated into n_evalfbb2in___4/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalfbb2in___4_loop_cont/5
5. SCC is partially evaluated into n_evalfbb4in___5/4
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb2in___2/7 
* CE 14 is refined into CE [15] 
* CE 13 is refined into CE [16] 
* CE 12 is refined into CE [17] 


### Cost equations --> "Loop" of n_evalfbb2in___2/7 
* CEs [17] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR n_evalfbb2in___2(A,B,C,D,E,F,G) 
* RF of phase [14]: [A-C+1]

#### Partial ranking functions of CR n_evalfbb2in___2(A,B,C,D,E,F,G) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    A-C+1


### Specialization of cost equations n_evalfbb2in___4/7 
* CE 6 is refined into CE [18,19] 
* CE 4 is refined into CE [20] 
* CE 9 is refined into CE [21] 
* CE 7 is refined into CE [22] 
* CE 5 is refined into CE [23,24] 
* CE 8 is refined into CE [25] 


### Cost equations --> "Loop" of n_evalfbb2in___4/7 
* CEs [24] --> Loop 17 
* CEs [25] --> Loop 18 
* CEs [23] --> Loop 19 
* CEs [20,21] --> Loop 20 
* CEs [19] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [18] --> Loop 23 

### Ranking functions of CR n_evalfbb2in___4(A,B,C,D,E,F,G) 
* RF of phase [17]: [B-1]
* RF of phase [18]: [B-1]
* RF of phase [19]: [B-1]

#### Partial ranking functions of CR n_evalfbb2in___4(A,B,C,D,E,F,G) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    B-1
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    B-1
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    B-1


### Specialization of cost equations n_evalfbb2in___4_loop_cont/5 
* CE 11 is refined into CE [26] 
* CE 10 is refined into CE [27] 


### Cost equations --> "Loop" of n_evalfbb2in___4_loop_cont/5 
* CEs [26] --> Loop 24 
* CEs [27] --> Loop 25 

### Ranking functions of CR n_evalfbb2in___4_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb2in___4_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalfbb4in___5/4 
* CE 2 is refined into CE [28,29,30,31,32,33,34,35,36] 
* CE 3 is refined into CE [37] 


### Cost equations --> "Loop" of n_evalfbb4in___5/4 
* CEs [34,36] --> Loop 26 
* CEs [37] --> Loop 27 
* CEs [33,35] --> Loop 28 
* CEs [32] --> Loop 29 
* CEs [31] --> Loop 30 
* CEs [30] --> Loop 31 
* CEs [28,29] --> Loop 32 

### Ranking functions of CR n_evalfbb4in___5(A,B,C,D) 

#### Partial ranking functions of CR n_evalfbb4in___5(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [38,39,40,41,42,43] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [41] --> Loop 33 
* CEs [42] --> Loop 34 
* CEs [40] --> Loop 35 
* CEs [38,39,43] --> Loop 36 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb2in___2(A,B,C,D,E,F,G):
* Chain [[14],16]: 1*it(14)+1
  Such that:it(14) =< -C+G

  with precondition: [D=2,A=E,B=F+1,A+1=G,B>=1,C>=2,A>=C] 

* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< A-C+1

  with precondition: [D=3,B>=1,C>=2,A>=C] 

* Chain [16]: 1
  with precondition: [D=2,C=A+1,C=E+1,B=F+1,C=G,B>=1,C>=2] 

* Chain [15]: 0
  with precondition: [D=3,B>=1,C>=2,A+1>=C] 


#### Cost of chains of n_evalfbb2in___4(A,B,C,D,E,F,G):
* Chain [[19],23]: 3*it(19)+3
  Such that:it(19) =< B

  with precondition: [A=1,C=1,D=4,B>=2] 

* Chain [[19],20]: 3*it(19)+1*s(2)+1
  Such that:s(2) =< 1
it(19) =< B

  with precondition: [A=1,C=1,D=3,B>=2] 

* Chain [[18],22]: 2*it(18)+2
  Such that:it(18) =< B

  with precondition: [C=1,D=4,0>=A,B>=2] 

* Chain [[18],20]: 2*it(18)+1*s(2)+1
  Such that:s(2) =< A
it(18) =< B

  with precondition: [C=1,D=3,0>=A,B>=2] 

* Chain [[17],21]: 3*it(17)+1*s(3)+1*s(6)+3
  Such that:it(17) =< B
aux(2) =< A
s(3) =< aux(2)
s(6) =< it(17)*aux(2)

  with precondition: [C=1,D=4,A>=2,B>=2] 

* Chain [[17],20]: 3*it(17)+1*s(2)+1*s(6)+1
  Such that:it(17) =< B
aux(3) =< A
s(2) =< aux(3)
s(6) =< it(17)*aux(3)

  with precondition: [C=1,D=3,A>=2,B>=2] 

* Chain [23]: 3
  with precondition: [A=1,B=1,C=1,D=4] 

* Chain [22]: 2
  with precondition: [B=1,C=1,D=4,0>=A] 

* Chain [21]: 1*s(3)+3
  Such that:s(3) =< A

  with precondition: [B=1,C=1,D=4,A>=2] 

* Chain [20]: 1*s(2)+1
  Such that:s(2) =< A

  with precondition: [C=1,D=3,B>=1] 


#### Cost of chains of n_evalfbb2in___4_loop_cont(A,B,C,D,E):
* Chain [25]: 0
  with precondition: [A=3] 

* Chain [24]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalfbb4in___5(A,B,C,D):
* Chain [32]: 1*s(10)+1*s(11)+3*s(12)+4
  Such that:s(10) =< 1
s(11) =< A
s(12) =< B

  with precondition: [B>=1] 

* Chain [31]: 3*s(13)+4
  Such that:s(13) =< B

  with precondition: [A=1,B>=2] 

* Chain [30]: 3
  with precondition: [B=1,0>=A] 

* Chain [29]: 1*s(14)+4
  Such that:s(14) =< A

  with precondition: [B=1,A>=2] 

* Chain [28]: 1*s(15)+4*s(16)+3
  Such that:s(15) =< A
aux(4) =< B
s(16) =< aux(4)

  with precondition: [0>=A,B>=2] 

* Chain [27]: 1
  with precondition: [0>=B] 

* Chain [26]: 6*s(18)+2*s(20)+2*s(21)+4
  Such that:aux(5) =< A
aux(6) =< B
s(18) =< aux(6)
s(20) =< aux(5)
s(21) =< s(18)*aux(5)

  with precondition: [A>=2,B>=2] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [36]: 1*s(30)+3*s(31)+12*s(33)+2*s(38)+6
  Such that:s(30) =< 1
aux(8) =< A
aux(9) =< B
s(31) =< aux(9)
s(33) =< aux(8)
s(38) =< s(33)*aux(9)

  with precondition: [A>=1] 

* Chain [35]: 1*s(39)+6
  Such that:s(39) =< B

  with precondition: [A=1,B>=2] 

* Chain [34]: 3
  with precondition: [0>=A] 

* Chain [33]: 1*s(40)+4*s(42)+5
  Such that:s(41) =< A
s(40) =< B
s(42) =< s(41)

  with precondition: [0>=B,A>=2] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [36] with precondition: [A>=1] 
    - Upper bound: 12*A+7+nat(B)*3+nat(B)*2*A 
    - Complexity: n^2 
* Chain [35] with precondition: [A=1,B>=2] 
    - Upper bound: B+6 
    - Complexity: n 
* Chain [34] with precondition: [0>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [33] with precondition: [0>=B,A>=2] 
    - Upper bound: 4*A+5 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): max([nat(B)+3,nat(A)*8+2+nat(B)*3+nat(B)*2*nat(A)+ (nat(A)*4+2)])+3 
Asymptotic class: n^2 
* Total analysis performed in 337 ms.


-- stats
realtime 0:00.40
usertime 0.38
systime 0.00

