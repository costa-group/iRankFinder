WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalsipmabubblebb1in___2/5,n_evalsipmabubblebb4in___3/5]
1. recursive  : [n_evalsipmabubblebb1in___5/5,n_evalsipmabubblebb4in___3_loop_cont/6,n_evalsipmabubblebb4in___7/5,n_evalsipmabubblebb6in___1/5]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalsipmabubblestop___6/3]
4. non_recursive  : [n_evalsipmabubblebb6in___4/3]
5. non_recursive  : [n_evalsipmabubblebb4in___7_loop_cont/4]
6. non_recursive  : [n_evalsipmabubblebb6in___8/3]
7. non_recursive  : [n_evalsipmabubblestart/3]
8. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalsipmabubblebb4in___3/5
1. SCC is partially evaluated into n_evalsipmabubblebb4in___7/5
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_evalsipmabubblebb4in___7_loop_cont/4
6. SCC is partially evaluated into n_evalsipmabubblebb6in___8/3
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalsipmabubblebb4in___3/5 
* CE 12 is refined into CE [13] 
* CE 11 is refined into CE [14] 
* CE 10 is refined into CE [15] 


### Cost equations --> "Loop" of n_evalsipmabubblebb4in___3/5 
* CEs [15] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

### Ranking functions of CR n_evalsipmabubblebb4in___3(A,B,C,D,E) 
* RF of phase [12]: [A-B]

#### Partial ranking functions of CR n_evalsipmabubblebb4in___3(A,B,C,D,E) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    A-B


### Specialization of cost equations n_evalsipmabubblebb4in___7/5 
* CE 4 is refined into CE [16] 
* CE 7 is refined into CE [17] 
* CE 6 is refined into CE [18] 
* CE 5 is refined into CE [19,20] 


### Cost equations --> "Loop" of n_evalsipmabubblebb4in___7/5 
* CEs [20] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [16,17] --> Loop 17 
* CEs [18] --> Loop 18 

### Ranking functions of CR n_evalsipmabubblebb4in___7(A,B,C,D,E) 
* RF of phase [15]: [A-1]

#### Partial ranking functions of CR n_evalsipmabubblebb4in___7(A,B,C,D,E) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    A-1


### Specialization of cost equations n_evalsipmabubblebb4in___7_loop_cont/4 
* CE 8 is refined into CE [21] 
* CE 9 is refined into CE [22] 


### Cost equations --> "Loop" of n_evalsipmabubblebb4in___7_loop_cont/4 
* CEs [21] --> Loop 19 
* CEs [22] --> Loop 20 

### Ranking functions of CR n_evalsipmabubblebb4in___7_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evalsipmabubblebb4in___7_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evalsipmabubblebb6in___8/3 
* CE 2 is refined into CE [23,24,25,26] 
* CE 3 is refined into CE [27] 


### Cost equations --> "Loop" of n_evalsipmabubblebb6in___8/3 
* CEs [27] --> Loop 21 
* CEs [25] --> Loop 22 
* CEs [23,24,26] --> Loop 23 

### Ranking functions of CR n_evalsipmabubblebb6in___8(A,B,C) 

#### Partial ranking functions of CR n_evalsipmabubblebb6in___8(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [28,29] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [28] --> Loop 24 
* CEs [29] --> Loop 25 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_evalsipmabubblebb4in___3(A,B,C,D,E):
* Chain [[12],14]: 2*it(12)+1
  Such that:it(12) =< -B+E

  with precondition: [C=2,A=D+1,A=E,B>=1,A>=B+1] 

* Chain [[12],13]: 2*it(12)+0
  Such that:it(12) =< A-B

  with precondition: [C=3,B>=1,A>=B+1] 

* Chain [14]: 1
  with precondition: [C=2,B=A,B=D+1,B=E,B>=1] 

* Chain [13]: 0
  with precondition: [C=3,B>=1,A>=B] 


#### Cost of chains of n_evalsipmabubblebb4in___7(A,B,C,D,E):
* Chain [[15],17]: 6*it(15)+2*s(5)+2
  Such that:aux(3) =< A
it(15) =< aux(3)
s(5) =< it(15)*aux(3)

  with precondition: [B=0,C=3,A>=2] 

* Chain [[15],16,18]: 4*it(15)+2*s(5)+5
  Such that:aux(4) =< A
it(15) =< aux(4)
s(5) =< it(15)*aux(4)

  with precondition: [B=0,C=4,D+1=0,E=0,A>=2] 

* Chain [[15],16,17]: 4*it(15)+2*s(5)+6
  Such that:aux(5) =< A
it(15) =< aux(5)
s(5) =< it(15)*aux(5)

  with precondition: [B=0,C=3,A>=2] 

* Chain [18]: 1
  with precondition: [A=0,B=0,C=4,D+1=0,E=0] 

* Chain [17]: 2*s(2)+2
  Such that:s(2) =< A

  with precondition: [B=0,C=3,A>=0] 

* Chain [16,18]: 5
  with precondition: [A=1,B=0,C=4,D+1=0,E=0] 

* Chain [16,17]: 6
  with precondition: [A=1,B=0,C=3] 


#### Cost of chains of n_evalsipmabubblebb4in___7_loop_cont(A,B,C,D):
* Chain [20]: 0
  with precondition: [A=3] 

* Chain [19]: 1
  with precondition: [A=4,B+1=0,C=0] 


#### Cost of chains of n_evalsipmabubblebb6in___8(A,B,C):
* Chain [23]: 16*s(14)+6*s(15)+7
  Such that:aux(7) =< A
s(14) =< aux(7)
s(15) =< s(14)*aux(7)

  with precondition: [A>=0] 

* Chain [22]: 7
  with precondition: [A=1] 

* Chain [21]: 1
  with precondition: [0>=A+1] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [25]: 3
  with precondition: [0>=A+1] 

* Chain [24]: 16*s(23)+6*s(24)+9
  Such that:s(22) =< A
s(23) =< s(22)
s(24) =< s(23)*s(22)

  with precondition: [A>=0] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [25] with precondition: [0>=A+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [24] with precondition: [A>=0] 
    - Upper bound: 16*A+9+6*A*A 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C): nat(A)*16+6+nat(A)*6*nat(A)+3 
Asymptotic class: n^2 
* Total analysis performed in 191 ms.


-- stats
realtime 0:00.25
usertime 0.22
systime 0.00

