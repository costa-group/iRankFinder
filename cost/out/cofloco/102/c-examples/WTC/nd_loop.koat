WORST_CASE(?,O(1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalndloopbbin___1/3]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_evalndloopstop___2/2]
3. non_recursive  : [n_evalndloopbbin___1_loop_cont/3]
4. non_recursive  : [n_evalndloopbbin___3/2]
5. non_recursive  : [n_evalndloopbbin___4/2]
6. non_recursive  : [n_evalndloopstart/2]
7. non_recursive  : [pyRinit/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalndloopbbin___1/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalndloopbbin___1_loop_cont/3
4. SCC is partially evaluated into n_evalndloopbbin___3/2
5. SCC is partially evaluated into n_evalndloopbbin___4/2
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalndloopbbin___1/3 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 


### Cost equations --> "Loop" of n_evalndloopbbin___1/3 
* CEs [13] --> Loop 9 
* CEs [11] --> Loop 10 
* CEs [12] --> Loop 11 

### Ranking functions of CR n_evalndloopbbin___1(A,B,C) 
* RF of phase [9]: [-A+9]

#### Partial ranking functions of CR n_evalndloopbbin___1(A,B,C) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -A+9


### Specialization of cost equations n_evalndloopbbin___1_loop_cont/3 
* CE 10 is refined into CE [14] 
* CE 9 is refined into CE [15] 


### Cost equations --> "Loop" of n_evalndloopbbin___1_loop_cont/3 
* CEs [14] --> Loop 12 
* CEs [15] --> Loop 13 

### Ranking functions of CR n_evalndloopbbin___1_loop_cont(A,B,C) 

#### Partial ranking functions of CR n_evalndloopbbin___1_loop_cont(A,B,C) 


### Specialization of cost equations n_evalndloopbbin___3/2 
* CE 4 is refined into CE [16,17] 
* CE 5 is refined into CE [18] 


### Cost equations --> "Loop" of n_evalndloopbbin___3/2 
* CEs [16,17,18] --> Loop 14 

### Ranking functions of CR n_evalndloopbbin___3(A,B) 

#### Partial ranking functions of CR n_evalndloopbbin___3(A,B) 


### Specialization of cost equations n_evalndloopbbin___4/2 
* CE 2 is refined into CE [19] 
* CE 3 is refined into CE [20] 


### Cost equations --> "Loop" of n_evalndloopbbin___4/2 
* CEs [19,20] --> Loop 15 

### Ranking functions of CR n_evalndloopbbin___4(A,B) 

#### Partial ranking functions of CR n_evalndloopbbin___4(A,B) 


### Specialization of cost equations pyRinit/2 
* CE 1 is refined into CE [21] 


### Cost equations --> "Loop" of pyRinit/2 
* CEs [21] --> Loop 16 

### Ranking functions of CR pyRinit(A,B) 

#### Partial ranking functions of CR pyRinit(A,B) 


Computing Bounds
=====================================

#### Cost of chains of n_evalndloopbbin___1(A,B,C):
* Chain [[9],11]: 1*it(9)+1
  Such that:it(9) =< -A+9

  with precondition: [B=2,8>=A,A>=2] 

* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< -A+9

  with precondition: [B=3,8>=A,A>=2] 

* Chain [11]: 1
  with precondition: [B=2,9>=A,A>=2] 

* Chain [10]: 0
  with precondition: [B=3,A>=2] 


#### Cost of chains of n_evalndloopbbin___1_loop_cont(A,B,C):
* Chain [13]: 0
  with precondition: [A=2] 

* Chain [12]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalndloopbbin___3(A,B):
* Chain [14]: 2*s(3)+2
  Such that:aux(1) =< -A+8
s(3) =< aux(1)

  with precondition: [2>=A,A>=1] 


#### Cost of chains of n_evalndloopbbin___4(A,B):
* Chain [15]: 17
  with precondition: [A=0] 


#### Cost of chains of pyRinit(A,B):
* Chain [16]: 19
  with precondition: [] 


Closed-form bounds of pyRinit(A,B): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: 19 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B): 19 
Asymptotic class: constant 
* Total analysis performed in 70 ms.


-- stats
realtime 0:00.10
usertime 0.10
systime 0.00

