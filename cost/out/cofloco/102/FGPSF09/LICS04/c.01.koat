WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_eval2___2/5]
1. recursive  : [n_eval1___1/3,n_eval1___3/3,n_eval2___2_loop_cont/4,n_eval2___4/3]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_eval2___4_loop_cont/2]
4. non_recursive  : [n_eval1___5/3]
5. non_recursive  : [n_start/3]
6. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_eval2___2/5
1. SCC is partially evaluated into n_eval2___4/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_eval1___5/3
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_eval2___2/5 
* CE 9 is refined into CE [10] 
* CE 7 is refined into CE [11] 
* CE 8 is refined into CE [12] 


### Cost equations --> "Loop" of n_eval2___2/5 
* CEs [12] --> Loop 9 
* CEs [10] --> Loop 10 
* CEs [11] --> Loop 11 

### Ranking functions of CR n_eval2___2(A,B,C,D,E) 
* RF of phase [9]: [A-B]

#### Partial ranking functions of CR n_eval2___2(A,B,C,D,E) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    A-B


### Specialization of cost equations n_eval2___4/3 
* CE 3 is refined into CE [13] 
* CE 6 is refined into CE [14] 
* CE 4 is refined into CE [15,16] 
* CE 5 is refined into CE [17] 


### Cost equations --> "Loop" of n_eval2___4/3 
* CEs [16] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [17] --> Loop 14 
* CEs [13,14] --> Loop 15 

### Ranking functions of CR n_eval2___4(A,B,C) 
* RF of phase [12]: [A-2]

#### Partial ranking functions of CR n_eval2___4(A,B,C) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    A-2


### Specialization of cost equations n_eval1___5/3 
* CE 2 is refined into CE [18,19] 


### Cost equations --> "Loop" of n_eval1___5/3 
* CEs [18,19] --> Loop 16 

### Ranking functions of CR n_eval1___5(A,B,C) 

#### Partial ranking functions of CR n_eval1___5(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [20] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [20] --> Loop 17 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_eval2___2(A,B,C,D,E):
* Chain [[9],11]: 1*it(9)+1
  Such that:it(9) =< -B+D+1

  with precondition: [C=2,A=D+1,B>=2,E>=2*B,E>=A,2*A>=E+2] 

* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< A-B

  with precondition: [C=3,B>=2,A>=B+1] 

* Chain [11]: 1
  with precondition: [C=2,A=D+1,B=E,B>=A,2*A>=B+2] 

* Chain [10]: 0
  with precondition: [C=3,B>=2,2*A>=B+2] 


#### Cost of chains of n_eval2___4(A,B,C):
* Chain [[12],15]: 4*it(12)+1*s(5)+1
  Such that:aux(3) =< A
it(12) =< aux(3)
s(5) =< it(12)*aux(3)

  with precondition: [B=1,C=3,A>=3] 

* Chain [[12],13,15]: 3*it(12)+1*s(2)+1*s(5)+4
  Such that:s(2) =< 1
aux(4) =< A
it(12) =< aux(4)
s(5) =< it(12)*aux(4)

  with precondition: [B=1,C=3,A>=3] 

* Chain [[12],13,14,15]: 3*it(12)+1*s(5)+6
  Such that:aux(5) =< A
it(12) =< aux(5)
s(5) =< it(12)*aux(5)

  with precondition: [B=1,C=3,A>=3] 

* Chain [15]: 1*s(2)+1
  Such that:s(2) =< A

  with precondition: [B=1,C=3,A>=0] 

* Chain [14,15]: 3
  with precondition: [A=1,B=1,C=3] 

* Chain [13,15]: 1*s(2)+4
  Such that:s(2) =< 1

  with precondition: [A=2,B=1,C=3] 

* Chain [13,14,15]: 6
  with precondition: [A=2,B=1,C=3] 


#### Cost of chains of n_eval1___5(A,B,C):
* Chain [16]: 1*s(18)+11*s(20)+3*s(21)+8
  Such that:s(18) =< 1
s(19) =< A
s(20) =< s(19)
s(21) =< s(20)*s(19)

  with precondition: [A>=0] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [17]: 1*s(22)+11*s(24)+3*s(25)+10
  Such that:s(22) =< 1
s(23) =< A
s(24) =< s(23)
s(25) =< s(24)*s(23)

  with precondition: [A>=0] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [17] with precondition: [A>=0] 
    - Upper bound: 11*A+11+3*A*A 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C): 11*A+11+3*A*A 
Asymptotic class: n^2 
* Total analysis performed in 193 ms.


-- stats
realtime 0:00.29
usertime 0.23
systime 0.00

