MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_eval___1/7]
1. recursive  : [n_eval___1_loop_cont/5,n_eval___2/4]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_eval___2_loop_cont/2]
4. non_recursive  : [n_start/4]
5. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_eval___1/7
1. SCC is partially evaluated into n_eval___2/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_start/4
5. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_eval___1/7 
* CE 9 is refined into CE [10] 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 


### Cost equations --> "Loop" of n_eval___1/7 
* CEs [12] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [11] --> Loop 10 

### Ranking functions of CR n_eval___1(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_eval___1(A,B,C,D,E,F,G) 


### Specialization of cost equations n_eval___2/4 
* CE 3 is refined into CE [13,14] 
* CE 6 is refined into CE [15] 
* CE 4 is refined into CE [16,17,18] 
* CE 5 is refined into CE [19] 


### Cost equations --> "Loop" of n_eval___2/4 
* CEs [17] --> Loop 11 
* CEs [19] --> Loop 12 
* CEs [16] --> Loop 13 
* CEs [18] --> Loop 14 
* CEs [13,15] --> Loop 15 
* CEs [14] --> Loop 16 

### Ranking functions of CR n_eval___2(A,B,C,D) 

#### Partial ranking functions of CR n_eval___2(A,B,C,D) 


### Specialization of cost equations n_start/4 
* CE 2 is refined into CE [20,21,22,23] 


### Cost equations --> "Loop" of n_start/4 
* CEs [21,22,23] --> Loop 17 
* CEs [20] --> Loop 18 

### Ranking functions of CR n_start(A,B,C,D) 

#### Partial ranking functions of CR n_start(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [24,25] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [25] --> Loop 19 
* CEs [24] --> Loop 20 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_eval___1(A,B,C,D,E,F,G):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [A>=B,2*A>=B+2,D>=2,3>=D] 

* Chain [[8],10]: 1*it(8)+1
  with precondition: [D=2,C=G+1,A>=B,2*A>=B+2,C+E>=A+1] 

* Chain [[8],9]: 1*it(8)+0
  with precondition: [D=3,A>=B,2*A>=B+2] 

* Chain [10]: 1
  with precondition: [D=2,C=G+1,A=C+E,A>=B,2*A>=B+2] 

* Chain [9]: 0
  with precondition: [D=3,2*A>=B+2] 


#### Cost of chains of n_eval___2(A,B,C,D):
* Chain [[11,12,13,14]]...: 8*it(11)+0
  with precondition: [A>=B,D=3] 

* Chain [[11,12,13,14],16]...: 9*it(11)+1
  with precondition: [D=3,A>=B] 

* Chain [[11,12,13,14],15]: 9*aux(2)+0
  with precondition: [D=3,A>=B] 

* Chain [16]...: 1*s(8)+1
  with precondition: [D=3,1>=B,A>=B] 

* Chain [15]: 1*aux(2)+0
  with precondition: [D=3] 


#### Cost of chains of n_start(A,B,C,D):
* Chain [18]: 1*s(12)+1
  with precondition: [] 

* Chain [17]...: 1*aux(4)+0
  with precondition: [A>=B] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [20]: 1*s(16)+2
  with precondition: [] 

* Chain [19]...: 1*s(17)+1
  with precondition: [A>=B] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [19]... with precondition: [A>=B] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of pyRinit(A,B,C,D): inf 
Asymptotic class: infinity 
* Total analysis performed in 173 ms.


-- stats
realtime 0:00.28
usertime 0.22
systime 0.00

