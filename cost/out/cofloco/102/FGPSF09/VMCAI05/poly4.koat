WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_eval___1/6]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_eval___1_loop_cont/2]
3. recursive  : [n_eval___2/6]
4. non_recursive  : [n_eval___2_loop_cont/2]
5. recursive  : [n_eval___4/11]
6. recursive  : [n_eval___3/11,n_eval___4_loop_cont/12]
7. non_recursive  : [n_eval___3_loop_cont/7]
8. non_recursive  : [n_eval___5/6]
9. non_recursive  : [n_start/6]
10. non_recursive  : [pyRinit/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_eval___1/6
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_eval___2/6
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_eval___4/11
6. SCC is partially evaluated into n_eval___3/11
7. SCC is partially evaluated into n_eval___3_loop_cont/7
8. SCC is partially evaluated into n_eval___5/6
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into pyRinit/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_eval___1/6 
* CE 22 is refined into CE [25] 
* CE 21 is refined into CE [26] 


### Cost equations --> "Loop" of n_eval___1/6 
* CEs [26] --> Loop 20 
* CEs [25] --> Loop 21 

### Ranking functions of CR n_eval___1(A,B,C,D,E,F) 
* RF of phase [20]: [A-B]

#### Partial ranking functions of CR n_eval___1(A,B,C,D,E,F) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    A-B


### Specialization of cost equations n_eval___2/6 
* CE 24 is refined into CE [27] 
* CE 23 is refined into CE [28] 


### Cost equations --> "Loop" of n_eval___2/6 
* CEs [28] --> Loop 22 
* CEs [27] --> Loop 23 

### Ranking functions of CR n_eval___2(A,B,C,D,E,F) 
* RF of phase [22]: [C-D]

#### Partial ranking functions of CR n_eval___2(A,B,C,D,E,F) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    C-D


### Specialization of cost equations n_eval___4/11 
* CE 11 is refined into CE [29] 
* CE 9 is refined into CE [30] 
* CE 8 is refined into CE [31] 
* CE 10 is refined into CE [32] 


### Cost equations --> "Loop" of n_eval___4/11 
* CEs [32] --> Loop 24 
* CEs [29] --> Loop 25 
* CEs [30] --> Loop 26 
* CEs [31] --> Loop 27 

### Ranking functions of CR n_eval___4(A,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [24]: [A-B]

#### Partial ranking functions of CR n_eval___4(A,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    A-B


### Specialization of cost equations n_eval___3/11 
* CE 18 is refined into CE [33] 
* CE 15 is refined into CE [34] 
* CE 20 is refined into CE [35] 
* CE 17 is refined into CE [36,37] 
* CE 16 is refined into CE [38,39] 
* CE 19 is refined into CE [40] 


### Cost equations --> "Loop" of n_eval___3/11 
* CEs [40] --> Loop 28 
* CEs [39] --> Loop 29 
* CEs [38] --> Loop 30 
* CEs [33] --> Loop 31 
* CEs [34,35] --> Loop 32 
* CEs [37] --> Loop 33 
* CEs [36] --> Loop 34 

### Ranking functions of CR n_eval___3(A,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [28,29,30]: [C-D]

#### Partial ranking functions of CR n_eval___3(A,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [28,29,30]:
  - RF of loop [28:1,29:1,30:1]:
    C-D
  - RF of loop [29:1]:
    A/2-B/2-1
  - RF of loop [30:1]:
    A-B-1


### Specialization of cost equations n_eval___3_loop_cont/7 
* CE 12 is refined into CE [41] 
* CE 13 is refined into CE [42] 
* CE 14 is refined into CE [43] 


### Cost equations --> "Loop" of n_eval___3_loop_cont/7 
* CEs [41] --> Loop 35 
* CEs [42] --> Loop 36 
* CEs [43] --> Loop 37 

### Ranking functions of CR n_eval___3_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_eval___3_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations n_eval___5/6 
* CE 2 is refined into CE [44] 
* CE 3 is refined into CE [45,46,47,48,49,50,51,52,53,54,55,56] 
* CE 4 is refined into CE [57,58] 
* CE 7 is refined into CE [59,60,61,62,63,64] 
* CE 5 is refined into CE [65] 
* CE 6 is refined into CE [66] 


### Cost equations --> "Loop" of n_eval___5/6 
* CEs [65] --> Loop 38 
* CEs [66] --> Loop 39 
* CEs [49,55,63] --> Loop 40 
* CEs [45] --> Loop 41 
* CEs [44,46,47,48,50,51,52,53,54,56,57,58,59,60,61,62,64] --> Loop 42 

### Ranking functions of CR n_eval___5(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_eval___5(A,B,C,D,E,F) 


### Specialization of cost equations pyRinit/6 
* CE 1 is refined into CE [67,68,69,70] 


### Cost equations --> "Loop" of pyRinit/6 
* CEs [70] --> Loop 43 
* CEs [69] --> Loop 44 
* CEs [67,68] --> Loop 45 

### Ranking functions of CR pyRinit(A,B,C,D,E,F) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F) 


Computing Bounds
=====================================

#### Cost of chains of n_eval___1(A,B,C,D,E,F):
* Chain [[20],21]: 1*it(20)+0
  Such that:it(20) =< A-B

  with precondition: [F=4,A>=B+1,D>=C] 

* Chain [21]: 0
  with precondition: [F=4] 


#### Cost of chains of n_eval___2(A,B,C,D,E,F):
* Chain [[22],23]: 1*it(22)+0
  Such that:it(22) =< C-D

  with precondition: [F=4,B>=A,C>=D+1] 

* Chain [23]: 0
  with precondition: [F=4] 


#### Cost of chains of n_eval___4(A,B,C,D,E,F,G,H,I,J,K):
* Chain [[24],27]: 1*it(24)+1
  Such that:it(24) =< A-B

  with precondition: [F=2,A=G,A=H,C=I,D+1=J,A+E+1=B+K,A>=B+1,C>=D+1] 

* Chain [[24],26]: 1*it(24)+1
  Such that:it(24) =< -B+H

  with precondition: [F=3,A=G,C=I,D+1=J,B+K=E+H+1,H>=B+1,C>=D+1,A>=H+1] 

* Chain [[24],25]: 1*it(24)+0
  Such that:it(24) =< A-B

  with precondition: [F=4,A>=B+1,C>=D+1] 

* Chain [27]: 1
  with precondition: [F=2,B=A,K=E+1,B=G,B=H,C=I,D+1=J,C>=D+1] 

* Chain [26]: 1
  with precondition: [F=3,K=E+1,A=G,B=H,C=I,D+1=J,A>=B+1,C>=D+1] 

* Chain [25]: 0
  with precondition: [F=4,A>=B,C>=D+1] 


#### Cost of chains of n_eval___3(A,B,C,D,E,F,G,H,I,J,K):
* Chain [[28,29,30],34]: 1*it(28)+2*it(29)+2*it(30)+1*s(6)+2
  Such that:aux(4) =< -A+B-E+K
it(29) =< A/2-B/2
aux(3) =< C-D
aux(5) =< A-B
it(30) =< aux(5)
s(6) =< aux(5)
it(28) =< aux(3)
it(29) =< aux(3)
it(30) =< aux(3)
it(28) =< aux(4)
it(29) =< aux(4)
it(30) =< aux(4)

  with precondition: [F=2,A=G,A=H,C=I,A+E+J=B+D+K,A>=B+1,J>=D+2,C>=J] 

* Chain [[28,29,30],33]: 1*it(28)+4*it(29)+2*s(6)+2
  Such that:aux(4) =< -A+B-E+K
aux(3) =< C-D
aux(6) =< A-B
it(29) =< aux(6)
s(6) =< aux(6)
it(28) =< aux(3)
it(29) =< aux(3)
it(28) =< aux(4)
it(29) =< aux(4)

  with precondition: [F=2,A=G,A=H,C=I,A+E+J=B+D+K,A>=B+2,J>=D+2,C>=J] 

* Chain [[28,29,30],32]: 1*it(28)+4*it(29)+2*s(6)+1
  Such that:aux(7) =< A-B
aux(8) =< C-D
it(29) =< aux(7)
s(6) =< aux(7)
it(28) =< aux(8)
it(29) =< aux(8)

  with precondition: [F=4,A>=B+1,C>=D+1] 

* Chain [[28,29,30],31]: 1*it(28)+2*it(29)+2*it(30)+1*s(6)+1
  Such that:aux(1) =< A-B
aux(2) =< -B+H
it(29) =< -B/2+H/2
aux(9) =< B-E-H+K
it(30) =< aux(1)
s(6) =< aux(1)
it(30) =< aux(2)
s(6) =< aux(2)
it(28) =< aux(9)
it(29) =< aux(9)
it(30) =< aux(9)

  with precondition: [F=5,A=G,C=I,C=J,B+D+K=C+E+H,H>=B+1,C>=D+1,A>=H] 

* Chain [34]: 2
  with precondition: [F=2,A=B+1,K=E+2,A=G,A=H,C=I,D+1=J,C>=D+1] 

* Chain [33]: 1*s(7)+2
  Such that:s(7) =< A-B

  with precondition: [F=2,A=G,A=H,C=I,D+1=J,A+E+1=B+K,A>=B+2,C>=D+1] 

* Chain [32]: 1*s(8)+1
  Such that:s(8) =< A-B

  with precondition: [F=4] 

* Chain [31]: 1
  with precondition: [F=5,C=D,K=E+1,A=G,B+1=H,C=I,C=J,A>=B+1] 


#### Cost of chains of n_eval___3_loop_cont(A,B,C,D,E,F,G):
* Chain [37]: 1*s(28)+0
  Such that:s(28) =< D-E

  with precondition: [A=2] 

* Chain [36]: 0
  with precondition: [A=4] 

* Chain [35]: 1*s(29)+0
  Such that:s(29) =< B-C

  with precondition: [A=5] 


#### Cost of chains of n_eval___5(A,B,C,D,E,F):
* Chain [42]: 34*s(30)+22*s(32)+4*s(33)+44*s(37)+4
  Such that:aux(23) =< A-B
aux(24) =< A/2-B/2
aux(25) =< C-D
s(30) =< aux(23)
s(33) =< aux(24)
s(32) =< aux(25)
s(37) =< aux(23)
s(37) =< aux(25)
s(33) =< aux(25)

  with precondition: [A>=B+1,C>=D+1] 

* Chain [41]: 1*s(110)+4
  Such that:s(110) =< C-D

  with precondition: [B+2=A,C>=D+2] 

* Chain [40]: 4*s(111)+3
  Such that:aux(27) =< A-B
s(111) =< aux(27)

  with precondition: [D+1=C,A>=B+1] 

* Chain [39]: 1*s(115)+1
  Such that:s(115) =< C-D

  with precondition: [B>=A,C>=D+1] 

* Chain [38]: 1*s(116)+1
  Such that:s(116) =< A-B

  with precondition: [A>=B+1,D>=C] 


#### Cost of chains of pyRinit(A,B,C,D,E,F):
* Chain [45]: 23*s(128)+38*s(129)+4*s(130)+44*s(131)+6
  Such that:s(126) =< A/2-B/2
s(127) =< C-D
aux(29) =< A-B
s(128) =< s(127)
s(129) =< aux(29)
s(130) =< s(126)
s(131) =< aux(29)
s(131) =< s(127)
s(130) =< s(127)

  with precondition: [A>=B+1,C>=D+1] 

* Chain [44]: 1*s(134)+3
  Such that:s(134) =< C-D

  with precondition: [B>=A,C>=D+1] 

* Chain [43]: 1*s(135)+3
  Such that:s(135) =< A-B

  with precondition: [A>=B+1,D>=C] 


Closed-form bounds of pyRinit(A,B,C,D,E,F): 
-------------------------------------
* Chain [45] with precondition: [A>=B+1,C>=D+1] 
    - Upper bound: 84*A-84*B+23*C-23*D+6 
    - Complexity: n 
* Chain [44] with precondition: [B>=A,C>=D+1] 
    - Upper bound: C-D+3 
    - Complexity: n 
* Chain [43] with precondition: [A>=B+1,D>=C] 
    - Upper bound: A-B+3 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E,F): max([nat(C-D),nat(A-B)*81+3+nat(C-D)*23+nat(A/2-B/2)*4+nat(A-B)])+3 
Asymptotic class: n 
* Total analysis performed in 1055 ms.


-- stats
realtime 0:01.36
usertime 1.17
systime 0.00

