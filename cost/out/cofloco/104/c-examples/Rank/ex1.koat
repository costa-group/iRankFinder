WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb7in___6/11,n_evalfbbin___9/11]
1. recursive  : [n_evalfbb7in___1/11,n_evalfbbin___3/11]
2. recursive  : [n_evalfbb3in___2/11,n_evalfbb4in___5/11,n_evalfbb7in___4/11,n_evalfbbin___3_loop_cont/12]
3. recursive  : [n_evalfbb3in___7/11,n_evalfbb4in___5_loop_cont/12]
4. recursive  : [n_evalfbb3in___7_loop_cont/12,n_evalfbb7in___10/11,n_evalfbbin___9_loop_cont/12]
5. non_recursive  : [exit_location/1]
6. non_recursive  : [n_evalfstop___8/6]
7. non_recursive  : [n_evalfbb7in___10_loop_cont/7]
8. non_recursive  : [n_evalfstart/6]
9. non_recursive  : [pyRinit/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbbin___9/11
1. SCC is partially evaluated into n_evalfbbin___3/11
2. SCC is partially evaluated into n_evalfbb4in___5/11
3. SCC is partially evaluated into n_evalfbb3in___7/11
4. SCC is partially evaluated into n_evalfbb7in___10/11
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into n_evalfbb7in___10_loop_cont/7
8. SCC is partially evaluated into n_evalfstart/6
9. SCC is partially evaluated into pyRinit/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbbin___9/11 
* CE 14 is refined into CE [32] 
* CE 15 is refined into CE [33] 
* CE 12 is refined into CE [34] 
* CE 13 is refined into CE [35] 


### Cost equations --> "Loop" of n_evalfbbin___9/11 
* CEs [35] --> Loop 27 
* CEs [32] --> Loop 28 
* CEs [33] --> Loop 29 
* CEs [34] --> Loop 30 

### Ranking functions of CR n_evalfbbin___9(A,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [27]: [C]

#### Partial ranking functions of CR n_evalfbbin___9(A,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    C


### Specialization of cost equations n_evalfbbin___3/11 
* CE 31 is refined into CE [36] 
* CE 30 is refined into CE [37] 
* CE 28 is refined into CE [38] 
* CE 29 is refined into CE [39] 


### Cost equations --> "Loop" of n_evalfbbin___3/11 
* CEs [39] --> Loop 31 
* CEs [36] --> Loop 32 
* CEs [37] --> Loop 33 
* CEs [38] --> Loop 34 

### Ranking functions of CR n_evalfbbin___3(A,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [31]: [C,E-1]

#### Partial ranking functions of CR n_evalfbbin___3(A,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    C
    E-1


### Specialization of cost equations n_evalfbb4in___5/11 
* CE 26 is refined into CE [40] 
* CE 21 is refined into CE [41] 
* CE 27 is refined into CE [42] 
* CE 22 is refined into CE [43,44] 
* CE 24 is refined into CE [45] 
* CE 25 is refined into CE [46] 
* CE 23 is refined into CE [47,48] 


### Cost equations --> "Loop" of n_evalfbb4in___5/11 
* CEs [48] --> Loop 35 
* CEs [47] --> Loop 36 
* CEs [40] --> Loop 37 
* CEs [41,42] --> Loop 38 
* CEs [44] --> Loop 39 
* CEs [43] --> Loop 40 
* CEs [45] --> Loop 41 
* CEs [46] --> Loop 42 

### Ranking functions of CR n_evalfbb4in___5(A,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [35,36]: [A,D]

#### Partial ranking functions of CR n_evalfbb4in___5(A,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [35,36]:
  - RF of loop [35:1]:
    D/2-1/2
  - RF of loop [35:1,36:1]:
    A
  - RF of loop [36:1]:
    D


### Specialization of cost equations n_evalfbb3in___7/11 
* CE 19 is refined into CE [49] 
* CE 17 is refined into CE [50] 
* CE 20 is refined into CE [51] 
* CE 16 is refined into CE [52,53,54] 
* CE 18 is refined into CE [55,56] 


### Cost equations --> "Loop" of n_evalfbb3in___7/11 
* CEs [56] --> Loop 43 
* CEs [55] --> Loop 44 
* CEs [49] --> Loop 45 
* CEs [50,51] --> Loop 46 
* CEs [54] --> Loop 47 
* CEs [53] --> Loop 48 
* CEs [52] --> Loop 49 

### Ranking functions of CR n_evalfbb3in___7(A,B,C,D,E,F,G,H,I,J,K) 

#### Partial ranking functions of CR n_evalfbb3in___7(A,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [43,44]:
  - RF of loop [43:1]:
    A
  - RF of loop [44:1]:
    B-D+1 depends on loops [43:1] 


### Specialization of cost equations n_evalfbb7in___10/11 
* CE 3 is refined into CE [57] 
* CE 6 is refined into CE [58,59] 
* CE 9 is refined into CE [60] 
* CE 4 is refined into CE [61,62] 
* CE 7 is refined into CE [63,64,65,66,67,68] 
* CE 8 is refined into CE [69] 
* CE 5 is refined into CE [70,71,72,73] 


### Cost equations --> "Loop" of n_evalfbb7in___10/11 
* CEs [73] --> Loop 50 
* CEs [71] --> Loop 51 
* CEs [72] --> Loop 52 
* CEs [70] --> Loop 53 
* CEs [57,58,59,60] --> Loop 54 
* CEs [65] --> Loop 55 
* CEs [68] --> Loop 56 
* CEs [69] --> Loop 57 
* CEs [61,64] --> Loop 58 
* CEs [63] --> Loop 59 
* CEs [62,66,67] --> Loop 60 

### Ranking functions of CR n_evalfbb7in___10(A,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [50,51]: [A+1]

#### Partial ranking functions of CR n_evalfbb7in___10(A,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [50,51]:
  - RF of loop [50:1,51:1]:
    A+1


### Specialization of cost equations n_evalfbb7in___10_loop_cont/7 
* CE 11 is refined into CE [74] 
* CE 10 is refined into CE [75] 


### Cost equations --> "Loop" of n_evalfbb7in___10_loop_cont/7 
* CEs [74] --> Loop 61 
* CEs [75] --> Loop 62 

### Ranking functions of CR n_evalfbb7in___10_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_evalfbb7in___10_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations n_evalfstart/6 
* CE 2 is refined into CE [76,77,78,79] 


### Cost equations --> "Loop" of n_evalfstart/6 
* CEs [76,77,78,79] --> Loop 63 

### Ranking functions of CR n_evalfstart(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalfstart(A,B,C,D,E,F) 


### Specialization of cost equations pyRinit/6 
* CE 1 is refined into CE [80] 


### Cost equations --> "Loop" of pyRinit/6 
* CEs [80] --> Loop 64 

### Ranking functions of CR pyRinit(A,B,C,D,E,F) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbbin___9(A,B,C,D,E,F,G,H,I,J,K):
* Chain [[27],30]: 2*it(27)+2
  Such that:it(27) =< C

  with precondition: [F=2,A>=0,C>=1,B>=A] 

* Chain [[27],29]: 2*it(27)+0
  Such that:it(27) =< C

  with precondition: [F=4,A>=0,C>=1,B>=A] 

* Chain [[27],28]: 2*it(27)+1
  Such that:it(27) =< C-I

  with precondition: [F=5,A=G,B=H,I=J,I+1=K,A>=0,I>=0,B>=A,C>=I+1] 

* Chain [30]: 2
  with precondition: [C=0,F=2,A>=0,B>=A] 

* Chain [29]: 0
  with precondition: [F=4,A>=0,C>=0,B>=A] 

* Chain [28]: 1
  with precondition: [F=5,K=E,A=G,B=H,C=I,C=J,A>=0,C>=0,B>=A] 


#### Cost of chains of n_evalfbbin___3(A,B,C,D,E,F,G,H,I,J,K):
* Chain [[31],34]: 2*it(31)+2
  Such that:it(31) =< E

  with precondition: [F=2,E=C+1,A=D,A>=0,E>=2,B>=A+1,B>=E] 

* Chain [[31],33]: 2*it(31)+1
  Such that:it(31) =< C-K+1

  with precondition: [F=3,E=C+1,A=D,A=G,B=H,I=J,I+1=K,A>=0,I>=0,B>=A+1,B>=E,E>=I+2] 

* Chain [[31],32]: 2*it(31)+0
  Such that:it(31) =< E

  with precondition: [F=4,E=C+1,A=D,A>=0,E>=2,B>=A+1,B>=E] 

* Chain [34]: 2
  with precondition: [C=0,E=1,F=2,D=A,D>=0,B>=D+1] 

* Chain [33]: 1
  with precondition: [F=3,D=A,E=C+1,D=G,B=H,E=I+1,E=J+1,E=K,D>=0,E>=1,B>=D+1,B>=E] 

* Chain [32]: 0
  with precondition: [F=4,D=A,E=C+1,D>=0,E>=1,B>=D+1,B>=E] 


#### Cost of chains of n_evalfbb4in___5(A,B,C,D,E,F,G,H,I,J,K):
* Chain [[35,36],42]: 4*it(35)+4*it(36)+2*s(5)+2
  Such that:it(35) =< D/2
aux(5) =< A
aux(6) =< D
it(35) =< aux(5)
it(36) =< aux(5)
it(35) =< aux(6)
it(36) =< aux(6)
s(5) =< aux(6)

  with precondition: [F=2,A>=1,C>=0,D>=A,D>=C,B>=D] 

* Chain [[35,36],41]: 4*it(35)+4*it(36)+2*s(5)+2
  Such that:aux(1) =< A
it(35) =< D/2
aux(7) =< D
it(35) =< aux(1)
it(36) =< aux(1)
it(35) =< aux(7)
it(36) =< aux(7)
s(5) =< aux(7)

  with precondition: [F=2,A>=1,C>=0,D>=1,B>=A,D>=C,B>=D] 

* Chain [[35,36],40]: 4*it(35)+4*it(36)+2*s(5)+4
  Such that:aux(1) =< A
it(35) =< D/2
aux(8) =< D
it(35) =< aux(1)
it(36) =< aux(1)
it(35) =< aux(8)
it(36) =< aux(8)
s(5) =< aux(8)

  with precondition: [F=2,A>=2,C>=0,D>=2,B>=A,D>=C,B>=D] 

* Chain [[35,36],39]: 8*it(35)+4*s(5)+4
  Such that:aux(1) =< A
aux(9) =< D
it(35) =< aux(9)
s(5) =< aux(9)
it(35) =< aux(1)

  with precondition: [F=2,A>=2,C>=0,D>=3,B>=A,D>=C,B>=D] 

* Chain [[35,36],38]: 8*it(35)+4*s(5)+2
  Such that:aux(1) =< A
aux(10) =< D
it(35) =< aux(10)
s(5) =< aux(10)
it(35) =< aux(1)

  with precondition: [F=4,A>=1,C>=0,D>=1,B>=A,D>=C,B>=D] 

* Chain [[35,36],37]: 4*it(35)+4*it(36)+2*s(5)+1
  Such that:aux(1) =< A
aux(2) =< A-G
aux(3) =< D
aux(4) =< D-J+1
it(35) =< D/2-J/2+1/2
it(35) =< aux(1)
it(36) =< aux(1)
it(35) =< aux(2)
it(36) =< aux(2)
it(35) =< aux(3)
it(36) =< aux(3)
s(5) =< aux(3)
it(35) =< aux(4)
it(36) =< aux(4)
s(5) =< aux(4)

  with precondition: [F=5,B=H,I+1=J,I+1=K,C>=0,G>=0,I>=0,B>=A,D>=C,B>=D,A>=G+1,D+G>=A+I] 

* Chain [42]: 2
  with precondition: [A=0,F=2,C>=0,D>=C,B>=D] 

* Chain [41]: 2
  with precondition: [C=0,D=0,F=2,A>=0,B>=A] 

* Chain [40]: 4
  with precondition: [D=1,F=2,1>=C,A>=1,C>=0,B>=A] 

* Chain [39]: 2*s(6)+4
  Such that:s(6) =< D

  with precondition: [F=2,A>=1,C>=0,D>=2,B>=A,D>=C,B>=D] 

* Chain [38]: 2*s(7)+2
  Such that:s(7) =< D

  with precondition: [F=4,A>=0,C>=0,B>=A,D>=C,B>=D] 

* Chain [37]: 1
  with precondition: [F=5,K=E,A=G,B=H,C=I,D+1=J,A>=0,C>=0,B>=A,D>=C,B>=D] 


#### Cost of chains of n_evalfbb3in___7(A,B,C,D,E,F,G,H,I,J,K):
* Chain [[43,44],49]: 2*it(43)+2*it(44)+4*s(47)+4*s(48)+2*s(49)+3
  Such that:aux(26) =< B
aux(22) =< B-D+1
aux(27) =< A
aux(28) =< A+D
it(43) =< aux(27)
aux(19) =< aux(26)
aux(21) =< it(43)*aux(26)
s(53) =< it(43)*aux(27)
it(44) =< aux(21)+aux(22)
aux(20) =< it(43)*aux(19)
aux(20) =< it(44)+aux(28)
s(47) =< aux(20)* (1/2)
s(47) =< s(53)
s(48) =< s(53)
s(47) =< aux(27)
s(48) =< aux(27)
s(47) =< aux(21)
s(48) =< aux(21)
s(49) =< aux(21)
s(47) =< aux(20)
s(48) =< aux(20)
s(49) =< aux(20)

  with precondition: [F=2,A>=0,B>=1,C>=0,B>=A,D>=C,B>=D,A+B>=D+1] 

* Chain [[43,44],47]: 2*it(43)+2*it(44)+4*s(47)+4*s(48)+2*s(49)+12*s(57)+12*s(58)+20*s(59)+5
  Such that:aux(22) =< B-D+1
s(56) =< B/2
aux(29) =< A
aux(30) =< A+D
aux(31) =< B
s(57) =< aux(31)
s(58) =< s(56)
s(59) =< aux(31)
s(59) =< aux(29)
s(58) =< aux(29)
s(58) =< aux(31)
it(43) =< aux(29)
aux(19) =< aux(31)
aux(21) =< it(43)*aux(31)
s(53) =< it(43)*aux(29)
it(44) =< aux(21)+aux(22)
aux(20) =< it(43)*aux(19)
aux(20) =< it(44)+aux(30)
s(47) =< aux(20)* (1/2)
s(47) =< s(53)
s(48) =< s(53)
s(47) =< aux(29)
s(48) =< aux(29)
s(47) =< aux(21)
s(48) =< aux(21)
s(49) =< aux(21)
s(47) =< aux(20)
s(48) =< aux(20)
s(49) =< aux(20)

  with precondition: [F=2,A>=1,C>=0,B>=A,D>=C,B>=D,A+B>=D+2] 

* Chain [[43,44],46]: 2*it(43)+2*it(44)+4*s(47)+4*s(48)+2*s(49)+6*s(62)+8*s(63)+3
  Such that:aux(26) =< B
s(61) =< B+1
aux(22) =< B-D+1
aux(32) =< A
aux(33) =< A+D
s(62) =< s(61)
s(63) =< s(61)
s(63) =< aux(32)
it(43) =< aux(32)
aux(19) =< aux(26)
aux(21) =< it(43)*aux(26)
s(53) =< it(43)*aux(32)
it(44) =< aux(21)+aux(22)
aux(20) =< it(43)*aux(19)
aux(20) =< it(44)+aux(33)
s(47) =< aux(20)* (1/2)
s(47) =< s(53)
s(48) =< s(53)
s(47) =< aux(32)
s(48) =< aux(32)
s(47) =< aux(21)
s(48) =< aux(21)
s(49) =< aux(21)
s(47) =< aux(20)
s(48) =< aux(20)
s(49) =< aux(20)

  with precondition: [F=4,A>=0,C>=0,B>=A,D>=C,B>=D] 

* Chain [[43,44],45]: 2*it(43)+2*it(44)+4*s(47)+4*s(48)+2*s(49)+1
  Such that:aux(24) =< A
aux(18) =< A-B+D-J
aux(17) =< A+D
aux(25) =< A-J
aux(22) =< -D+I+1
aux(26) =< I
it(43) =< aux(24)
s(52) =< aux(24)
it(43) =< aux(25)
s(52) =< aux(25)
aux(19) =< aux(26)
aux(21) =< it(43)*aux(26)
s(53) =< it(43)*aux(24)
it(44) =< aux(21)+aux(22)
aux(20) =< it(43)*aux(19)
aux(20) =< it(44)+aux(18)
aux(20) =< it(44)+aux(17)
s(47) =< aux(20)* (1/2)
s(47) =< s(53)
s(48) =< s(53)
s(47) =< s(52)
s(48) =< s(52)
s(47) =< aux(21)
s(48) =< aux(21)
s(49) =< aux(21)
s(47) =< aux(20)
s(48) =< aux(20)
s(49) =< aux(20)

  with precondition: [F=6,B=H,B=I,G=J,B+1=K,C>=0,G+1>=0,B>=A,D>=C,B>=D,A>=G+1] 

* Chain [49]: 3
  with precondition: [A=0,F=2,C>=0,D>=C,B>=D] 

* Chain [48]: 3
  with precondition: [C=0,D=0,F=2,A>=0,B>=A] 

* Chain [47]: 12*s(57)+12*s(58)+20*s(59)+5
  Such that:s(54) =< A
s(55) =< D
s(56) =< D/2
s(57) =< s(55)
s(58) =< s(56)
s(59) =< s(55)
s(59) =< s(54)
s(58) =< s(54)
s(58) =< s(55)

  with precondition: [F=2,A>=1,C>=0,D>=1,B>=A,D>=C,B>=D] 

* Chain [46]: 6*s(62)+8*s(63)+3
  Such that:s(60) =< A
s(61) =< D
s(62) =< s(61)
s(63) =< s(61)
s(63) =< s(60)

  with precondition: [F=4] 

* Chain [45]: 1
  with precondition: [F=6,A=G+1,B=H,D=I+1,A=J+1,D=K,A>=0,C>=0,B>=A,D>=B+1,D>=C] 


#### Cost of chains of n_evalfbb7in___10(A,B,C,D,E,F,G,H,I,J,K):
* Chain [[50,51],60]: 6*it(50)+6*s(120)+2*s(188)+4*s(189)+2*s(190)+4*s(191)+4*s(192)+2*s(193)+2*s(203)+4*s(204)+4*s(205)+2*s(206)+5
  Such that:aux(51) =< A+1
aux(49) =< A+2
aux(44) =< A+B+1
aux(48) =< A+B-C+2
aux(43) =< 2*A+C
aux(53) =< A
aux(54) =< B
s(120) =< aux(54)
it(50) =< aux(51)
s(199) =< aux(51)
it(50) =< aux(53)
s(199) =< aux(53)
aux(50) =< aux(53)+1
aux(46) =< aux(43)
aux(42) =< aux(53)
s(148) =< aux(54)
s(213) =< it(50)*aux(49)
s(200) =< it(50)*aux(44)
s(198) =< it(50)*aux(43)
aux(47) =< it(50)*aux(50)
s(211) =< it(50)*aux(46)
s(201) =< it(50)*aux(42)
s(213) =< aux(47)+aux(48)
s(189) =< s(201)
s(196) =< s(201)
s(189) =< s(199)
s(196) =< s(199)
s(180) =< s(148)
s(208) =< s(189)*s(148)
s(210) =< s(189)*aux(42)
s(203) =< s(208)+s(213)
s(207) =< s(189)*s(180)
s(207) =< s(203)+s(199)
s(207) =< s(203)+s(211)
s(204) =< s(207)* (1/2)
s(204) =< s(210)
s(205) =< s(210)
s(204) =< s(196)
s(205) =< s(196)
s(204) =< s(208)
s(205) =< s(208)
s(206) =< s(208)
s(204) =< s(207)
s(205) =< s(207)
s(206) =< s(207)
s(188) =< s(198)
s(195) =< s(189)*aux(54)
s(197) =< s(189)*aux(53)
s(190) =< s(195)+s(200)
s(194) =< s(189)*s(148)
s(194) =< s(190)+s(199)
s(194) =< s(190)+s(198)
s(191) =< s(194)* (1/2)
s(191) =< s(197)
s(192) =< s(197)
s(191) =< s(196)
s(192) =< s(196)
s(191) =< s(195)
s(192) =< s(195)
s(193) =< s(195)
s(191) =< s(194)
s(192) =< s(194)
s(193) =< s(194)

  with precondition: [F=2,A>=1,C>=0,B>=A,A+C+1>=B] 

* Chain [[50,51],59]: 6*it(50)+2*s(188)+4*s(189)+2*s(190)+4*s(191)+4*s(192)+2*s(193)+2*s(203)+4*s(204)+4*s(205)+2*s(206)+5
  Such that:aux(51) =< A+1
aux(49) =< A+2
aux(44) =< A+B+1
aux(48) =< A+B-C+2
aux(43) =< 2*A+C
s(142) =< B
aux(55) =< A
it(50) =< aux(51)
s(199) =< aux(51)
it(50) =< aux(55)
s(199) =< aux(55)
aux(50) =< aux(55)+1
aux(46) =< aux(43)
aux(42) =< aux(55)
s(148) =< s(142)
s(213) =< it(50)*aux(49)
s(200) =< it(50)*aux(44)
s(198) =< it(50)*aux(43)
aux(47) =< it(50)*aux(50)
s(211) =< it(50)*aux(46)
s(201) =< it(50)*aux(42)
s(213) =< aux(47)+aux(48)
s(189) =< s(201)
s(196) =< s(201)
s(189) =< s(199)
s(196) =< s(199)
s(180) =< s(148)
s(208) =< s(189)*s(148)
s(210) =< s(189)*aux(42)
s(203) =< s(208)+s(213)
s(207) =< s(189)*s(180)
s(207) =< s(203)+s(199)
s(207) =< s(203)+s(211)
s(204) =< s(207)* (1/2)
s(204) =< s(210)
s(205) =< s(210)
s(204) =< s(196)
s(205) =< s(196)
s(204) =< s(208)
s(205) =< s(208)
s(206) =< s(208)
s(204) =< s(207)
s(205) =< s(207)
s(206) =< s(207)
s(188) =< s(198)
s(195) =< s(189)*s(142)
s(197) =< s(189)*aux(55)
s(190) =< s(195)+s(200)
s(194) =< s(189)*s(148)
s(194) =< s(190)+s(199)
s(194) =< s(190)+s(198)
s(191) =< s(194)* (1/2)
s(191) =< s(197)
s(192) =< s(197)
s(191) =< s(196)
s(192) =< s(196)
s(191) =< s(195)
s(192) =< s(195)
s(193) =< s(195)
s(191) =< s(194)
s(192) =< s(194)
s(193) =< s(194)

  with precondition: [F=2,A>=1,C>=0,B>=A,A+C+1>=B] 

* Chain [[50,51],57]: 6*it(50)+2*s(188)+4*s(189)+2*s(190)+4*s(191)+4*s(192)+2*s(193)+2*s(203)+4*s(204)+4*s(205)+2*s(206)+1
  Such that:s(140) =< A
aux(49) =< A+2
aux(44) =< A+B+1
aux(48) =< A+B-C+2
aux(43) =< 2*A+C
s(142) =< B
aux(56) =< A+1
it(50) =< aux(56)
aux(50) =< s(140)+1
aux(46) =< aux(43)
aux(42) =< s(140)
s(148) =< s(142)
s(213) =< it(50)*aux(49)
s(200) =< it(50)*aux(44)
s(198) =< it(50)*aux(43)
aux(47) =< it(50)*aux(50)
s(211) =< it(50)*aux(46)
s(201) =< it(50)*aux(42)
s(213) =< aux(47)+aux(48)
s(189) =< s(201)
s(196) =< s(201)
s(189) =< aux(56)
s(196) =< aux(56)
s(180) =< s(148)
s(208) =< s(189)*s(148)
s(210) =< s(189)*aux(42)
s(203) =< s(208)+s(213)
s(207) =< s(189)*s(180)
s(207) =< s(203)+aux(56)
s(207) =< s(203)+s(211)
s(204) =< s(207)* (1/2)
s(204) =< s(210)
s(205) =< s(210)
s(204) =< s(196)
s(205) =< s(196)
s(204) =< s(208)
s(205) =< s(208)
s(206) =< s(208)
s(204) =< s(207)
s(205) =< s(207)
s(206) =< s(207)
s(188) =< s(198)
s(195) =< s(189)*s(142)
s(197) =< s(189)*s(140)
s(190) =< s(195)+s(200)
s(194) =< s(189)*s(148)
s(194) =< s(190)+aux(56)
s(194) =< s(190)+s(198)
s(191) =< s(194)* (1/2)
s(191) =< s(197)
s(192) =< s(197)
s(191) =< s(196)
s(192) =< s(196)
s(191) =< s(195)
s(192) =< s(195)
s(193) =< s(195)
s(191) =< s(194)
s(192) =< s(194)
s(193) =< s(194)

  with precondition: [F=2,A>=0,C>=0,B>=A,A+C+1>=B] 

* Chain [[50,51],56]: 6*it(50)+2*s(188)+4*s(189)+2*s(190)+4*s(191)+4*s(192)+2*s(193)+2*s(203)+4*s(204)+4*s(205)+2*s(206)+26*s(216)+52*s(225)+4*s(227)+4*s(231)+8*s(233)+8*s(234)+4*s(235)+12*s(237)+7
  Such that:aux(51) =< A+1
aux(49) =< A+2
aux(48) =< A+B-C+2
aux(43) =< 2*A+C
s(223) =< B+1
s(217) =< B/2
aux(58) =< A
aux(59) =< A+B+1
aux(60) =< B
s(216) =< aux(60)
s(225) =< aux(60)
s(225) =< aux(58)
s(227) =< aux(58)
s(148) =< aux(60)
s(229) =< s(227)*aux(60)
s(230) =< s(227)*aux(58)
s(231) =< s(229)+s(223)
s(232) =< s(227)*s(148)
s(232) =< s(231)+aux(59)
s(233) =< s(232)* (1/2)
s(233) =< s(230)
s(234) =< s(230)
s(233) =< aux(58)
s(234) =< aux(58)
s(233) =< s(229)
s(234) =< s(229)
s(235) =< s(229)
s(233) =< s(232)
s(234) =< s(232)
s(235) =< s(232)
s(237) =< s(217)
s(237) =< aux(58)
s(237) =< aux(60)
it(50) =< aux(51)
s(199) =< aux(51)
it(50) =< aux(59)
s(199) =< aux(59)
aux(50) =< aux(58)+1
aux(46) =< aux(43)
aux(42) =< aux(58)
s(213) =< it(50)*aux(49)
s(200) =< it(50)*aux(59)
s(198) =< it(50)*aux(43)
aux(47) =< it(50)*aux(50)
s(211) =< it(50)*aux(46)
s(201) =< it(50)*aux(42)
s(213) =< aux(47)+aux(48)
s(189) =< s(201)
s(196) =< s(201)
s(189) =< s(199)
s(196) =< s(199)
s(180) =< s(148)
s(208) =< s(189)*s(148)
s(210) =< s(189)*aux(42)
s(203) =< s(208)+s(213)
s(207) =< s(189)*s(180)
s(207) =< s(203)+s(199)
s(207) =< s(203)+s(211)
s(204) =< s(207)* (1/2)
s(204) =< s(210)
s(205) =< s(210)
s(204) =< s(196)
s(205) =< s(196)
s(204) =< s(208)
s(205) =< s(208)
s(206) =< s(208)
s(204) =< s(207)
s(205) =< s(207)
s(206) =< s(207)
s(188) =< s(198)
s(195) =< s(189)*aux(60)
s(197) =< s(189)*aux(58)
s(190) =< s(195)+s(200)
s(194) =< s(189)*s(148)
s(194) =< s(190)+s(199)
s(194) =< s(190)+s(198)
s(191) =< s(194)* (1/2)
s(191) =< s(197)
s(192) =< s(197)
s(191) =< s(196)
s(192) =< s(196)
s(191) =< s(195)
s(192) =< s(195)
s(193) =< s(195)
s(191) =< s(194)
s(192) =< s(194)
s(193) =< s(194)

  with precondition: [F=2,A>=1,C>=0,B>=A,A+C+1>=B] 

* Chain [[50,51],55]: 6*it(50)+2*s(188)+4*s(189)+2*s(190)+4*s(191)+4*s(192)+2*s(193)+2*s(203)+4*s(204)+4*s(205)+2*s(206)+24*s(246)+24*s(247)+40*s(248)+4*s(249)+4*s(253)+8*s(255)+8*s(256)+4*s(257)+7
  Such that:s(245) =< 1
aux(51) =< A+1
aux(49) =< A+2
aux(44) =< A+B+1
aux(48) =< A+B-C+2
aux(43) =< 2*A+C
aux(61) =< A
aux(62) =< A+B
aux(63) =< B
aux(64) =< B/2
s(246) =< aux(63)
s(247) =< aux(64)
s(248) =< aux(63)
s(248) =< aux(61)
s(247) =< aux(61)
s(247) =< aux(63)
s(249) =< aux(61)
s(148) =< aux(63)
s(251) =< s(249)*aux(63)
s(252) =< s(249)*aux(61)
s(253) =< s(251)+s(245)
s(254) =< s(249)*s(148)
s(254) =< s(253)+aux(62)
s(255) =< s(254)* (1/2)
s(255) =< s(252)
s(256) =< s(252)
s(255) =< aux(61)
s(256) =< aux(61)
s(255) =< s(251)
s(256) =< s(251)
s(257) =< s(251)
s(255) =< s(254)
s(256) =< s(254)
s(257) =< s(254)
it(50) =< aux(51)
s(199) =< aux(51)
it(50) =< aux(62)
s(199) =< aux(62)
aux(50) =< aux(61)+1
aux(46) =< aux(43)
aux(42) =< aux(61)
s(213) =< it(50)*aux(49)
s(200) =< it(50)*aux(44)
s(198) =< it(50)*aux(43)
aux(47) =< it(50)*aux(50)
s(211) =< it(50)*aux(46)
s(201) =< it(50)*aux(42)
s(213) =< aux(47)+aux(48)
s(189) =< s(201)
s(196) =< s(201)
s(189) =< s(199)
s(196) =< s(199)
s(180) =< s(148)
s(208) =< s(189)*s(148)
s(210) =< s(189)*aux(42)
s(203) =< s(208)+s(213)
s(207) =< s(189)*s(180)
s(207) =< s(203)+s(199)
s(207) =< s(203)+s(211)
s(204) =< s(207)* (1/2)
s(204) =< s(210)
s(205) =< s(210)
s(204) =< s(196)
s(205) =< s(196)
s(204) =< s(208)
s(205) =< s(208)
s(206) =< s(208)
s(204) =< s(207)
s(205) =< s(207)
s(206) =< s(207)
s(188) =< s(198)
s(195) =< s(189)*aux(63)
s(197) =< s(189)*aux(61)
s(190) =< s(195)+s(200)
s(194) =< s(189)*s(148)
s(194) =< s(190)+s(199)
s(194) =< s(190)+s(198)
s(191) =< s(194)* (1/2)
s(191) =< s(197)
s(192) =< s(197)
s(191) =< s(196)
s(192) =< s(196)
s(191) =< s(195)
s(192) =< s(195)
s(193) =< s(195)
s(191) =< s(194)
s(192) =< s(194)
s(193) =< s(194)

  with precondition: [F=2,A>=2,C>=0,B>=A,A+C+1>=B] 

* Chain [[50,51],54]: 6*it(50)+2*s(188)+4*s(189)+2*s(190)+4*s(191)+4*s(192)+2*s(193)+2*s(203)+4*s(204)+4*s(205)+2*s(206)+14*s(261)+16*s(269)+12*s(270)+16*s(271)+4*s(272)+2*s(276)+4*s(278)+4*s(279)+2*s(280)+2*s(281)+2*s(296)+4*s(298)+4*s(299)+2*s(300)+5
  Such that:s(265) =< 1
aux(49) =< A+2
aux(68) =< A+B
aux(44) =< A+B+1
aux(48) =< A+B-C+2
aux(43) =< 2*A+C
aux(70) =< B+1
aux(72) =< A
aux(73) =< A+1
aux(74) =< B
s(261) =< aux(74)
s(269) =< aux(74)
s(269) =< aux(72)
s(270) =< aux(70)
s(271) =< aux(70)
s(271) =< aux(72)
s(272) =< aux(72)
s(148) =< aux(74)
s(274) =< s(272)*aux(74)
s(275) =< s(272)*aux(72)
s(276) =< s(274)+s(265)
s(277) =< s(272)*s(148)
s(277) =< s(276)+aux(68)
s(278) =< s(277)* (1/2)
s(278) =< s(275)
s(279) =< s(275)
s(278) =< aux(72)
s(279) =< aux(72)
s(278) =< s(274)
s(279) =< s(274)
s(280) =< s(274)
s(278) =< s(277)
s(279) =< s(277)
s(280) =< s(277)
s(281) =< aux(68)
s(296) =< s(274)+aux(70)
s(297) =< s(272)*s(148)
s(297) =< s(296)+aux(68)
s(298) =< s(297)* (1/2)
s(298) =< s(275)
s(299) =< s(275)
s(298) =< aux(72)
s(299) =< aux(72)
s(298) =< s(274)
s(299) =< s(274)
s(300) =< s(274)
s(298) =< s(297)
s(299) =< s(297)
s(300) =< s(297)
it(50) =< aux(73)
aux(50) =< aux(72)+1
aux(46) =< aux(43)
aux(42) =< aux(72)
s(213) =< it(50)*aux(49)
s(200) =< it(50)*aux(44)
s(198) =< it(50)*aux(43)
aux(47) =< it(50)*aux(50)
s(211) =< it(50)*aux(46)
s(201) =< it(50)*aux(42)
s(213) =< aux(47)+aux(48)
s(189) =< s(201)
s(196) =< s(201)
s(189) =< aux(73)
s(196) =< aux(73)
s(180) =< s(148)
s(208) =< s(189)*s(148)
s(210) =< s(189)*aux(42)
s(203) =< s(208)+s(213)
s(207) =< s(189)*s(180)
s(207) =< s(203)+aux(73)
s(207) =< s(203)+s(211)
s(204) =< s(207)* (1/2)
s(204) =< s(210)
s(205) =< s(210)
s(204) =< s(196)
s(205) =< s(196)
s(204) =< s(208)
s(205) =< s(208)
s(206) =< s(208)
s(204) =< s(207)
s(205) =< s(207)
s(206) =< s(207)
s(188) =< s(198)
s(195) =< s(189)*aux(74)
s(197) =< s(189)*aux(72)
s(190) =< s(195)+s(200)
s(194) =< s(189)*s(148)
s(194) =< s(190)+aux(73)
s(194) =< s(190)+s(198)
s(191) =< s(194)* (1/2)
s(191) =< s(197)
s(192) =< s(197)
s(191) =< s(196)
s(192) =< s(196)
s(191) =< s(195)
s(192) =< s(195)
s(193) =< s(195)
s(191) =< s(194)
s(192) =< s(194)
s(193) =< s(194)

  with precondition: [F=4,A>=0,C>=0,B>=A,A+C+1>=B] 

* Chain [59]: 5
  with precondition: [A=0,F=2,C>=0,C+1>=B,B>=C] 

* Chain [58]: 5
  with precondition: [C=0,F=2,A=B,A>=0] 

* Chain [57]: 1
  with precondition: [F=2,0>=A+1,C>=0,B>=A,A+C+1>=B] 

* Chain [55]: 12*s(246)+12*s(247)+20*s(248)+4*s(249)+4*s(253)+8*s(255)+8*s(256)+4*s(257)+12*s(258)+12*s(259)+20*s(260)+7
  Such that:s(242) =< A
s(243) =< A+C
s(244) =< B
s(245) =< B-C+1
s(239) =< B/2
s(240) =< C
s(241) =< C/2
s(246) =< s(240)
s(247) =< s(241)
s(248) =< s(240)
s(248) =< s(242)
s(247) =< s(242)
s(247) =< s(240)
s(249) =< s(242)
s(250) =< s(244)
s(251) =< s(249)*s(244)
s(252) =< s(249)*s(242)
s(253) =< s(251)+s(245)
s(254) =< s(249)*s(250)
s(254) =< s(253)+s(243)
s(255) =< s(254)* (1/2)
s(255) =< s(252)
s(256) =< s(252)
s(255) =< s(242)
s(256) =< s(242)
s(255) =< s(251)
s(256) =< s(251)
s(257) =< s(251)
s(255) =< s(254)
s(256) =< s(254)
s(257) =< s(254)
s(258) =< s(244)
s(259) =< s(239)
s(260) =< s(244)
s(260) =< s(242)
s(259) =< s(242)
s(259) =< s(244)

  with precondition: [F=2,B>=1,C>=0,B>=A,B>=C,A+C+1>=B,A+B>=C+1] 

* Chain [54]: 14*s(261)+16*s(269)+12*s(270)+16*s(271)+4*s(272)+2*s(276)+4*s(278)+4*s(279)+2*s(280)+2*s(281)+2*s(296)+4*s(298)+4*s(299)+2*s(300)+5
  Such that:s(265) =< B-C+1
aux(67) =< A
aux(68) =< A+C
aux(69) =< B
aux(70) =< B+1
aux(71) =< C
s(261) =< aux(71)
s(269) =< aux(71)
s(269) =< aux(67)
s(270) =< aux(70)
s(271) =< aux(70)
s(271) =< aux(67)
s(272) =< aux(67)
s(273) =< aux(69)
s(274) =< s(272)*aux(69)
s(275) =< s(272)*aux(67)
s(276) =< s(274)+s(265)
s(277) =< s(272)*s(273)
s(277) =< s(276)+aux(68)
s(278) =< s(277)* (1/2)
s(278) =< s(275)
s(279) =< s(275)
s(278) =< aux(67)
s(279) =< aux(67)
s(278) =< s(274)
s(279) =< s(274)
s(280) =< s(274)
s(278) =< s(277)
s(279) =< s(277)
s(280) =< s(277)
s(281) =< aux(68)
s(296) =< s(274)+aux(70)
s(297) =< s(272)*s(273)
s(297) =< s(296)+aux(68)
s(298) =< s(297)* (1/2)
s(298) =< s(275)
s(299) =< s(275)
s(298) =< aux(67)
s(299) =< aux(67)
s(298) =< s(274)
s(299) =< s(274)
s(300) =< s(274)
s(298) =< s(297)
s(299) =< s(297)
s(300) =< s(297)

  with precondition: [F=4,C>=0,B>=A,A+C+1>=B] 


#### Cost of chains of n_evalfbb7in___10_loop_cont(A,B,C,D,E,F,G):
* Chain [62]: 0
  with precondition: [A=2] 

* Chain [61]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalfstart(A,B,C,D,E,F):
* Chain [63]: 232*s(632)+48*s(633)+6*s(639)+12*s(641)+12*s(642)+6*s(643)+6*s(644)+4*s(655)+2*s(660)+4*s(662)+4*s(663)+2*s(664)+2*s(665)+2*s(668)+4*s(670)+4*s(671)+2*s(672)+14*s(676)+16*s(678)+16*s(679)+8*s(680)+36*s(681)+8*s(688)+4*s(692)+8*s(694)+8*s(695)+4*s(696)+4*s(697)+4*s(700)+8*s(702)+8*s(703)+4*s(704)+8*s(707)+8*s(708)+4*s(709)+6*s(710)+4*s(718)+2*s(722)+4*s(724)+4*s(725)+2*s(726)+2*s(727)+2*s(730)+4*s(732)+4*s(733)+2*s(734)+44*s(735)+8*s(743)+4*s(747)+8*s(749)+8*s(750)+4*s(751)+4*s(752)+4*s(755)+8*s(757)+8*s(758)+4*s(759)+2*s(786)+4*s(789)+4*s(790)+2*s(791)+8
  Such that:s(631) =< B/2
aux(93) =< 1
aux(94) =< B
aux(95) =< B+1
aux(96) =< B+2
aux(97) =< 2*B
aux(98) =< 2*B+1
aux(99) =< 2*B+2
s(632) =< aux(94)
s(633) =< s(631)
s(633) =< aux(94)
s(636) =< aux(94)
s(637) =< s(632)*aux(94)
s(639) =< s(637)+aux(93)
s(640) =< s(632)*s(636)
s(640) =< s(639)+aux(97)
s(641) =< s(640)* (1/2)
s(641) =< s(637)
s(642) =< s(637)
s(641) =< aux(94)
s(642) =< aux(94)
s(643) =< s(637)
s(641) =< s(640)
s(642) =< s(640)
s(643) =< s(640)
s(644) =< aux(95)
s(645) =< aux(95)
s(644) =< aux(97)
s(645) =< aux(97)
s(646) =< aux(94)+1
s(647) =< aux(97)
s(649) =< s(644)*aux(96)
s(650) =< s(644)*aux(98)
s(651) =< s(644)*aux(97)
s(652) =< s(644)*s(646)
s(653) =< s(644)*s(647)
s(654) =< s(644)*s(636)
s(649) =< s(652)+aux(99)
s(655) =< s(654)
s(656) =< s(654)
s(655) =< s(645)
s(656) =< s(645)
s(657) =< s(636)
s(658) =< s(655)*s(636)
s(660) =< s(658)+s(649)
s(661) =< s(655)*s(657)
s(661) =< s(660)+s(645)
s(661) =< s(660)+s(653)
s(662) =< s(661)* (1/2)
s(662) =< s(658)
s(663) =< s(658)
s(662) =< s(656)
s(663) =< s(656)
s(664) =< s(658)
s(662) =< s(661)
s(663) =< s(661)
s(664) =< s(661)
s(665) =< s(651)
s(666) =< s(655)*aux(94)
s(668) =< s(666)+s(650)
s(669) =< s(655)*s(636)
s(669) =< s(668)+s(645)
s(669) =< s(668)+s(651)
s(670) =< s(669)* (1/2)
s(670) =< s(666)
s(671) =< s(666)
s(670) =< s(656)
s(671) =< s(656)
s(672) =< s(666)
s(670) =< s(669)
s(671) =< s(669)
s(672) =< s(669)
s(676) =< s(637)+aux(95)
s(677) =< s(632)*s(636)
s(677) =< s(676)+aux(94)
s(678) =< s(677)* (1/2)
s(678) =< s(637)
s(679) =< s(637)
s(678) =< aux(94)
s(679) =< aux(94)
s(680) =< s(637)
s(678) =< s(677)
s(679) =< s(677)
s(680) =< s(677)
s(681) =< aux(95)
s(682) =< s(681)*aux(96)
s(683) =< s(681)*aux(98)
s(684) =< s(681)*aux(97)
s(685) =< s(681)*s(646)
s(686) =< s(681)*s(647)
s(687) =< s(681)*s(636)
s(682) =< s(685)+aux(99)
s(688) =< s(687)
s(689) =< s(687)
s(688) =< aux(95)
s(689) =< aux(95)
s(690) =< s(688)*s(636)
s(692) =< s(690)+s(682)
s(693) =< s(688)*s(657)
s(693) =< s(692)+aux(95)
s(693) =< s(692)+s(686)
s(694) =< s(693)* (1/2)
s(694) =< s(690)
s(695) =< s(690)
s(694) =< s(689)
s(695) =< s(689)
s(696) =< s(690)
s(694) =< s(693)
s(695) =< s(693)
s(696) =< s(693)
s(697) =< s(684)
s(698) =< s(688)*aux(94)
s(700) =< s(698)+s(683)
s(701) =< s(688)*s(636)
s(701) =< s(700)+aux(95)
s(701) =< s(700)+s(684)
s(702) =< s(701)* (1/2)
s(702) =< s(698)
s(703) =< s(698)
s(702) =< s(689)
s(703) =< s(689)
s(704) =< s(698)
s(702) =< s(701)
s(703) =< s(701)
s(704) =< s(701)
s(706) =< s(632)*s(636)
s(706) =< s(676)+aux(98)
s(707) =< s(706)* (1/2)
s(707) =< s(637)
s(708) =< s(637)
s(707) =< aux(94)
s(708) =< aux(94)
s(709) =< s(637)
s(707) =< s(706)
s(708) =< s(706)
s(709) =< s(706)
s(710) =< aux(95)
s(711) =< aux(95)
s(710) =< aux(98)
s(711) =< aux(98)
s(712) =< s(710)*aux(96)
s(713) =< s(710)*aux(98)
s(714) =< s(710)*aux(97)
s(715) =< s(710)*s(646)
s(716) =< s(710)*s(647)
s(717) =< s(710)*s(636)
s(712) =< s(715)+aux(99)
s(718) =< s(717)
s(719) =< s(717)
s(718) =< s(711)
s(719) =< s(711)
s(720) =< s(718)*s(636)
s(722) =< s(720)+s(712)
s(723) =< s(718)*s(657)
s(723) =< s(722)+s(711)
s(723) =< s(722)+s(716)
s(724) =< s(723)* (1/2)
s(724) =< s(720)
s(725) =< s(720)
s(724) =< s(719)
s(725) =< s(719)
s(726) =< s(720)
s(724) =< s(723)
s(725) =< s(723)
s(726) =< s(723)
s(727) =< s(714)
s(728) =< s(718)*aux(94)
s(730) =< s(728)+s(713)
s(731) =< s(718)*s(636)
s(731) =< s(730)+s(711)
s(731) =< s(730)+s(714)
s(732) =< s(731)* (1/2)
s(732) =< s(728)
s(733) =< s(728)
s(732) =< s(719)
s(733) =< s(719)
s(734) =< s(728)
s(732) =< s(731)
s(733) =< s(731)
s(734) =< s(731)
s(735) =< aux(95)
s(736) =< aux(95)
s(735) =< aux(94)
s(736) =< aux(94)
s(737) =< s(735)*aux(96)
s(738) =< s(735)*aux(98)
s(739) =< s(735)*aux(97)
s(740) =< s(735)*s(646)
s(741) =< s(735)*s(647)
s(742) =< s(735)*s(636)
s(737) =< s(740)+aux(99)
s(743) =< s(742)
s(744) =< s(742)
s(743) =< s(736)
s(744) =< s(736)
s(745) =< s(743)*s(636)
s(747) =< s(745)+s(737)
s(748) =< s(743)*s(657)
s(748) =< s(747)+s(736)
s(748) =< s(747)+s(741)
s(749) =< s(748)* (1/2)
s(749) =< s(745)
s(750) =< s(745)
s(749) =< s(744)
s(750) =< s(744)
s(751) =< s(745)
s(749) =< s(748)
s(750) =< s(748)
s(751) =< s(748)
s(752) =< s(739)
s(753) =< s(743)*aux(94)
s(755) =< s(753)+s(738)
s(756) =< s(743)*s(636)
s(756) =< s(755)+s(736)
s(756) =< s(755)+s(739)
s(757) =< s(756)* (1/2)
s(757) =< s(753)
s(758) =< s(753)
s(757) =< s(744)
s(758) =< s(744)
s(759) =< s(753)
s(757) =< s(756)
s(758) =< s(756)
s(759) =< s(756)
s(786) =< aux(97)
s(788) =< s(632)*s(636)
s(788) =< s(676)+aux(97)
s(789) =< s(788)* (1/2)
s(789) =< s(637)
s(790) =< s(637)
s(789) =< aux(94)
s(790) =< aux(94)
s(791) =< s(637)
s(789) =< s(788)
s(790) =< s(788)
s(791) =< s(788)

  with precondition: [] 


#### Cost of chains of pyRinit(A,B,C,D,E,F):
* Chain [64]: 232*s(840)+48*s(841)+6*s(844)+12*s(846)+12*s(847)+6*s(848)+6*s(849)+4*s(859)+2*s(863)+4*s(865)+4*s(866)+2*s(867)+2*s(868)+2*s(870)+4*s(872)+4*s(873)+2*s(874)+14*s(875)+16*s(877)+16*s(878)+8*s(879)+36*s(880)+8*s(887)+4*s(890)+8*s(892)+8*s(893)+4*s(894)+4*s(895)+4*s(897)+8*s(899)+8*s(900)+4*s(901)+8*s(903)+8*s(904)+4*s(905)+6*s(906)+4*s(914)+2*s(917)+4*s(919)+4*s(920)+2*s(921)+2*s(922)+2*s(924)+4*s(926)+4*s(927)+2*s(928)+44*s(929)+8*s(937)+4*s(940)+8*s(942)+8*s(943)+4*s(944)+4*s(945)+4*s(947)+8*s(949)+8*s(950)+4*s(951)+2*s(952)+4*s(954)+4*s(955)+2*s(956)+9
  Such that:s(833) =< 1
s(834) =< B
s(835) =< B+1
s(836) =< B+2
s(837) =< 2*B
s(838) =< 2*B+1
s(839) =< 2*B+2
s(832) =< B/2
s(840) =< s(834)
s(841) =< s(832)
s(841) =< s(834)
s(842) =< s(834)
s(843) =< s(840)*s(834)
s(844) =< s(843)+s(833)
s(845) =< s(840)*s(842)
s(845) =< s(844)+s(837)
s(846) =< s(845)* (1/2)
s(846) =< s(843)
s(847) =< s(843)
s(846) =< s(834)
s(847) =< s(834)
s(848) =< s(843)
s(846) =< s(845)
s(847) =< s(845)
s(848) =< s(845)
s(849) =< s(835)
s(850) =< s(835)
s(849) =< s(837)
s(850) =< s(837)
s(851) =< s(834)+1
s(852) =< s(837)
s(853) =< s(849)*s(836)
s(854) =< s(849)*s(838)
s(855) =< s(849)*s(837)
s(856) =< s(849)*s(851)
s(857) =< s(849)*s(852)
s(858) =< s(849)*s(842)
s(853) =< s(856)+s(839)
s(859) =< s(858)
s(860) =< s(858)
s(859) =< s(850)
s(860) =< s(850)
s(861) =< s(842)
s(862) =< s(859)*s(842)
s(863) =< s(862)+s(853)
s(864) =< s(859)*s(861)
s(864) =< s(863)+s(850)
s(864) =< s(863)+s(857)
s(865) =< s(864)* (1/2)
s(865) =< s(862)
s(866) =< s(862)
s(865) =< s(860)
s(866) =< s(860)
s(867) =< s(862)
s(865) =< s(864)
s(866) =< s(864)
s(867) =< s(864)
s(868) =< s(855)
s(869) =< s(859)*s(834)
s(870) =< s(869)+s(854)
s(871) =< s(859)*s(842)
s(871) =< s(870)+s(850)
s(871) =< s(870)+s(855)
s(872) =< s(871)* (1/2)
s(872) =< s(869)
s(873) =< s(869)
s(872) =< s(860)
s(873) =< s(860)
s(874) =< s(869)
s(872) =< s(871)
s(873) =< s(871)
s(874) =< s(871)
s(875) =< s(843)+s(835)
s(876) =< s(840)*s(842)
s(876) =< s(875)+s(834)
s(877) =< s(876)* (1/2)
s(877) =< s(843)
s(878) =< s(843)
s(877) =< s(834)
s(878) =< s(834)
s(879) =< s(843)
s(877) =< s(876)
s(878) =< s(876)
s(879) =< s(876)
s(880) =< s(835)
s(881) =< s(880)*s(836)
s(882) =< s(880)*s(838)
s(883) =< s(880)*s(837)
s(884) =< s(880)*s(851)
s(885) =< s(880)*s(852)
s(886) =< s(880)*s(842)
s(881) =< s(884)+s(839)
s(887) =< s(886)
s(888) =< s(886)
s(887) =< s(835)
s(888) =< s(835)
s(889) =< s(887)*s(842)
s(890) =< s(889)+s(881)
s(891) =< s(887)*s(861)
s(891) =< s(890)+s(835)
s(891) =< s(890)+s(885)
s(892) =< s(891)* (1/2)
s(892) =< s(889)
s(893) =< s(889)
s(892) =< s(888)
s(893) =< s(888)
s(894) =< s(889)
s(892) =< s(891)
s(893) =< s(891)
s(894) =< s(891)
s(895) =< s(883)
s(896) =< s(887)*s(834)
s(897) =< s(896)+s(882)
s(898) =< s(887)*s(842)
s(898) =< s(897)+s(835)
s(898) =< s(897)+s(883)
s(899) =< s(898)* (1/2)
s(899) =< s(896)
s(900) =< s(896)
s(899) =< s(888)
s(900) =< s(888)
s(901) =< s(896)
s(899) =< s(898)
s(900) =< s(898)
s(901) =< s(898)
s(902) =< s(840)*s(842)
s(902) =< s(875)+s(838)
s(903) =< s(902)* (1/2)
s(903) =< s(843)
s(904) =< s(843)
s(903) =< s(834)
s(904) =< s(834)
s(905) =< s(843)
s(903) =< s(902)
s(904) =< s(902)
s(905) =< s(902)
s(906) =< s(835)
s(907) =< s(835)
s(906) =< s(838)
s(907) =< s(838)
s(908) =< s(906)*s(836)
s(909) =< s(906)*s(838)
s(910) =< s(906)*s(837)
s(911) =< s(906)*s(851)
s(912) =< s(906)*s(852)
s(913) =< s(906)*s(842)
s(908) =< s(911)+s(839)
s(914) =< s(913)
s(915) =< s(913)
s(914) =< s(907)
s(915) =< s(907)
s(916) =< s(914)*s(842)
s(917) =< s(916)+s(908)
s(918) =< s(914)*s(861)
s(918) =< s(917)+s(907)
s(918) =< s(917)+s(912)
s(919) =< s(918)* (1/2)
s(919) =< s(916)
s(920) =< s(916)
s(919) =< s(915)
s(920) =< s(915)
s(921) =< s(916)
s(919) =< s(918)
s(920) =< s(918)
s(921) =< s(918)
s(922) =< s(910)
s(923) =< s(914)*s(834)
s(924) =< s(923)+s(909)
s(925) =< s(914)*s(842)
s(925) =< s(924)+s(907)
s(925) =< s(924)+s(910)
s(926) =< s(925)* (1/2)
s(926) =< s(923)
s(927) =< s(923)
s(926) =< s(915)
s(927) =< s(915)
s(928) =< s(923)
s(926) =< s(925)
s(927) =< s(925)
s(928) =< s(925)
s(929) =< s(835)
s(930) =< s(835)
s(929) =< s(834)
s(930) =< s(834)
s(931) =< s(929)*s(836)
s(932) =< s(929)*s(838)
s(933) =< s(929)*s(837)
s(934) =< s(929)*s(851)
s(935) =< s(929)*s(852)
s(936) =< s(929)*s(842)
s(931) =< s(934)+s(839)
s(937) =< s(936)
s(938) =< s(936)
s(937) =< s(930)
s(938) =< s(930)
s(939) =< s(937)*s(842)
s(940) =< s(939)+s(931)
s(941) =< s(937)*s(861)
s(941) =< s(940)+s(930)
s(941) =< s(940)+s(935)
s(942) =< s(941)* (1/2)
s(942) =< s(939)
s(943) =< s(939)
s(942) =< s(938)
s(943) =< s(938)
s(944) =< s(939)
s(942) =< s(941)
s(943) =< s(941)
s(944) =< s(941)
s(945) =< s(933)
s(946) =< s(937)*s(834)
s(947) =< s(946)+s(932)
s(948) =< s(937)*s(842)
s(948) =< s(947)+s(930)
s(948) =< s(947)+s(933)
s(949) =< s(948)* (1/2)
s(949) =< s(946)
s(950) =< s(946)
s(949) =< s(938)
s(950) =< s(938)
s(951) =< s(946)
s(949) =< s(948)
s(950) =< s(948)
s(951) =< s(948)
s(952) =< s(837)
s(953) =< s(840)*s(842)
s(953) =< s(875)+s(837)
s(954) =< s(953)* (1/2)
s(954) =< s(843)
s(955) =< s(843)
s(954) =< s(834)
s(955) =< s(834)
s(956) =< s(843)
s(954) =< s(953)
s(955) =< s(953)
s(956) =< s(953)

  with precondition: [] 


Closed-form bounds of pyRinit(A,B,C,D,E,F): 
-------------------------------------
* Chain [64] with precondition: [] 
    - Upper bound: nat(B)*312+15+nat(B)*40*nat(B)+nat(B)*48*nat(B+1)+nat(2*B)*2+nat(2*B)*12*nat(B+1)+nat(B+1)*226+nat(B+2)*12*nat(B+1)+nat(2*B+1)*12*nat(B+1)+nat(B/2)*48 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D,E,F): nat(B)*312+15+nat(B)*40*nat(B)+nat(B)*48*nat(B+1)+nat(2*B)*2+nat(2*B)*12*nat(B+1)+nat(B+1)*226+nat(B+2)*12*nat(B+1)+nat(2*B+1)*12*nat(B+1)+nat(B/2)*48 
Asymptotic class: n^2 
* Total analysis performed in 3855 ms.


-- stats
realtime 0:04.30
usertime 4.15
systime 0.02

