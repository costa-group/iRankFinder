WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalcyclicbb3in___6/7,n_evalcyclicbb4in___5/7,n_evalcyclicbbin___4/7]
1. recursive  : [n_evalcyclicbb3in___3/7,n_evalcyclicbb4in___2/7,n_evalcyclicbbin___1/7]
2. recursive  : [n_evalcyclicbb3in___3_loop_cont/8,n_evalcyclicbb3in___6_loop_cont/8,n_evalcyclicbb4in___9/7,n_evalcyclicbbin___8/7]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [n_evalcyclicstop___7/4]
5. non_recursive  : [n_evalcyclicbb4in___9_loop_cont/5]
6. non_recursive  : [n_evalcyclicbb3in___10/4]
7. non_recursive  : [n_evalcyclicstart/4]
8. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalcyclicbb3in___6/7
1. SCC is partially evaluated into n_evalcyclicbb3in___3/7
2. SCC is partially evaluated into n_evalcyclicbb4in___9/7
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_evalcyclicbb4in___9_loop_cont/5
6. SCC is partially evaluated into n_evalcyclicbb3in___10/4
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalcyclicbb3in___6/7 
* CE 12 is refined into CE [19] 
* CE 14 is refined into CE [20] 
* CE 11 is refined into CE [21] 
* CE 13 is refined into CE [22] 


### Cost equations --> "Loop" of n_evalcyclicbb3in___6/7 
* CEs [22] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [21] --> Loop 18 

### Ranking functions of CR n_evalcyclicbb3in___6(A,B,C,D,E,F,G) 
* RF of phase [15]: [B-C+1]

#### Partial ranking functions of CR n_evalcyclicbb3in___6(A,B,C,D,E,F,G) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    B-C+1


### Specialization of cost equations n_evalcyclicbb3in___3/7 
* CE 18 is refined into CE [23] 
* CE 15 is refined into CE [24] 
* CE 17 is refined into CE [25] 
* CE 16 is refined into CE [26] 


### Cost equations --> "Loop" of n_evalcyclicbb3in___3/7 
* CEs [26] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [24] --> Loop 21 
* CEs [25] --> Loop 22 

### Ranking functions of CR n_evalcyclicbb3in___3(A,B,C,D,E,F,G) 
* RF of phase [19]: [A-C,B-C-1]

#### Partial ranking functions of CR n_evalcyclicbb3in___3(A,B,C,D,E,F,G) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    A-C
    B-C-1


### Specialization of cost equations n_evalcyclicbb4in___9/7 
* CE 4 is refined into CE [27] 
* CE 6 is refined into CE [28,29] 
* CE 8 is refined into CE [30] 
* CE 3 is refined into CE [31] 
* CE 5 is refined into CE [32,33,34,35] 
* CE 7 is refined into CE [36] 


### Cost equations --> "Loop" of n_evalcyclicbb4in___9/7 
* CEs [27,28,29,30] --> Loop 23 
* CEs [34] --> Loop 24 
* CEs [31,32,33,35,36] --> Loop 25 

### Ranking functions of CR n_evalcyclicbb4in___9(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_evalcyclicbb4in___9(A,B,C,D,E,F,G) 


### Specialization of cost equations n_evalcyclicbb4in___9_loop_cont/5 
* CE 10 is refined into CE [37] 
* CE 9 is refined into CE [38] 


### Cost equations --> "Loop" of n_evalcyclicbb4in___9_loop_cont/5 
* CEs [37] --> Loop 26 
* CEs [38] --> Loop 27 

### Ranking functions of CR n_evalcyclicbb4in___9_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalcyclicbb4in___9_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalcyclicbb3in___10/4 
* CE 2 is refined into CE [39,40] 


### Cost equations --> "Loop" of n_evalcyclicbb3in___10/4 
* CEs [39,40] --> Loop 28 

### Ranking functions of CR n_evalcyclicbb3in___10(A,B,C,D) 

#### Partial ranking functions of CR n_evalcyclicbb3in___10(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [41] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [41] --> Loop 29 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalcyclicbb3in___6(A,B,C,D,E,F,G):
* Chain [[15],18]: 3*it(15)+2
  Such that:it(15) =< B-C+1

  with precondition: [D=3,A>=0,C>=A+2,B>=C] 

* Chain [[15],17]: 3*it(15)+0
  Such that:it(15) =< B-C+1

  with precondition: [D=4,A>=0,C>=A+2,B>=C] 

* Chain [[15],16]: 3*it(15)+3
  Such that:it(15) =< B-C+1

  with precondition: [D=5,G=0,A=E,B=F,A>=0,C>=A+2,B>=C] 

* Chain [18]: 2
  with precondition: [D=3,A>=0,C>=A+2,B+1>=C] 

* Chain [17]: 0
  with precondition: [D=4,A>=0,C>=A+2,B+1>=C] 

* Chain [16]: 3
  with precondition: [D=5,G=0,C=B+1,A=E,C=F+1,A>=0,C>=A+2] 


#### Cost of chains of n_evalcyclicbb3in___3(A,B,C,D,E,F,G):
* Chain [[19],22]: 3*it(19)+1
  Such that:it(19) =< A-C

  with precondition: [D=3,C>=0,B>=A+1,A>=C+1] 

* Chain [[19],21]: 3*it(19)+2
  Such that:it(19) =< A-C

  with precondition: [D=3,C>=0,B>=A+1,A>=C+2] 

* Chain [[19],20]: 3*it(19)+0
  Such that:it(19) =< A-C

  with precondition: [D=4,C>=0,B>=A+1,A>=C+1] 

* Chain [22]: 1
  with precondition: [D=3,A=C,A>=0,B>=A+1] 

* Chain [21]: 2
  with precondition: [D=3,C>=0,B>=A+1,A>=C+1] 

* Chain [20]: 0
  with precondition: [D=4] 


#### Cost of chains of n_evalcyclicbb4in___9(A,B,C,D,E,F,G):
* Chain [25]: 3*s(6)+12*s(8)+3*s(9)+7
  Such that:s(6) =< -A+B
s(9) =< B-C
aux(2) =< C
s(8) =< aux(2)

  with precondition: [D=3,C=A+1,C>=1,B>=C] 

* Chain [24]: 3*s(12)+6
  Such that:s(12) =< B

  with precondition: [A=0,C=1,D=3,B>=2] 

* Chain [23]: 3*s(13)+3*s(14)+3*s(15)+3*s(16)+5
  Such that:s(13) =< -A+B
s(14) =< B
s(15) =< B-C
s(16) =< C

  with precondition: [D=4,C=A+1,C>=1,B>=C] 


#### Cost of chains of n_evalcyclicbb4in___9_loop_cont(A,B,C,D,E):
* Chain [27]: 0
  with precondition: [A=3] 

* Chain [26]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalcyclicbb3in___10(A,B,C,D):
* Chain [28]: 6*s(22)+6*s(23)+6*s(24)+15*s(26)+8
  Such that:aux(3) =< B
aux(4) =< B-C
aux(5) =< B-C+1
aux(6) =< C
s(23) =< aux(3)
s(24) =< aux(4)
s(22) =< aux(5)
s(26) =< aux(6)

  with precondition: [A+1=C,A>=0,B>=A+1] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [29]: 6*s(35)+12*s(36)+15*s(38)+10
  Such that:s(34) =< A+1
s(31) =< B
aux(7) =< -A+B
s(35) =< s(31)
s(36) =< aux(7)
s(38) =< s(34)

  with precondition: [A>=0,B>=A+1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [29] with precondition: [A>=0,B>=A+1] 
    - Upper bound: 3*A+18*B+25 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): 3*A+18*B+25 
Asymptotic class: n 
* Total analysis performed in 362 ms.


-- stats
realtime 0:00.43
usertime 0.40
systime 0.00

