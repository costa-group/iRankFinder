WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalDis2bb3in___1/7,n_evalDis2bbin___3/7]
1. recursive  : [n_evalDis2bb3in___4/7,n_evalDis2bbin___3_loop_cont/8]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalDis2stop___2/4]
4. non_recursive  : [n_evalDis2bb3in___4_loop_cont/5]
5. non_recursive  : [n_evalDis2start/4]
6. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalDis2bbin___3/7
1. SCC is partially evaluated into n_evalDis2bb3in___4/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalDis2bb3in___4_loop_cont/5
5. SCC is partially evaluated into n_evalDis2start/4
6. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalDis2bbin___3/7 
* CE 11 is refined into CE [12] 
* CE 10 is refined into CE [13] 
* CE 9 is refined into CE [14] 


### Cost equations --> "Loop" of n_evalDis2bbin___3/7 
* CEs [14] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

### Ranking functions of CR n_evalDis2bbin___3(A,B,C,D,E,F,G) 
* RF of phase [11]: [A-B,-B+C+1]

#### Partial ranking functions of CR n_evalDis2bbin___3(A,B,C,D,E,F,G) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    A-B
    -B+C+1


### Specialization of cost equations n_evalDis2bb3in___4/7 
* CE 5 is refined into CE [15] 
* CE 3 is refined into CE [16] 
* CE 6 is refined into CE [17] 
* CE 4 is refined into CE [18,19] 


### Cost equations --> "Loop" of n_evalDis2bb3in___4/7 
* CEs [18] --> Loop 14 
* CEs [19] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16,17] --> Loop 17 

### Ranking functions of CR n_evalDis2bb3in___4(A,B,C,D,E,F,G) 
* RF of phase [14]: [A-C,B-C]
* RF of phase [15]: [A-B,A-C]

#### Partial ranking functions of CR n_evalDis2bb3in___4(A,B,C,D,E,F,G) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    A-C
    B-C
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    A-B
    A-C


### Specialization of cost equations n_evalDis2bb3in___4_loop_cont/5 
* CE 7 is refined into CE [20] 
* CE 8 is refined into CE [21] 


### Cost equations --> "Loop" of n_evalDis2bb3in___4_loop_cont/5 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 

### Ranking functions of CR n_evalDis2bb3in___4_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalDis2bb3in___4_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalDis2start/4 
* CE 2 is refined into CE [22,23,24,25,26] 


### Cost equations --> "Loop" of n_evalDis2start/4 
* CEs [22,23,24,25,26] --> Loop 20 

### Ranking functions of CR n_evalDis2start(A,B,C,D) 

#### Partial ranking functions of CR n_evalDis2start(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [27] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [27] --> Loop 21 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalDis2bbin___3(A,B,C,D,E,F,G):
* Chain [[11],13]: 2*it(11)+1
  Such that:it(11) =< -B+F

  with precondition: [D=2,A=E,C+1=F,C+1=G,C>=B,A>=C+1] 

* Chain [[11],12]: 2*it(11)+0
  Such that:it(11) =< -B+C+1

  with precondition: [D=3,C>=B,A>=C+1] 

* Chain [13]: 1
  with precondition: [D=2,A=E,B=F,C+1=G,A>=C+1,B>=C+1] 

* Chain [12]: 0
  with precondition: [D=3,A>=C+1] 


#### Cost of chains of n_evalDis2bb3in___4(A,B,C,D,E,F,G):
* Chain [[15],17]: 2*it(15)+2*s(2)+2*s(5)+1
  Such that:s(2) =< 1
it(15) =< A-C
aux(3) =< A-B
it(15) =< aux(3)
s(5) =< aux(3)

  with precondition: [D=3,C>=B,A>=C+1] 

* Chain [[15],16]: 2*it(15)+2*s(5)+1
  Such that:it(15) =< A-C
aux(4) =< A-B
it(15) =< aux(4)
s(5) =< aux(4)

  with precondition: [D=4,C>=B,A>=C+1] 

* Chain [[14],[15],17]: 2*it(14)+4*it(15)+2*s(2)+1
  Such that:s(2) =< 1
it(14) =< B-C
aux(5) =< A-B
it(15) =< aux(5)

  with precondition: [D=3,A>=B+1,B>=C+1] 

* Chain [[14],[15],16]: 2*it(14)+4*it(15)+1
  Such that:it(14) =< B-C
aux(6) =< A-B
it(15) =< aux(6)

  with precondition: [D=4,A>=B+1,B>=C+1] 

* Chain [[14],17]: 2*it(14)+2*s(2)+1
  Such that:s(2) =< 1
it(14) =< A-C

  with precondition: [D=3,A>=C+1,B>=C+1] 

* Chain [[14],16]: 2*it(14)+1
  Such that:it(14) =< A-C

  with precondition: [D=4,B>=A,A>=C+1] 

* Chain [17]: 2*s(2)+1
  Such that:s(2) =< -B+C+1

  with precondition: [D=3] 

* Chain [16]: 1
  with precondition: [D=4,C>=A] 


#### Cost of chains of n_evalDis2bb3in___4_loop_cont(A,B,C,D,E):
* Chain [19]: 0
  with precondition: [A=3] 

* Chain [18]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalDis2start(A,B,C,D):
* Chain [20]: 2*s(17)+4*s(18)+6*s(22)+4*s(23)+4*s(24)+12*s(25)+2
  Such that:s(19) =< 1
s(17) =< A-C+1
aux(10) =< -A+B
aux(11) =< -A+C
aux(12) =< B-C
s(23) =< aux(10)
s(24) =< aux(10)
s(18) =< aux(11)
s(22) =< s(19)
s(25) =< aux(12)
s(24) =< aux(12)

  with precondition: [] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [21]: 2*s(34)+4*s(38)+4*s(39)+4*s(40)+6*s(41)+12*s(42)+3
  Such that:s(33) =< 1
s(35) =< -A+B
s(36) =< -A+C
s(34) =< A-C+1
s(37) =< B-C
s(38) =< s(35)
s(39) =< s(35)
s(40) =< s(36)
s(41) =< s(33)
s(42) =< s(37)
s(39) =< s(37)

  with precondition: [] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [21] with precondition: [] 
    - Upper bound: nat(-A+B)*8+9+nat(-A+C)*4+nat(A-C+1)*2+nat(B-C)*12 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): nat(-A+B)*8+9+nat(-A+C)*4+nat(A-C+1)*2+nat(B-C)*12 
Asymptotic class: n 
* Total analysis performed in 264 ms.


-- stats
realtime 0:00.33
usertime 0.30
systime 0.00

