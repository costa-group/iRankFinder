MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalEx2bb2in___3/9]
1. recursive  : [n_evalEx2bb2in___3_loop_cont/10,n_evalEx2bb2in___5/9,n_evalEx2bb3in___1/9,n_evalEx2bb3in___2/9]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalEx2stop___4/5]
4. non_recursive  : [n_evalEx2bb2in___5_loop_cont/6]
5. non_recursive  : [n_evalEx2bb3in___6/5]
6. non_recursive  : [n_evalEx2start/5]
7. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalEx2bb2in___3/9
1. SCC is partially evaluated into n_evalEx2bb2in___5/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalEx2bb2in___5_loop_cont/6
5. SCC is partially evaluated into n_evalEx2bb3in___6/5
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalEx2bb2in___3/9 
* CE 16 is refined into CE [17] 
* CE 15 is refined into CE [18] 
* CE 14 is refined into CE [19] 


### Cost equations --> "Loop" of n_evalEx2bb2in___3/9 
* CEs [19] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [18] --> Loop 16 

### Ranking functions of CR n_evalEx2bb2in___3(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_evalEx2bb2in___3(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_evalEx2bb2in___5/9 
* CE 8 is refined into CE [20,21] 
* CE 11 is refined into CE [22] 
* CE 6 is refined into CE [23] 
* CE 5 is refined into CE [24] 
* CE 10 is refined into CE [25,26,27] 
* CE 7 is refined into CE [28] 
* CE 9 is refined into CE [29,30,31] 


### Cost equations --> "Loop" of n_evalEx2bb2in___5/9 
* CEs [31] --> Loop 17 
* CEs [30] --> Loop 18 
* CEs [29] --> Loop 19 
* CEs [28] --> Loop 20 
* CEs [27] --> Loop 21 
* CEs [21] --> Loop 22 
* CEs [20,22] --> Loop 23 
* CEs [23,25] --> Loop 24 
* CEs [24,26] --> Loop 25 

### Ranking functions of CR n_evalEx2bb2in___5(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_evalEx2bb2in___5(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [17,18,19,20]:
  - RF of loop [18:1]:
    A/2+B/2-2 depends on loops [17:1] 
    A/2+D/2-3/2 depends on loops [17:1] 
    B/3-1 depends on loops [17:1] 
    D/3-2/3 depends on loops [17:1] 
  - RF of loop [19:1]:
    B/2-1 depends on loops [17:1] 
    D/2-1/2 depends on loops [17:1] 
  - RF of loop [20:1]:
    A-1 depends on loops [17:1,18:1] 
    B-1 depends on loops [17:1] 
    C depends on loops [17:1,18:1] 
    D depends on loops [17:1] 


### Specialization of cost equations n_evalEx2bb2in___5_loop_cont/6 
* CE 13 is refined into CE [32] 
* CE 12 is refined into CE [33] 


### Cost equations --> "Loop" of n_evalEx2bb2in___5_loop_cont/6 
* CEs [32] --> Loop 26 
* CEs [33] --> Loop 27 

### Ranking functions of CR n_evalEx2bb2in___5_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalEx2bb2in___5_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalEx2bb3in___6/5 
* CE 2 is refined into CE [34,35,36,37,38,39,40,41] 
* CE 3 is refined into CE [42] 
* CE 4 is refined into CE [43] 


### Cost equations --> "Loop" of n_evalEx2bb3in___6/5 
* CEs [34,35] --> Loop 28 
* CEs [42] --> Loop 29 
* CEs [43] --> Loop 30 
* CEs [36,37,38,39,40,41] --> Loop 31 

### Ranking functions of CR n_evalEx2bb3in___6(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalEx2bb3in___6(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [44,45,46,47] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [47] --> Loop 32 
* CEs [46] --> Loop 33 
* CEs [44] --> Loop 34 
* CEs [45] --> Loop 35 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalEx2bb2in___3(A,B,C,D,E,F,G,H,I):
* Chain [[14]]...: 1*it(14)+0
  with precondition: [C>=A,B>=1,A>=1,A+B=C+D+2,E>=2,3>=E] 

* Chain [[14],16]: 1*it(14)+1
  with precondition: [E=2,F=H,A+B=C+D+2,A+B=F+G+2,A+B=F+I+2,A>=1,B>=1,C>=A,F>=C+1] 

* Chain [[14],15]: 1*it(14)+0
  with precondition: [E=3,A+B=C+D+2,A>=1,B>=1,C>=A] 

* Chain [16]: 1
  with precondition: [E=2,C=F,D=G,C=H,D=I,C+D+2=A+B,A>=1,C>=A,C+D+1>=A] 

* Chain [15]: 0
  with precondition: [E=3,C+D+2=A+B,A>=1,C>=A,C+D+1>=A] 


#### Cost of chains of n_evalEx2bb2in___5(A,B,C,D,E,F,G,H,I):
* Chain [[17,18,19,20]]...: 12*it(17)+0
  with precondition: [A>=1,A=C+1,B>=1,B=D+1] 

* Chain [[17,18,19,20],25]: 13*aux(82)+0
  with precondition: [E=4,A=C+1,B=D+1,A>=1,B>=1] 

* Chain [[17,18,19,20],24]: 12*it(17)+3
  with precondition: [E=4,A=C+1,B=D+1,A>=1,B>=1] 

* Chain [[17,18,19,20],23]: 13*aux(83)+0
  with precondition: [E=3,A=C+1,B=D+1,A>=1,B>=1] 

* Chain [[17,18,19,20],22]...: 13*it(17)+1
  with precondition: [E=3,A=C+1,B=D+1,A>=1,B>=1] 

* Chain [[17,18,19,20],21]...: 13*it(17)+2
  with precondition: [E=4,A=C+1,B=D+1,A>=1,B>=1] 

* Chain [25]: 1*aux(82)+0
  with precondition: [E=4,C+1=A,D+1=B,C>=0,D>=0] 

* Chain [24]: 3
  with precondition: [E=4,C+1=A,D+1=B,1>=D,C>=0,D>=0] 

* Chain [23]: 1*aux(83)+0
  with precondition: [E=3,C+1=A,D+1=B,C>=0,D>=0] 

* Chain [22]...: 1*s(10)+1
  with precondition: [E=3,C+1=A,D+1=B,C>=0,D>=0] 

* Chain [21]...: 1*s(11)+2
  with precondition: [E=4,C+1=A,D+1=B,C>=0,D>=0] 


#### Cost of chains of n_evalEx2bb2in___5_loop_cont(A,B,C,D,E,F):
* Chain [27]: 0
  with precondition: [A=3] 

* Chain [26]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalEx2bb3in___6(A,B,C,D,E):
* Chain [31]...: 1*aux(86)+0
  with precondition: [A>=1,B>=1] 

* Chain [30]: 1
  with precondition: [0>=A] 

* Chain [29]: 1
  with precondition: [0>=B] 

* Chain [28]: 1*aux(87)+0
  with precondition: [A>=1,B>=1] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [35]: 3
  with precondition: [0>=A] 

* Chain [34]: 3
  with precondition: [0>=B] 

* Chain [33]: 1*s(25)+2
  with precondition: [A>=1,B>=1] 

* Chain [32]...: 1*s(26)+2
  with precondition: [A>=1,B>=1] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [35] with precondition: [0>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [34] with precondition: [0>=B] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [33] with precondition: [A>=1,B>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [32]... with precondition: [A>=1,B>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of pyRinit(A,B,C,D,E): inf 
Asymptotic class: infinity 
* Total analysis performed in 844 ms.


-- stats
realtime 0:00.93
usertime 0.90
systime 0.01

