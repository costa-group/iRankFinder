WORST_CASE(?,O(n^3))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalNestedLoopbb3in___10/17,n_evalNestedLoopbb4in___14/17,n_evalNestedLoopbb6in___12/17,n_evalNestedLoopbb7in___11/17]
1. recursive  : [n_evalNestedLoopbb3in___16/17,n_evalNestedLoopbb4in___14_loop_cont/18]
2. recursive  : [n_evalNestedLoopbb10in___2/17,n_evalNestedLoopbb3in___16_loop_cont/18,n_evalNestedLoopbb6in___1/17,n_evalNestedLoopbb7in___17/17,n_evalNestedLoopbb9in___15/17]
3. recursive  : [n_evalNestedLoopbb10in___20/17,n_evalNestedLoopbb6in___18/17,n_evalNestedLoopbb7in___17_loop_cont/18,n_evalNestedLoopbb9in___21/17]
4. non_recursive  : [exit_location/1]
5. recursive  : [n_evalNestedLoopbb10in___5/17,n_evalNestedLoopbb6in___4/17,n_evalNestedLoopbb7in___9/17,n_evalNestedLoopbb9in___6/17]
6. recursive  : [n_evalNestedLoopbb10in___3/17,n_evalNestedLoopbb3in___7/17,n_evalNestedLoopbb6in___13/17,n_evalNestedLoopbb7in___9_loop_cont/18,n_evalNestedLoopbb9in___8/17]
7. non_recursive  : [n_evalNestedLoopstop___19/9]
8. non_recursive  : [n_evalNestedLoopbb6in___13_loop_cont/10]
9. non_recursive  : [n_evalNestedLoopbb9in___21_loop_cont/10]
10. non_recursive  : [n_evalNestedLoopstart/9]
11. non_recursive  : [pyRinit/9]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalNestedLoopbb4in___14/17
1. SCC is partially evaluated into n_evalNestedLoopbb3in___16/17
2. SCC is partially evaluated into n_evalNestedLoopbb7in___17/17
3. SCC is partially evaluated into n_evalNestedLoopbb9in___21/17
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_evalNestedLoopbb7in___9/17
6. SCC is partially evaluated into n_evalNestedLoopbb6in___13/17
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into n_evalNestedLoopbb6in___13_loop_cont/10
9. SCC is partially evaluated into n_evalNestedLoopbb9in___21_loop_cont/10
10. SCC is partially evaluated into n_evalNestedLoopstart/9
11. SCC is partially evaluated into pyRinit/9

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalNestedLoopbb4in___14/17 
* CE 46 is refined into CE [49] 
* CE 44 is refined into CE [50] 
* CE 47 is refined into CE [51] 
* CE 48 is refined into CE [52] 
* CE 45 is refined into CE [53] 


### Cost equations --> "Loop" of n_evalNestedLoopbb4in___14/17 
* CEs [53] --> Loop 40 
* CEs [49] --> Loop 41 
* CEs [50] --> Loop 42 
* CEs [51] --> Loop 43 
* CEs [52] --> Loop 44 

### Ranking functions of CR n_evalNestedLoopbb4in___14(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [40]: [B-E-1,B-G]

#### Partial ranking functions of CR n_evalNestedLoopbb4in___14(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [40]:
  - RF of loop [40:1]:
    B-E-1
    B-G


### Specialization of cost equations n_evalNestedLoopbb3in___16/17 
* CE 37 is refined into CE [54] 
* CE 33 is refined into CE [55,56] 
* CE 34 is refined into CE [57,58] 
* CE 35 is refined into CE [59] 
* CE 38 is refined into CE [60] 
* CE 36 is refined into CE [61,62] 


### Cost equations --> "Loop" of n_evalNestedLoopbb3in___16/17 
* CEs [62] --> Loop 45 
* CEs [61] --> Loop 46 
* CEs [54] --> Loop 47 
* CEs [56] --> Loop 48 
* CEs [55] --> Loop 49 
* CEs [58] --> Loop 50 
* CEs [57] --> Loop 51 
* CEs [59,60] --> Loop 52 

### Ranking functions of CR n_evalNestedLoopbb3in___16(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [45,46]: [C-H]

#### Partial ranking functions of CR n_evalNestedLoopbb3in___16(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [45,46]:
  - RF of loop [45:1]:
    B-E-1
  - RF of loop [45:1,46:1]:
    C-H


### Specialization of cost equations n_evalNestedLoopbb7in___17/17 
* CE 16 is refined into CE [63,64] 
* CE 14 is refined into CE [65,66,67] 
* CE 15 is refined into CE [68] 
* CE 23 is refined into CE [69] 
* CE 17 is refined into CE [70,71,72] 
* CE 19 is refined into CE [73,74,75] 
* CE 20 is refined into CE [76] 
* CE 22 is refined into CE [77] 
* CE 18 is refined into CE [78,79,80] 
* CE 21 is refined into CE [81] 


### Cost equations --> "Loop" of n_evalNestedLoopbb7in___17/17 
* CEs [80] --> Loop 53 
* CEs [79] --> Loop 54 
* CEs [81] --> Loop 55 
* CEs [78] --> Loop 56 
* CEs [64] --> Loop 57 
* CEs [63] --> Loop 58 
* CEs [67] --> Loop 59 
* CEs [66] --> Loop 60 
* CEs [68,69] --> Loop 61 
* CEs [72] --> Loop 62 
* CEs [73,74,75,76] --> Loop 63 
* CEs [70,71,77] --> Loop 64 
* CEs [65] --> Loop 65 

### Ranking functions of CR n_evalNestedLoopbb7in___17(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [53,54,55,56]: [A-D-1]

#### Partial ranking functions of CR n_evalNestedLoopbb7in___17(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [53,54,55,56]:
  - RF of loop [53:1]:
    A/2-D/2-1
    C/2-D/2-1/2
  - RF of loop [54:1,55:1,56:1]:
    A-D-1
    A-F-1
  - RF of loop [54:1,56:1]:
    C-D
    C-F


### Specialization of cost equations n_evalNestedLoopbb9in___21/17 
* CE 4 is refined into CE [82,83,84,85] 
* CE 5 is refined into CE [86] 
* CE 10 is refined into CE [87] 
* CE 6 is refined into CE [88,89,90] 
* CE 7 is refined into CE [91] 
* CE 9 is refined into CE [92] 
* CE 3 is refined into CE [93,94,95] 
* CE 8 is refined into CE [96] 


### Cost equations --> "Loop" of n_evalNestedLoopbb9in___21/17 
* CEs [94] --> Loop 66 
* CEs [95] --> Loop 67 
* CEs [93] --> Loop 68 
* CEs [96] --> Loop 69 
* CEs [85] --> Loop 70 
* CEs [84] --> Loop 71 
* CEs [83] --> Loop 72 
* CEs [82] --> Loop 73 
* CEs [86,87] --> Loop 74 
* CEs [92] --> Loop 75 
* CEs [88,89,90,91] --> Loop 76 

### Ranking functions of CR n_evalNestedLoopbb9in___21(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [66,67,68]: [A-D,C-D]
* RF of phase [69]: [A-D]

#### Partial ranking functions of CR n_evalNestedLoopbb9in___21(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [66,67,68]:
  - RF of loop [66:1]:
    A/2-D/2
    C/2-D/2-1/2
  - RF of loop [67:1,68:1]:
    A-D
    C-D
* Partial RF of phase [69]:
  - RF of loop [69:1]:
    A-D


### Specialization of cost equations n_evalNestedLoopbb7in___9/17 
* CE 43 is refined into CE [97] 
* CE 42 is refined into CE [98] 
* CE 39 is refined into CE [99] 
* CE 41 is refined into CE [100] 
* CE 40 is refined into CE [101] 


### Cost equations --> "Loop" of n_evalNestedLoopbb7in___9/17 
* CEs [101] --> Loop 77 
* CEs [97] --> Loop 78 
* CEs [98] --> Loop 79 
* CEs [99] --> Loop 80 
* CEs [100] --> Loop 81 

### Ranking functions of CR n_evalNestedLoopbb7in___9(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [77]: [A-D-1,A-F-1]

#### Partial ranking functions of CR n_evalNestedLoopbb7in___9(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [77]:
  - RF of loop [77:1]:
    A-D-1
    A-F-1


### Specialization of cost equations n_evalNestedLoopbb6in___13/17 
* CE 24 is refined into CE [102] 
* CE 30 is refined into CE [103] 
* CE 25 is refined into CE [104,105] 
* CE 27 is refined into CE [106] 
* CE 29 is refined into CE [107] 
* CE 26 is refined into CE [108,109] 
* CE 28 is refined into CE [110] 


### Cost equations --> "Loop" of n_evalNestedLoopbb6in___13/17 
* CEs [109] --> Loop 82 
* CEs [108] --> Loop 83 
* CEs [110] --> Loop 84 
* CEs [102,103] --> Loop 85 
* CEs [105] --> Loop 86 
* CEs [104] --> Loop 87 
* CEs [106] --> Loop 88 
* CEs [107] --> Loop 89 

### Ranking functions of CR n_evalNestedLoopbb6in___13(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 

#### Partial ranking functions of CR n_evalNestedLoopbb6in___13(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [82,83,84]:
  - RF of loop [82:1]:
    B-E depends on loops [83:1,84:1] 
  - RF of loop [83:1]:
    A+B-H-3
    A+E-H-2 depends on loops [82:1] 
    A-H-1
  - RF of loop [83:1,84:1]:
    A-D-1
    A-F-1
  - RF of loop [84:1]:
    -B+E+1 depends on loops [82:1,83:1] 
    -D+H+1 depends on loops [82:1,83:1] 
    E depends on loops [82:1,83:1] 
    E-G+1 depends on loops [82:1,83:1] 
    -F+H+1 depends on loops [82:1,83:1] 


### Specialization of cost equations n_evalNestedLoopbb6in___13_loop_cont/10 
* CE 32 is refined into CE [111] 
* CE 31 is refined into CE [112] 


### Cost equations --> "Loop" of n_evalNestedLoopbb6in___13_loop_cont/10 
* CEs [111] --> Loop 90 
* CEs [112] --> Loop 91 

### Ranking functions of CR n_evalNestedLoopbb6in___13_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR n_evalNestedLoopbb6in___13_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations n_evalNestedLoopbb9in___21_loop_cont/10 
* CE 13 is refined into CE [113,114,115,116] 
* CE 12 is refined into CE [117] 
* CE 11 is refined into CE [118] 


### Cost equations --> "Loop" of n_evalNestedLoopbb9in___21_loop_cont/10 
* CEs [113,114,115,116] --> Loop 92 
* CEs [117] --> Loop 93 
* CEs [118] --> Loop 94 

### Ranking functions of CR n_evalNestedLoopbb9in___21_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR n_evalNestedLoopbb9in___21_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations n_evalNestedLoopstart/9 
* CE 2 is refined into CE [119,120,121,122,123,124,125] 


### Cost equations --> "Loop" of n_evalNestedLoopstart/9 
* CEs [123] --> Loop 95 
* CEs [119,120,121,122,124,125] --> Loop 96 

### Ranking functions of CR n_evalNestedLoopstart(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_evalNestedLoopstart(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations pyRinit/9 
* CE 1 is refined into CE [126] 


### Cost equations --> "Loop" of pyRinit/9 
* CEs [126] --> Loop 97 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 


Computing Bounds
=====================================

#### Cost of chains of n_evalNestedLoopbb4in___14(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[40],44]: 4*it(40)+0
  Such that:it(40) =< B-E

  with precondition: [I=4,G=E+1,D>=0,G>=1,A>=D+1,F>=D,H>=F,B>=G+1,C>=H+1] 

* Chain [[40],43]: 4*it(40)+1
  Such that:it(40) =< -E+P

  with precondition: [I=5,G=E+1,A=J,B=K,C=L,D=M,H=O,N+1=P,H+1=Q,D>=0,G>=1,A>=D+1,F>=D,H>=F,N>=G,C>=H+1,B>=N+1] 

* Chain [[40],42]: 4*it(40)+2
  Such that:it(40) =< B-E

  with precondition: [I=6,G=E+1,A=J,B=K,C=L,H+1=M,B=N,H=O,B=P,H=Q,D>=0,G>=1,A>=D+1,F>=D,H>=F,B>=G+1,C>=H+1] 

* Chain [[40],41]: 4*it(40)+3
  Such that:it(40) =< -E+P

  with precondition: [I=7,G=E+1,A=J,B=K,C=L,H+1=M,H=O,N=P,H=Q,D>=0,G>=1,A>=D+1,F>=D,H>=F,N>=G+1,C>=H+1,B>=N+1] 

* Chain [44]: 0
  with precondition: [I=4,G=E+1,D>=0,G>=1,A>=D+1,F>=D,H>=F,B>=G,C>=H+1] 

* Chain [43]: 1
  with precondition: [I=5,G=E+1,A=J,B=K,C=L,D=M,G=N+1,F=O,G=P,H+1=Q,D>=0,G>=1,A>=D+1,F>=D,H>=F,B>=G,C>=H+1] 

* Chain [42]: 2
  with precondition: [I=6,E+1=B,E+1=G,A=J,E+1=K,C=L,H+1=M,E+1=N,H=O,E+1=P,H=Q,D>=0,E>=0,A>=D+1,F>=D,H>=F,C>=H+1] 

* Chain [41]: 3
  with precondition: [I=7,G=E+1,A=J,B=K,C=L,H+1=M,G=N,H=O,G=P,H=Q,D>=0,G>=1,A>=D+1,F>=D,H>=F,B>=G+1,C>=H+1] 


#### Cost of chains of n_evalNestedLoopbb3in___16(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[45,46],52]: 2*it(45)+2*it(46)+8*s(2)+1
  Such that:it(45) =< B-G+1
aux(3) =< 2*B-2*G+2
aux(4) =< C-H
s(2) =< aux(3)
it(45) =< aux(4)
it(46) =< aux(4)

  with precondition: [I=4,E+1=G,D>=0,E>=0,A>=D+1,F>=D,B>=E+1,H>=F,C>=H+1] 

* Chain [[45,46],51]: 2*it(45)+2*it(46)+4*s(5)+3
  Such that:aux(1) =< C-H
s(5) =< -2*E+2*P
it(45) =< -E+P
aux(2) =< -H+Q
it(45) =< aux(1)
it(46) =< aux(1)
it(45) =< aux(2)
it(46) =< aux(2)

  with precondition: [I=6,E+1=G,A=J,B=K,C=L,B=N,M=O+1,B=P,M=Q+1,D>=0,E>=0,A>=D+1,F>=D,B>=E+1,H>=F,M>=H+2,C>=M] 

* Chain [[45,46],50]: 2*it(45)+2*it(46)+8*s(5)+3
  Such that:it(45) =< -E+P
aux(1) =< -H+L
aux(2) =< -H+Q
aux(5) =< -2*E+2*P
s(5) =< aux(5)
it(45) =< aux(1)
it(46) =< aux(1)
it(45) =< aux(2)
it(46) =< aux(2)

  with precondition: [I=6,E+1=G,A=J,B=K,C=L,B=N,M=O+1,B=P,M=Q+1,D>=0,E>=0,A>=D+1,F>=D,B>=E+2,H>=F,M>=H+2,C>=M] 

* Chain [[45,46],49]: 2*it(45)+2*it(46)+4*s(5)+4
  Such that:aux(1) =< C-H
s(5) =< -2*E+2*P
it(45) =< -E+P
aux(2) =< -H+Q
it(45) =< aux(1)
it(46) =< aux(1)
it(45) =< aux(2)
it(46) =< aux(2)

  with precondition: [I=7,E+1=G,A=J,B=K,C=L,M=O+1,N=P,M=Q+1,D>=0,E>=0,A>=D+1,F>=D,N>=E+1,H>=F,M>=H+2,C>=M,B>=N+1] 

* Chain [[45,46],48]: 2*it(45)+2*it(46)+8*s(5)+4
  Such that:it(45) =< B-G+1
aux(1) =< -H+L
aux(2) =< -H+Q
aux(6) =< 2*B-2*G+2
s(5) =< aux(6)
it(45) =< aux(1)
it(46) =< aux(1)
it(45) =< aux(2)
it(46) =< aux(2)

  with precondition: [I=7,E+1=G,A=J,B=K,C=L,M=O+1,N=P,M=Q+1,D>=0,E>=0,A>=D+1,F>=D,N>=E+2,H>=F,M>=H+2,C>=M,B>=N+1] 

* Chain [[45,46],47]: 2*it(45)+2*it(46)+4*s(5)+1
  Such that:s(5) =< -2*E+2*P
it(45) =< -E+P
aux(7) =< -H+Q
it(45) =< aux(7)
it(46) =< aux(7)

  with precondition: [I=8,E+1=G,A=J,B=K,C=L,D=M,C=O,N=P,C=Q,D>=0,E>=0,A>=D+1,F>=D,N>=E+1,H>=F,C>=H+1,B>=N] 

* Chain [52]: 4*s(2)+1
  Such that:s(2) =< B-E

  with precondition: [I=4,E+1=G,D>=0,E>=0,A>=D+1,F>=D,B>=E+1,H>=F,C+D>=H] 

* Chain [51]: 3
  with precondition: [I=6,E+1=B,E+1=G,A=J,E+1=K,C=L,H+1=M,E+1=N,H=O,E+1=P,H=Q,D>=0,E>=0,A>=D+1,F>=D,H>=F,C>=H+1] 

* Chain [50]: 4*s(6)+3
  Such that:s(6) =< B-E

  with precondition: [I=6,G=E+1,A=J,B=K,C=L,H+1=M,B=N,H=O,B=P,H=Q,D>=0,G>=1,A>=D+1,F>=D,H>=F,B>=G+1,C>=H+1] 

* Chain [49]: 4
  with precondition: [I=7,G=E+1,A=J,B=K,C=L,H+1=M,G=N,H=O,G=P,H=Q,D>=0,G>=1,A>=D+1,F>=D,H>=F,B>=G+1,C>=H+1] 

* Chain [48]: 4*s(7)+4
  Such that:s(7) =< B-E

  with precondition: [I=7,G=E+1,A=J,B=K,C=L,H+1=M,H=O,N=P,H=Q,D>=0,G>=1,A>=D+1,F>=D,H>=F,N>=G+1,C>=H+1,B>=N+1] 

* Chain [47]: 1
  with precondition: [I=8,G=E+1,A=J,B=K,C=L,D=M,G=N,H=O,G=P,H=Q,G>=1,H>=C,A>=D+1,F>=D,H>=F,B>=G,C+D>=H] 


#### Cost of chains of n_evalNestedLoopbb7in___17(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[53,54,55,56],65]: 8*it(53)+16*it(54)+4*it(55)+2*s(56)+4*s(57)+2*s(58)+8*s(59)+4*s(60)+4*s(64)+4
  Such that:aux(14) =< 1
it(53) =< -D/2+O/2
aux(27) =< -D+J
aux(28) =< -D+L
aux(29) =< -D+O
it(53) =< aux(27)
it(54) =< aux(27)
it(55) =< aux(27)
it(53) =< aux(29)
it(54) =< aux(29)
it(55) =< aux(29)
s(61) =< aux(27)
s(61) =< aux(29)
it(54) =< aux(28)
aux(18) =< aux(14)
aux(16) =< aux(14)-1
aux(15) =< it(53)*aux(14)
s(56) =< it(53)*aux(14)
s(62) =< it(53)*aux(28)
s(64) =< it(54)*aux(18)
aux(17) =< it(53)*aux(16)
s(58) =< it(53)*aux(16)
s(63) =< aux(15)*2
s(57) =< aux(17)*2
s(59) =< s(63)
s(56) =< s(62)
s(60) =< s(62)
s(56) =< s(61)
s(60) =< s(61)
s(58) =< s(62)
s(58) =< s(61)

  with precondition: [B=1,E=0,I=6,K=1,N=1,P=1,D=F,A=J,C=L,M=O+1,M=Q+1,D>=0,M>=D+2,A>=M,C>=M] 

* Chain [[53,54,55,56],64]: 8*it(53)+16*it(54)+4*it(55)+2*s(56)+4*s(57)+2*s(58)+8*s(59)+4*s(60)+4*s(64)+4*s(65)+6
  Such that:it(53) =< A/2-D/2
aux(23) =< C-D
aux(25) =< C-F
it(53) =< C/2-D/2
aux(30) =< A-D
aux(31) =< B
s(65) =< aux(31)
it(53) =< aux(30)
it(54) =< aux(30)
it(55) =< aux(30)
it(54) =< aux(23)
it(54) =< aux(25)
aux(18) =< aux(31)
aux(16) =< aux(31)-1
aux(15) =< it(53)*aux(31)
s(56) =< it(53)*aux(31)
s(62) =< it(53)*aux(25)
s(64) =< it(54)*aux(18)
aux(17) =< it(53)*aux(16)
s(58) =< it(53)*aux(16)
s(63) =< aux(15)*2
s(57) =< aux(17)*2
s(59) =< s(63)
s(56) =< s(62)
s(60) =< s(62)
s(56) =< aux(30)
s(60) =< aux(30)
s(58) =< s(62)
s(58) =< aux(30)

  with precondition: [E=0,I=2,D=F,B>=1,C>=0,D>=0,A>=D+2] 

* Chain [[53,54,55,56],63]: 8*it(53)+16*it(54)+4*it(55)+2*s(56)+4*s(57)+2*s(58)+8*s(59)+4*s(60)+4*s(64)+4*s(66)+4*s(67)+12*s(70)+4*s(75)+7
  Such that:it(53) =< A/2-D/2
aux(33) =< 2*B
aux(25) =< C-F
it(53) =< C/2-D/2
aux(36) =< A-D
aux(37) =< B
aux(38) =< C-D
s(66) =< aux(37)
s(67) =< aux(37)
s(70) =< aux(33)
s(67) =< aux(38)
s(75) =< aux(38)
it(53) =< aux(36)
it(54) =< aux(36)
it(55) =< aux(36)
it(54) =< aux(38)
it(54) =< aux(25)
aux(18) =< aux(37)
aux(16) =< aux(37)-1
aux(15) =< it(53)*aux(37)
s(56) =< it(53)*aux(37)
s(62) =< it(53)*aux(25)
s(64) =< it(54)*aux(18)
aux(17) =< it(53)*aux(16)
s(58) =< it(53)*aux(16)
s(63) =< aux(15)*2
s(57) =< aux(17)*2
s(59) =< s(63)
s(56) =< s(62)
s(60) =< s(62)
s(56) =< aux(36)
s(60) =< aux(36)
s(58) =< s(62)
s(58) =< aux(36)

  with precondition: [E=0,I=2,D=F,B>=1,C>=0,D>=0,A>=D+3] 

* Chain [[53,54,55,56],62]: 28*it(53)+2*s(56)+4*s(57)+2*s(58)+8*s(59)+4*s(60)+4*s(64)+4*s(77)+12*s(80)+4*s(85)+6
  Such that:aux(40) =< 2*B
aux(42) =< A-F
aux(43) =< B
aux(44) =< C-F
it(53) =< aux(44)
s(77) =< aux(43)
s(80) =< aux(40)
s(77) =< aux(44)
s(85) =< aux(44)
it(53) =< aux(42)
s(61) =< aux(42)
s(61) =< aux(44)
aux(18) =< aux(43)
aux(16) =< aux(43)-1
aux(15) =< it(53)*aux(43)
s(56) =< it(53)*aux(43)
s(62) =< it(53)*aux(44)
s(64) =< it(53)*aux(18)
aux(17) =< it(53)*aux(16)
s(58) =< it(53)*aux(16)
s(63) =< aux(15)*2
s(57) =< aux(17)*2
s(59) =< s(63)
s(56) =< s(62)
s(60) =< s(62)
s(56) =< s(61)
s(60) =< s(61)
s(58) =< s(62)
s(58) =< s(61)

  with precondition: [E=0,I=2,D=F,B>=2,D>=0,C>=A,A>=D+2,C>=D+3] 

* Chain [[53,54,55,56],61]: 8*it(53)+16*it(54)+4*it(55)+2*s(56)+4*s(57)+2*s(58)+8*s(59)+4*s(60)+4*s(64)+4*s(87)+2*s(88)+8*s(91)+2*s(92)+2
  Such that:it(53) =< A/2-D/2
s(89) =< 2*B
aux(25) =< C-F
it(53) =< C/2-D/2
aux(46) =< A-D
aux(47) =< B
aux(48) =< C-D
s(87) =< aux(47)
s(88) =< aux(47)
s(91) =< s(89)
s(88) =< aux(48)
s(92) =< aux(48)
it(53) =< aux(46)
it(54) =< aux(46)
it(55) =< aux(46)
it(54) =< aux(48)
it(54) =< aux(25)
aux(18) =< aux(47)
aux(16) =< aux(47)-1
aux(15) =< it(53)*aux(47)
s(56) =< it(53)*aux(47)
s(62) =< it(53)*aux(25)
s(64) =< it(54)*aux(18)
aux(17) =< it(53)*aux(16)
s(58) =< it(53)*aux(16)
s(63) =< aux(15)*2
s(57) =< aux(17)*2
s(59) =< s(63)
s(56) =< s(62)
s(60) =< s(62)
s(56) =< aux(46)
s(60) =< aux(46)
s(58) =< s(62)
s(58) =< aux(46)

  with precondition: [E=0,I=4,D=F,B>=1,C>=0,D>=0,A>=D+2] 

* Chain [[53,54,55,56],60]: 8*it(53)+16*it(54)+4*it(55)+2*s(56)+4*s(57)+2*s(58)+8*s(59)+4*s(60)+4*s(64)+4*s(93)+4
  Such that:it(53) =< -D/2+O/2
aux(49) =< -D+J
aux(50) =< -D+L
aux(51) =< -D+O
aux(52) =< N
s(93) =< aux(52)
it(53) =< aux(49)
it(54) =< aux(49)
it(55) =< aux(49)
it(53) =< aux(51)
it(54) =< aux(51)
it(55) =< aux(51)
s(61) =< aux(49)
s(61) =< aux(51)
it(54) =< aux(50)
aux(18) =< aux(52)
aux(16) =< aux(52)-1
aux(15) =< it(53)*aux(52)
s(56) =< it(53)*aux(52)
s(62) =< it(53)*aux(50)
s(64) =< it(54)*aux(18)
aux(17) =< it(53)*aux(16)
s(58) =< it(53)*aux(16)
s(63) =< aux(15)*2
s(57) =< aux(17)*2
s(59) =< s(63)
s(56) =< s(62)
s(60) =< s(62)
s(56) =< s(61)
s(60) =< s(61)
s(58) =< s(62)
s(58) =< s(61)

  with precondition: [E=0,I=6,D=F,A=J,B=K,C=L,B=N,M=O+1,B=P,M=Q+1,B>=2,D>=0,M>=D+2,A>=M,C>=M] 

* Chain [[53,54,55,56],59]: 28*it(53)+2*s(56)+4*s(57)+2*s(58)+8*s(59)+4*s(60)+4*s(64)+12*s(99)+4*s(100)+4*s(102)+4
  Such that:s(96) =< 2*B
aux(54) =< A-F
aux(55) =< B
aux(56) =< -F+L
it(53) =< aux(56)
s(99) =< s(96)
s(100) =< aux(55)
s(100) =< aux(56)
s(102) =< aux(56)
it(53) =< aux(54)
s(61) =< aux(54)
s(61) =< aux(56)
aux(18) =< aux(55)
aux(16) =< aux(55)-1
aux(15) =< it(53)*aux(55)
s(56) =< it(53)*aux(55)
s(62) =< it(53)*aux(56)
s(64) =< it(53)*aux(18)
aux(17) =< it(53)*aux(16)
s(58) =< it(53)*aux(16)
s(63) =< aux(15)*2
s(57) =< aux(17)*2
s(59) =< s(63)
s(56) =< s(62)
s(60) =< s(62)
s(56) =< s(61)
s(60) =< s(61)
s(58) =< s(62)
s(58) =< s(61)

  with precondition: [E=0,I=6,D=F,A=J,B=K,C=L,O+1=M,B=N,B=P,O=Q,B>=1,D>=0,A>=D+2,O>=D+2,C>=O+1] 

* Chain [[53,54,55,56],58]: 8*it(53)+16*it(54)+4*it(55)+2*s(56)+4*s(57)+2*s(58)+8*s(59)+4*s(60)+4*s(64)+2
  Such that:aux(14) =< B
aux(23) =< C-D
aux(25) =< C-F
it(53) =< C/2-D/2
it(53) =< -D/2+M/2
aux(57) =< -D+J
aux(58) =< -D+M
it(53) =< aux(57)
it(54) =< aux(57)
it(55) =< aux(57)
it(53) =< aux(58)
it(54) =< aux(58)
it(55) =< aux(58)
s(61) =< aux(57)
s(61) =< aux(58)
it(54) =< aux(23)
it(54) =< aux(25)
aux(18) =< aux(14)
aux(16) =< aux(14)-1
aux(15) =< it(53)*aux(14)
s(56) =< it(53)*aux(14)
s(62) =< it(53)*aux(25)
s(64) =< it(54)*aux(18)
aux(17) =< it(53)*aux(16)
s(58) =< it(53)*aux(16)
s(63) =< aux(15)*2
s(57) =< aux(17)*2
s(59) =< s(63)
s(56) =< s(62)
s(60) =< s(62)
s(56) =< s(61)
s(60) =< s(61)
s(58) =< s(62)
s(58) =< s(61)

  with precondition: [E=0,I=8,N=1,P=1,D=F,A=J,B=K,C=L,M=O,M=Q,B>=1,C>=0,D>=0,M>=C,M>=D+1,A>=M+1] 

* Chain [[53,54,55,56],57]: 8*it(53)+16*it(54)+4*it(55)+2*s(56)+4*s(57)+2*s(58)+8*s(59)+4*s(60)+4*s(64)+4*s(104)+2*s(105)+2*s(107)+2
  Such that:s(104) =< 2*B
it(53) =< -F/2+M/2
s(106) =< -M+O
aux(59) =< A-F
aux(60) =< B
aux(61) =< -F+M
aux(62) =< -F+O
s(105) =< aux(60)
s(105) =< s(106)
s(107) =< s(106)
it(53) =< aux(59)
it(54) =< aux(59)
it(55) =< aux(59)
it(53) =< aux(61)
it(54) =< aux(61)
it(55) =< aux(61)
s(61) =< aux(59)
s(61) =< aux(61)
it(54) =< aux(62)
aux(18) =< aux(60)
aux(16) =< aux(60)-1
aux(15) =< it(53)*aux(60)
s(56) =< it(53)*aux(60)
s(62) =< it(53)*aux(62)
s(64) =< it(54)*aux(18)
aux(17) =< it(53)*aux(16)
s(58) =< it(53)*aux(16)
s(63) =< aux(15)*2
s(57) =< aux(17)*2
s(59) =< s(63)
s(56) =< s(62)
s(60) =< s(62)
s(56) =< s(61)
s(60) =< s(61)
s(58) =< s(62)
s(58) =< s(61)

  with precondition: [E=0,I=8,D=F,A=J,B=K,C=L,C=O,N=P,C=Q,D>=0,N>=1,M>=D+1,A>=M+1,C>=M+1,B>=N] 

* Chain [65]: 4
  with precondition: [B=1,E=0,I=6,K=1,N=1,P=1,F=D,A=J,C=L,F+1=M,F=O,F=Q,F>=0,A>=F+1,C>=F+1] 

* Chain [64]: 4*s(65)+6
  Such that:s(65) =< B

  with precondition: [E=0,I=2,D+1=A,D=F,B>=1,C>=0,D>=0] 

* Chain [63]: 4*s(66)+4*s(67)+12*s(70)+4*s(75)+7
  Such that:aux(33) =< 2*B
aux(34) =< C-F
aux(35) =< B
s(66) =< aux(35)
s(67) =< aux(35)
s(70) =< aux(33)
s(67) =< aux(34)
s(75) =< aux(34)

  with precondition: [E=0,I=2,F=D,B>=1,C>=0,F>=0,A>=F+2] 

* Chain [62]: 4*s(77)+12*s(80)+4*s(85)+6
  Such that:aux(39) =< B
aux(40) =< 2*B
aux(41) =< C-F
s(77) =< aux(39)
s(80) =< aux(40)
s(77) =< aux(41)
s(85) =< aux(41)

  with precondition: [E=0,I=2,F=D,B>=2,F>=0,C>=A,A>=F+1,C>=F+2] 

* Chain [61]: 4*s(87)+2*s(88)+8*s(91)+2*s(92)+2
  Such that:aux(45) =< B
s(89) =< 2*B
s(90) =< C-F
s(87) =< aux(45)
s(88) =< aux(45)
s(91) =< s(89)
s(88) =< s(90)
s(92) =< s(90)

  with precondition: [E=0,I=4,F=D,B>=1,C>=0,F>=0,A>=F+1] 

* Chain [60]: 4*s(93)+4
  Such that:s(93) =< B

  with precondition: [E=0,I=6,F=D,A=J,B=K,C=L,F+1=M,B=N,F=O,B=P,F=Q,B>=2,F>=0,A>=F+1,C>=F+1] 

* Chain [59]: 12*s(99)+4*s(100)+4*s(102)+4
  Such that:s(97) =< B
s(96) =< 2*B
aux(53) =< C-F
s(99) =< s(96)
s(100) =< s(97)
s(100) =< aux(53)
s(102) =< aux(53)

  with precondition: [E=0,I=6,F=D,A=J,B=K,C=L,B=N,M=O+1,B=P,M=Q+1,B>=1,F>=0,A>=F+1,M>=F+2,C>=M] 

* Chain [58]: 2
  with precondition: [E=0,I=8,N=1,P=1,F=D,A=J,B=K,C=L,F=M,F=O,F=Q,B>=1,C>=0,F>=C,A>=F+1] 

* Chain [57]: 4*s(104)+2*s(105)+2*s(107)+2
  Such that:s(105) =< B
s(104) =< 2*B
s(106) =< C-F
s(105) =< s(106)
s(107) =< s(106)

  with precondition: [E=0,I=8,F=D,A=J,B=K,C=L,F=M,C=O,N=P,C=Q,F>=0,N>=1,A>=F+1,C>=F+1,B>=N] 


#### Cost of chains of n_evalNestedLoopbb9in___21(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[69],76]: 11*it(69)+16*s(288)+16*s(292)+60*s(293)+8*s(306)+4*s(320)+10
  Such that:aux(83) =< C-D
s(287) =< C/2-D/2
aux(85) =< A-D
it(69) =< aux(85)
s(288) =< aux(85)
s(288) =< s(287)
s(292) =< aux(83)
s(293) =< aux(85)
s(293) =< aux(83)
s(299) =< s(288)*aux(83)
s(306) =< s(299)
s(306) =< aux(85)
s(310) =< aux(85)
s(310) =< aux(83)
s(313) =< s(293)*aux(83)
s(320) =< s(313)
s(320) =< s(310)

  with precondition: [B=0,I=2,C>=0,D>=0,A>=D+2] 

* Chain [[69],75]: 3*it(69)+1
  Such that:it(69) =< A-D

  with precondition: [B=0,I=2,C>=0,D>=0,A>=D+1] 

* Chain [[69],74]: 7*it(69)+8*s(328)+4*s(336)+16*s(337)+4*s(350)+5
  Such that:aux(86) =< C-D
s(328) =< C/2-D/2
aux(88) =< A-D
it(69) =< aux(88)
s(328) =< aux(88)
s(336) =< aux(86)
s(337) =< aux(88)
s(337) =< aux(86)
s(343) =< s(328)*aux(86)
s(350) =< s(343)
s(350) =< aux(88)

  with precondition: [B=0,I=4,C>=0,D>=0,A>=D+1] 

* Chain [[66,67,68],76]: 97*it(66)+16*s(279)+16*s(290)+48*s(291)+16*s(292)+8*s(294)+4*s(298)+16*s(300)+4*s(302)+12*s(304)+24*s(305)+8*s(306)+2*s(312)+2*s(316)+4*s(320)+16*s(461)+32*s(462)+8*s(463)+2*s(464)+4*s(465)+2*s(466)+4*s(467)+8*s(468)+8*s(469)+24*s(470)+8*s(471)+8*s(472)+28*s(473)+2*s(474)+4*s(475)+2*s(476)+4*s(477)+8*s(478)+4*s(479)+4*s(480)+2*s(481)+4*s(482)+2*s(483)+4*s(484)+8*s(485)+10
  Such that:s(410) =< 1
aux(82) =< 2*B
aux(102) =< A-D
aux(103) =< B
aux(104) =< C-D
it(66) =< aux(104)
s(279) =< aux(103)
it(66) =< aux(102)
s(290) =< aux(103)
s(291) =< aux(82)
s(290) =< aux(104)
s(292) =< aux(104)
s(294) =< aux(102)
aux(95) =< aux(103)
s(296) =< aux(103)-1
s(297) =< it(66)*aux(103)
s(298) =< it(66)*aux(103)
s(299) =< it(66)*aux(104)
s(300) =< it(66)*aux(95)
s(301) =< it(66)*s(296)
s(302) =< it(66)*s(296)
s(303) =< s(297)*2
s(304) =< s(301)*2
s(305) =< s(303)
s(298) =< s(299)
s(306) =< s(299)
s(298) =< aux(102)
s(306) =< aux(102)
s(302) =< s(299)
s(302) =< aux(102)
s(310) =< aux(102)
s(310) =< aux(104)
s(312) =< it(66)*aux(103)
s(316) =< it(66)*s(296)
s(312) =< s(299)
s(320) =< s(299)
s(312) =< s(310)
s(320) =< s(310)
s(316) =< s(299)
s(316) =< s(310)
aux(93) =< aux(104)
s(504) =< aux(104)* (1/2)
s(498) =< it(66)*aux(102)
aux(96) =< it(66)*aux(95)
s(497) =< it(66)*aux(93)
s(499) =< aux(96)*2
s(461) =< s(504)
s(461) =< s(498)
s(462) =< s(498)
s(463) =< s(498)
s(461) =< aux(104)
s(462) =< aux(104)
s(463) =< aux(104)
s(486) =< s(498)
s(486) =< aux(104)
s(462) =< s(497)
s(421) =< s(410)
s(422) =< s(410)-1
s(502) =< s(461)*s(410)
s(464) =< s(461)*s(410)
s(487) =< s(461)*aux(104)
s(465) =< s(462)*s(421)
s(501) =< s(461)*s(422)
s(466) =< s(461)*s(422)
s(500) =< s(502)*2
s(467) =< s(501)*2
s(468) =< s(500)
s(464) =< s(487)
s(469) =< s(487)
s(464) =< s(486)
s(469) =< s(486)
s(466) =< s(487)
s(466) =< s(486)
s(470) =< s(499)
s(471) =< aux(96)
s(471) =< s(497)
s(472) =< s(497)
s(473) =< s(497)
s(473) =< s(498)
s(492) =< s(498)
s(492) =< s(497)
s(496) =< s(473)*aux(103)
s(474) =< s(473)*aux(103)
s(493) =< s(473)*aux(104)
s(475) =< s(473)*aux(95)
s(495) =< s(473)*s(296)
s(476) =< s(473)*s(296)
s(494) =< s(496)*2
s(477) =< s(495)*2
s(478) =< s(494)
s(474) =< s(493)
s(479) =< s(493)
s(474) =< s(492)
s(479) =< s(492)
s(476) =< s(493)
s(476) =< s(492)
s(480) =< aux(96)
s(490) =< s(461)*aux(103)
s(481) =< s(461)*aux(103)
s(482) =< s(462)*aux(95)
s(489) =< s(461)*s(296)
s(483) =< s(461)*s(296)
s(488) =< s(490)*2
s(484) =< s(489)*2
s(485) =< s(488)
s(481) =< s(487)
s(481) =< s(486)
s(483) =< s(487)
s(483) =< s(486)

  with precondition: [I=2,B>=1,D>=0,A>=D+2,C>=D+1] 

* Chain [[66,67,68],75]: 7*it(66)+14*it(67)+16*s(461)+32*s(462)+8*s(463)+2*s(464)+4*s(465)+2*s(466)+4*s(467)+8*s(468)+8*s(469)+24*s(470)+8*s(471)+8*s(472)+28*s(473)+2*s(474)+4*s(475)+2*s(476)+4*s(477)+8*s(478)+4*s(479)+4*s(480)+2*s(481)+4*s(482)+2*s(483)+4*s(484)+8*s(485)+4*s(505)+1
  Such that:s(410) =< 1
aux(98) =< A-D
it(66) =< A/2-D/2
s(416) =< B
aux(105) =< C-D
it(66) =< aux(98)
it(67) =< aux(98)
it(66) =< aux(105)
it(67) =< aux(105)
aux(95) =< s(416)
aux(93) =< aux(105)
s(504) =< aux(105)* (1/2)
s(498) =< it(66)*aux(98)
s(505) =< it(67)*aux(95)
aux(96) =< it(66)*aux(95)
s(497) =< it(66)*aux(93)
s(499) =< aux(96)*2
s(461) =< s(504)
s(461) =< s(498)
s(462) =< s(498)
s(463) =< s(498)
s(461) =< aux(105)
s(462) =< aux(105)
s(463) =< aux(105)
s(486) =< s(498)
s(486) =< aux(105)
s(462) =< s(497)
s(421) =< s(410)
s(422) =< s(410)-1
s(502) =< s(461)*s(410)
s(464) =< s(461)*s(410)
s(487) =< s(461)*aux(105)
s(465) =< s(462)*s(421)
s(501) =< s(461)*s(422)
s(466) =< s(461)*s(422)
s(500) =< s(502)*2
s(467) =< s(501)*2
s(468) =< s(500)
s(464) =< s(487)
s(469) =< s(487)
s(464) =< s(486)
s(469) =< s(486)
s(466) =< s(487)
s(466) =< s(486)
s(470) =< s(499)
s(471) =< aux(96)
s(471) =< s(497)
s(472) =< s(497)
s(473) =< s(497)
s(473) =< s(498)
s(492) =< s(498)
s(492) =< s(497)
s(439) =< s(416)-1
s(496) =< s(473)*s(416)
s(474) =< s(473)*s(416)
s(493) =< s(473)*aux(105)
s(475) =< s(473)*aux(95)
s(495) =< s(473)*s(439)
s(476) =< s(473)*s(439)
s(494) =< s(496)*2
s(477) =< s(495)*2
s(478) =< s(494)
s(474) =< s(493)
s(479) =< s(493)
s(474) =< s(492)
s(479) =< s(492)
s(476) =< s(493)
s(476) =< s(492)
s(480) =< aux(96)
s(490) =< s(461)*s(416)
s(481) =< s(461)*s(416)
s(482) =< s(462)*aux(95)
s(489) =< s(461)*s(439)
s(483) =< s(461)*s(439)
s(488) =< s(490)*2
s(484) =< s(489)*2
s(485) =< s(488)
s(481) =< s(487)
s(481) =< s(486)
s(483) =< s(487)
s(483) =< s(486)

  with precondition: [I=2,B>=1,D>=0,C>=A,A>=D+1] 

* Chain [[66,67,68],74]: 7*it(66)+30*it(67)+8*s(328)+8*s(333)+4*s(334)+16*s(335)+4*s(336)+4*s(338)+2*s(342)+8*s(344)+2*s(346)+4*s(348)+8*s(349)+4*s(350)+16*s(461)+32*s(462)+8*s(463)+2*s(464)+4*s(465)+2*s(466)+4*s(467)+8*s(468)+8*s(469)+24*s(470)+8*s(471)+8*s(472)+28*s(473)+2*s(474)+4*s(475)+2*s(476)+4*s(477)+8*s(478)+4*s(479)+4*s(480)+2*s(481)+4*s(482)+2*s(483)+4*s(484)+8*s(485)+5
  Such that:s(410) =< 1
s(328) =< A/2-D/2
s(331) =< 2*B
aux(106) =< A-D
aux(107) =< B
aux(108) =< C-D
aux(109) =< C/2-D/2
it(66) =< aux(109)
s(328) =< aux(109)
s(333) =< aux(107)
s(334) =< aux(107)
s(335) =< s(331)
s(334) =< aux(108)
s(336) =< aux(108)
s(328) =< aux(106)
it(67) =< aux(106)
s(338) =< aux(106)
it(67) =< aux(108)
aux(95) =< aux(107)
s(340) =< aux(107)-1
s(341) =< s(328)*aux(107)
s(342) =< s(328)*aux(107)
s(343) =< s(328)*aux(108)
s(344) =< it(67)*aux(95)
s(345) =< s(328)*s(340)
s(346) =< s(328)*s(340)
s(347) =< s(341)*2
s(348) =< s(345)*2
s(349) =< s(347)
s(342) =< s(343)
s(350) =< s(343)
s(342) =< aux(106)
s(350) =< aux(106)
s(346) =< s(343)
s(346) =< aux(106)
it(66) =< aux(106)
it(66) =< aux(108)
aux(93) =< aux(108)
s(504) =< aux(108)* (1/2)
s(498) =< it(66)*aux(106)
aux(96) =< it(66)*aux(95)
s(497) =< it(66)*aux(93)
s(499) =< aux(96)*2
s(461) =< s(504)
s(461) =< s(498)
s(462) =< s(498)
s(463) =< s(498)
s(461) =< aux(108)
s(462) =< aux(108)
s(463) =< aux(108)
s(486) =< s(498)
s(486) =< aux(108)
s(462) =< s(497)
s(421) =< s(410)
s(422) =< s(410)-1
s(502) =< s(461)*s(410)
s(464) =< s(461)*s(410)
s(487) =< s(461)*aux(108)
s(465) =< s(462)*s(421)
s(501) =< s(461)*s(422)
s(466) =< s(461)*s(422)
s(500) =< s(502)*2
s(467) =< s(501)*2
s(468) =< s(500)
s(464) =< s(487)
s(469) =< s(487)
s(464) =< s(486)
s(469) =< s(486)
s(466) =< s(487)
s(466) =< s(486)
s(470) =< s(499)
s(471) =< aux(96)
s(471) =< s(497)
s(472) =< s(497)
s(473) =< s(497)
s(473) =< s(498)
s(492) =< s(498)
s(492) =< s(497)
s(496) =< s(473)*aux(107)
s(474) =< s(473)*aux(107)
s(493) =< s(473)*aux(108)
s(475) =< s(473)*aux(95)
s(495) =< s(473)*s(340)
s(476) =< s(473)*s(340)
s(494) =< s(496)*2
s(477) =< s(495)*2
s(478) =< s(494)
s(474) =< s(493)
s(479) =< s(493)
s(474) =< s(492)
s(479) =< s(492)
s(476) =< s(493)
s(476) =< s(492)
s(480) =< aux(96)
s(490) =< s(461)*aux(107)
s(481) =< s(461)*aux(107)
s(482) =< s(462)*aux(95)
s(489) =< s(461)*s(340)
s(483) =< s(461)*s(340)
s(488) =< s(490)*2
s(484) =< s(489)*2
s(485) =< s(488)
s(481) =< s(487)
s(481) =< s(486)
s(483) =< s(487)
s(483) =< s(486)

  with precondition: [I=4,B>=1,D>=0,A>=D+1,C>=D+1] 

* Chain [[66,67,68],73]: 7*it(66)+14*it(67)+16*s(461)+32*s(462)+8*s(463)+2*s(464)+4*s(465)+2*s(466)+4*s(467)+8*s(468)+8*s(469)+24*s(470)+8*s(471)+8*s(472)+28*s(473)+2*s(474)+4*s(475)+2*s(476)+4*s(477)+8*s(478)+4*s(479)+4*s(480)+2*s(481)+4*s(482)+2*s(483)+4*s(484)+8*s(485)+4*s(505)+5
  Such that:s(410) =< 1
aux(98) =< -D+J
it(66) =< -D/2+L/2
s(416) =< K
aux(110) =< -D+L
it(66) =< aux(98)
it(67) =< aux(98)
it(66) =< aux(110)
it(67) =< aux(110)
aux(95) =< s(416)
aux(93) =< aux(110)
s(504) =< aux(110)* (1/2)
s(498) =< it(66)*aux(98)
s(505) =< it(67)*aux(95)
aux(96) =< it(66)*aux(95)
s(497) =< it(66)*aux(93)
s(499) =< aux(96)*2
s(461) =< s(504)
s(461) =< s(498)
s(462) =< s(498)
s(463) =< s(498)
s(461) =< aux(110)
s(462) =< aux(110)
s(463) =< aux(110)
s(486) =< s(498)
s(486) =< aux(110)
s(462) =< s(497)
s(421) =< s(410)
s(422) =< s(410)-1
s(502) =< s(461)*s(410)
s(464) =< s(461)*s(410)
s(487) =< s(461)*aux(110)
s(465) =< s(462)*s(421)
s(501) =< s(461)*s(422)
s(466) =< s(461)*s(422)
s(500) =< s(502)*2
s(467) =< s(501)*2
s(468) =< s(500)
s(464) =< s(487)
s(469) =< s(487)
s(464) =< s(486)
s(469) =< s(486)
s(466) =< s(487)
s(466) =< s(486)
s(470) =< s(499)
s(471) =< aux(96)
s(471) =< s(497)
s(472) =< s(497)
s(473) =< s(497)
s(473) =< s(498)
s(492) =< s(498)
s(492) =< s(497)
s(439) =< s(416)-1
s(496) =< s(473)*s(416)
s(474) =< s(473)*s(416)
s(493) =< s(473)*aux(110)
s(475) =< s(473)*aux(95)
s(495) =< s(473)*s(439)
s(476) =< s(473)*s(439)
s(494) =< s(496)*2
s(477) =< s(495)*2
s(478) =< s(494)
s(474) =< s(493)
s(479) =< s(493)
s(474) =< s(492)
s(479) =< s(492)
s(476) =< s(493)
s(476) =< s(492)
s(480) =< aux(96)
s(490) =< s(461)*s(416)
s(481) =< s(461)*s(416)
s(482) =< s(462)*aux(95)
s(489) =< s(461)*s(439)
s(483) =< s(461)*s(439)
s(488) =< s(490)*2
s(484) =< s(489)*2
s(485) =< s(488)
s(481) =< s(487)
s(481) =< s(486)
s(483) =< s(487)
s(483) =< s(486)

  with precondition: [I=8,N=1,P=1,L=C,A=J,B=K,L=M,L=O,L=Q,B>=1,D>=0,L>=D+1,A>=L+1] 

* Chain [[66,67,68],72]: 37*it(66)+16*s(461)+32*s(462)+8*s(463)+2*s(464)+4*s(465)+2*s(466)+4*s(467)+8*s(468)+8*s(469)+24*s(470)+8*s(471)+8*s(472)+28*s(473)+2*s(474)+4*s(475)+2*s(476)+4*s(477)+8*s(478)+4*s(479)+4*s(480)+2*s(481)+4*s(482)+2*s(483)+4*s(484)+8*s(485)+8*s(505)+8*s(509)+4*s(513)+2*s(518)+2*s(522)+4*s(524)+8*s(525)+4*s(526)+5
  Such that:s(410) =< 1
s(509) =< -D/2+L/2
aux(113) =< A-D
aux(114) =< B
aux(115) =< -D+L
it(66) =< aux(113)
s(509) =< aux(113)
s(513) =< aux(113)
it(66) =< aux(115)
aux(95) =< aux(114)
s(439) =< aux(114)-1
s(517) =< s(509)*aux(114)
s(518) =< s(509)*aux(114)
s(519) =< s(509)*aux(115)
s(505) =< it(66)*aux(95)
s(521) =< s(509)*s(439)
s(522) =< s(509)*s(439)
s(523) =< s(517)*2
s(524) =< s(521)*2
s(525) =< s(523)
s(518) =< s(519)
s(526) =< s(519)
s(518) =< aux(113)
s(526) =< aux(113)
s(522) =< s(519)
s(522) =< aux(113)
aux(93) =< aux(115)
s(504) =< aux(115)* (1/2)
s(498) =< it(66)*aux(113)
aux(96) =< it(66)*aux(95)
s(497) =< it(66)*aux(93)
s(499) =< aux(96)*2
s(461) =< s(504)
s(461) =< s(498)
s(462) =< s(498)
s(463) =< s(498)
s(461) =< aux(115)
s(462) =< aux(115)
s(463) =< aux(115)
s(486) =< s(498)
s(486) =< aux(115)
s(462) =< s(497)
s(421) =< s(410)
s(422) =< s(410)-1
s(502) =< s(461)*s(410)
s(464) =< s(461)*s(410)
s(487) =< s(461)*aux(115)
s(465) =< s(462)*s(421)
s(501) =< s(461)*s(422)
s(466) =< s(461)*s(422)
s(500) =< s(502)*2
s(467) =< s(501)*2
s(468) =< s(500)
s(464) =< s(487)
s(469) =< s(487)
s(464) =< s(486)
s(469) =< s(486)
s(466) =< s(487)
s(466) =< s(486)
s(470) =< s(499)
s(471) =< aux(96)
s(471) =< s(497)
s(472) =< s(497)
s(473) =< s(497)
s(473) =< s(498)
s(492) =< s(498)
s(492) =< s(497)
s(496) =< s(473)*aux(114)
s(474) =< s(473)*aux(114)
s(493) =< s(473)*aux(115)
s(475) =< s(473)*aux(95)
s(495) =< s(473)*s(439)
s(476) =< s(473)*s(439)
s(494) =< s(496)*2
s(477) =< s(495)*2
s(478) =< s(494)
s(474) =< s(493)
s(479) =< s(493)
s(474) =< s(492)
s(479) =< s(492)
s(476) =< s(493)
s(476) =< s(492)
s(480) =< aux(96)
s(490) =< s(461)*aux(114)
s(481) =< s(461)*aux(114)
s(482) =< s(462)*aux(95)
s(489) =< s(461)*s(439)
s(483) =< s(461)*s(439)
s(488) =< s(490)*2
s(484) =< s(489)*2
s(485) =< s(488)
s(481) =< s(487)
s(481) =< s(486)
s(483) =< s(487)
s(483) =< s(486)

  with precondition: [I=8,N=1,P=1,A=J,B=K,C=L,M=O,M=Q,B>=1,D>=0,M>=C,C>=D+1,M>=D+2,A>=M+1] 

* Chain [[66,67,68],71]: 7*it(66)+14*it(67)+16*s(461)+32*s(462)+8*s(463)+2*s(464)+4*s(465)+2*s(466)+4*s(467)+8*s(468)+8*s(469)+24*s(470)+8*s(471)+8*s(472)+28*s(473)+2*s(474)+4*s(475)+2*s(476)+4*s(477)+8*s(478)+4*s(479)+4*s(480)+2*s(481)+4*s(482)+2*s(483)+4*s(484)+8*s(485)+4*s(505)+2*s(527)+4*s(528)+2*s(530)+5
  Such that:s(410) =< 1
aux(98) =< -D+J
aux(100) =< -D+L
it(66) =< -D/2+M/2
s(528) =< 2*K
s(529) =< L-M
aux(116) =< -D+M
aux(117) =< K
s(527) =< aux(117)
s(527) =< s(529)
s(530) =< s(529)
it(66) =< aux(98)
it(67) =< aux(98)
it(66) =< aux(116)
it(67) =< aux(116)
aux(94) =< aux(100)
it(66) =< aux(100)
it(67) =< aux(100)
aux(94) =< aux(116)
aux(95) =< aux(117)
aux(93) =< aux(100)
s(504) =< aux(94)* (1/2)
s(498) =< it(66)*aux(98)
s(505) =< it(67)*aux(95)
aux(96) =< it(66)*aux(95)
s(497) =< it(66)*aux(93)
s(499) =< aux(96)*2
s(461) =< s(504)
s(461) =< s(498)
s(462) =< s(498)
s(463) =< s(498)
s(461) =< aux(94)
s(462) =< aux(94)
s(463) =< aux(94)
s(486) =< s(498)
s(486) =< aux(94)
s(462) =< s(497)
s(421) =< s(410)
s(422) =< s(410)-1
s(502) =< s(461)*s(410)
s(464) =< s(461)*s(410)
s(487) =< s(461)*aux(100)
s(465) =< s(462)*s(421)
s(501) =< s(461)*s(422)
s(466) =< s(461)*s(422)
s(500) =< s(502)*2
s(467) =< s(501)*2
s(468) =< s(500)
s(464) =< s(487)
s(469) =< s(487)
s(464) =< s(486)
s(469) =< s(486)
s(466) =< s(487)
s(466) =< s(486)
s(470) =< s(499)
s(471) =< aux(96)
s(471) =< s(497)
s(472) =< s(497)
s(473) =< s(497)
s(473) =< s(498)
s(492) =< s(498)
s(492) =< s(497)
s(439) =< aux(117)-1
s(496) =< s(473)*aux(117)
s(474) =< s(473)*aux(117)
s(493) =< s(473)*aux(100)
s(475) =< s(473)*aux(95)
s(495) =< s(473)*s(439)
s(476) =< s(473)*s(439)
s(494) =< s(496)*2
s(477) =< s(495)*2
s(478) =< s(494)
s(474) =< s(493)
s(479) =< s(493)
s(474) =< s(492)
s(479) =< s(492)
s(476) =< s(493)
s(476) =< s(492)
s(480) =< aux(96)
s(490) =< s(461)*aux(117)
s(481) =< s(461)*aux(117)
s(482) =< s(462)*aux(95)
s(489) =< s(461)*s(439)
s(483) =< s(461)*s(439)
s(488) =< s(490)*2
s(484) =< s(489)*2
s(485) =< s(488)
s(481) =< s(487)
s(481) =< s(486)
s(483) =< s(487)
s(483) =< s(486)

  with precondition: [I=8,A=J,B=K,C=L,C=O,N=P,C=Q,D>=0,N>=1,M>=D+1,A>=M+1,C>=M+1,B>=N] 

* Chain [[66,67,68],70]: 49*it(66)+16*s(461)+32*s(462)+8*s(463)+2*s(464)+4*s(465)+2*s(466)+4*s(467)+8*s(468)+8*s(469)+24*s(470)+8*s(471)+8*s(472)+28*s(473)+2*s(474)+4*s(475)+2*s(476)+4*s(477)+8*s(478)+4*s(479)+4*s(480)+2*s(481)+4*s(482)+2*s(483)+4*s(484)+8*s(485)+8*s(505)+4*s(531)+2*s(538)+2*s(539)+2*s(546)+2*s(550)+4*s(552)+8*s(553)+4*s(554)+5
  Such that:s(410) =< 1
s(531) =< 2*B
aux(119) =< A-D
aux(120) =< B
aux(121) =< -D+L
it(66) =< aux(119)
it(66) =< aux(121)
s(538) =< aux(120)
s(538) =< aux(121)
s(539) =< aux(121)
aux(94) =< aux(119)
aux(94) =< aux(121)
aux(95) =< aux(120)
s(439) =< aux(120)-1
s(545) =< it(66)*aux(120)
s(546) =< it(66)*aux(120)
s(547) =< it(66)*aux(121)
s(505) =< it(66)*aux(95)
s(549) =< it(66)*s(439)
s(550) =< it(66)*s(439)
s(551) =< s(545)*2
s(552) =< s(549)*2
s(553) =< s(551)
s(546) =< s(547)
s(554) =< s(547)
s(546) =< aux(94)
s(554) =< aux(94)
s(550) =< s(547)
s(550) =< aux(94)
aux(93) =< aux(121)
s(504) =< aux(94)* (1/2)
s(498) =< it(66)*aux(119)
aux(96) =< it(66)*aux(95)
s(497) =< it(66)*aux(93)
s(499) =< aux(96)*2
s(461) =< s(504)
s(461) =< s(498)
s(462) =< s(498)
s(463) =< s(498)
s(461) =< aux(94)
s(462) =< aux(94)
s(463) =< aux(94)
s(486) =< s(498)
s(486) =< aux(94)
s(462) =< s(497)
s(421) =< s(410)
s(422) =< s(410)-1
s(502) =< s(461)*s(410)
s(464) =< s(461)*s(410)
s(487) =< s(461)*aux(121)
s(465) =< s(462)*s(421)
s(501) =< s(461)*s(422)
s(466) =< s(461)*s(422)
s(500) =< s(502)*2
s(467) =< s(501)*2
s(468) =< s(500)
s(464) =< s(487)
s(469) =< s(487)
s(464) =< s(486)
s(469) =< s(486)
s(466) =< s(487)
s(466) =< s(486)
s(470) =< s(499)
s(471) =< aux(96)
s(471) =< s(497)
s(472) =< s(497)
s(473) =< s(497)
s(473) =< s(498)
s(492) =< s(498)
s(492) =< s(497)
s(496) =< s(473)*aux(120)
s(474) =< s(473)*aux(120)
s(493) =< s(473)*aux(121)
s(475) =< s(473)*aux(95)
s(495) =< s(473)*s(439)
s(476) =< s(473)*s(439)
s(494) =< s(496)*2
s(477) =< s(495)*2
s(478) =< s(494)
s(474) =< s(493)
s(479) =< s(493)
s(474) =< s(492)
s(479) =< s(492)
s(476) =< s(493)
s(476) =< s(492)
s(480) =< aux(96)
s(490) =< s(461)*aux(120)
s(481) =< s(461)*aux(120)
s(482) =< s(462)*aux(95)
s(489) =< s(461)*s(439)
s(483) =< s(461)*s(439)
s(488) =< s(490)*2
s(484) =< s(489)*2
s(485) =< s(488)
s(481) =< s(487)
s(481) =< s(486)
s(483) =< s(487)
s(483) =< s(486)

  with precondition: [I=8,A=J,B=K,C=L,C=O,N=P,C=Q,D>=0,N>=1,M>=D+2,A>=M+1,C>=M+1,B>=N] 

* Chain [76]: 16*s(279)+16*s(288)+16*s(290)+48*s(291)+16*s(292)+60*s(293)+8*s(294)+4*s(298)+12*s(300)+4*s(302)+8*s(304)+16*s(305)+8*s(306)+2*s(312)+2*s(316)+4*s(318)+8*s(319)+4*s(320)+10
  Such that:aux(79) =< A-D
s(282) =< A/2-D/2
s(287) =< C/2-D/2
aux(81) =< B
aux(82) =< 2*B
aux(83) =< C-D
s(279) =< aux(81)
s(288) =< s(282)
s(288) =< s(287)
s(290) =< aux(81)
s(291) =< aux(82)
s(290) =< aux(83)
s(292) =< aux(83)
s(288) =< aux(79)
s(293) =< aux(79)
s(294) =< aux(79)
s(293) =< aux(83)
s(295) =< aux(81)
s(296) =< aux(81)-1
s(297) =< s(288)*aux(81)
s(298) =< s(288)*aux(81)
s(299) =< s(288)*aux(83)
s(300) =< s(293)*s(295)
s(301) =< s(288)*s(296)
s(302) =< s(288)*s(296)
s(303) =< s(297)*2
s(304) =< s(301)*2
s(305) =< s(303)
s(298) =< s(299)
s(306) =< s(299)
s(298) =< aux(79)
s(306) =< aux(79)
s(302) =< s(299)
s(302) =< aux(79)
s(310) =< aux(79)
s(310) =< aux(83)
s(311) =< s(293)*aux(81)
s(312) =< s(293)*aux(81)
s(313) =< s(293)*aux(83)
s(315) =< s(293)*s(296)
s(316) =< s(293)*s(296)
s(317) =< s(311)*2
s(318) =< s(315)*2
s(319) =< s(317)
s(312) =< s(313)
s(320) =< s(313)
s(312) =< s(310)
s(320) =< s(310)
s(316) =< s(313)
s(316) =< s(310)

  with precondition: [I=2,B>=0,C>=0,D>=0,A>=D+1] 

* Chain [75]: 1
  with precondition: [I=2,A>=0,B>=0,D>=A,A+C>=D] 

* Chain [74]: 8*s(328)+8*s(333)+4*s(334)+16*s(335)+4*s(336)+16*s(337)+4*s(338)+2*s(342)+4*s(344)+2*s(346)+4*s(348)+8*s(349)+4*s(350)+5
  Such that:s(327) =< A-D
s(328) =< A/2-D/2
s(330) =< B
s(331) =< 2*B
aux(86) =< C-D
s(328) =< C/2-D/2
s(333) =< s(330)
s(334) =< s(330)
s(335) =< s(331)
s(334) =< aux(86)
s(336) =< aux(86)
s(328) =< s(327)
s(337) =< s(327)
s(338) =< s(327)
s(337) =< aux(86)
s(339) =< s(330)
s(340) =< s(330)-1
s(341) =< s(328)*s(330)
s(342) =< s(328)*s(330)
s(343) =< s(328)*aux(86)
s(344) =< s(337)*s(339)
s(345) =< s(328)*s(340)
s(346) =< s(328)*s(340)
s(347) =< s(341)*2
s(348) =< s(345)*2
s(349) =< s(347)
s(342) =< s(343)
s(350) =< s(343)
s(342) =< s(327)
s(350) =< s(327)
s(346) =< s(343)
s(346) =< s(327)

  with precondition: [I=4,A>=0,B>=0,C>=0,D>=0,A+C>=D] 

* Chain [73]: 5
  with precondition: [I=8,N=1,P=1,C=D,A=J,B=K,C=L,C=M,C=O,C=Q,B>=1,C>=0,A>=C+1] 

* Chain [72]: 8*s(509)+16*s(512)+4*s(513)+2*s(518)+4*s(520)+2*s(522)+4*s(524)+8*s(525)+4*s(526)+5
  Such that:s(506) =< B
s(509) =< C/2-D/2
aux(111) =< A-D
aux(112) =< C-D
s(509) =< aux(111)
s(512) =< aux(111)
s(513) =< aux(111)
s(512) =< aux(112)
s(515) =< s(506)
s(516) =< s(506)-1
s(517) =< s(509)*s(506)
s(518) =< s(509)*s(506)
s(519) =< s(509)*aux(112)
s(520) =< s(512)*s(515)
s(521) =< s(509)*s(516)
s(522) =< s(509)*s(516)
s(523) =< s(517)*2
s(524) =< s(521)*2
s(525) =< s(523)
s(518) =< s(519)
s(526) =< s(519)
s(518) =< aux(111)
s(526) =< aux(111)
s(522) =< s(519)
s(522) =< aux(111)

  with precondition: [I=8,N=1,P=1,A=J,B=K,C=L,M=O,M=Q,B>=1,D>=0,M>=C,C>=D,M>=D+1,A>=M+1] 

* Chain [71]: 2*s(527)+4*s(528)+2*s(530)+5
  Such that:s(527) =< B
s(528) =< 2*B
s(529) =< C-D
s(527) =< s(529)
s(530) =< s(529)

  with precondition: [I=8,A=J,B=K,C=L,D=M,C=O,N=P,C=Q,D>=0,N>=1,A>=D+1,C>=D+1,B>=N] 

* Chain [70]: 4*s(531)+28*s(532)+2*s(538)+2*s(539)+2*s(546)+4*s(548)+2*s(550)+4*s(552)+8*s(553)+4*s(554)+5
  Such that:s(534) =< A-D
s(535) =< B
s(531) =< 2*B
aux(118) =< C-D
s(532) =< aux(118)
s(538) =< s(535)
s(538) =< aux(118)
s(539) =< aux(118)
s(532) =< s(534)
s(542) =< s(534)
s(542) =< aux(118)
s(543) =< s(535)
s(544) =< s(535)-1
s(545) =< s(532)*s(535)
s(546) =< s(532)*s(535)
s(547) =< s(532)*aux(118)
s(548) =< s(532)*s(543)
s(549) =< s(532)*s(544)
s(550) =< s(532)*s(544)
s(551) =< s(545)*2
s(552) =< s(549)*2
s(553) =< s(551)
s(546) =< s(547)
s(554) =< s(547)
s(546) =< s(542)
s(554) =< s(542)
s(550) =< s(547)
s(550) =< s(542)

  with precondition: [I=8,A=J,B=K,C=L,C=O,N=P,C=Q,D>=0,N>=1,M>=D+1,A>=M+1,C>=M+1,B>=N] 


#### Cost of chains of n_evalNestedLoopbb7in___9(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[77],81]: 4*it(77)+2
  Such that:it(77) =< A-F

  with precondition: [I=2,E>=0,G>=1,H>=C,F>=D,B>=E+1,G>=E,A>=F+2,B>=G,F>=H,C+D>=F,E+F>=H+1] 

* Chain [[77],80]: 4*it(77)+3
  Such that:it(77) =< A-F

  with precondition: [I=2,E>=0,G>=1,H>=C,F>=D,B>=E+1,G>=E,A>=F+3,B>=G,F>=H,C+D>=F,E+F>=H+1] 

* Chain [[77],79]: 4*it(77)+1
  Such that:it(77) =< -F+Q

  with precondition: [I=3,N=0,P=1,A=J,B=K,C=L,M=O,M=Q,E>=0,G>=1,H>=C,F>=D,B>=E+1,G>=E,M>=F+1,B>=G,F>=H,A>=M+1,C+D>=F,E+F>=H+1] 

* Chain [[77],78]: 4*it(77)+0
  Such that:it(77) =< A-F

  with precondition: [I=4,E>=0,G>=1,H>=C,F>=D,B>=E+1,G>=E,A>=F+2,B>=G,F>=H,C+D>=F,E+F>=H+1] 

* Chain [81]: 2
  with precondition: [I=2,E>=0,G>=1,F+1>=A,H>=C,A>=D+1,B>=E+1,G>=E,B>=G,F>=H,C+D>=F,E+F>=H+1] 

* Chain [80]: 3
  with precondition: [I=2,E>=0,G>=1,H>=C,F>=D,B>=E+1,G>=E,A>=F+2,B>=G,F>=H,C+D>=F,E+F>=H+1] 

* Chain [79]: 1
  with precondition: [I=3,A=J,B=K,C=L,D=M,E=N,F=O,E+1=P,F=Q,E>=0,G>=1,H>=C,A>=D+1,F>=D,B>=E+1,G>=E,B>=G,F>=H,C+D>=F,E+F>=H+1] 

* Chain [78]: 0
  with precondition: [I=4,E>=0,G>=1,H>=C,A>=D+1,F>=D,B>=E+1,B>=G,F>=H,C+D>=F,E+F>=H+1] 


#### Cost of chains of n_evalNestedLoopbb6in___13(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[82,83,84],89]: 3*it(82)+3*it(83)+3*it(84)+4*s(1125)+2
  Such that:it(83) =< A+B-H
it(83) =< A-D+F-H
aux(203) =< A-F
it(83) =< A-H
aux(205) =< B
aux(206) =< A-D
aux(207) =< B-E
it(83) =< aux(206)
it(84) =< aux(206)
it(83) =< aux(203)
it(84) =< aux(203)
aux(146) =< it(83)*aux(205)
s(1125) =< it(83)*aux(203)
aux(147) =< it(84)*aux(205)
it(82) =< aux(147)+aux(146)+aux(207)

  with precondition: [I=2,E>=0,H>=C,A>=D+1,F>=D,B>=G,F>=H,C+D>=F,E+F>=H+1,A+B>=D+E+2,G+H>=E+F] 

* Chain [[82,83,84],88]: 3*it(82)+3*it(83)+3*it(84)+4*s(1125)+3
  Such that:it(83) =< A-H
aux(205) =< B
aux(208) =< A-D
aux(209) =< A-F
aux(210) =< B-E
it(83) =< aux(208)
it(84) =< aux(208)
it(83) =< aux(209)
it(84) =< aux(209)
aux(146) =< it(83)*aux(205)
s(1125) =< it(83)*aux(209)
aux(147) =< it(84)*aux(205)
it(82) =< aux(147)+aux(146)+aux(210)

  with precondition: [I=2,E>=0,H>=C,F>=D,A>=F+2,B>=G,F>=H,C+D>=F,E+F>=H+1,A+B>=E+F+3,G+H>=E+F] 

* Chain [[82,83,84],87]: 3*it(82)+3*it(83)+3*it(84)+4*s(1125)+3
  Such that:it(83) =< A+B-H
aux(203) =< A-F
it(83) =< A-H
it(83) =< 2*A+B-2*D+2*F-2*H
aux(205) =< B
aux(211) =< A-D
aux(212) =< B-E
it(83) =< aux(211)
it(84) =< aux(211)
it(83) =< aux(203)
it(84) =< aux(203)
aux(146) =< it(83)*aux(205)
s(1125) =< it(83)*aux(203)
aux(147) =< it(84)*aux(205)
it(82) =< aux(147)+aux(146)+aux(212)

  with precondition: [I=2,E>=0,H>=C,A>=D+1,F>=D,B>=G,F>=H,A+B>=D+3,C+D>=F,E+F>=H+1,B+2*A>=2*D+E+4,G+H>=E+F] 

* Chain [[82,83,84],86]: 3*it(82)+3*it(83)+3*it(84)+4*s(1125)+8*s(1127)+4
  Such that:it(83) =< 2*A+B-2*H
aux(205) =< B
aux(213) =< A-D
aux(214) =< A-F
aux(215) =< B-E
s(1127) =< aux(213)
it(83) =< aux(213)
it(84) =< aux(213)
it(83) =< aux(214)
it(84) =< aux(214)
aux(146) =< it(83)*aux(205)
s(1125) =< it(83)*aux(214)
aux(147) =< it(84)*aux(205)
it(82) =< aux(147)+aux(146)+aux(215)

  with precondition: [I=2,E>=0,H>=C,F>=D,A>=F+2,B>=G,F>=H,A+B>=F+4,C+D>=F,E+F>=H+1,B+2*A>=2*F+E+6,G+H>=E+F] 

* Chain [[82,83,84],85]: 3*it(82)+3*it(83)+3*it(84)+4*s(1125)+4*s(1128)+1
  Such that:it(83) =< A+B-H
it(83) =< A-D+F-H
it(83) =< A-H
aux(205) =< B
aux(216) =< A-D
aux(217) =< A-F
aux(218) =< B-E
s(1128) =< aux(217)
it(83) =< aux(216)
it(84) =< aux(216)
it(83) =< aux(217)
it(84) =< aux(217)
aux(146) =< it(83)*aux(205)
s(1125) =< it(83)*aux(217)
aux(147) =< it(84)*aux(205)
it(82) =< aux(147)+aux(146)+aux(218)

  with precondition: [I=4,E>=0,H>=C,A>=D+1,F>=D,B>=G,F>=H,C+D>=F,E+F>=H+1,A+B>=D+E+2,G+H>=E+F] 

* Chain [89]: 2
  with precondition: [I=2,B=E,B=G,F=H,B>=1,F+1>=A,F>=C,A>=D+1,C+D>=F] 

* Chain [88]: 3
  with precondition: [I=2,B=E,B=G,F=H,B>=1,F>=C,F>=D,A>=F+2,C+D>=F] 

* Chain [87]: 3
  with precondition: [I=2,E>=0,F+1>=A,H>=C,A>=D+1,B>=E+1,B>=G,F>=H,C+D>=F,E+F>=H+1,G+H>=E+F] 

* Chain [86]: 8*s(1127)+4
  Such that:s(1126) =< A-F
s(1127) =< s(1126)

  with precondition: [I=2,E>=0,H>=C,F>=D,B>=E+1,A>=F+2,B>=G,F>=H,C+D>=F,E+F>=H+1,G+H>=E+F] 

* Chain [85]: 4*s(1128)+1
  Such that:s(1128) =< A-F

  with precondition: [I=4] 


#### Cost of chains of n_evalNestedLoopbb6in___13_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [91]: 0
  with precondition: [A=2] 

* Chain [90]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalNestedLoopbb9in___21_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [94]: 0
  with precondition: [A=2] 

* Chain [93]: 0
  with precondition: [A=4] 

* Chain [92]: 6*s(1184)+3*s(1185)+3*s(1186)+3*s(1193)+15*s(1194)+4*s(1196)+3*s(1198)+8*s(1200)+6*s(1201)+16*s(1202)+4*s(1204)+3*s(1205)+8*s(1206)+4*s(1208)+3*s(1209)+4
  Such that:s(1185) =< 2*B+C-2*E+2*G-2*I
s(1186) =< 2*B+C-2*I
aux(226) =< B+C-I
aux(227) =< B-E
aux(228) =< B-E+G-I
aux(229) =< B-G
aux(230) =< B-I
aux(231) =< C
aux(232) =< C-F
s(1184) =< aux(226)
s(1184) =< aux(228)
s(1184) =< aux(230)
s(1185) =< aux(226)
s(1185) =< aux(230)
s(1193) =< aux(230)
s(1185) =< aux(227)
s(1194) =< aux(227)
s(1185) =< aux(229)
s(1194) =< aux(229)
s(1195) =< s(1185)*aux(231)
s(1196) =< s(1185)*aux(229)
s(1197) =< s(1194)*aux(231)
s(1198) =< s(1197)+s(1195)+aux(232)
s(1184) =< aux(227)
s(1184) =< aux(229)
s(1199) =< s(1184)*aux(231)
s(1200) =< s(1184)*aux(229)
s(1201) =< s(1197)+s(1199)+aux(232)
s(1202) =< aux(229)
s(1193) =< aux(227)
s(1193) =< aux(229)
s(1203) =< s(1193)*aux(231)
s(1204) =< s(1193)*aux(229)
s(1205) =< s(1197)+s(1203)+aux(232)
s(1206) =< aux(227)
s(1186) =< aux(227)
s(1186) =< aux(229)
s(1207) =< s(1186)*aux(231)
s(1208) =< s(1186)*aux(229)
s(1209) =< s(1197)+s(1207)+aux(232)

  with precondition: [A=8] 


#### Cost of chains of n_evalNestedLoopstart(A,B,C,D,E,F,G,H,I):
* Chain [96]: 111*s(1228)+7*s(1229)+458*s(1230)+76*s(1235)+16*s(1239)+32*s(1240)+8*s(1241)+2*s(1246)+4*s(1248)+2*s(1250)+4*s(1252)+8*s(1253)+8*s(1254)+24*s(1255)+8*s(1256)+8*s(1257)+28*s(1258)+2*s(1262)+4*s(1264)+2*s(1266)+4*s(1268)+8*s(1269)+4*s(1270)+4*s(1271)+2*s(1273)+4*s(1274)+2*s(1276)+4*s(1278)+8*s(1279)+48*s(1280)+48*s(1281)+144*s(1282)+68*s(1283)+4*s(1285)+4*s(1288)+24*s(1290)+48*s(1291)+8*s(1292)+8*s(1294)+8*s(1295)+20*s(1296)+32*s(1301)+64*s(1302)+16*s(1303)+4*s(1306)+8*s(1308)+4*s(1310)+8*s(1312)+16*s(1313)+16*s(1314)+96*s(1315)+32*s(1316)+32*s(1317)+112*s(1318)+8*s(1321)+16*s(1323)+8*s(1325)+16*s(1327)+32*s(1328)+16*s(1329)+16*s(1330)+4*s(1332)+8*s(1333)+4*s(1335)+8*s(1337)+16*s(1338)+32*s(1339)+8*s(1341)+8*s(1344)+16*s(1346)+32*s(1347)+16*s(1348)+40*s(1349)+20*s(1351)+14*s(1361)+32*s(1386)+64*s(1387)+16*s(1388)+4*s(1393)+8*s(1395)+4*s(1397)+8*s(1399)+16*s(1400)+16*s(1401)+48*s(1402)+16*s(1403)+16*s(1404)+56*s(1405)+4*s(1408)+8*s(1410)+4*s(1412)+8*s(1414)+16*s(1415)+8*s(1416)+8*s(1417)+4*s(1419)+8*s(1420)+4*s(1422)+8*s(1424)+16*s(1425)+4*s(1444)+4*s(1448)+8*s(1450)+16*s(1451)+3*s(1556)+3*s(1557)+6*s(1565)+4*s(1569)+3*s(1571)+8*s(1573)+6*s(1574)+4*s(1577)+3*s(1578)+4*s(1581)+3*s(1582)+6*s(1587)+6*s(1588)+12*s(1596)+36*s(1597)+8*s(1600)+6*s(1602)+16*s(1604)+12*s(1605)+32*s(1606)+8*s(1608)+6*s(1609)+8*s(1612)+6*s(1613)+32*s(1649)+64*s(1650)+16*s(1651)+4*s(1656)+8*s(1658)+4*s(1660)+8*s(1662)+16*s(1663)+16*s(1664)+4*s(1682)+8*s(1683)+4*s(1685)+8*s(1687)+16*s(1688)+11
  Such that:s(1558) =< A+B
aux(246) =< 1
aux(247) =< A
aux(248) =< A+B-C
aux(249) =< A-C
aux(250) =< 2*A+B
aux(251) =< 2*A+B-2*C
aux(252) =< A/2
aux(253) =< B
aux(254) =< 2*B
aux(255) =< C
aux(256) =< C/2
s(1587) =< aux(250)
s(1588) =< aux(251)
s(1282) =< aux(254)
s(1228) =< aux(247)
s(1229) =< aux(252)
s(1229) =< aux(247)
s(1230) =< aux(247)
s(1229) =< aux(255)
s(1230) =< aux(255)
s(1231) =< aux(253)
s(1232) =< aux(255)
s(1233) =< aux(255)* (1/2)
s(1234) =< s(1229)*aux(247)
s(1235) =< s(1230)*s(1231)
s(1236) =< s(1229)*s(1231)
s(1237) =< s(1229)*s(1232)
s(1238) =< s(1236)*2
s(1239) =< s(1233)
s(1239) =< s(1234)
s(1240) =< s(1234)
s(1241) =< s(1234)
s(1239) =< aux(255)
s(1240) =< aux(255)
s(1241) =< aux(255)
s(1242) =< s(1234)
s(1242) =< aux(255)
s(1240) =< s(1237)
s(1243) =< aux(246)
s(1244) =< aux(246)-1
s(1245) =< s(1239)*aux(246)
s(1246) =< s(1239)*aux(246)
s(1247) =< s(1239)*aux(255)
s(1248) =< s(1240)*s(1243)
s(1249) =< s(1239)*s(1244)
s(1250) =< s(1239)*s(1244)
s(1251) =< s(1245)*2
s(1252) =< s(1249)*2
s(1253) =< s(1251)
s(1246) =< s(1247)
s(1254) =< s(1247)
s(1246) =< s(1242)
s(1254) =< s(1242)
s(1250) =< s(1247)
s(1250) =< s(1242)
s(1255) =< s(1238)
s(1256) =< s(1236)
s(1256) =< s(1237)
s(1257) =< s(1237)
s(1258) =< s(1237)
s(1258) =< s(1234)
s(1259) =< s(1234)
s(1259) =< s(1237)
s(1260) =< aux(253)-1
s(1261) =< s(1258)*aux(253)
s(1262) =< s(1258)*aux(253)
s(1263) =< s(1258)*aux(255)
s(1264) =< s(1258)*s(1231)
s(1265) =< s(1258)*s(1260)
s(1266) =< s(1258)*s(1260)
s(1267) =< s(1261)*2
s(1268) =< s(1265)*2
s(1269) =< s(1267)
s(1262) =< s(1263)
s(1270) =< s(1263)
s(1262) =< s(1259)
s(1270) =< s(1259)
s(1266) =< s(1263)
s(1266) =< s(1259)
s(1271) =< s(1236)
s(1272) =< s(1239)*aux(253)
s(1273) =< s(1239)*aux(253)
s(1274) =< s(1240)*s(1231)
s(1275) =< s(1239)*s(1260)
s(1276) =< s(1239)*s(1260)
s(1277) =< s(1272)*2
s(1278) =< s(1275)*2
s(1279) =< s(1277)
s(1273) =< s(1247)
s(1273) =< s(1242)
s(1276) =< s(1247)
s(1276) =< s(1242)
s(1280) =< aux(253)
s(1281) =< aux(253)
s(1281) =< aux(255)
s(1283) =< aux(255)
s(1284) =< s(1230)*aux(253)
s(1285) =< s(1230)*aux(253)
s(1286) =< s(1230)*aux(255)
s(1287) =< s(1230)*s(1260)
s(1288) =< s(1230)*s(1260)
s(1289) =< s(1284)*2
s(1290) =< s(1287)*2
s(1291) =< s(1289)
s(1285) =< s(1286)
s(1292) =< s(1286)
s(1285) =< aux(247)
s(1292) =< aux(247)
s(1288) =< s(1286)
s(1288) =< aux(247)
s(1293) =< aux(247)
s(1293) =< aux(255)
s(1294) =< s(1230)*aux(253)
s(1295) =< s(1230)*s(1260)
s(1294) =< s(1286)
s(1296) =< s(1286)
s(1294) =< s(1293)
s(1296) =< s(1293)
s(1295) =< s(1286)
s(1295) =< s(1293)
s(1297) =< s(1230)*aux(247)
s(1298) =< s(1230)*s(1231)
s(1299) =< s(1230)*s(1232)
s(1300) =< s(1298)*2
s(1301) =< s(1233)
s(1301) =< s(1297)
s(1302) =< s(1297)
s(1303) =< s(1297)
s(1301) =< aux(255)
s(1302) =< aux(255)
s(1303) =< aux(255)
s(1304) =< s(1297)
s(1304) =< aux(255)
s(1302) =< s(1299)
s(1305) =< s(1301)*aux(246)
s(1306) =< s(1301)*aux(246)
s(1307) =< s(1301)*aux(255)
s(1308) =< s(1302)*s(1243)
s(1309) =< s(1301)*s(1244)
s(1310) =< s(1301)*s(1244)
s(1311) =< s(1305)*2
s(1312) =< s(1309)*2
s(1313) =< s(1311)
s(1306) =< s(1307)
s(1314) =< s(1307)
s(1306) =< s(1304)
s(1314) =< s(1304)
s(1310) =< s(1307)
s(1310) =< s(1304)
s(1315) =< s(1300)
s(1316) =< s(1298)
s(1316) =< s(1299)
s(1317) =< s(1299)
s(1318) =< s(1299)
s(1318) =< s(1297)
s(1319) =< s(1297)
s(1319) =< s(1299)
s(1320) =< s(1318)*aux(253)
s(1321) =< s(1318)*aux(253)
s(1322) =< s(1318)*aux(255)
s(1323) =< s(1318)*s(1231)
s(1324) =< s(1318)*s(1260)
s(1325) =< s(1318)*s(1260)
s(1326) =< s(1320)*2
s(1327) =< s(1324)*2
s(1328) =< s(1326)
s(1321) =< s(1322)
s(1329) =< s(1322)
s(1321) =< s(1319)
s(1329) =< s(1319)
s(1325) =< s(1322)
s(1325) =< s(1319)
s(1330) =< s(1298)
s(1331) =< s(1301)*aux(253)
s(1332) =< s(1301)*aux(253)
s(1333) =< s(1302)*s(1231)
s(1334) =< s(1301)*s(1260)
s(1335) =< s(1301)*s(1260)
s(1336) =< s(1331)*2
s(1337) =< s(1334)*2
s(1338) =< s(1336)
s(1332) =< s(1307)
s(1332) =< s(1304)
s(1335) =< s(1307)
s(1335) =< s(1304)
s(1339) =< aux(252)
s(1339) =< aux(256)
s(1339) =< aux(247)
s(1340) =< s(1339)*aux(253)
s(1341) =< s(1339)*aux(253)
s(1342) =< s(1339)*aux(255)
s(1343) =< s(1339)*s(1260)
s(1344) =< s(1339)*s(1260)
s(1345) =< s(1340)*2
s(1346) =< s(1343)*2
s(1347) =< s(1345)
s(1341) =< s(1342)
s(1348) =< s(1342)
s(1341) =< aux(247)
s(1348) =< aux(247)
s(1344) =< s(1342)
s(1344) =< aux(247)
s(1349) =< aux(247)
s(1349) =< aux(256)
s(1350) =< s(1349)*aux(255)
s(1351) =< s(1350)
s(1351) =< aux(247)
s(1361) =< aux(256)
s(1361) =< aux(247)
s(1361) =< aux(255)
s(1382) =< s(1361)*aux(247)
s(1383) =< s(1361)*s(1231)
s(1384) =< s(1361)*s(1232)
s(1385) =< s(1383)*2
s(1386) =< s(1233)
s(1386) =< s(1382)
s(1387) =< s(1382)
s(1388) =< s(1382)
s(1386) =< aux(255)
s(1387) =< aux(255)
s(1388) =< aux(255)
s(1389) =< s(1382)
s(1389) =< aux(255)
s(1387) =< s(1384)
s(1392) =< s(1386)*aux(246)
s(1393) =< s(1386)*aux(246)
s(1394) =< s(1386)*aux(255)
s(1395) =< s(1387)*s(1243)
s(1396) =< s(1386)*s(1244)
s(1397) =< s(1386)*s(1244)
s(1398) =< s(1392)*2
s(1399) =< s(1396)*2
s(1400) =< s(1398)
s(1393) =< s(1394)
s(1401) =< s(1394)
s(1393) =< s(1389)
s(1401) =< s(1389)
s(1397) =< s(1394)
s(1397) =< s(1389)
s(1402) =< s(1385)
s(1403) =< s(1383)
s(1403) =< s(1384)
s(1404) =< s(1384)
s(1405) =< s(1384)
s(1405) =< s(1382)
s(1406) =< s(1382)
s(1406) =< s(1384)
s(1407) =< s(1405)*aux(253)
s(1408) =< s(1405)*aux(253)
s(1409) =< s(1405)*aux(255)
s(1410) =< s(1405)*s(1231)
s(1411) =< s(1405)*s(1260)
s(1412) =< s(1405)*s(1260)
s(1413) =< s(1407)*2
s(1414) =< s(1411)*2
s(1415) =< s(1413)
s(1408) =< s(1409)
s(1416) =< s(1409)
s(1408) =< s(1406)
s(1416) =< s(1406)
s(1412) =< s(1409)
s(1412) =< s(1406)
s(1417) =< s(1383)
s(1418) =< s(1386)*aux(253)
s(1419) =< s(1386)*aux(253)
s(1420) =< s(1387)*s(1231)
s(1421) =< s(1386)*s(1260)
s(1422) =< s(1386)*s(1260)
s(1423) =< s(1418)*2
s(1424) =< s(1421)*2
s(1425) =< s(1423)
s(1419) =< s(1394)
s(1419) =< s(1389)
s(1422) =< s(1394)
s(1422) =< s(1389)
s(1556) =< aux(250)
s(1557) =< aux(250)
s(1565) =< s(1558)
s(1565) =< aux(247)
s(1556) =< s(1558)
s(1556) =< aux(247)
s(1568) =< s(1556)*aux(253)
s(1569) =< s(1556)*aux(247)
s(1570) =< s(1228)*aux(253)
s(1571) =< s(1570)+s(1568)+aux(253)
s(1572) =< s(1565)*aux(253)
s(1573) =< s(1565)*aux(247)
s(1574) =< s(1570)+s(1572)+aux(253)
s(1577) =< s(1228)*aux(247)
s(1578) =< s(1570)+s(1570)+aux(253)
s(1557) =< aux(247)
s(1580) =< s(1557)*aux(253)
s(1581) =< s(1557)*aux(247)
s(1582) =< s(1570)+s(1580)+aux(253)
s(1443) =< s(1349)*aux(253)
s(1444) =< s(1349)*aux(253)
s(1447) =< s(1349)*s(1260)
s(1448) =< s(1349)*s(1260)
s(1449) =< s(1443)*2
s(1450) =< s(1447)*2
s(1451) =< s(1449)
s(1444) =< s(1350)
s(1444) =< aux(247)
s(1448) =< s(1350)
s(1448) =< aux(247)
s(1596) =< aux(248)
s(1596) =< aux(247)
s(1596) =< aux(249)
s(1587) =< aux(248)
s(1587) =< aux(249)
s(1597) =< aux(249)
s(1587) =< aux(247)
s(1597) =< aux(247)
s(1599) =< s(1587)*aux(253)
s(1600) =< s(1587)*aux(249)
s(1601) =< s(1597)*aux(253)
s(1602) =< s(1601)+s(1599)+aux(253)
s(1603) =< s(1596)*aux(253)
s(1604) =< s(1596)*aux(249)
s(1605) =< s(1601)+s(1603)+aux(253)
s(1606) =< aux(249)
s(1608) =< s(1597)*aux(249)
s(1609) =< s(1601)+s(1601)+aux(253)
s(1588) =< aux(247)
s(1588) =< aux(249)
s(1611) =< s(1588)*aux(253)
s(1612) =< s(1588)*aux(249)
s(1613) =< s(1601)+s(1611)+aux(253)
s(1644) =< s(1293)* (1/2)
s(1649) =< s(1644)
s(1649) =< s(1297)
s(1650) =< s(1297)
s(1651) =< s(1297)
s(1649) =< s(1293)
s(1650) =< s(1293)
s(1651) =< s(1293)
s(1652) =< s(1297)
s(1652) =< s(1293)
s(1650) =< s(1299)
s(1655) =< s(1649)*aux(246)
s(1656) =< s(1649)*aux(246)
s(1657) =< s(1649)*aux(255)
s(1658) =< s(1650)*s(1243)
s(1659) =< s(1649)*s(1244)
s(1660) =< s(1649)*s(1244)
s(1661) =< s(1655)*2
s(1662) =< s(1659)*2
s(1663) =< s(1661)
s(1656) =< s(1657)
s(1664) =< s(1657)
s(1656) =< s(1652)
s(1664) =< s(1652)
s(1660) =< s(1657)
s(1660) =< s(1652)
s(1681) =< s(1649)*aux(253)
s(1682) =< s(1649)*aux(253)
s(1683) =< s(1650)*s(1231)
s(1684) =< s(1649)*s(1260)
s(1685) =< s(1649)*s(1260)
s(1686) =< s(1681)*2
s(1687) =< s(1684)*2
s(1688) =< s(1686)
s(1682) =< s(1657)
s(1682) =< s(1652)
s(1685) =< s(1657)
s(1685) =< s(1652)

  with precondition: [A>=0,B>=0,C>=0] 

* Chain [95]: 3*s(1780)+3*s(1781)+6*s(1789)+42*s(1790)+4*s(1793)+3*s(1795)+8*s(1797)+6*s(1798)+4*s(1801)+3*s(1802)+4*s(1805)+3*s(1806)+10
  Such that:s(1782) =< A+B
aux(257) =< A
aux(258) =< 2*A+B
aux(259) =< B
s(1780) =< aux(258)
s(1781) =< aux(258)
s(1789) =< s(1782)
s(1789) =< aux(257)
s(1780) =< s(1782)
s(1780) =< aux(257)
s(1790) =< aux(257)
s(1792) =< s(1780)*aux(259)
s(1793) =< s(1780)*aux(257)
s(1794) =< s(1790)*aux(259)
s(1795) =< s(1794)+s(1792)+aux(259)
s(1796) =< s(1789)*aux(259)
s(1797) =< s(1789)*aux(257)
s(1798) =< s(1794)+s(1796)+aux(259)
s(1801) =< s(1790)*aux(257)
s(1802) =< s(1794)+s(1794)+aux(259)
s(1781) =< aux(257)
s(1804) =< s(1781)*aux(259)
s(1805) =< s(1781)*aux(257)
s(1806) =< s(1794)+s(1804)+aux(259)

  with precondition: [C=0,A>=1,B>=1] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G,H,I):
* Chain [97]: 6*s(2080)+6*s(2081)+12*s(2082)+153*s(2083)+8*s(2085)+6*s(2087)+16*s(2089)+12*s(2090)+8*s(2091)+6*s(2092)+8*s(2094)+6*s(2095)+6*s(2096)+6*s(2097)+144*s(2098)+7*s(2099)+458*s(2100)+76*s(2105)+16*s(2109)+32*s(2110)+8*s(2111)+2*s(2116)+4*s(2118)+2*s(2120)+4*s(2122)+8*s(2123)+8*s(2124)+24*s(2125)+8*s(2126)+8*s(2127)+28*s(2128)+2*s(2132)+4*s(2134)+2*s(2136)+4*s(2138)+8*s(2139)+4*s(2140)+4*s(2141)+2*s(2143)+4*s(2144)+2*s(2146)+4*s(2148)+8*s(2149)+48*s(2150)+48*s(2151)+68*s(2152)+4*s(2154)+4*s(2157)+24*s(2159)+48*s(2160)+8*s(2161)+8*s(2163)+8*s(2164)+20*s(2165)+32*s(2170)+64*s(2171)+16*s(2172)+4*s(2175)+8*s(2177)+4*s(2179)+8*s(2181)+16*s(2182)+16*s(2183)+96*s(2184)+32*s(2185)+32*s(2186)+112*s(2187)+8*s(2190)+16*s(2192)+8*s(2194)+16*s(2196)+32*s(2197)+16*s(2198)+16*s(2199)+4*s(2201)+8*s(2202)+4*s(2204)+8*s(2206)+16*s(2207)+32*s(2208)+8*s(2210)+8*s(2213)+16*s(2215)+32*s(2216)+16*s(2217)+40*s(2218)+20*s(2220)+14*s(2221)+32*s(2226)+64*s(2227)+16*s(2228)+4*s(2231)+8*s(2233)+4*s(2235)+8*s(2237)+16*s(2238)+16*s(2239)+48*s(2240)+16*s(2241)+16*s(2242)+56*s(2243)+4*s(2246)+8*s(2248)+4*s(2250)+8*s(2252)+16*s(2253)+8*s(2254)+8*s(2255)+4*s(2257)+8*s(2258)+4*s(2260)+8*s(2262)+16*s(2263)+4*s(2265)+4*s(2267)+8*s(2269)+16*s(2270)+12*s(2271)+36*s(2272)+8*s(2274)+6*s(2276)+16*s(2278)+12*s(2279)+32*s(2280)+8*s(2281)+6*s(2282)+8*s(2284)+6*s(2285)+32*s(2287)+64*s(2288)+16*s(2289)+4*s(2292)+8*s(2294)+4*s(2296)+8*s(2298)+16*s(2299)+16*s(2300)+4*s(2302)+8*s(2303)+4*s(2305)+8*s(2307)+16*s(2308)+12
  Such that:s(2068) =< 1
s(2076) =< A
s(2077) =< A+B
s(2069) =< A+B-C
s(2070) =< A-C
s(2078) =< 2*A+B
s(2071) =< 2*A+B-2*C
s(2072) =< A/2
s(2079) =< B
s(2073) =< 2*B
s(2074) =< C
s(2075) =< C/2
s(2080) =< s(2078)
s(2081) =< s(2078)
s(2082) =< s(2077)
s(2082) =< s(2076)
s(2080) =< s(2077)
s(2080) =< s(2076)
s(2083) =< s(2076)
s(2084) =< s(2080)*s(2079)
s(2085) =< s(2080)*s(2076)
s(2086) =< s(2083)*s(2079)
s(2087) =< s(2086)+s(2084)+s(2079)
s(2088) =< s(2082)*s(2079)
s(2089) =< s(2082)*s(2076)
s(2090) =< s(2086)+s(2088)+s(2079)
s(2091) =< s(2083)*s(2076)
s(2092) =< s(2086)+s(2086)+s(2079)
s(2081) =< s(2076)
s(2093) =< s(2081)*s(2079)
s(2094) =< s(2081)*s(2076)
s(2095) =< s(2086)+s(2093)+s(2079)
s(2096) =< s(2078)
s(2097) =< s(2071)
s(2098) =< s(2073)
s(2099) =< s(2072)
s(2099) =< s(2076)
s(2100) =< s(2076)
s(2099) =< s(2074)
s(2100) =< s(2074)
s(2101) =< s(2079)
s(2102) =< s(2074)
s(2103) =< s(2074)* (1/2)
s(2104) =< s(2099)*s(2076)
s(2105) =< s(2100)*s(2101)
s(2106) =< s(2099)*s(2101)
s(2107) =< s(2099)*s(2102)
s(2108) =< s(2106)*2
s(2109) =< s(2103)
s(2109) =< s(2104)
s(2110) =< s(2104)
s(2111) =< s(2104)
s(2109) =< s(2074)
s(2110) =< s(2074)
s(2111) =< s(2074)
s(2112) =< s(2104)
s(2112) =< s(2074)
s(2110) =< s(2107)
s(2113) =< s(2068)
s(2114) =< s(2068)-1
s(2115) =< s(2109)*s(2068)
s(2116) =< s(2109)*s(2068)
s(2117) =< s(2109)*s(2074)
s(2118) =< s(2110)*s(2113)
s(2119) =< s(2109)*s(2114)
s(2120) =< s(2109)*s(2114)
s(2121) =< s(2115)*2
s(2122) =< s(2119)*2
s(2123) =< s(2121)
s(2116) =< s(2117)
s(2124) =< s(2117)
s(2116) =< s(2112)
s(2124) =< s(2112)
s(2120) =< s(2117)
s(2120) =< s(2112)
s(2125) =< s(2108)
s(2126) =< s(2106)
s(2126) =< s(2107)
s(2127) =< s(2107)
s(2128) =< s(2107)
s(2128) =< s(2104)
s(2129) =< s(2104)
s(2129) =< s(2107)
s(2130) =< s(2079)-1
s(2131) =< s(2128)*s(2079)
s(2132) =< s(2128)*s(2079)
s(2133) =< s(2128)*s(2074)
s(2134) =< s(2128)*s(2101)
s(2135) =< s(2128)*s(2130)
s(2136) =< s(2128)*s(2130)
s(2137) =< s(2131)*2
s(2138) =< s(2135)*2
s(2139) =< s(2137)
s(2132) =< s(2133)
s(2140) =< s(2133)
s(2132) =< s(2129)
s(2140) =< s(2129)
s(2136) =< s(2133)
s(2136) =< s(2129)
s(2141) =< s(2106)
s(2142) =< s(2109)*s(2079)
s(2143) =< s(2109)*s(2079)
s(2144) =< s(2110)*s(2101)
s(2145) =< s(2109)*s(2130)
s(2146) =< s(2109)*s(2130)
s(2147) =< s(2142)*2
s(2148) =< s(2145)*2
s(2149) =< s(2147)
s(2143) =< s(2117)
s(2143) =< s(2112)
s(2146) =< s(2117)
s(2146) =< s(2112)
s(2150) =< s(2079)
s(2151) =< s(2079)
s(2151) =< s(2074)
s(2152) =< s(2074)
s(2153) =< s(2100)*s(2079)
s(2154) =< s(2100)*s(2079)
s(2155) =< s(2100)*s(2074)
s(2156) =< s(2100)*s(2130)
s(2157) =< s(2100)*s(2130)
s(2158) =< s(2153)*2
s(2159) =< s(2156)*2
s(2160) =< s(2158)
s(2154) =< s(2155)
s(2161) =< s(2155)
s(2154) =< s(2076)
s(2161) =< s(2076)
s(2157) =< s(2155)
s(2157) =< s(2076)
s(2162) =< s(2076)
s(2162) =< s(2074)
s(2163) =< s(2100)*s(2079)
s(2164) =< s(2100)*s(2130)
s(2163) =< s(2155)
s(2165) =< s(2155)
s(2163) =< s(2162)
s(2165) =< s(2162)
s(2164) =< s(2155)
s(2164) =< s(2162)
s(2166) =< s(2100)*s(2076)
s(2167) =< s(2100)*s(2101)
s(2168) =< s(2100)*s(2102)
s(2169) =< s(2167)*2
s(2170) =< s(2103)
s(2170) =< s(2166)
s(2171) =< s(2166)
s(2172) =< s(2166)
s(2170) =< s(2074)
s(2171) =< s(2074)
s(2172) =< s(2074)
s(2173) =< s(2166)
s(2173) =< s(2074)
s(2171) =< s(2168)
s(2174) =< s(2170)*s(2068)
s(2175) =< s(2170)*s(2068)
s(2176) =< s(2170)*s(2074)
s(2177) =< s(2171)*s(2113)
s(2178) =< s(2170)*s(2114)
s(2179) =< s(2170)*s(2114)
s(2180) =< s(2174)*2
s(2181) =< s(2178)*2
s(2182) =< s(2180)
s(2175) =< s(2176)
s(2183) =< s(2176)
s(2175) =< s(2173)
s(2183) =< s(2173)
s(2179) =< s(2176)
s(2179) =< s(2173)
s(2184) =< s(2169)
s(2185) =< s(2167)
s(2185) =< s(2168)
s(2186) =< s(2168)
s(2187) =< s(2168)
s(2187) =< s(2166)
s(2188) =< s(2166)
s(2188) =< s(2168)
s(2189) =< s(2187)*s(2079)
s(2190) =< s(2187)*s(2079)
s(2191) =< s(2187)*s(2074)
s(2192) =< s(2187)*s(2101)
s(2193) =< s(2187)*s(2130)
s(2194) =< s(2187)*s(2130)
s(2195) =< s(2189)*2
s(2196) =< s(2193)*2
s(2197) =< s(2195)
s(2190) =< s(2191)
s(2198) =< s(2191)
s(2190) =< s(2188)
s(2198) =< s(2188)
s(2194) =< s(2191)
s(2194) =< s(2188)
s(2199) =< s(2167)
s(2200) =< s(2170)*s(2079)
s(2201) =< s(2170)*s(2079)
s(2202) =< s(2171)*s(2101)
s(2203) =< s(2170)*s(2130)
s(2204) =< s(2170)*s(2130)
s(2205) =< s(2200)*2
s(2206) =< s(2203)*2
s(2207) =< s(2205)
s(2201) =< s(2176)
s(2201) =< s(2173)
s(2204) =< s(2176)
s(2204) =< s(2173)
s(2208) =< s(2072)
s(2208) =< s(2075)
s(2208) =< s(2076)
s(2209) =< s(2208)*s(2079)
s(2210) =< s(2208)*s(2079)
s(2211) =< s(2208)*s(2074)
s(2212) =< s(2208)*s(2130)
s(2213) =< s(2208)*s(2130)
s(2214) =< s(2209)*2
s(2215) =< s(2212)*2
s(2216) =< s(2214)
s(2210) =< s(2211)
s(2217) =< s(2211)
s(2210) =< s(2076)
s(2217) =< s(2076)
s(2213) =< s(2211)
s(2213) =< s(2076)
s(2218) =< s(2076)
s(2218) =< s(2075)
s(2219) =< s(2218)*s(2074)
s(2220) =< s(2219)
s(2220) =< s(2076)
s(2221) =< s(2075)
s(2221) =< s(2076)
s(2221) =< s(2074)
s(2222) =< s(2221)*s(2076)
s(2223) =< s(2221)*s(2101)
s(2224) =< s(2221)*s(2102)
s(2225) =< s(2223)*2
s(2226) =< s(2103)
s(2226) =< s(2222)
s(2227) =< s(2222)
s(2228) =< s(2222)
s(2226) =< s(2074)
s(2227) =< s(2074)
s(2228) =< s(2074)
s(2229) =< s(2222)
s(2229) =< s(2074)
s(2227) =< s(2224)
s(2230) =< s(2226)*s(2068)
s(2231) =< s(2226)*s(2068)
s(2232) =< s(2226)*s(2074)
s(2233) =< s(2227)*s(2113)
s(2234) =< s(2226)*s(2114)
s(2235) =< s(2226)*s(2114)
s(2236) =< s(2230)*2
s(2237) =< s(2234)*2
s(2238) =< s(2236)
s(2231) =< s(2232)
s(2239) =< s(2232)
s(2231) =< s(2229)
s(2239) =< s(2229)
s(2235) =< s(2232)
s(2235) =< s(2229)
s(2240) =< s(2225)
s(2241) =< s(2223)
s(2241) =< s(2224)
s(2242) =< s(2224)
s(2243) =< s(2224)
s(2243) =< s(2222)
s(2244) =< s(2222)
s(2244) =< s(2224)
s(2245) =< s(2243)*s(2079)
s(2246) =< s(2243)*s(2079)
s(2247) =< s(2243)*s(2074)
s(2248) =< s(2243)*s(2101)
s(2249) =< s(2243)*s(2130)
s(2250) =< s(2243)*s(2130)
s(2251) =< s(2245)*2
s(2252) =< s(2249)*2
s(2253) =< s(2251)
s(2246) =< s(2247)
s(2254) =< s(2247)
s(2246) =< s(2244)
s(2254) =< s(2244)
s(2250) =< s(2247)
s(2250) =< s(2244)
s(2255) =< s(2223)
s(2256) =< s(2226)*s(2079)
s(2257) =< s(2226)*s(2079)
s(2258) =< s(2227)*s(2101)
s(2259) =< s(2226)*s(2130)
s(2260) =< s(2226)*s(2130)
s(2261) =< s(2256)*2
s(2262) =< s(2259)*2
s(2263) =< s(2261)
s(2257) =< s(2232)
s(2257) =< s(2229)
s(2260) =< s(2232)
s(2260) =< s(2229)
s(2264) =< s(2218)*s(2079)
s(2265) =< s(2218)*s(2079)
s(2266) =< s(2218)*s(2130)
s(2267) =< s(2218)*s(2130)
s(2268) =< s(2264)*2
s(2269) =< s(2266)*2
s(2270) =< s(2268)
s(2265) =< s(2219)
s(2265) =< s(2076)
s(2267) =< s(2219)
s(2267) =< s(2076)
s(2271) =< s(2069)
s(2271) =< s(2076)
s(2271) =< s(2070)
s(2096) =< s(2069)
s(2096) =< s(2070)
s(2272) =< s(2070)
s(2096) =< s(2076)
s(2272) =< s(2076)
s(2273) =< s(2096)*s(2079)
s(2274) =< s(2096)*s(2070)
s(2275) =< s(2272)*s(2079)
s(2276) =< s(2275)+s(2273)+s(2079)
s(2277) =< s(2271)*s(2079)
s(2278) =< s(2271)*s(2070)
s(2279) =< s(2275)+s(2277)+s(2079)
s(2280) =< s(2070)
s(2281) =< s(2272)*s(2070)
s(2282) =< s(2275)+s(2275)+s(2079)
s(2097) =< s(2076)
s(2097) =< s(2070)
s(2283) =< s(2097)*s(2079)
s(2284) =< s(2097)*s(2070)
s(2285) =< s(2275)+s(2283)+s(2079)
s(2286) =< s(2162)* (1/2)
s(2287) =< s(2286)
s(2287) =< s(2166)
s(2288) =< s(2166)
s(2289) =< s(2166)
s(2287) =< s(2162)
s(2288) =< s(2162)
s(2289) =< s(2162)
s(2290) =< s(2166)
s(2290) =< s(2162)
s(2288) =< s(2168)
s(2291) =< s(2287)*s(2068)
s(2292) =< s(2287)*s(2068)
s(2293) =< s(2287)*s(2074)
s(2294) =< s(2288)*s(2113)
s(2295) =< s(2287)*s(2114)
s(2296) =< s(2287)*s(2114)
s(2297) =< s(2291)*2
s(2298) =< s(2295)*2
s(2299) =< s(2297)
s(2292) =< s(2293)
s(2300) =< s(2293)
s(2292) =< s(2290)
s(2300) =< s(2290)
s(2296) =< s(2293)
s(2296) =< s(2290)
s(2301) =< s(2287)*s(2079)
s(2302) =< s(2287)*s(2079)
s(2303) =< s(2288)*s(2101)
s(2304) =< s(2287)*s(2130)
s(2305) =< s(2287)*s(2130)
s(2306) =< s(2301)*2
s(2307) =< s(2304)*2
s(2308) =< s(2306)
s(2302) =< s(2293)
s(2302) =< s(2290)
s(2305) =< s(2293)
s(2305) =< s(2290)

  with precondition: [A>=0,B>=0,C>=0] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G,H,I): 
-------------------------------------
* Chain [97] with precondition: [A>=0,B>=0,C>=0] 
    - Upper bound: 909*A+12+40*A*A+ (A+B)* (16*A)+ (2*A+B)* (16*A)+A/2* (8*A)+C/2* (16*A)+156*B+504*B*A+60*B*C+80*B*C*A+A/2* (20*B*C)+C/2* (40*B*C)+ (A+B)* (12*B)+ (2*A+B)* (18*B)+36*B*nat(A-C)+12*B*nat(A+B-C)+6*B*nat(2*A+B-2*C)+A/2* (124*B)+C/2* (120*B)+433*C+144*C*A+A/2* (36*C)+C/2* (72*C)+nat(B-1)*72*A+nat(B-1)*20*C+nat(B-1)*32*C*A+A/2* (nat(B-1)*8*C)+C/2* (nat(B-1)*16*C)+A/2* (nat(B-1)*32)+288*B+ (12*A+12*B)+ (36*A+18*B)+nat(A-C)*68+ (2*A+B)* (nat(A-C)*8)+nat(A-C)*8*nat(A-C)+nat(A-C)*16*nat(A+B-C)+nat(A-C)*8*nat(2*A+B-2*C)+nat(A+B-C)*12+nat(2*A+B-2*C)*6+39/2*A+7*C 
    - Complexity: n^3 

### Maximum cost of pyRinit(A,B,C,D,E,F,G,H,I): 909*A+12+40*A*A+ (A+B)* (16*A)+ (2*A+B)* (16*A)+A/2* (8*A)+C/2* (16*A)+156*B+504*B*A+60*B*C+80*B*C*A+A/2* (20*B*C)+C/2* (40*B*C)+ (A+B)* (12*B)+ (2*A+B)* (18*B)+36*B*nat(A-C)+12*B*nat(A+B-C)+6*B*nat(2*A+B-2*C)+A/2* (124*B)+C/2* (120*B)+433*C+144*C*A+A/2* (36*C)+C/2* (72*C)+nat(B-1)*72*A+nat(B-1)*20*C+nat(B-1)*32*C*A+A/2* (nat(B-1)*8*C)+C/2* (nat(B-1)*16*C)+A/2* (nat(B-1)*32)+288*B+ (12*A+12*B)+ (36*A+18*B)+nat(A-C)*68+ (2*A+B)* (nat(A-C)*8)+nat(A-C)*8*nat(A-C)+nat(A-C)*16*nat(A+B-C)+nat(A-C)*8*nat(2*A+B-2*C)+nat(A+B-C)*12+nat(2*A+B-2*C)*6+39/2*A+7*C 
Asymptotic class: n^3 
* Total analysis performed in 11974 ms.


-- stats
realtime 0:13.08
usertime 12.75
systime 0.06

