WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb2in___1/7,n_evalfbb3in___2/7]
1. recursive  : [n_evalfbb2in___3/7,n_evalfbb3in___2_loop_cont/8,n_evalfbb5in___6/7,n_evalfbb6in___5/7]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalfstop___4/4]
4. non_recursive  : [n_evalfbb5in___6_loop_cont/5]
5. non_recursive  : [n_evalfstart/4]
6. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb3in___2/7
1. SCC is partially evaluated into n_evalfbb5in___6/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalfbb5in___6_loop_cont/5
5. SCC is partially evaluated into n_evalfstart/4
6. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb3in___2/7 
* CE 13 is refined into CE [14] 
* CE 12 is refined into CE [15] 
* CE 10 is refined into CE [16] 
* CE 11 is refined into CE [17] 


### Cost equations --> "Loop" of n_evalfbb3in___2/7 
* CEs [17] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR n_evalfbb3in___2(A,B,C,D,E,F,G) 
* RF of phase [13]: [B-C-1]

#### Partial ranking functions of CR n_evalfbb3in___2(A,B,C,D,E,F,G) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    B-C-1


### Specialization of cost equations n_evalfbb5in___6/7 
* CE 6 is refined into CE [18] 
* CE 5 is refined into CE [19] 
* CE 3 is refined into CE [20] 
* CE 7 is refined into CE [21] 
* CE 4 is refined into CE [22,23,24,25] 


### Cost equations --> "Loop" of n_evalfbb5in___6/7 
* CEs [25] --> Loop 17 
* CEs [23] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [24] --> Loop 20 
* CEs [18] --> Loop 21 
* CEs [19] --> Loop 22 
* CEs [20,21] --> Loop 23 

### Ranking functions of CR n_evalfbb5in___6(A,B,C,D,E,F,G) 
* RF of phase [17,20]: [-A+B]

#### Partial ranking functions of CR n_evalfbb5in___6(A,B,C,D,E,F,G) 
* Partial RF of phase [17,20]:
  - RF of loop [17:1]:
    -A/2+B/2-1/2
  - RF of loop [20:1]:
    -A+B


### Specialization of cost equations n_evalfbb5in___6_loop_cont/5 
* CE 8 is refined into CE [26] 
* CE 9 is refined into CE [27] 


### Cost equations --> "Loop" of n_evalfbb5in___6_loop_cont/5 
* CEs [26] --> Loop 24 
* CEs [27] --> Loop 25 

### Ranking functions of CR n_evalfbb5in___6_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb5in___6_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalfstart/4 
* CE 2 is refined into CE [28,29,30] 


### Cost equations --> "Loop" of n_evalfstart/4 
* CEs [28,29,30] --> Loop 26 

### Ranking functions of CR n_evalfstart(A,B,C,D) 

#### Partial ranking functions of CR n_evalfstart(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [31] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [31] --> Loop 27 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb3in___2(A,B,C,D,E,F,G):
* Chain [[13],16]: 2*it(13)+2
  Such that:it(13) =< -C+G

  with precondition: [D=2,B+1=E,B=F,B=G,A>=0,C>=A,B>=C+2] 

* Chain [[13],15]: 2*it(13)+1
  Such that:it(13) =< -C+G

  with precondition: [D=2,B=F,E=G+1,A>=0,C>=A,E>=C+2,B>=E] 

* Chain [[13],14]: 2*it(13)+0
  Such that:it(13) =< B-C

  with precondition: [D=3,A>=0,C>=A,B>=C+2] 

* Chain [16]: 2
  with precondition: [D=2,C+1=B,C+2=E,C+1=F,C+1=G,A>=0,C>=A] 

* Chain [15]: 1
  with precondition: [D=2,C+1=E,B=F,C=G,A>=0,C>=A,B>=C+1] 

* Chain [14]: 0
  with precondition: [D=3,A>=0,C>=A,B>=C+1] 


#### Cost of chains of n_evalfbb5in___6(A,B,C,D,E,F,G):
* Chain [[17,20],23]: 12*it(17)+3
  Such that:aux(3) =< -A+B
it(17) =< aux(3)

  with precondition: [D=3,A>=0,B>=A+1] 

* Chain [[17,20],22]: 4*it(17)+6*it(20)+2
  Such that:it(17) =< -A/2+B/2
aux(4) =< -A+B
it(17) =< aux(4)
it(20) =< aux(4)

  with precondition: [D=4,A>=0,B>=A+2] 

* Chain [[17,20],21]: 4*it(17)+6*it(20)+1
  Such that:it(17) =< -A/2+B/2
aux(5) =< -A+B
it(17) =< aux(5)
it(20) =< aux(5)

  with precondition: [D=4,A>=0,B>=A+1] 

* Chain [[17,20],19,23]: 4*it(17)+6*it(20)+8
  Such that:it(17) =< -A/2+B/2
aux(6) =< -A+B
it(17) =< aux(6)
it(20) =< aux(6)

  with precondition: [D=3,A>=0,B>=A+2] 

* Chain [[17,20],19,21]: 4*it(17)+6*it(20)+6
  Such that:it(17) =< -A/2+B/2
aux(7) =< -A+B
it(17) =< aux(7)
it(20) =< aux(7)

  with precondition: [D=4,A>=0,B>=A+2] 

* Chain [[17,20],18,23]: 12*it(17)+8
  Such that:aux(8) =< -A+B
it(17) =< aux(8)

  with precondition: [D=3,A>=0,B>=A+3] 

* Chain [[17,20],18,21]: 12*it(17)+6
  Such that:aux(9) =< -A+B
it(17) =< aux(9)

  with precondition: [D=4,A>=0,B>=A+3] 

* Chain [23]: 2*s(2)+3
  Such that:s(2) =< -A+B

  with precondition: [D=3,A>=0] 

* Chain [22]: 2
  with precondition: [D=4,A>=0,B>=A+1] 

* Chain [21]: 1
  with precondition: [D=4,A>=0,A>=B] 

* Chain [19,23]: 8
  with precondition: [D=3,B=A+1,B>=1] 

* Chain [19,21]: 6
  with precondition: [D=4,B=A+1,B>=1] 

* Chain [18,23]: 2*s(6)+8
  Such that:s(6) =< -A+B

  with precondition: [D=3,A>=0,B>=A+2] 

* Chain [18,21]: 2*s(6)+6
  Such that:s(6) =< -A+B

  with precondition: [D=4,A>=0,B>=A+2] 


#### Cost of chains of n_evalfbb5in___6_loop_cont(A,B,C,D,E):
* Chain [25]: 0
  with precondition: [A=3] 

* Chain [24]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalfstart(A,B,C,D):
* Chain [26]: 16*s(28)+66*s(30)+9
  Such that:aux(13) =< B
aux(14) =< B/2
s(28) =< aux(14)
s(30) =< aux(13)
s(28) =< aux(13)

  with precondition: [] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [27]: 16*s(37)+66*s(38)+10
  Such that:s(35) =< B
s(36) =< B/2
s(37) =< s(36)
s(38) =< s(35)
s(37) =< s(35)

  with precondition: [] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [27] with precondition: [] 
    - Upper bound: nat(B)*66+10+nat(B/2)*16 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): nat(B)*66+10+nat(B/2)*16 
Asymptotic class: n 
* Total analysis performed in 379 ms.


-- stats
realtime 0:00.44
usertime 0.43
systime 0.00

