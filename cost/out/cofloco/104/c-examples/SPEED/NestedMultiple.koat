WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalNestedMultiplebb2in___2/11,n_evalNestedMultiplebb3in___5/11,n_evalNestedMultiplebb5in___3/11]
1. recursive  : [n_evalNestedMultiplebb2in___7/11,n_evalNestedMultiplebb3in___5_loop_cont/12]
2. non_recursive  : [exit_location/1]
3. recursive  : [n_evalNestedMultiplebb2in___1/11,n_evalNestedMultiplebb5in___4/11]
4. non_recursive  : [n_evalNestedMultiplestop___6/6]
5. non_recursive  : [n_evalNestedMultiplebb5in___4_loop_cont/7]
6. non_recursive  : [n_evalNestedMultiplebb2in___7_loop_cont/7]
7. non_recursive  : [n_evalNestedMultiplebb5in___8/6]
8. non_recursive  : [n_evalNestedMultiplestart/6]
9. non_recursive  : [pyRinit/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalNestedMultiplebb3in___5/11
1. SCC is partially evaluated into n_evalNestedMultiplebb2in___7/11
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalNestedMultiplebb5in___4/11
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_evalNestedMultiplebb5in___4_loop_cont/7
6. SCC is partially evaluated into n_evalNestedMultiplebb2in___7_loop_cont/7
7. SCC is partially evaluated into n_evalNestedMultiplebb5in___8/6
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into pyRinit/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalNestedMultiplebb3in___5/11 
* CE 12 is refined into CE [21] 
* CE 15 is refined into CE [22] 
* CE 14 is refined into CE [23] 
* CE 13 is refined into CE [24] 


### Cost equations --> "Loop" of n_evalNestedMultiplebb3in___5/11 
* CEs [24] --> Loop 20 
* CEs [21] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [23] --> Loop 23 

### Ranking functions of CR n_evalNestedMultiplebb3in___5(A,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [20]: [A-B-1]

#### Partial ranking functions of CR n_evalNestedMultiplebb3in___5(A,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    A-B-1


### Specialization of cost equations n_evalNestedMultiplebb2in___7/11 
* CE 7 is refined into CE [25] 
* CE 4 is refined into CE [26,27] 
* CE 5 is refined into CE [28] 
* CE 8 is refined into CE [29] 
* CE 6 is refined into CE [30,31] 


### Cost equations --> "Loop" of n_evalNestedMultiplebb2in___7/11 
* CEs [31] --> Loop 24 
* CEs [30] --> Loop 25 
* CEs [25] --> Loop 26 
* CEs [27] --> Loop 27 
* CEs [26] --> Loop 28 
* CEs [28,29] --> Loop 29 

### Ranking functions of CR n_evalNestedMultiplebb2in___7(A,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [24,25]: [C-E]

#### Partial ranking functions of CR n_evalNestedMultiplebb2in___7(A,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [24,25]:
  - RF of loop [24:1]:
    A-B-1
  - RF of loop [24:1,25:1]:
    C-E


### Specialization of cost equations n_evalNestedMultiplebb5in___4/11 
* CE 17 is refined into CE [32] 
* CE 18 is refined into CE [33] 
* CE 16 is refined into CE [34] 


### Cost equations --> "Loop" of n_evalNestedMultiplebb5in___4/11 
* CEs [34] --> Loop 30 
* CEs [32] --> Loop 31 
* CEs [33] --> Loop 32 

### Ranking functions of CR n_evalNestedMultiplebb5in___4(A,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [30]: [A-B]

#### Partial ranking functions of CR n_evalNestedMultiplebb5in___4(A,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [30]:
  - RF of loop [30:1]:
    A-B


### Specialization of cost equations n_evalNestedMultiplebb5in___4_loop_cont/7 
* CE 19 is refined into CE [35] 
* CE 20 is refined into CE [36] 


### Cost equations --> "Loop" of n_evalNestedMultiplebb5in___4_loop_cont/7 
* CEs [35] --> Loop 33 
* CEs [36] --> Loop 34 

### Ranking functions of CR n_evalNestedMultiplebb5in___4_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_evalNestedMultiplebb5in___4_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations n_evalNestedMultiplebb2in___7_loop_cont/7 
* CE 9 is refined into CE [37,38,39] 
* CE 11 is refined into CE [40] 
* CE 10 is refined into CE [41] 


### Cost equations --> "Loop" of n_evalNestedMultiplebb2in___7_loop_cont/7 
* CEs [37,38,39] --> Loop 35 
* CEs [40] --> Loop 36 
* CEs [41] --> Loop 37 

### Ranking functions of CR n_evalNestedMultiplebb2in___7_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_evalNestedMultiplebb2in___7_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations n_evalNestedMultiplebb5in___8/6 
* CE 2 is refined into CE [42,43,44,45,46,47] 
* CE 3 is refined into CE [48] 


### Cost equations --> "Loop" of n_evalNestedMultiplebb5in___8/6 
* CEs [48] --> Loop 38 
* CEs [42,43,44,45,46,47] --> Loop 39 

### Ranking functions of CR n_evalNestedMultiplebb5in___8(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalNestedMultiplebb5in___8(A,B,C,D,E,F) 


### Specialization of cost equations pyRinit/6 
* CE 1 is refined into CE [49,50] 


### Cost equations --> "Loop" of pyRinit/6 
* CEs [49] --> Loop 40 
* CEs [50] --> Loop 41 

### Ranking functions of CR pyRinit(A,B,C,D,E,F) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F) 


Computing Bounds
=====================================

#### Cost of chains of n_evalNestedMultiplebb3in___5(A,B,C,D,E,F,G,H,I,J,K):
* Chain [[20],23]: 3*it(20)+1
  Such that:it(20) =< -B+H

  with precondition: [F=2,A=G,C=I,E=J,E+1=K,H>=B+1,E>=D,C>=E+1,A>=H+1] 

* Chain [[20],22]: 3*it(20)+0
  Such that:it(20) =< A-B

  with precondition: [F=3,A>=B+2,E>=D,C>=E+1] 

* Chain [[20],21]: 3*it(20)+2
  Such that:it(20) =< A-B

  with precondition: [F=4,A>=B+2,E>=D,C>=E+1] 

* Chain [23]: 1
  with precondition: [F=2,A=G,B=H,C=I,D=J,E+1=K,A>=B+1,E>=D,C>=E+1] 

* Chain [22]: 0
  with precondition: [F=3,A>=B+1,E>=D,C>=E+1] 

* Chain [21]: 2
  with precondition: [F=4,B+1=A,E>=D,C>=E+1] 


#### Cost of chains of n_evalNestedMultiplebb2in___7(A,B,C,D,E,F,G,H,I,J,K):
* Chain [[24,25],29]: 2*it(24)+2*it(25)+6*s(2)+1
  Such that:aux(5) =< A-B
aux(6) =< C-E
s(2) =< aux(5)
it(24) =< aux(5)
it(24) =< aux(6)
it(25) =< aux(6)

  with precondition: [F=3,A>=B+1,E>=D,C>=E+1] 

* Chain [[24,25],28]: 2*it(24)+2*it(25)+3*s(5)+3
  Such that:aux(7) =< A-B
aux(8) =< C-E
it(24) =< aux(7)
s(5) =< aux(7)
it(24) =< aux(8)
it(25) =< aux(8)

  with precondition: [F=4,A>=B+1,E>=D,C>=E+2] 

* Chain [[24,25],27]: 2*it(24)+2*it(25)+6*s(5)+3
  Such that:aux(9) =< A-B
aux(10) =< C-E
s(5) =< aux(9)
it(24) =< aux(9)
it(24) =< aux(10)
it(25) =< aux(10)

  with precondition: [F=4,A>=B+2,E>=D,C>=E+2] 

* Chain [[24,25],26]: 2*it(24)+2*it(25)+3*s(5)+1
  Such that:aux(1) =< A-B
aux(2) =< -B+H
aux(11) =< C-E
it(24) =< aux(1)
s(5) =< aux(1)
it(24) =< aux(2)
s(5) =< aux(2)
it(24) =< aux(11)
it(25) =< aux(11)

  with precondition: [F=5,A=G,C=I,C=J,C=K,H>=B+1,E>=D,C>=E+1,A>=H] 

* Chain [29]: 3*s(2)+1
  Such that:s(2) =< A-B

  with precondition: [F=3,A>=B+1,E>=D] 

* Chain [28]: 3
  with precondition: [F=4,B+1=A,E>=D,C>=E+1] 

* Chain [27]: 3*s(6)+3
  Such that:s(6) =< A-B

  with precondition: [F=4,A>=B+2,E>=D,C>=E+1] 

* Chain [26]: 1
  with precondition: [F=5,A=G,B+1=H,C=I,E=J,E=K,A>=B+1,E>=C,E>=D] 


#### Cost of chains of n_evalNestedMultiplebb5in___4(A,B,C,D,E,F,G,H,I,J,K):
* Chain [[30],32]: 2*it(30)+0
  Such that:it(30) =< A-B

  with precondition: [F=3,D=E,A>=B+1,D>=C] 

* Chain [[30],31]: 2*it(30)+1
  Such that:it(30) =< A-B

  with precondition: [F=4,D=E,A>=B+1,D>=C] 

* Chain [32]: 0
  with precondition: [F=3] 

* Chain [31]: 1
  with precondition: [F=4,B=A,D=E,D>=C] 


#### Cost of chains of n_evalNestedMultiplebb5in___4_loop_cont(A,B,C,D,E,F,G):
* Chain [34]: 0
  with precondition: [A=3] 

* Chain [33]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalNestedMultiplebb2in___7_loop_cont(A,B,C,D,E,F,G):
* Chain [37]: 0
  with precondition: [A=3] 

* Chain [36]: 0
  with precondition: [A=4] 

* Chain [35]: 4*s(24)+1
  Such that:aux(15) =< B-C
s(24) =< aux(15)

  with precondition: [A=5] 


#### Cost of chains of n_evalNestedMultiplebb5in___8(A,B,C,D,E,F):
* Chain [39]: 32*s(28)+8*s(29)+8*s(30)+4
  Such that:aux(17) =< A-B
aux(18) =< C-D
s(28) =< aux(17)
s(29) =< aux(17)
s(29) =< aux(18)
s(30) =< aux(18)

  with precondition: [A>=B+1] 

* Chain [38]: 1
  with precondition: [B>=A] 


#### Cost of chains of pyRinit(A,B,C,D,E,F):
* Chain [41]: 32*s(49)+8*s(50)+8*s(51)+6
  Such that:s(47) =< -A+B
s(48) =< -C+D
s(49) =< s(47)
s(50) =< s(47)
s(50) =< s(48)
s(51) =< s(48)

  with precondition: [B>=A+1] 

* Chain [40]: 3
  with precondition: [A>=B] 


Closed-form bounds of pyRinit(A,B,C,D,E,F): 
-------------------------------------
* Chain [41] with precondition: [B>=A+1] 
    - Upper bound: -40*A+40*B+6+nat(-C+D)*8 
    - Complexity: n 
* Chain [40] with precondition: [A>=B] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C,D,E,F): nat(-A+B)*40+3+nat(-C+D)*8+3 
Asymptotic class: n 
* Total analysis performed in 631 ms.


-- stats
realtime 0:00.69
usertime 0.67
systime 0.01

