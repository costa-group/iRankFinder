WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalEx4bb2in___3/9,n_evalEx4bb3in___6/9,n_evalEx4bb4in___4/9]
1. recursive  : [n_evalEx4bb2in___7/9,n_evalEx4bb3in___6_loop_cont/10]
2. non_recursive  : [exit_location/1]
3. recursive  : [n_evalEx4bb2in___1/9,n_evalEx4bb4in___5/9]
4. non_recursive  : [n_evalEx4stop___2/5]
5. non_recursive  : [n_evalEx4bb4in___5_loop_cont/6]
6. non_recursive  : [n_evalEx4bb2in___7_loop_cont/6]
7. non_recursive  : [n_evalEx4bb4in___8/5]
8. non_recursive  : [n_evalEx4start/5]
9. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalEx4bb3in___6/9
1. SCC is partially evaluated into n_evalEx4bb2in___7/9
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalEx4bb4in___5/9
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_evalEx4bb4in___5_loop_cont/6
6. SCC is partially evaluated into n_evalEx4bb2in___7_loop_cont/6
7. SCC is partially evaluated into n_evalEx4bb4in___8/5
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalEx4bb3in___6/9 
* CE 14 is refined into CE [20] 
* CE 11 is refined into CE [21] 
* CE 13 is refined into CE [22] 
* CE 12 is refined into CE [23] 


### Cost equations --> "Loop" of n_evalEx4bb3in___6/9 
* CEs [23] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [22] --> Loop 22 

### Ranking functions of CR n_evalEx4bb3in___6(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_evalEx4bb3in___6(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_evalEx4bb2in___7/9 
* CE 6 is refined into CE [24] 
* CE 3 is refined into CE [25,26] 
* CE 4 is refined into CE [27] 
* CE 7 is refined into CE [28] 
* CE 5 is refined into CE [29,30] 


### Cost equations --> "Loop" of n_evalEx4bb2in___7/9 
* CEs [30] --> Loop 23 
* CEs [29] --> Loop 24 
* CEs [24] --> Loop 25 
* CEs [26] --> Loop 26 
* CEs [27,28] --> Loop 27 
* CEs [25] --> Loop 28 

### Ranking functions of CR n_evalEx4bb2in___7(A,B,C,D,E,F,G,H,I) 
* RF of phase [23,24]: [D]

#### Partial ranking functions of CR n_evalEx4bb2in___7(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [23,24]:
  - RF of loop [23:1,24:1]:
    D


### Specialization of cost equations n_evalEx4bb4in___5/9 
* CE 16 is refined into CE [31] 
* CE 17 is refined into CE [32] 
* CE 15 is refined into CE [33] 


### Cost equations --> "Loop" of n_evalEx4bb4in___5/9 
* CEs [33] --> Loop 29 
* CEs [31] --> Loop 30 
* CEs [32] --> Loop 31 

### Ranking functions of CR n_evalEx4bb4in___5(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_evalEx4bb4in___5(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_evalEx4bb4in___5_loop_cont/6 
* CE 18 is refined into CE [34] 
* CE 19 is refined into CE [35] 


### Cost equations --> "Loop" of n_evalEx4bb4in___5_loop_cont/6 
* CEs [34] --> Loop 32 
* CEs [35] --> Loop 33 

### Ranking functions of CR n_evalEx4bb4in___5_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalEx4bb4in___5_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalEx4bb2in___7_loop_cont/6 
* CE 8 is refined into CE [36,37,38] 
* CE 10 is refined into CE [39] 
* CE 9 is refined into CE [40] 


### Cost equations --> "Loop" of n_evalEx4bb2in___7_loop_cont/6 
* CEs [36,37,38] --> Loop 34 
* CEs [39] --> Loop 35 
* CEs [40] --> Loop 36 

### Ranking functions of CR n_evalEx4bb2in___7_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalEx4bb2in___7_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalEx4bb4in___8/5 
* CE 2 is refined into CE [41,42,43,44,45] 


### Cost equations --> "Loop" of n_evalEx4bb4in___8/5 
* CEs [41,42,43,44,45] --> Loop 37 

### Ranking functions of CR n_evalEx4bb4in___8(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalEx4bb4in___8(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [46] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [46] --> Loop 38 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalEx4bb3in___6(A,B,C,D,E,F,G,H,I):
* Chain [22]: 1
  with precondition: [A=1,E=2,F=1,H=1,G=B,D=I+1,1>=C,D>=1] 

* Chain [21]: 0
  with precondition: [A=1,E=3,1>=C,D>=1] 

* Chain [20]: 2
  with precondition: [A=1,E=4,0>=C,D>=1] 

* Chain [19,22]: 4
  with precondition: [A=1,C=1,E=2,F=1,H=1,D=G,D=I+1,D>=1] 

* Chain [19,21]: 3
  with precondition: [A=1,C=1,E=3,D>=1] 

* Chain [19,20]: 5
  with precondition: [A=1,C=1,E=4,D>=1] 


#### Cost of chains of n_evalEx4bb2in___7(A,B,C,D,E,F,G,H,I):
* Chain [[23,24],28]: 7*it(23)+6
  Such that:aux(3) =< D
it(23) =< aux(3)

  with precondition: [A=1,E=4,1>=C,D>=2] 

* Chain [[23,24],27]: 7*it(23)+4
  Such that:aux(4) =< D
it(23) =< aux(4)

  with precondition: [A=1,E=3,1>=C,D>=1] 

* Chain [[23,24],25]: 7*it(23)+1
  Such that:aux(5) =< D
it(23) =< aux(5)

  with precondition: [A=1,E=5,F=1,G=0,H=1,I=0,1>=C,D>=1] 

* Chain [27]: 4
  with precondition: [A=1,E=3,1>=C] 

* Chain [26]: 3
  with precondition: [A=1,C=0,E=4,D=B,D>=1] 

* Chain [25]: 1
  with precondition: [A=1,E=5,C=F,D=G,C=H,D=I,1>=C,0>=D] 


#### Cost of chains of n_evalEx4bb4in___5(A,B,C,D,E,F,G,H,I):
* Chain [31]: 0
  with precondition: [E=3] 

* Chain [30]: 1
  with precondition: [E=4,A=C,B=D,0>=A,0>=B] 

* Chain [29,31]: 2
  with precondition: [A=1,C=1,E=3,B=D,0>=B] 

* Chain [29,30]: 3
  with precondition: [A=1,C=1,E=4,B=D,0>=B] 


#### Cost of chains of n_evalEx4bb4in___5_loop_cont(A,B,C,D,E,F):
* Chain [33]: 0
  with precondition: [A=3] 

* Chain [32]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalEx4bb2in___7_loop_cont(A,B,C,D,E,F):
* Chain [36]: 0
  with precondition: [A=3] 

* Chain [35]: 0
  with precondition: [A=4] 

* Chain [34]: 3
  with precondition: [A=5] 


#### Cost of chains of n_evalEx4bb4in___8(A,B,C,D,E):
* Chain [37]: 21*s(4)+7
  Such that:aux(6) =< B
s(4) =< aux(6)

  with precondition: [A=1] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [38]: 21*s(10)+9
  Such that:s(9) =< A
s(10) =< s(9)

  with precondition: [] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [38] with precondition: [] 
    - Upper bound: nat(A)*21+9 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E): nat(A)*21+9 
Asymptotic class: n 
* Total analysis performed in 357 ms.


-- stats
realtime 0:00.41
usertime 0.40
systime 0.00

