WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalNestedSinglebb2in___1/7,n_evalNestedSinglebb3in___2/7]
1. recursive  : [n_evalNestedSinglebb2in___4/7,n_evalNestedSinglebb3in___2_loop_cont/8,n_evalNestedSinglebb5in___5/7]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalNestedSinglestop___3/4]
4. non_recursive  : [n_evalNestedSinglebb5in___5_loop_cont/5]
5. non_recursive  : [n_evalNestedSinglestart/4]
6. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalNestedSinglebb3in___2/7
1. SCC is partially evaluated into n_evalNestedSinglebb5in___5/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalNestedSinglebb5in___5_loop_cont/5
5. SCC is partially evaluated into n_evalNestedSinglestart/4
6. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalNestedSinglebb3in___2/7 
* CE 12 is refined into CE [13] 
* CE 11 is refined into CE [14] 
* CE 9 is refined into CE [15] 
* CE 10 is refined into CE [16] 


### Cost equations --> "Loop" of n_evalNestedSinglebb3in___2/7 
* CEs [16] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

### Ranking functions of CR n_evalNestedSinglebb3in___2(A,B,C,D,E,F,G) 
* RF of phase [12]: [B-C-1]

#### Partial ranking functions of CR n_evalNestedSinglebb3in___2(A,B,C,D,E,F,G) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    B-C-1


### Specialization of cost equations n_evalNestedSinglebb5in___5/7 
* CE 5 is refined into CE [17] 
* CE 3 is refined into CE [18] 
* CE 6 is refined into CE [19] 
* CE 4 is refined into CE [20,21,22,23] 


### Cost equations --> "Loop" of n_evalNestedSinglebb5in___5/7 
* CEs [23] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [20] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [17] --> Loop 20 
* CEs [18,19] --> Loop 21 

### Ranking functions of CR n_evalNestedSinglebb5in___5(A,B,C,D,E,F,G) 
* RF of phase [16,19]: [-A+B]

#### Partial ranking functions of CR n_evalNestedSinglebb5in___5(A,B,C,D,E,F,G) 
* Partial RF of phase [16,19]:
  - RF of loop [16:1]:
    -A/2+B/2-1/2
  - RF of loop [19:1]:
    -A+B


### Specialization of cost equations n_evalNestedSinglebb5in___5_loop_cont/5 
* CE 7 is refined into CE [24] 
* CE 8 is refined into CE [25] 


### Cost equations --> "Loop" of n_evalNestedSinglebb5in___5_loop_cont/5 
* CEs [24] --> Loop 22 
* CEs [25] --> Loop 23 

### Ranking functions of CR n_evalNestedSinglebb5in___5_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalNestedSinglebb5in___5_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalNestedSinglestart/4 
* CE 2 is refined into CE [26,27,28] 


### Cost equations --> "Loop" of n_evalNestedSinglestart/4 
* CEs [26,27,28] --> Loop 24 

### Ranking functions of CR n_evalNestedSinglestart(A,B,C,D) 

#### Partial ranking functions of CR n_evalNestedSinglestart(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [29] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [29] --> Loop 25 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalNestedSinglebb3in___2(A,B,C,D,E,F,G):
* Chain [[12],15]: 2*it(12)+2
  Such that:it(12) =< -C+G

  with precondition: [D=2,B+1=E,B=F,B=G,A>=0,C>=A,B>=C+2] 

* Chain [[12],14]: 2*it(12)+1
  Such that:it(12) =< -C+G

  with precondition: [D=2,B=F,E=G+1,A>=0,C>=A,E>=C+2,B>=E] 

* Chain [[12],13]: 2*it(12)+0
  Such that:it(12) =< B-C

  with precondition: [D=3,A>=0,C>=A,B>=C+2] 

* Chain [15]: 2
  with precondition: [D=2,C+1=B,C+2=E,C+1=F,C+1=G,A>=0,C>=A] 

* Chain [14]: 1
  with precondition: [D=2,C+1=E,B=F,C=G,A>=0,C>=A,B>=C+1] 

* Chain [13]: 0
  with precondition: [D=3,A>=0,C>=A,B>=C+1] 


#### Cost of chains of n_evalNestedSinglebb5in___5(A,B,C,D,E,F,G):
* Chain [[16,19],21]: 10*it(16)+2
  Such that:aux(3) =< -A+B
it(16) =< aux(3)

  with precondition: [D=3,A>=0,B>=A+1] 

* Chain [[16,19],20]: 3*it(16)+5*it(19)+1
  Such that:it(16) =< -A/2+B/2
aux(4) =< -A+B
it(16) =< aux(4)
it(19) =< aux(4)

  with precondition: [D=4,A>=0,B>=A+1] 

* Chain [[16,19],18,21]: 3*it(16)+5*it(19)+6
  Such that:it(16) =< -A/2+B/2
aux(5) =< -A+B
it(16) =< aux(5)
it(19) =< aux(5)

  with precondition: [D=3,A>=0,B>=A+2] 

* Chain [[16,19],18,20]: 3*it(16)+5*it(19)+5
  Such that:it(16) =< -A/2+B/2
aux(6) =< -A+B
it(16) =< aux(6)
it(19) =< aux(6)

  with precondition: [D=4,A>=0,B>=A+2] 

* Chain [[16,19],17,21]: 10*it(16)+6
  Such that:aux(7) =< -A+B
it(16) =< aux(7)

  with precondition: [D=3,A>=0,B>=A+3] 

* Chain [[16,19],17,20]: 10*it(16)+5
  Such that:aux(8) =< -A+B
it(16) =< aux(8)

  with precondition: [D=4,A>=0,B>=A+3] 

* Chain [21]: 2*s(2)+2
  Such that:s(2) =< -A+B

  with precondition: [D=3,A>=0] 

* Chain [20]: 1
  with precondition: [D=4,A>=0,A>=B] 

* Chain [18,21]: 6
  with precondition: [D=3,B=A+1,B>=1] 

* Chain [18,20]: 5
  with precondition: [D=4,B=A+1,B>=1] 

* Chain [17,21]: 2*s(6)+6
  Such that:s(6) =< -A+B

  with precondition: [D=3,A>=0,B>=A+2] 

* Chain [17,20]: 2*s(6)+5
  Such that:s(6) =< -A+B

  with precondition: [D=4,A>=0,B>=A+2] 


#### Cost of chains of n_evalNestedSinglebb5in___5_loop_cont(A,B,C,D,E):
* Chain [23]: 0
  with precondition: [A=3] 

* Chain [22]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalNestedSinglestart(A,B,C,D):
* Chain [24]: 9*s(25)+51*s(27)+7
  Such that:aux(12) =< B
aux(13) =< B/2
s(25) =< aux(13)
s(27) =< aux(12)
s(25) =< aux(12)

  with precondition: [] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [25]: 9*s(34)+51*s(35)+8
  Such that:s(32) =< B
s(33) =< B/2
s(34) =< s(33)
s(35) =< s(32)
s(34) =< s(32)

  with precondition: [] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [25] with precondition: [] 
    - Upper bound: nat(B)*51+8+nat(B/2)*9 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): nat(B)*51+8+nat(B/2)*9 
Asymptotic class: n 
* Total analysis performed in 365 ms.


-- stats
realtime 0:00.44
usertime 0.40
systime 0.00

