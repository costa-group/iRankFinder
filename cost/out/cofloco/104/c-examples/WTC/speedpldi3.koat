WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalspeedpldi3bb2in___2/9,n_evalspeedpldi3bb5in___3/9]
1. recursive  : [n_evalspeedpldi3bb2in___4/9,n_evalspeedpldi3bb5in___1/9,n_evalspeedpldi3bb5in___3_loop_cont/10]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalspeedpldi3stop___5/5]
4. non_recursive  : [n_evalspeedpldi3bb2in___4_loop_cont/6]
5. non_recursive  : [n_evalspeedpldi3bb5in___6/5]
6. non_recursive  : [n_evalspeedpldi3entryin___7/5]
7. non_recursive  : [n_evalspeedpldi3start/5]
8. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalspeedpldi3bb5in___3/9
1. SCC is partially evaluated into n_evalspeedpldi3bb2in___4/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalspeedpldi3bb2in___4_loop_cont/6
5. SCC is partially evaluated into n_evalspeedpldi3bb5in___6/5
6. SCC is partially evaluated into n_evalspeedpldi3entryin___7/5
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalspeedpldi3bb5in___3/9 
* CE 14 is refined into CE [15] 
* CE 13 is refined into CE [16] 
* CE 12 is refined into CE [17] 


### Cost equations --> "Loop" of n_evalspeedpldi3bb5in___3/9 
* CEs [17] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR n_evalspeedpldi3bb5in___3(A,B,C,D,E,F,G,H,I) 
* RF of phase [14]: [A-C,B-C-1]

#### Partial ranking functions of CR n_evalspeedpldi3bb5in___3(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    A-C
    B-C-1


### Specialization of cost equations n_evalspeedpldi3bb2in___4/9 
* CE 6 is refined into CE [18,19] 
* CE 8 is refined into CE [20] 
* CE 9 is refined into CE [21] 
* CE 7 is refined into CE [22,23] 


### Cost equations --> "Loop" of n_evalspeedpldi3bb2in___4/9 
* CEs [23] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [20,21] --> Loop 20 
* CEs [18] --> Loop 21 

### Ranking functions of CR n_evalspeedpldi3bb2in___4(A,B,C,D,E,F,G,H,I) 
* RF of phase [17]: [B-D-1]
* RF of phase [18]: [B-D-1]

#### Partial ranking functions of CR n_evalspeedpldi3bb2in___4(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    B-D-1
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    B-D-1


### Specialization of cost equations n_evalspeedpldi3bb2in___4_loop_cont/6 
* CE 11 is refined into CE [24] 
* CE 10 is refined into CE [25] 


### Cost equations --> "Loop" of n_evalspeedpldi3bb2in___4_loop_cont/6 
* CEs [24] --> Loop 22 
* CEs [25] --> Loop 23 

### Ranking functions of CR n_evalspeedpldi3bb2in___4_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalspeedpldi3bb2in___4_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalspeedpldi3bb5in___6/5 
* CE 5 is refined into CE [26,27,28] 


### Cost equations --> "Loop" of n_evalspeedpldi3bb5in___6/5 
* CEs [26,27,28] --> Loop 24 

### Ranking functions of CR n_evalspeedpldi3bb5in___6(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalspeedpldi3bb5in___6(A,B,C,D,E) 


### Specialization of cost equations n_evalspeedpldi3entryin___7/5 
* CE 4 is refined into CE [29] 
* CE 2 is refined into CE [30] 
* CE 3 is refined into CE [31] 


### Cost equations --> "Loop" of n_evalspeedpldi3entryin___7/5 
* CEs [29] --> Loop 25 
* CEs [30] --> Loop 26 
* CEs [31] --> Loop 27 

### Ranking functions of CR n_evalspeedpldi3entryin___7(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalspeedpldi3entryin___7(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [32,33,34] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [34] --> Loop 28 
* CEs [33] --> Loop 29 
* CEs [32] --> Loop 30 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalspeedpldi3bb5in___3(A,B,C,D,E,F,G,H,I):
* Chain [[14],16]: 2*it(14)+2
  Such that:it(14) =< A-C

  with precondition: [E=2,H=0,A=F,B=G,D+1=I,C>=1,D>=0,B>=A+1,A>=C+1,B>=D+1] 

* Chain [[14],15]: 2*it(14)+0
  Such that:it(14) =< A-C

  with precondition: [E=3,C>=1,D>=0,B>=A+1,A>=C+1,B>=D+1] 

* Chain [16]: 2
  with precondition: [E=2,H=0,C=A,C=F,B=G,D+1=I,C>=1,D>=0,B>=C+1,B>=D+1] 

* Chain [15]: 0
  with precondition: [E=3,C>=1,D>=0,B>=A+1,A>=C,B>=D+1] 


#### Cost of chains of n_evalspeedpldi3bb2in___4(A,B,C,D,E,F,G,H,I):
* Chain [[18],21]: 4*it(18)+4
  Such that:it(18) =< B-D

  with precondition: [A=1,C=0,E=4,D>=0,B>=D+2] 

* Chain [[18],20]: 4*it(18)+2*s(2)+1
  Such that:s(2) =< 1
it(18) =< B-D

  with precondition: [A=1,C=0,E=3,D>=0,B>=D+2] 

* Chain [[17],20]: 4*it(17)+2*s(2)+2*s(5)+1
  Such that:it(17) =< B-D
aux(2) =< A
s(2) =< aux(2)
s(5) =< it(17)*aux(2)

  with precondition: [C=0,E=3,A>=2,D>=0,B>=A+1,B>=D+2] 

* Chain [[17],19]: 4*it(17)+2*s(5)+2*s(6)+4
  Such that:it(17) =< B-D
aux(3) =< A
s(6) =< aux(3)
s(5) =< it(17)*aux(3)

  with precondition: [C=0,E=4,A>=2,D>=0,B>=A+1,B>=D+2] 

* Chain [20]: 2*s(2)+1
  Such that:s(2) =< A

  with precondition: [C=0,E=3,A>=1,D>=0,B>=A+1,B>=D+1] 


#### Cost of chains of n_evalspeedpldi3bb2in___4_loop_cont(A,B,C,D,E,F):
* Chain [23]: 0
  with precondition: [A=3] 

* Chain [22]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalspeedpldi3bb5in___6(A,B,C,D,E):
* Chain [24]: 2*s(14)+6*s(17)+16*s(18)+4*s(19)+5
  Such that:s(14) =< 1
aux(6) =< A
aux(7) =< B
s(18) =< aux(7)
s(17) =< aux(6)
s(19) =< s(18)*aux(6)

  with precondition: [C=0,D=0,A>=1,B>=A+1] 


#### Cost of chains of n_evalspeedpldi3entryin___7(A,B,C,D,E):
* Chain [27]: 1
  with precondition: [0>=A] 

* Chain [26]: 2*s(25)+16*s(28)+6*s(29)+4*s(30)+6
  Such that:s(25) =< 1
s(26) =< A
s(27) =< B
s(28) =< s(27)
s(29) =< s(26)
s(30) =< s(28)*s(26)

  with precondition: [A>=1,B>=A+1] 

* Chain [25]: 1
  with precondition: [A>=B] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [30]: 3
  with precondition: [0>=A] 

* Chain [29]: 2*s(31)+16*s(34)+6*s(35)+4*s(36)+8
  Such that:s(31) =< 1
s(32) =< A
s(33) =< B
s(34) =< s(33)
s(35) =< s(32)
s(36) =< s(34)*s(32)

  with precondition: [A>=1,B>=A+1] 

* Chain [28]: 3
  with precondition: [A>=B] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [30] with precondition: [0>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [29] with precondition: [A>=1,B>=A+1] 
    - Upper bound: 6*A+10+4*A*B+16*B 
    - Complexity: n^2 
* Chain [28] with precondition: [A>=B] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C,D,E): nat(A)*6+7+nat(A)*4*nat(B)+nat(B)*16+3 
Asymptotic class: n^2 
* Total analysis performed in 409 ms.


-- stats
realtime 0:00.52
usertime 0.46
systime 0.00

