WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalaaron2bb3in___2/7,n_evalaaron2bb6in___1/7]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_evalaaron2stop___3/4]
3. non_recursive  : [n_evalaaron2bb3in___2_loop_cont/5]
4. non_recursive  : [n_evalaaron2bb6in___4/4]
5. non_recursive  : [n_evalaaron2entryin___5/4]
6. non_recursive  : [n_evalaaron2start/4]
7. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalaaron2bb3in___2/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalaaron2bb3in___2_loop_cont/5
4. SCC is partially evaluated into n_evalaaron2bb6in___4/4
5. SCC is partially evaluated into n_evalaaron2entryin___5/4
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalaaron2bb3in___2/7 
* CE 6 is refined into CE [12] 
* CE 9 is refined into CE [13] 
* CE 7 is refined into CE [14] 
* CE 8 is refined into CE [15] 


### Cost equations --> "Loop" of n_evalaaron2bb3in___2/7 
* CEs [14] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [12] --> Loop 14 
* CEs [13] --> Loop 15 

### Ranking functions of CR n_evalaaron2bb3in___2(A,B,C,D,E,F,G) 
* RF of phase [12,13]: [-A-B+C,-B+C]

#### Partial ranking functions of CR n_evalaaron2bb3in___2(A,B,C,D,E,F,G) 
* Partial RF of phase [12,13]:
  - RF of loop [12:1,13:1]:
    -A-B+C
    -B+C


### Specialization of cost equations n_evalaaron2bb3in___2_loop_cont/5 
* CE 11 is refined into CE [16] 
* CE 10 is refined into CE [17] 


### Cost equations --> "Loop" of n_evalaaron2bb3in___2_loop_cont/5 
* CEs [16] --> Loop 16 
* CEs [17] --> Loop 17 

### Ranking functions of CR n_evalaaron2bb3in___2_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalaaron2bb3in___2_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalaaron2bb6in___4/4 
* CE 5 is refined into CE [18] 
* CE 4 is refined into CE [19,20,21] 


### Cost equations --> "Loop" of n_evalaaron2bb6in___4/4 
* CEs [18] --> Loop 18 
* CEs [19,20,21] --> Loop 19 

### Ranking functions of CR n_evalaaron2bb6in___4(A,B,C,D) 

#### Partial ranking functions of CR n_evalaaron2bb6in___4(A,B,C,D) 


### Specialization of cost equations n_evalaaron2entryin___5/4 
* CE 2 is refined into CE [22,23] 
* CE 3 is refined into CE [24] 


### Cost equations --> "Loop" of n_evalaaron2entryin___5/4 
* CEs [22] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [24] --> Loop 22 

### Ranking functions of CR n_evalaaron2entryin___5(A,B,C,D) 

#### Partial ranking functions of CR n_evalaaron2entryin___5(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [25,26,27] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [27] --> Loop 23 
* CEs [26] --> Loop 24 
* CEs [25] --> Loop 25 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalaaron2bb3in___2(A,B,C,D,E,F,G):
* Chain [[12,13],15]: 4*it(12)+0
  Such that:aux(1) =< -A-B+C
aux(5) =< -B+C
it(12) =< aux(1)
it(12) =< aux(5)

  with precondition: [D=2,A>=0,C>=A+B+1] 

* Chain [[12,13],14]: 4*it(12)+2
  Such that:aux(1) =< -A-B+C
aux(6) =< -B+C
it(12) =< aux(1)
it(12) =< aux(6)

  with precondition: [D=3,A>=0,C>=A+B+1] 

* Chain [15]: 0
  with precondition: [D=2,A>=0,C>=B] 

* Chain [14]: 2
  with precondition: [D=3,C>=B,A+B>=C] 


#### Cost of chains of n_evalaaron2bb3in___2_loop_cont(A,B,C,D,E):
* Chain [17]: 0
  with precondition: [A=2] 

* Chain [16]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalaaron2bb6in___4(A,B,C,D):
* Chain [19]: 8*s(6)+3
  Such that:aux(7) =< -A-B+C
aux(8) =< -B+C
s(6) =< aux(7)
s(6) =< aux(8)

  with precondition: [A>=0,C>=B] 

* Chain [18]: 1
  with precondition: [A>=0,B>=C+1] 


#### Cost of chains of n_evalaaron2entryin___5(A,B,C,D):
* Chain [22]: 1
  with precondition: [0>=A+1] 

* Chain [21]: 2
  with precondition: [A>=0,C>=B+1] 

* Chain [20]: 8*s(12)+4
  Such that:s(10) =< -A+B-C
s(11) =< B-C
s(12) =< s(10)
s(12) =< s(11)

  with precondition: [A>=0,B>=C] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [25]: 3
  with precondition: [0>=A+1] 

* Chain [24]: 4
  with precondition: [A>=0,C>=B+1] 

* Chain [23]: 8*s(15)+6
  Such that:s(13) =< -A+B-C
s(14) =< B-C
s(15) =< s(13)
s(15) =< s(14)

  with precondition: [A>=0,B>=C] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [25] with precondition: [0>=A+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [24] with precondition: [A>=0,C>=B+1] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [23] with precondition: [A>=0,B>=C] 
    - Upper bound: nat(-A+B-C)*8+6 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): max([1,nat(-A+B-C)*8+3])+3 
Asymptotic class: n 
* Total analysis performed in 171 ms.


-- stats
realtime 0:00.23
usertime 0.20
systime 0.00

