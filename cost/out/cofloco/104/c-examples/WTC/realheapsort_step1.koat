WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalrealheapsortstep1bb3in___2/7,n_evalrealheapsortstep1bb4in___3/7]
1. recursive  : [n_evalrealheapsortstep1bb3in___4/7,n_evalrealheapsortstep1bb4in___3_loop_cont/8,n_evalrealheapsortstep1bb6in___1/7]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalrealheapsortstep1stop___5/4]
4. non_recursive  : [n_evalrealheapsortstep1bb3in___4_loop_cont/5]
5. non_recursive  : [n_evalrealheapsortstep1bb6in___6/4]
6. non_recursive  : [n_evalrealheapsortstep1entryin___7/4]
7. non_recursive  : [n_evalrealheapsortstep1start/4]
8. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalrealheapsortstep1bb4in___3/7
1. SCC is partially evaluated into n_evalrealheapsortstep1bb3in___4/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalrealheapsortstep1bb3in___4_loop_cont/5
5. SCC is partially evaluated into n_evalrealheapsortstep1bb6in___6/4
6. SCC is partially evaluated into n_evalrealheapsortstep1entryin___7/4
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalrealheapsortstep1bb4in___3/7 
* CE 14 is refined into CE [15] 
* CE 11 is refined into CE [16] 
* CE 13 is refined into CE [17] 
* CE 12 is refined into CE [18] 


### Cost equations --> "Loop" of n_evalrealheapsortstep1bb4in___3/7 
* CEs [18] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [17] --> Loop 17 

### Ranking functions of CR n_evalrealheapsortstep1bb4in___3(A,B,C,D,E,F,G) 
* RF of phase [14]: [C/2-1]

#### Partial ranking functions of CR n_evalrealheapsortstep1bb4in___3(A,B,C,D,E,F,G) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    C/2-1


### Specialization of cost equations n_evalrealheapsortstep1bb3in___4/7 
* CE 7 is refined into CE [19,20,21,22] 
* CE 5 is refined into CE [23] 
* CE 8 is refined into CE [24] 
* CE 6 is refined into CE [25,26,27,28] 


### Cost equations --> "Loop" of n_evalrealheapsortstep1bb3in___4/7 
* CEs [25,26,27,28] --> Loop 18 
* CEs [23,24] --> Loop 19 
* CEs [19,20,21,22] --> Loop 20 

### Ranking functions of CR n_evalrealheapsortstep1bb3in___4(A,B,C,D,E,F,G) 
* RF of phase [18]: [A-B-1,A-C-1]

#### Partial ranking functions of CR n_evalrealheapsortstep1bb3in___4(A,B,C,D,E,F,G) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    A-B-1
    A-C-1


### Specialization of cost equations n_evalrealheapsortstep1bb3in___4_loop_cont/5 
* CE 10 is refined into CE [29] 
* CE 9 is refined into CE [30] 


### Cost equations --> "Loop" of n_evalrealheapsortstep1bb3in___4_loop_cont/5 
* CEs [29] --> Loop 21 
* CEs [30] --> Loop 22 

### Ranking functions of CR n_evalrealheapsortstep1bb3in___4_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalrealheapsortstep1bb3in___4_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalrealheapsortstep1bb6in___6/4 
* CE 4 is refined into CE [31,32] 


### Cost equations --> "Loop" of n_evalrealheapsortstep1bb6in___6/4 
* CEs [31,32] --> Loop 23 

### Ranking functions of CR n_evalrealheapsortstep1bb6in___6(A,B,C,D) 

#### Partial ranking functions of CR n_evalrealheapsortstep1bb6in___6(A,B,C,D) 


### Specialization of cost equations n_evalrealheapsortstep1entryin___7/4 
* CE 2 is refined into CE [33] 
* CE 3 is refined into CE [34] 


### Cost equations --> "Loop" of n_evalrealheapsortstep1entryin___7/4 
* CEs [33] --> Loop 24 
* CEs [34] --> Loop 25 

### Ranking functions of CR n_evalrealheapsortstep1entryin___7(A,B,C,D) 

#### Partial ranking functions of CR n_evalrealheapsortstep1entryin___7(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [35,36] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [36] --> Loop 26 
* CEs [35] --> Loop 27 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalrealheapsortstep1bb4in___3(A,B,C,D,E,F,G):
* Chain [[14],17]: 2*it(14)+1
  Such that:it(14) =< C/2-G/2

  with precondition: [D=2,A=E,B+1=F,G>=1,C>=2*G+1,A>=B+1,B>=C] 

* Chain [[14],16]: 2*it(14)+2
  Such that:it(14) =< C/2

  with precondition: [D=2,A=E,B+1=F,0>=G,C>=3,2*G+1>=0,A>=B+1,B>=C] 

* Chain [[14],15]: 2*it(14)+0
  Such that:it(14) =< C/2

  with precondition: [D=3,C>=3,A>=B+1,B>=C] 

* Chain [17]: 1
  with precondition: [D=2,A=E,B+1=F,C=G,C>=1,A>=B+1,B>=C,C+2*A>=B+6] 

* Chain [16]: 2
  with precondition: [D=2,A=E,B+1=F,0>=G,C>=1,A>=B+1,B>=C,2*G+2>=C,C+2*A>=B+6] 

* Chain [15]: 0
  with precondition: [D=3,C>=1,A>=B+1,B>=C,C+2*A>=B+6] 


#### Cost of chains of n_evalrealheapsortstep1bb3in___4(A,B,C,D,E,F,G):
* Chain [[18],20]: 4*it(18)+4*s(2)+4*s(8)+4
  Such that:it(18) =< A-C
aux(4) =< A/2
s(2) =< aux(4)
s(9) =< it(18)*aux(4)
s(8) =< s(9)

  with precondition: [D=4,B=C,B>=1,A>=B+2] 

* Chain [[18],19]: 4*it(18)+4*s(8)+2*s(10)+1
  Such that:it(18) =< A-C
aux(5) =< A/2
s(10) =< aux(5)
s(9) =< it(18)*aux(5)
s(8) =< s(9)

  with precondition: [D=3,B=C,B>=1,A>=B+2] 

* Chain [19]: 2*s(10)+1
  Such that:s(10) =< C/2

  with precondition: [D=3,C=B,A>=3,C>=1,A>=C+1] 


#### Cost of chains of n_evalrealheapsortstep1bb3in___4_loop_cont(A,B,C,D,E):
* Chain [22]: 0
  with precondition: [A=3] 

* Chain [21]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalrealheapsortstep1bb6in___6(A,B,C,D):
* Chain [23]: 8*s(17)+2*s(19)+6*s(20)+8*s(22)+5
  Such that:s(19) =< 1/2
aux(6) =< A
aux(7) =< A/2
s(17) =< aux(6)
s(20) =< aux(7)
s(21) =< s(17)*aux(7)
s(22) =< s(21)

  with precondition: [B=1,A>=3] 


#### Cost of chains of n_evalrealheapsortstep1entryin___7(A,B,C,D):
* Chain [25]: 1
  with precondition: [2>=A] 

* Chain [24]: 2*s(28)+8*s(31)+6*s(32)+8*s(34)+6
  Such that:s(28) =< 1/2
s(29) =< A
s(30) =< A/2
s(31) =< s(29)
s(32) =< s(30)
s(33) =< s(31)*s(30)
s(34) =< s(33)

  with precondition: [A>=3] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [27]: 3
  with precondition: [2>=A] 

* Chain [26]: 2*s(35)+8*s(38)+6*s(39)+8*s(41)+8
  Such that:s(35) =< 1/2
s(36) =< A
s(37) =< A/2
s(38) =< s(36)
s(39) =< s(37)
s(40) =< s(38)*s(37)
s(41) =< s(40)

  with precondition: [A>=3] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [27] with precondition: [2>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [26] with precondition: [A>=3] 
    - Upper bound: 11*A+9+4*A*A 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D): nat(A)*8+6+nat(A/2)*6+nat(A/2)*8*nat(A)+3 
Asymptotic class: n^2 
* Total analysis performed in 332 ms.


-- stats
realtime 0:00.41
usertime 0.37
systime 0.00

