WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalrealheapsortstep2bb11in___1/9,n_evalrealheapsortstep2bb9in___2/9]
1. recursive  : [n_evalrealheapsortstep2bb11in___3/9,n_evalrealheapsortstep2bb2in___10/9,n_evalrealheapsortstep2bb3in___9/9,n_evalrealheapsortstep2bb6in___6/9,n_evalrealheapsortstep2bb6in___7/9,n_evalrealheapsortstep2bb6in___8/9,n_evalrealheapsortstep2bb9in___2_loop_cont/10,n_evalrealheapsortstep2bb9in___4/9,n_evalrealheapsortstep2bb9in___5/9]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalrealheapsortstep2stop___12/5]
4. non_recursive  : [n_evalrealheapsortstep2bb2in___10_loop_cont/6]
5. non_recursive  : [n_evalrealheapsortstep2bb9in___11/5]
6. non_recursive  : [n_evalrealheapsortstep2bb11in___13/5]
7. non_recursive  : [n_evalrealheapsortstep2entryin___14/5]
8. non_recursive  : [n_evalrealheapsortstep2start/5]
9. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalrealheapsortstep2bb9in___2/9
1. SCC is partially evaluated into n_evalrealheapsortstep2bb2in___10/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalrealheapsortstep2bb2in___10_loop_cont/6
5. SCC is partially evaluated into n_evalrealheapsortstep2bb9in___11/5
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into n_evalrealheapsortstep2entryin___14/5
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalrealheapsortstep2bb9in___2/9 
* CE 21 is refined into CE [22] 
* CE 20 is refined into CE [23] 
* CE 19 is refined into CE [24] 


### Cost equations --> "Loop" of n_evalrealheapsortstep2bb9in___2/9 
* CEs [22] --> Loop 16 
* CEs [23] --> Loop 17 
* CEs [24] --> Loop 18 

### Ranking functions of CR n_evalrealheapsortstep2bb9in___2(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_evalrealheapsortstep2bb9in___2(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_evalrealheapsortstep2bb2in___10/9 
* CE 5 is refined into CE [25] 
* CE 6 is refined into CE [26] 
* CE 7 is refined into CE [27] 
* CE 16 is refined into CE [28] 
* CE 11 is discarded (unfeasible) 
* CE 12 is discarded (unfeasible) 
* CE 13 is refined into CE [29] 
* CE 10 is refined into CE [30] 
* CE 15 is refined into CE [31] 
* CE 8 is refined into CE [32] 
* CE 9 is refined into CE [33] 
* CE 14 is refined into CE [34] 


### Cost equations --> "Loop" of n_evalrealheapsortstep2bb2in___10/9 
* CEs [31] --> Loop 19 
* CEs [34] --> Loop 20 
* CEs [33] --> Loop 21 
* CEs [30] --> Loop 22 
* CEs [32] --> Loop 23 
* CEs [25,26,27,28] --> Loop 24 
* CEs [29] --> Loop 25 

### Ranking functions of CR n_evalrealheapsortstep2bb2in___10(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_evalrealheapsortstep2bb2in___10(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [19,20,21,22,23]:
  - RF of loop [19:1]:
    A/8-B/8-C/2-3/4 depends on loops [21:1,22:1,23:1] 
    A/8-C/2-3/4 depends on loops [21:1,22:1,23:1] 
  - RF of loop [20:1]:
    A/4-B/4-C-1 depends on loops [21:1,22:1,23:1] 
    A/4-C-1 depends on loops [21:1,22:1,23:1] 
  - RF of loop [21:1,22:1,23:1]:
    A-B-3
  - RF of loop [22:1]:
    2*C depends on loops [19:1,20:1] 


### Specialization of cost equations n_evalrealheapsortstep2bb2in___10_loop_cont/6 
* CE 17 is refined into CE [35] 
* CE 18 is refined into CE [36] 


### Cost equations --> "Loop" of n_evalrealheapsortstep2bb2in___10_loop_cont/6 
* CEs [35] --> Loop 26 
* CEs [36] --> Loop 27 

### Ranking functions of CR n_evalrealheapsortstep2bb2in___10_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalrealheapsortstep2bb2in___10_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalrealheapsortstep2bb9in___11/5 
* CE 4 is refined into CE [37,38,39] 


### Cost equations --> "Loop" of n_evalrealheapsortstep2bb9in___11/5 
* CEs [37,38,39] --> Loop 28 

### Ranking functions of CR n_evalrealheapsortstep2bb9in___11(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalrealheapsortstep2bb9in___11(A,B,C,D,E) 


### Specialization of cost equations n_evalrealheapsortstep2entryin___14/5 
* CE 2 is refined into CE [40] 
* CE 3 is refined into CE [41] 


### Cost equations --> "Loop" of n_evalrealheapsortstep2entryin___14/5 
* CEs [40] --> Loop 29 
* CEs [41] --> Loop 30 

### Ranking functions of CR n_evalrealheapsortstep2entryin___14(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalrealheapsortstep2entryin___14(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [42,43] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [43] --> Loop 31 
* CEs [42] --> Loop 32 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalrealheapsortstep2bb9in___2(A,B,C,D,E,F,G,H,I):
* Chain [18]: 2
  with precondition: [C=0,D=1,E=2,B+2=A,B>=1] 

* Chain [17]: 1
  with precondition: [C=0,E=3,H=0,A=F,B=G,D=I,B>=1,D>=1,A>=B+3,A>=B+D+1] 

* Chain [16]: 0
  with precondition: [C=0,E=4,B>=1,D>=1,A>=B+D+1] 


#### Cost of chains of n_evalrealheapsortstep2bb2in___10(A,B,C,D,E,F,G,H,I):
* Chain [[19,20,21,22,23],25]: 4*it(19)+4*it(20)+17*it(21)+6
  Such that:aux(135) =< A/2-B/2
aux(20) =< A/4-C
aux(4) =< A/8-C/2
aux(28) =< -C
aux(12) =< -C/2
aux(140) =< A-B
aux(141) =< A/4-B/4-C
aux(142) =< A/8-B/8-C/2
it(21) =< aux(140)
aux(123) =< aux(135)
aux(61) =< aux(135)-1/4
aux(99) =< aux(135)+1/4
aux(17) =< it(21)*aux(135)
aux(19) =< it(21)*aux(123)
aux(21) =< it(21)*aux(61)
aux(18) =< it(21)*aux(99)
aux(3) =< aux(19)* (1/2)
aux(5) =< aux(21)* (1/2)
aux(2) =< aux(18)* (1/2)
aux(1) =< aux(17)* (1/2)
it(20) =< aux(21)+aux(17)+aux(21)+aux(141)
it(20) =< aux(19)+aux(18)+aux(17)+aux(20)
it(20) =< aux(19)+aux(18)+aux(17)+aux(28)
it(19) =< aux(5)+aux(1)+aux(5)+aux(142)
it(19) =< aux(3)+aux(2)+aux(1)+aux(12)
it(19) =< aux(3)+aux(2)+aux(1)+aux(4)

  with precondition: [E=2,B>=0,C>=0,A>=B+4,A>=2*C+B+3] 

* Chain [[19,20,21,22,23],24]: 4*it(19)+4*it(20)+17*it(21)+5
  Such that:aux(28) =< A-B-C
aux(135) =< A/2-B/2
aux(24) =< A/4-B/4-C
aux(20) =< A/4-C
aux(8) =< A/8-B/8-C/2
aux(4) =< A/8-C/2
aux(32) =< 3/4*A-3/4*B-C
aux(12) =< 3/8*A-3/8*B-3/4*C
aux(16) =< 5/16*A-5/16*B-5/8*C
aux(143) =< A-B
it(21) =< aux(143)
aux(123) =< aux(135)
aux(61) =< aux(135)-1/4
aux(99) =< aux(135)+1/4
aux(17) =< it(21)*aux(135)
aux(19) =< it(21)*aux(123)
aux(21) =< it(21)*aux(61)
aux(18) =< it(21)*aux(99)
aux(3) =< aux(19)* (1/2)
aux(5) =< aux(21)* (1/2)
aux(2) =< aux(18)* (1/2)
aux(1) =< aux(17)* (1/2)
it(20) =< aux(21)+aux(17)+aux(21)+aux(24)
it(20) =< aux(19)+aux(18)+aux(17)+aux(20)
it(20) =< aux(21)+aux(17)+aux(21)+aux(32)
it(20) =< aux(19)+aux(18)+aux(17)+aux(28)
it(19) =< aux(5)+aux(1)+aux(5)+aux(16)
it(19) =< aux(3)+aux(2)+aux(1)+aux(12)
it(19) =< aux(5)+aux(1)+aux(5)+aux(8)
it(19) =< aux(3)+aux(2)+aux(1)+aux(4)

  with precondition: [E=4,B>=0,C>=0,A>=B+4,A>=2*C+B+3] 

* Chain [25]: 6
  with precondition: [C=0,E=2,B+3=A,B>=0] 

* Chain [24]: 5
  with precondition: [E=4,B>=0,C>=0,A>=2*C+B+3] 


#### Cost of chains of n_evalrealheapsortstep2bb2in___10_loop_cont(A,B,C,D,E,F):
* Chain [27]: 0
  with precondition: [A=2] 

* Chain [26]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalrealheapsortstep2bb9in___11(A,B,C,D,E):
* Chain [28]: 34*s(33)+4*s(45)+4*s(46)+4*s(69)+4*s(70)+7
  Such that:s(54) =< 3/4*A
s(55) =< 3/8*A
s(56) =< 5/16*A
aux(150) =< A
aux(151) =< A/2
aux(152) =< A/4
aux(153) =< A/8
s(33) =< aux(150)
s(34) =< aux(151)
s(35) =< aux(151)-1/4
s(36) =< aux(151)+1/4
s(37) =< s(33)*aux(151)
s(38) =< s(33)*s(34)
s(39) =< s(33)*s(35)
s(40) =< s(33)*s(36)
s(41) =< s(38)* (1/2)
s(42) =< s(39)* (1/2)
s(43) =< s(40)* (1/2)
s(44) =< s(37)* (1/2)
s(45) =< s(39)+s(37)+s(39)+aux(152)
s(45) =< s(38)+s(40)+s(37)+aux(152)
s(45) =< s(38)+s(40)+s(37)
s(46) =< s(42)+s(44)+s(42)+aux(153)
s(46) =< s(41)+s(43)+s(44)
s(46) =< s(41)+s(43)+s(44)+aux(153)
s(69) =< s(39)+s(37)+s(39)+aux(152)
s(69) =< s(38)+s(40)+s(37)+aux(152)
s(69) =< s(39)+s(37)+s(39)+s(54)
s(69) =< s(38)+s(40)+s(37)+aux(150)
s(70) =< s(42)+s(44)+s(42)+s(56)
s(70) =< s(41)+s(43)+s(44)+s(55)
s(70) =< s(42)+s(44)+s(42)+aux(153)
s(70) =< s(41)+s(43)+s(44)+aux(153)

  with precondition: [B=0,C=0,A>=3] 


#### Cost of chains of n_evalrealheapsortstep2entryin___14(A,B,C,D,E):
* Chain [30]: 1
  with precondition: [2>=A] 

* Chain [29]: 34*s(78)+4*s(90)+4*s(91)+4*s(92)+4*s(93)+9
  Such that:s(74) =< A
s(75) =< A/2
s(76) =< A/4
s(77) =< A/8
s(71) =< 3/4*A
s(72) =< 3/8*A
s(73) =< 5/16*A
s(78) =< s(74)
s(79) =< s(75)
s(80) =< s(75)-1/4
s(81) =< s(75)+1/4
s(82) =< s(78)*s(75)
s(83) =< s(78)*s(79)
s(84) =< s(78)*s(80)
s(85) =< s(78)*s(81)
s(86) =< s(83)* (1/2)
s(87) =< s(84)* (1/2)
s(88) =< s(85)* (1/2)
s(89) =< s(82)* (1/2)
s(90) =< s(84)+s(82)+s(84)+s(76)
s(90) =< s(83)+s(85)+s(82)+s(76)
s(90) =< s(83)+s(85)+s(82)
s(91) =< s(87)+s(89)+s(87)+s(77)
s(91) =< s(86)+s(88)+s(89)
s(91) =< s(86)+s(88)+s(89)+s(77)
s(92) =< s(84)+s(82)+s(84)+s(76)
s(92) =< s(83)+s(85)+s(82)+s(76)
s(92) =< s(84)+s(82)+s(84)+s(71)
s(92) =< s(83)+s(85)+s(82)+s(74)
s(93) =< s(87)+s(89)+s(87)+s(73)
s(93) =< s(86)+s(88)+s(89)+s(72)
s(93) =< s(87)+s(89)+s(87)+s(77)
s(93) =< s(86)+s(88)+s(89)+s(77)

  with precondition: [A>=3] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [32]: 3
  with precondition: [2>=A] 

* Chain [31]: 34*s(101)+4*s(113)+4*s(114)+4*s(115)+4*s(116)+11
  Such that:s(94) =< A
s(95) =< A/2
s(96) =< A/4
s(97) =< A/8
s(98) =< 3/4*A
s(99) =< 3/8*A
s(100) =< 5/16*A
s(101) =< s(94)
s(102) =< s(95)
s(103) =< s(95)-1/4
s(104) =< s(95)+1/4
s(105) =< s(101)*s(95)
s(106) =< s(101)*s(102)
s(107) =< s(101)*s(103)
s(108) =< s(101)*s(104)
s(109) =< s(106)* (1/2)
s(110) =< s(107)* (1/2)
s(111) =< s(108)* (1/2)
s(112) =< s(105)* (1/2)
s(113) =< s(107)+s(105)+s(107)+s(96)
s(113) =< s(106)+s(108)+s(105)+s(96)
s(113) =< s(106)+s(108)+s(105)
s(114) =< s(110)+s(112)+s(110)+s(97)
s(114) =< s(109)+s(111)+s(112)
s(114) =< s(109)+s(111)+s(112)+s(97)
s(115) =< s(107)+s(105)+s(107)+s(96)
s(115) =< s(106)+s(108)+s(105)+s(96)
s(115) =< s(107)+s(105)+s(107)+s(98)
s(115) =< s(106)+s(108)+s(105)+s(94)
s(116) =< s(110)+s(112)+s(110)+s(100)
s(116) =< s(109)+s(111)+s(112)+s(99)
s(116) =< s(110)+s(112)+s(110)+s(97)
s(116) =< s(109)+s(111)+s(112)+s(97)

  with precondition: [A>=3] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [32] with precondition: [2>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [31] with precondition: [A>=3] 
    - Upper bound: A/2+ (34*A+11+ (12*A-6)*A+5/4*A+6*A*A+2*A) 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D,E): nat(A)*34+8+nat(-1/4+nat(A/2))*24*nat(A)+nat(5/16*A)*4+nat(A/2)*12*nat(A)+nat(A/4)*8+nat(A/8)*4+3 
Asymptotic class: n^2 
* Total analysis performed in 1449 ms.


-- stats
realtime 0:01.67
usertime 1.61
systime 0.00

