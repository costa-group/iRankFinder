MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_l1___2/5]
1. non_recursive  : [exit_location/1]
2. recursive  : [n_l2___1/3]
3. non_recursive  : [n_l2___1_loop_cont/2]
4. non_recursive  : [n_l1___2_loop_cont/4]
5. non_recursive  : [n_l0/3]
6. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_l1___2/5
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into n_l2___1/3
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_l1___2_loop_cont/4
5. SCC is partially evaluated into n_l0/3
6. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_l1___2/5 
* CE 4 is refined into CE [10] 
* CE 5 is refined into CE [11] 
* CE 3 is refined into CE [12] 


### Cost equations --> "Loop" of n_l1___2/5 
* CEs [12] --> Loop 10 
* CEs [10] --> Loop 11 
* CEs [11] --> Loop 12 

### Ranking functions of CR n_l1___2(A,B,C,D,E) 
* RF of phase [10]: [A]

#### Partial ranking functions of CR n_l1___2(A,B,C,D,E) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    A


### Specialization of cost equations n_l2___1/3 
* CE 9 is refined into CE [13] 
* CE 8 is refined into CE [14] 


### Cost equations --> "Loop" of n_l2___1/3 
* CEs [14] --> Loop 13 
* CEs [13] --> Loop 14 

### Ranking functions of CR n_l2___1(A,B,C) 
* RF of phase [13]: [B]

#### Partial ranking functions of CR n_l2___1(A,B,C) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    B


### Specialization of cost equations n_l1___2_loop_cont/4 
* CE 6 is refined into CE [15] 
* CE 7 is refined into CE [16] 


### Cost equations --> "Loop" of n_l1___2_loop_cont/4 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR n_l1___2_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_l1___2_loop_cont(A,B,C,D) 


### Specialization of cost equations n_l0/3 
* CE 2 is refined into CE [17,18,19] 


### Cost equations --> "Loop" of n_l0/3 
* CEs [17,18,19] --> Loop 17 

### Ranking functions of CR n_l0(A,B,C) 

#### Partial ranking functions of CR n_l0(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [20] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [20] --> Loop 18 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_l1___2(A,B,C,D,E):
* Chain [[10],12]: 1*it(10)+0
  Such that:it(10) =< A

  with precondition: [C=2,A>=1] 

* Chain [[10],11]: 1*it(10)+1
  Such that:it(10) =< A

  with precondition: [C=3,D=0,A>=1] 

* Chain [12]: 0
  with precondition: [C=2] 

* Chain [11]: 1
  with precondition: [C=3,E=B,A=D,0>=A] 


#### Cost of chains of n_l2___1(A,B,C):
* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< B

  with precondition: [C=2,0>=A,B>=1] 

* Chain [14]: 0
  with precondition: [C=2] 


#### Cost of chains of n_l1___2_loop_cont(A,B,C,D):
* Chain [16]: 0
  with precondition: [A=2] 

* Chain [15]: 1*s(3)+0
  Such that:s(3) =< C

  with precondition: [A=3] 


#### Cost of chains of n_l0(A,B,C):
* Chain [17]: 2*s(4)+1*s(6)+1*s(7)+2
  Such that:s(7) =< B
aux(1) =< A
s(4) =< aux(1)

  with precondition: [] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [18]: 1*s(8)+2*s(10)+1*s(11)+3
  Such that:s(9) =< A
s(8) =< B
s(10) =< s(9)

  with precondition: [] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [18] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of pyRinit(A,B,C): inf 
Asymptotic class: infinity 
* Total analysis performed in 70 ms.


-- stats
realtime 0:00.11
usertime 0.09
systime 0.01

