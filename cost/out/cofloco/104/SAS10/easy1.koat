WORST_CASE(?,O(1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_lbl111___6/13]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_stop___5/7]
3. non_recursive  : [n_lbl111___6_loop_cont/8]
4. non_recursive  : [n_lbl111___7/7]
5. non_recursive  : [n_lbl111___10/7]
6. recursive  : [n_lbl111___3/13]
7. non_recursive  : [n_lbl111___3_loop_cont/8]
8. non_recursive  : [n_lbl111___4/7]
9. non_recursive  : [n_lbl111___9/7]
10. recursive  : [n_lbl91___1/13]
11. non_recursive  : [n_lbl91___1_loop_cont/8]
12. non_recursive  : [n_lbl91___2/7]
13. non_recursive  : [n_lbl91___8/7]
14. non_recursive  : [n_start___11/7]
15. non_recursive  : [n_start0/7]
16. non_recursive  : [pyRinit/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_lbl111___6/13
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_lbl111___6_loop_cont/8
4. SCC is partially evaluated into n_lbl111___7/7
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into n_lbl111___3/13
7. SCC is partially evaluated into n_lbl111___3_loop_cont/8
8. SCC is partially evaluated into n_lbl111___4/7
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into n_lbl91___1/13
11. SCC is partially evaluated into n_lbl91___1_loop_cont/8
12. SCC is partially evaluated into n_lbl91___2/7
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into n_start___11/7
15. SCC is completely evaluated into other SCCs
16. SCC is partially evaluated into pyRinit/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_lbl111___6/13 
* CE 10 is refined into CE [23] 
* CE 9 is refined into CE [24] 
* CE 8 is refined into CE [25] 


### Cost equations --> "Loop" of n_lbl111___6/13 
* CEs [25] --> Loop 23 
* CEs [23] --> Loop 24 
* CEs [24] --> Loop 25 

### Ranking functions of CR n_lbl111___6(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [23]: [-E/2+20]

#### Partial ranking functions of CR n_lbl111___6(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    -E/2+20


### Specialization of cost equations n_lbl111___6_loop_cont/8 
* CE 12 is refined into CE [26] 
* CE 11 is refined into CE [27] 


### Cost equations --> "Loop" of n_lbl111___6_loop_cont/8 
* CEs [26] --> Loop 26 
* CEs [27] --> Loop 27 

### Ranking functions of CR n_lbl111___6_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR n_lbl111___6_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations n_lbl111___7/7 
* CE 5 is refined into CE [28,29] 


### Cost equations --> "Loop" of n_lbl111___7/7 
* CEs [28,29] --> Loop 28 

### Ranking functions of CR n_lbl111___7(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_lbl111___7(A,B,C,D,E,F,G) 


### Specialization of cost equations n_lbl111___3/13 
* CE 15 is refined into CE [30] 
* CE 14 is refined into CE [31] 
* CE 13 is refined into CE [32] 


### Cost equations --> "Loop" of n_lbl111___3/13 
* CEs [32] --> Loop 29 
* CEs [30] --> Loop 30 
* CEs [31] --> Loop 31 

### Ranking functions of CR n_lbl111___3(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [29]: [-E/2+20]

#### Partial ranking functions of CR n_lbl111___3(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    -E/2+20


### Specialization of cost equations n_lbl111___3_loop_cont/8 
* CE 17 is refined into CE [33] 
* CE 16 is refined into CE [34] 


### Cost equations --> "Loop" of n_lbl111___3_loop_cont/8 
* CEs [33] --> Loop 32 
* CEs [34] --> Loop 33 

### Ranking functions of CR n_lbl111___3_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR n_lbl111___3_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations n_lbl111___4/7 
* CE 6 is refined into CE [35,36] 


### Cost equations --> "Loop" of n_lbl111___4/7 
* CEs [35,36] --> Loop 34 

### Ranking functions of CR n_lbl111___4(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_lbl111___4(A,B,C,D,E,F,G) 


### Specialization of cost equations n_lbl91___1/13 
* CE 20 is refined into CE [37] 
* CE 19 is refined into CE [38] 
* CE 18 is refined into CE [39] 


### Cost equations --> "Loop" of n_lbl91___1/13 
* CEs [39] --> Loop 35 
* CEs [37] --> Loop 36 
* CEs [38] --> Loop 37 

### Ranking functions of CR n_lbl91___1(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [35]: [-E+40]

#### Partial ranking functions of CR n_lbl91___1(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [35]:
  - RF of loop [35:1]:
    -E+40


### Specialization of cost equations n_lbl91___1_loop_cont/8 
* CE 22 is refined into CE [40] 
* CE 21 is refined into CE [41] 


### Cost equations --> "Loop" of n_lbl91___1_loop_cont/8 
* CEs [40] --> Loop 38 
* CEs [41] --> Loop 39 

### Ranking functions of CR n_lbl91___1_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR n_lbl91___1_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations n_lbl91___2/7 
* CE 7 is refined into CE [42,43] 


### Cost equations --> "Loop" of n_lbl91___2/7 
* CEs [42,43] --> Loop 40 

### Ranking functions of CR n_lbl91___2(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_lbl91___2(A,B,C,D,E,F,G) 


### Specialization of cost equations n_start___11/7 
* CE 3 is refined into CE [44] 
* CE 2 is refined into CE [45] 
* CE 4 is refined into CE [46] 


### Cost equations --> "Loop" of n_start___11/7 
* CEs [44] --> Loop 41 
* CEs [45] --> Loop 42 
* CEs [46] --> Loop 43 

### Ranking functions of CR n_start___11(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_start___11(A,B,C,D,E,F,G) 


### Specialization of cost equations pyRinit/7 
* CE 1 is refined into CE [47,48,49] 


### Cost equations --> "Loop" of pyRinit/7 
* CEs [49] --> Loop 44 
* CEs [48] --> Loop 45 
* CEs [47] --> Loop 46 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G) 


Computing Bounds
=====================================

#### Cost of chains of n_lbl111___6(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[23],25]: 1*it(23)+1
  Such that:it(23) =< -E/2+20

  with precondition: [C=100,G=2,A=B,0>=A+1,39>=E,E>=6] 

* Chain [[23],24]: 1*it(23)+0
  Such that:it(23) =< -E/2+20

  with precondition: [C=100,G=3,A=B,0>=A+1,39>=E,E>=6] 

* Chain [24]: 0
  with precondition: [C=100,G=3,B=A,0>=B+1,E>=6] 


#### Cost of chains of n_lbl111___6_loop_cont(A,B,C,D,E,F,G,H):
* Chain [27]: 0
  with precondition: [A=2] 

* Chain [26]: 0
  with precondition: [A=3] 


#### Cost of chains of n_lbl111___7(A,B,C,D,E,F,G):
* Chain [28]: 36
  with precondition: [C=100,E=4,B=A,0>=B+1] 


#### Cost of chains of n_lbl111___3(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[29],31]: 1*it(29)+1
  Such that:it(29) =< -E/2+20

  with precondition: [C=100,G=2,A=B,39>=E,A>=1,E>=6] 

* Chain [[29],30]: 1*it(29)+0
  Such that:it(29) =< -E/2+20

  with precondition: [C=100,G=3,A=B,39>=E,A>=1,E>=6] 

* Chain [30]: 0
  with precondition: [C=100,G=3,B=A,B>=1,E>=6] 


#### Cost of chains of n_lbl111___3_loop_cont(A,B,C,D,E,F,G,H):
* Chain [33]: 0
  with precondition: [A=2] 

* Chain [32]: 0
  with precondition: [A=3] 


#### Cost of chains of n_lbl111___4(A,B,C,D,E,F,G):
* Chain [34]: 36
  with precondition: [C=100,E=4,B=A,B>=1] 


#### Cost of chains of n_lbl91___1(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[35],37]: 1*it(35)+1
  Such that:it(35) =< -E+40

  with precondition: [A=0,B=0,C=100,G=2,39>=E,E>=3] 

* Chain [[35],36]: 1*it(35)+0
  Such that:it(35) =< -E+40

  with precondition: [A=0,B=0,C=100,G=3,39>=E,E>=3] 

* Chain [36]: 0
  with precondition: [A=0,B=0,C=100,G=3,E>=3] 


#### Cost of chains of n_lbl91___1_loop_cont(A,B,C,D,E,F,G,H):
* Chain [39]: 0
  with precondition: [A=2] 

* Chain [38]: 0
  with precondition: [A=3] 


#### Cost of chains of n_lbl91___2(A,B,C,D,E,F,G):
* Chain [40]: 76
  with precondition: [A=0,B=0,C=100,E=2] 


#### Cost of chains of n_start___11(A,B,C,D,E,F,G):
* Chain [43]: 78
  with precondition: [A=0,B=0,D=C,F=E] 

* Chain [42]: 38
  with precondition: [B=A,D=C,F=E,0>=B+1] 

* Chain [41]: 38
  with precondition: [B=A,D=C,F=E,B>=1] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G):
* Chain [46]: 80
  with precondition: [B=0] 

* Chain [45]: 40
  with precondition: [0>=B+1] 

* Chain [44]: 40
  with precondition: [B>=1] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G): 
-------------------------------------
* Chain [46] with precondition: [B=0] 
    - Upper bound: 80 
    - Complexity: constant 
* Chain [45] with precondition: [0>=B+1] 
    - Upper bound: 40 
    - Complexity: constant 
* Chain [44] with precondition: [B>=1] 
    - Upper bound: 40 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C,D,E,F,G): 80 
Asymptotic class: constant 
* Total analysis performed in 490 ms.


-- stats
realtime 0:00.58
usertime 0.53
systime 0.01

