WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_lbl71___2/17]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_stop___1/9]
3. non_recursive  : [n_lbl71___2_loop_cont/10]
4. non_recursive  : [n_start___3/9]
5. non_recursive  : [n_start0/9]
6. non_recursive  : [pyRinit/9]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_lbl71___2/17
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_lbl71___2_loop_cont/10
4. SCC is partially evaluated into n_start___3/9
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into pyRinit/9

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_lbl71___2/17 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 
* CE 5 is refined into CE [14] 


### Cost equations --> "Loop" of n_lbl71___2/17 
* CEs [14] --> Loop 11 
* CEs [11] --> Loop 12 
* CEs [12] --> Loop 13 
* CEs [13] --> Loop 14 

### Ranking functions of CR n_lbl71___2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [11]: [-A+D-E-G+202,-A+D-2*G+202,-A+D-G+100,-A/2+D-E/2-G/2+101/2,-A/2+D-G+101/2,-A/2+D-G/2+1/2,-A/3+D-E/3-G/3+2/3,-A/3+D-2/3*G+2/3,A/2-B+E-H+99/2,A/2-B+E/2+G/2-H+99/2,A/2+E-F-H+101/2,A/2+E/2-F+G/2-H+101/2,2/3*A-B+2/3*E+2/3*G-H-1/3,2/3*A-B+4/3*E-H-1/3,2/3*A+2/3*E-F+2/3*G-H+2/3,2/3*A+4/3*E-F-H+2/3,-B+E-H+99,-B+2*E-H-1,-B+E/2+G/2-H+199/2,-B+2/3*E+2/3*G-H+199/3,-B+4/3*E-H+65,-B-H+201,-B/2+D/2-H/2+50,-B/3+2/3*D-H/3+1/3,D/2-F/2-H/2+101/2,2/3*D-F/3-H/3+2/3,E-F-H+100,2*E-F-H,E/2-F+G/2-H+201/2,2/3*E-F+2/3*G-H+202/3,4/3*E-F-H+66,-F-H+202]

#### Partial ranking functions of CR n_lbl71___2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    -A+D-E-G+202
    -A+D-2*G+202
    -A+D-G+100
    -A/2+D-E/2-G/2+101/2
    -A/2+D-G+101/2
    -A/2+D-G/2+1/2
    -A/3+D-E/3-G/3+2/3
    -A/3+D-2/3*G+2/3
    A/2-B+E-H+99/2
    A/2-B+E/2+G/2-H+99/2
    A/2+E-F-H+101/2
    A/2+E/2-F+G/2-H+101/2
    2/3*A-B+2/3*E+2/3*G-H-1/3
    2/3*A-B+4/3*E-H-1/3
    2/3*A+2/3*E-F+2/3*G-H+2/3
    2/3*A+4/3*E-F-H+2/3
    -B+E-H+99
    -B+2*E-H-1
    -B+E/2+G/2-H+199/2
    -B+2/3*E+2/3*G-H+199/3
    -B+4/3*E-H+65
    -B-H+201
    -B/2+D/2-H/2+50
    -B/3+2/3*D-H/3+1/3
    D/2-F/2-H/2+101/2
    2/3*D-F/3-H/3+2/3
    E-F-H+100
    2*E-F-H
    E/2-F+G/2-H+201/2
    2/3*E-F+2/3*G-H+202/3
    4/3*E-F-H+66
    -F-H+202


### Specialization of cost equations n_lbl71___2_loop_cont/10 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


### Cost equations --> "Loop" of n_lbl71___2_loop_cont/10 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR n_lbl71___2_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR n_lbl71___2_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations n_start___3/9 
* CE 4 is refined into CE [17] 
* CE 3 is refined into CE [18] 
* CE 2 is refined into CE [19,20,21,22] 


### Cost equations --> "Loop" of n_start___3/9 
* CEs [17] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [20] --> Loop 20 
* CEs [19,22] --> Loop 21 

### Ranking functions of CR n_start___3(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_start___3(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations pyRinit/9 
* CE 1 is refined into CE [23,24,25,26] 


### Cost equations --> "Loop" of pyRinit/9 
* CEs [26] --> Loop 22 
* CEs [25] --> Loop 23 
* CEs [23,24] --> Loop 24 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 


Computing Bounds
=====================================

#### Cost of chains of n_lbl71___2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[11],14]: 1*it(11)+1
  Such that:it(11) =< A/2+E/2-F+G/2-H+101/2

  with precondition: [I=2,F=B+1,D+F+H=A+E+G,100>=A,101>=F,100>=H,E>=G,F+H>=A+G+1,A+E+G>=F+H+101] 

* Chain [[11],13]: 1*it(11)+1
  Such that:it(11) =< 2/3*D-F/3-H/3+2/3

  with precondition: [I=2,A+E+G=B+D+H+1,A+E+G=D+F+H,100>=A,100>=H,E>=D+1,E>=G,D+1>=H,D+H+101>=A+E+G,H+2*D>=A+E+G] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< 2/3*D-F/3-H/3+2/3

  with precondition: [I=3,F=B+1,A+E+G=D+F+H,100>=A,101>=F,100>=H,E>=G,F+H>=A+G+1,A+E+G>=2*F+H,A+E+G+1>=2*H+F] 

* Chain [14]: 1
  with precondition: [I=2,B+1=F,B+D+H+1=A+E+G,100>=A,100>=B,H>=101,E>=D+1,D+1>=H,A+2*E>=B+D+H+1] 

* Chain [13]: 1
  with precondition: [I=2,B+1=F,B+D+H+1=A+E+G,100>=A,100>=B,B>=D,E>=D+1,D+1>=H,A+2*E>=B+D+H+1] 

* Chain [12]: 0
  with precondition: [I=3,B+1=F,B+D+H+1=A+E+G,100>=A,100>=B,E>=D+1,D+1>=H,A+2*E>=B+D+H+1] 


#### Cost of chains of n_lbl71___2_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [16]: 0
  with precondition: [A=2] 

* Chain [15]: 0
  with precondition: [A=3] 


#### Cost of chains of n_start___3(A,B,C,D,E,F,G,H,I):
* Chain [21]: 1*s(4)+1*s(5)+1*s(6)+2
  Such that:s(4) =< -A/2+D/2-G/2+99/2
s(5) =< -A/3+2/3*D-G/3
s(6) =< -A/3+2/3*E-F/3

  with precondition: [H=A,C=B,E=D,G=F,100>=H,E>=G] 

* Chain [20]: 2
  with precondition: [H=A,C=B,E=D,G=F,100>=H,G>=101,E>=G] 

* Chain [19]: 2
  with precondition: [H=A,C=B,E=D,G=F,100>=H,H+1>=E,E>=G] 

* Chain [18]: 1
  with precondition: [H=A,C=B,E=D,G=F,H>=101] 

* Chain [17]: 1
  with precondition: [H=A,C=B,E=D,G=F,G>=E+1] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G,H,I):
* Chain [24]: 1*s(10)+2*s(11)+4
  Such that:s(10) =< -A/2+E/2-G/2+99/2
aux(1) =< -A/3+2/3*E-G/3
s(11) =< aux(1)

  with precondition: [100>=A,E>=G] 

* Chain [23]: 3
  with precondition: [A>=101] 

* Chain [22]: 3
  with precondition: [G>=E+1] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G,H,I): 
-------------------------------------
* Chain [24] with precondition: [100>=A,E>=G] 
    - Upper bound: nat(-A/2+E/2-G/2+99/2)+4+nat(-A/3+2/3*E-G/3)*2 
    - Complexity: n 
* Chain [23] with precondition: [A>=101] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [22] with precondition: [G>=E+1] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C,D,E,F,G,H,I): nat(-A/2+E/2-G/2+99/2)+1+nat(-A/3+2/3*E-G/3)*2+3 
Asymptotic class: n 
* Total analysis performed in 1128 ms.


-- stats
realtime 0:01.21
usertime 1.16
systime 0.02

