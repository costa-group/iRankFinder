WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_eval2___4/5]
1. recursive  : [n_eval3___2/5]
2. recursive  : [n_eval1___1/3,n_eval1___3/3,n_eval2___4_loop_cont/4,n_eval2___6/3,n_eval3___2_loop_cont/4,n_eval3___5/3]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [n_eval2___6_loop_cont/2]
5. non_recursive  : [n_eval1___7/3]
6. non_recursive  : [n_start/3]
7. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_eval2___4/5
1. SCC is partially evaluated into n_eval3___2/5
2. SCC is partially evaluated into n_eval3___5/3
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_eval1___7/3
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_eval2___4/5 
* CE 7 is refined into CE [12] 
* CE 5 is discarded (unfeasible) 
* CE 6 is refined into CE [13] 


### Cost equations --> "Loop" of n_eval2___4/5 
* CEs [13] --> Loop 11 
* CEs [12] --> Loop 12 

### Ranking functions of CR n_eval2___4(A,B,C,D,E) 
* RF of phase [11]: [A]

#### Partial ranking functions of CR n_eval2___4(A,B,C,D,E) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    A


### Specialization of cost equations n_eval3___2/5 
* CE 11 is refined into CE [14] 
* CE 9 is discarded (unfeasible) 
* CE 10 is refined into CE [15] 


### Cost equations --> "Loop" of n_eval3___2/5 
* CEs [15] --> Loop 13 
* CEs [14] --> Loop 14 

### Ranking functions of CR n_eval3___2(A,B,C,D,E) 
* RF of phase [13]: [B]

#### Partial ranking functions of CR n_eval3___2(A,B,C,D,E) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    B


### Specialization of cost equations n_eval3___5/3 
* CE 8 is refined into CE [16] 


### Cost equations --> "Loop" of n_eval3___5/3 
* CEs [16] --> Loop 15 

### Ranking functions of CR n_eval3___5(A,B,C) 

#### Partial ranking functions of CR n_eval3___5(A,B,C) 


### Specialization of cost equations n_eval1___7/3 
* CE 2 is refined into CE [17] 
* CE 3 is refined into CE [18] 
* CE 4 is refined into CE [19] 


### Cost equations --> "Loop" of n_eval1___7/3 
* CEs [17,18] --> Loop 16 
* CEs [19] --> Loop 17 

### Ranking functions of CR n_eval1___7(A,B,C) 

#### Partial ranking functions of CR n_eval1___7(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [20,21] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [21] --> Loop 18 
* CEs [20] --> Loop 19 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_eval2___4(A,B,C,D,E):
* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< A

  with precondition: [C=3,A>=1,B>=1] 

* Chain [12]: 0
  with precondition: [C=3,B>=1] 


#### Cost of chains of n_eval3___2(A,B,C,D,E):
* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< B

  with precondition: [C=3,A>=1,B>=1] 

* Chain [14]: 0
  with precondition: [C=3,A>=1,B>=0] 


#### Cost of chains of n_eval3___5(A,B,C):
* Chain [15]: 1*s(3)+1
  Such that:s(3) =< B

  with precondition: [C=3,A>=1,B>=A] 


#### Cost of chains of n_eval1___7(A,B,C):
* Chain [17]: 1*s(4)+2
  Such that:s(4) =< B

  with precondition: [A>=1,B>=A] 

* Chain [16]: 1*s(5)+2
  Such that:s(5) =< A

  with precondition: [B>=1,A>=B+1] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [19]: 1*s(6)+4
  Such that:s(6) =< B

  with precondition: [A>=1,B>=A] 

* Chain [18]: 1*s(7)+4
  Such that:s(7) =< A

  with precondition: [B>=1,A>=B+1] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [19] with precondition: [A>=1,B>=A] 
    - Upper bound: B+4 
    - Complexity: n 
* Chain [18] with precondition: [B>=1,A>=B+1] 
    - Upper bound: A+4 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C): max([B,A])+4 
Asymptotic class: n 
* Total analysis performed in 113 ms.


-- stats
realtime 0:00.15
usertime 0.14
systime 0.00

