MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_eval___2/5]
1. recursive  : [n_eval___1/3,n_eval___2_loop_cont/4]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_eval___1_loop_cont/2]
4. non_recursive  : [n_eval___3/3]
5. non_recursive  : [n_start/3]
6. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_eval___2/5
1. SCC is partially evaluated into n_eval___1/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_eval___3/3
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_eval___2/5 
* CE 7 is refined into CE [12] 
* CE 5 is refined into CE [13] 
* CE 6 is refined into CE [14] 


### Cost equations --> "Loop" of n_eval___2/5 
* CEs [14] --> Loop 8 
* CEs [12] --> Loop 9 
* CEs [13] --> Loop 10 

### Ranking functions of CR n_eval___2(A,B,C,D,E) 

#### Partial ranking functions of CR n_eval___2(A,B,C,D,E) 


### Specialization of cost equations n_eval___1/3 
* CE 8 is refined into CE [15,16] 
* CE 11 is refined into CE [17] 
* CE 9 is refined into CE [18,19] 
* CE 10 is refined into CE [20] 


### Cost equations --> "Loop" of n_eval___1/3 
* CEs [18] --> Loop 11 
* CEs [20] --> Loop 12 
* CEs [19] --> Loop 13 
* CEs [15,17] --> Loop 14 
* CEs [16] --> Loop 15 

### Ranking functions of CR n_eval___1(A,B,C) 

#### Partial ranking functions of CR n_eval___1(A,B,C) 
* Partial RF of phase [11,12,13]:
  - RF of loop [11:1]:
    -A+2*B-6 depends on loops [13:1] 
    2*B-6 depends on loops [13:1] 
  - RF of loop [12:1]:
    -2*A+2*B-1 depends on loops [11:1,13:1] 
    2*A+2*B-3 depends on loops [11:1,13:1] 
    2*B-2 depends on loops [13:1] 


### Specialization of cost equations n_eval___3/3 
* CE 2 is refined into CE [21,22] 
* CE 3 is refined into CE [23,24,25,26,27,28] 
* CE 4 is refined into CE [29,30,31] 


### Cost equations --> "Loop" of n_eval___3/3 
* CEs [31] --> Loop 16 
* CEs [22,24,25,26,27,28,30] --> Loop 17 
* CEs [21,23,29] --> Loop 18 

### Ranking functions of CR n_eval___3(A,B,C) 

#### Partial ranking functions of CR n_eval___3(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [32,33,34] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [34] --> Loop 19 
* CEs [33] --> Loop 20 
* CEs [32] --> Loop 21 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_eval___2(A,B,C,D,E):
* Chain [[8]]...: 1*it(8)+0
  with precondition: [3*A>=B+4,B>=A+1,C>=2,3>=C] 

* Chain [[8],10]: 1*it(8)+1
  with precondition: [C=2,B>=A+1,3*A>=B+4,B>=D+1,B+D>=2*E,3*E>=B+D+1] 

* Chain [[8],9]: 1*it(8)+0
  with precondition: [C=3,B>=A+1,3*A>=B+4] 

* Chain [10]: 1
  with precondition: [C=2,A=D,B>=A+1,3*A>=B+4,A+B>=2*E,3*E>=A+B+1] 

* Chain [9]: 0
  with precondition: [C=3,A>=2,2*B+1>=2*A,3*A>=B+4] 


#### Cost of chains of n_eval___1(A,B,C):
* Chain [[11,12,13]]...: 5*it(11)+0
  with precondition: [A+B>=2,B>=A+1,A>=0,C=3] 

* Chain [[11,12,13],15]...: 6*it(11)+1
  with precondition: [C=3,A>=0,B>=A+1,2*B>=A+7] 

* Chain [[11,12,13],14]: 6*aux(5)+0
  with precondition: [C=3,A>=0,B>=A+1,A+B>=2] 

* Chain [15]...: 1*s(9)+1
  with precondition: [C=3,A>=0,B>=A+1,2*B>=A+7] 

* Chain [14]: 1*aux(5)+0
  with precondition: [C=3] 


#### Cost of chains of n_eval___3(A,B,C):
* Chain [18]: 1*aux(8)+0
  with precondition: [A>=0,B>=A+1,A+B>=2] 

* Chain [17]...: 1*aux(9)+0
  with precondition: [A>=0,B>=A+1,2*B>=A+7] 

* Chain [16]...: 5*s(31)+1
  with precondition: [A>=0,B>=A+2,B+3*A>=4] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [21]: 1*s(32)+2
  with precondition: [A>=0,B>=A+1,A+B>=2] 

* Chain [20]...: 1*s(33)+2
  with precondition: [A>=0,B>=A+1,2*B>=A+7] 

* Chain [19]...: 5*s(34)+3
  with precondition: [A>=0,B>=A+2,B+3*A>=4] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [21] with precondition: [A>=0,B>=A+1,A+B>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [20]... with precondition: [A>=0,B>=A+1,2*B>=A+7] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [19]... with precondition: [A>=0,B>=A+2,B+3*A>=4] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of pyRinit(A,B,C): inf 
Asymptotic class: infinity 
* Total analysis performed in 250 ms.


-- stats
realtime 0:00.29
usertime 0.27
systime 0.01

