WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_div___2/5]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_end___1/3]
3. non_recursive  : [n_div___2_loop_cont/4]
4. non_recursive  : [n_div___3/3]
5. non_recursive  : [n_start/3]
6. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_div___2/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_div___2_loop_cont/4
4. SCC is partially evaluated into n_div___3/3
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_div___2/5 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 


### Cost equations --> "Loop" of n_div___2/5 
* CEs [12] --> Loop 10 
* CEs [10] --> Loop 11 
* CEs [11] --> Loop 12 

### Ranking functions of CR n_div___2(A,B,C,D,E) 
* RF of phase [10]: [-A+B,B-1]

#### Partial ranking functions of CR n_div___2(A,B,C,D,E) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    -A+B
    B-1


### Specialization of cost equations n_div___2_loop_cont/4 
* CE 9 is refined into CE [13] 
* CE 8 is refined into CE [14] 


### Cost equations --> "Loop" of n_div___2_loop_cont/4 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

### Ranking functions of CR n_div___2_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_div___2_loop_cont(A,B,C,D) 


### Specialization of cost equations n_div___3/3 
* CE 4 is refined into CE [15] 
* CE 2 is refined into CE [16,17,18] 
* CE 3 is refined into CE [19] 


### Cost equations --> "Loop" of n_div___3/3 
* CEs [15] --> Loop 15 
* CEs [16,17,18] --> Loop 16 
* CEs [19] --> Loop 17 

### Ranking functions of CR n_div___3(A,B,C) 

#### Partial ranking functions of CR n_div___3(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [20,21,22] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [22] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [20] --> Loop 20 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_div___2(A,B,C,D,E):
* Chain [[10],12]: 1*it(10)+1
  Such that:it(10) =< -A+B

  with precondition: [C=2,A>=1,B>=A+1] 

* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< -A+B

  with precondition: [C=3,A>=1,B>=A+1] 

* Chain [12]: 1
  with precondition: [C=2,B>=1,A>=B] 

* Chain [11]: 0
  with precondition: [C=3,A>=1,B>=1] 


#### Cost of chains of n_div___2_loop_cont(A,B,C,D):
* Chain [14]: 0
  with precondition: [A=2] 

* Chain [13]: 0
  with precondition: [A=3] 


#### Cost of chains of n_div___3(A,B,C):
* Chain [17]: 1
  with precondition: [0>=A] 

* Chain [16]: 2*s(2)+2
  Such that:aux(1) =< -2*A+B
s(2) =< aux(1)

  with precondition: [A>=1,B>=A+1] 

* Chain [15]: 1
  with precondition: [A>=B] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [20]: 3
  with precondition: [0>=A] 

* Chain [19]: 2*s(5)+4
  Such that:s(4) =< -2*A+B
s(5) =< s(4)

  with precondition: [A>=1,B>=A+1] 

* Chain [18]: 3
  with precondition: [A>=B] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [20] with precondition: [0>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [19] with precondition: [A>=1,B>=A+1] 
    - Upper bound: nat(-2*A+B)*2+4 
    - Complexity: n 
* Chain [18] with precondition: [A>=B] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C): nat(-2*A+B)*2+1+3 
Asymptotic class: n 
* Total analysis performed in 85 ms.


-- stats
realtime 0:00.12
usertime 0.11
systime 0.00

