WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_eval1___5/7,n_eval2___2/7]
1. recursive  : [n_eval1___4/7,n_eval1___5_loop_cont/8,n_eval2___6/7]
2. non_recursive  : [exit_location/1]
3. recursive  : [n_eval1___3/4,n_eval2___1/4]
4. non_recursive  : [n_eval1___3_loop_cont/2]
5. non_recursive  : [n_eval2___6_loop_cont/5]
6. non_recursive  : [n_eval1___7/4]
7. non_recursive  : [n_start/4]
8. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_eval1___5/7
1. SCC is partially evaluated into n_eval2___6/7
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_eval1___3/4
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_eval2___6_loop_cont/5
6. SCC is partially evaluated into n_eval1___7/4
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_eval1___5/7 
* CE 11 is refined into CE [15] 
* CE 12 is refined into CE [16] 
* CE 10 is refined into CE [17] 


### Cost equations --> "Loop" of n_eval1___5/7 
* CEs [17] --> Loop 13 
* CEs [15] --> Loop 14 
* CEs [16] --> Loop 15 

### Ranking functions of CR n_eval1___5(A,B,C,D,E,F,G) 
* RF of phase [13]: [A-B]

#### Partial ranking functions of CR n_eval1___5(A,B,C,D,E,F,G) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    A-B


### Specialization of cost equations n_eval2___6/7 
* CE 6 is refined into CE [18] 
* CE 3 is refined into CE [19] 
* CE 7 is refined into CE [20] 
* CE 4 is refined into CE [21,22] 
* CE 5 is refined into CE [23] 


### Cost equations --> "Loop" of n_eval2___6/7 
* CEs [22] --> Loop 16 
* CEs [23] --> Loop 17 
* CEs [21] --> Loop 18 
* CEs [18] --> Loop 19 
* CEs [19,20] --> Loop 20 

### Ranking functions of CR n_eval2___6(A,B,C,D,E,F,G) 
* RF of phase [16,17,18]: [A-C]

#### Partial ranking functions of CR n_eval2___6(A,B,C,D,E,F,G) 
* Partial RF of phase [16,17,18]:
  - RF of loop [16:1]:
    A/2-B/2-1
  - RF of loop [16:1,17:1,18:1]:
    A-C
  - RF of loop [18:1]:
    A-B-1


### Specialization of cost equations n_eval1___3/4 
* CE 14 is refined into CE [24] 
* CE 13 is refined into CE [25] 


### Cost equations --> "Loop" of n_eval1___3/4 
* CEs [25] --> Loop 21 
* CEs [24] --> Loop 22 

### Ranking functions of CR n_eval1___3(A,B,C,D) 
* RF of phase [21]: [A-B]

#### Partial ranking functions of CR n_eval1___3(A,B,C,D) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    A-B


### Specialization of cost equations n_eval2___6_loop_cont/5 
* CE 8 is refined into CE [26] 
* CE 9 is refined into CE [27] 


### Cost equations --> "Loop" of n_eval2___6_loop_cont/5 
* CEs [26] --> Loop 23 
* CEs [27] --> Loop 24 

### Ranking functions of CR n_eval2___6_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_eval2___6_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_eval1___7/4 
* CE 2 is refined into CE [28,29,30] 


### Cost equations --> "Loop" of n_eval1___7/4 
* CEs [28,29,30] --> Loop 25 

### Ranking functions of CR n_eval1___7(A,B,C,D) 

#### Partial ranking functions of CR n_eval1___7(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [31] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [31] --> Loop 26 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_eval1___5(A,B,C,D,E,F,G):
* Chain [[13],15]: 2*it(13)+0
  Such that:it(13) =< A-B

  with precondition: [D=2,A>=B+1,A>=C+1] 

* Chain [[13],14]: 2*it(13)+2
  Such that:it(13) =< -B+F

  with precondition: [D=3,A=E,C+1=G,F>=B+1,A>=C+1,A>=F+1] 

* Chain [15]: 0
  with precondition: [D=2,A>=B,A>=C+1] 

* Chain [14]: 2
  with precondition: [D=3,A=E,B=F,C+1=G,A>=B+1,A>=C+1] 


#### Cost of chains of n_eval2___6(A,B,C,D,E,F,G):
* Chain [[16,17,18],20]: 8*it(16)+2*it(17)+4*s(2)+1
  Such that:aux(5) =< A-B
aux(6) =< A-C
it(16) =< aux(5)
s(2) =< aux(5)
it(16) =< aux(6)
it(17) =< aux(6)

  with precondition: [D=2,A>=B+1,A>=C+1] 

* Chain [[16,17,18],19]: 4*it(16)+2*it(17)+4*it(18)+2*s(5)+1
  Such that:aux(1) =< A-B
aux(2) =< -B+F
it(16) =< -B/2+F/2
aux(7) =< A-C
it(18) =< aux(1)
s(5) =< aux(1)
it(18) =< aux(2)
s(5) =< aux(2)
it(16) =< aux(7)
it(17) =< aux(7)
it(18) =< aux(7)

  with precondition: [D=4,A=E+1,A=G,F>=B,A>=C+1,A>=F+1] 

* Chain [20]: 2*s(2)+1
  Such that:s(2) =< A-B

  with precondition: [D=2,A>=B+1] 

* Chain [19]: 1
  with precondition: [D=4,A=E+1,B=F,C=G,C>=A,A>=B+1] 


#### Cost of chains of n_eval1___3(A,B,C,D):
* Chain [[21],22]: 2*it(21)+0
  Such that:it(21) =< A-B

  with precondition: [D=2,C>=A+1,A>=B+1] 

* Chain [22]: 0
  with precondition: [D=2] 


#### Cost of chains of n_eval2___6_loop_cont(A,B,C,D,E):
* Chain [24]: 0
  with precondition: [A=2] 

* Chain [23]: 2*s(13)+0
  Such that:s(13) =< B-C

  with precondition: [A=4] 


#### Cost of chains of n_eval1___7(A,B,C,D):
* Chain [25]: 12*s(16)+16*s(17)+4*s(18)+2
  Such that:aux(10) =< A-B
aux(11) =< A-C
s(16) =< aux(10)
s(17) =< aux(10)
s(17) =< aux(11)
s(18) =< aux(11)

  with precondition: [A>=B+1] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [26]: 12*s(30)+16*s(31)+4*s(32)+4
  Such that:s(28) =< A-B
s(29) =< A-C
s(30) =< s(28)
s(31) =< s(28)
s(31) =< s(29)
s(32) =< s(29)

  with precondition: [A>=B+1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [26] with precondition: [A>=B+1] 
    - Upper bound: 28*A-28*B+4+nat(A-C)*4 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): 28*A-28*B+4+nat(A-C)*4 
Asymptotic class: n 
* Total analysis performed in 308 ms.


-- stats
realtime 0:00.37
usertime 0.35
systime 0.00

