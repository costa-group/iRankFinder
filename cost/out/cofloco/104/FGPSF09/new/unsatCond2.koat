MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_f___1/2]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_f___1_loop_cont/2]
3. non_recursive  : [n_start/2]
4. non_recursive  : [pyRinit/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_f___1/2
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_start/2
4. SCC is partially evaluated into pyRinit/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_f___1/2 
* CE 4 is refined into CE [5] 
* CE 3 is refined into CE [6] 


### Cost equations --> "Loop" of n_f___1/2 
* CEs [6] --> Loop 5 
* CEs [5] --> Loop 6 

### Ranking functions of CR n_f___1(A,B) 

#### Partial ranking functions of CR n_f___1(A,B) 


### Specialization of cost equations n_start/2 
* CE 2 is refined into CE [7,8] 


### Cost equations --> "Loop" of n_start/2 
* CEs [8] --> Loop 7 
* CEs [7] --> Loop 8 

### Ranking functions of CR n_start(A,B) 

#### Partial ranking functions of CR n_start(A,B) 


### Specialization of cost equations pyRinit/2 
* CE 1 is refined into CE [9,10] 


### Cost equations --> "Loop" of pyRinit/2 
* CEs [10] --> Loop 9 
* CEs [9] --> Loop 10 

### Ranking functions of CR pyRinit(A,B) 

#### Partial ranking functions of CR pyRinit(A,B) 


Computing Bounds
=====================================

#### Cost of chains of n_f___1(A,B):
* Chain [[5]]...: 1*it(5)+0
  with precondition: [B=2] 

* Chain [[5],6]: 1*it(5)+0
  with precondition: [B=2] 

* Chain [6]: 0
  with precondition: [B=2] 


#### Cost of chains of n_start(A,B):
* Chain [8]: 1*s(2)+1
  with precondition: [] 

* Chain [7]...: 1*s(3)+1
  with precondition: [] 


#### Cost of chains of pyRinit(A,B):
* Chain [10]: 1*s(4)+2
  with precondition: [] 

* Chain [9]...: 1*s(5)+2
  with precondition: [] 


Closed-form bounds of pyRinit(A,B): 
-------------------------------------
* Chain [10] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [9]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of pyRinit(A,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 21 ms.


-- stats
realtime 0:00.05
usertime 0.05
systime 0.00

