MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_eval___1/3]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_eval___1_loop_cont/2]
3. non_recursive  : [n_eval___2/3]
4. non_recursive  : [n_start/3]
5. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_eval___1/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_eval___2/3
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_eval___1/3 
* CE 6 is refined into CE [7] 
* CE 5 is refined into CE [8] 
* CE 4 is refined into CE [9] 


### Cost equations --> "Loop" of n_eval___1/3 
* CEs [8] --> Loop 6 
* CEs [9] --> Loop 7 
* CEs [7] --> Loop 8 

### Ranking functions of CR n_eval___1(A,B,C) 

#### Partial ranking functions of CR n_eval___1(A,B,C) 
* Partial RF of phase [6,7]:
  - RF of loop [6:1]:
    A+B-1 depends on loops [7:1] 
  - RF of loop [7:1]:
    A depends on loops [6:1] 


### Specialization of cost equations n_eval___2/3 
* CE 2 is refined into CE [10,11] 
* CE 3 is refined into CE [12,13] 


### Cost equations --> "Loop" of n_eval___2/3 
* CEs [11] --> Loop 9 
* CEs [13] --> Loop 10 
* CEs [10,12] --> Loop 11 

### Ranking functions of CR n_eval___2(A,B,C) 

#### Partial ranking functions of CR n_eval___2(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [14,15,16] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [16] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [14] --> Loop 14 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_eval___1(A,B,C):
* Chain [[6,7]]...: 2*it(6)+0
  with precondition: [B>=1,A>=1,C=2] 

* Chain [[6,7],8]: 2*it(6)+0
  with precondition: [C=2,A>=1,B>=1] 

* Chain [8]: 0
  with precondition: [C=2,A+1>=0,B>=1,A+B>=1] 


#### Cost of chains of n_eval___2(A,B,C):
* Chain [11]: 1*aux(12)+0
  with precondition: [A>=1,B>=1] 

* Chain [10]...: 2*s(4)+1
  with precondition: [A>=1,B>=3] 

* Chain [9]...: 2*s(5)+1
  with precondition: [A>=2,B>=1] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [14]: 1*s(6)+2
  with precondition: [A>=1,B>=1] 

* Chain [13]...: 2*s(7)+3
  with precondition: [A>=1,B>=3] 

* Chain [12]...: 2*s(8)+3
  with precondition: [A>=2,B>=1] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [14] with precondition: [A>=1,B>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [13]... with precondition: [A>=1,B>=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [12]... with precondition: [A>=2,B>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of pyRinit(A,B,C): inf 
Asymptotic class: infinity 
* Total analysis performed in 96 ms.


-- stats
realtime 0:00.22
usertime 0.13
systime 0.00

