WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_eval2___1/5]
1. recursive  : [n_eval1___2/3,n_eval2___1_loop_cont/4]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_eval1___2_loop_cont/2]
4. non_recursive  : [n_start/3]
5. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_eval2___1/5
1. SCC is partially evaluated into n_eval1___2/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_start/3
5. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_eval2___1/5 
* CE 8 is refined into CE [9] 
* CE 6 is refined into CE [10] 
* CE 7 is refined into CE [11] 


### Cost equations --> "Loop" of n_eval2___1/5 
* CEs [11] --> Loop 8 
* CEs [9] --> Loop 9 
* CEs [10] --> Loop 10 

### Ranking functions of CR n_eval2___1(A,B,C,D,E) 
* RF of phase [8]: [2*A-2*B-1]

#### Partial ranking functions of CR n_eval2___1(A,B,C,D,E) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    2*A-2*B-1


### Specialization of cost equations n_eval1___2/3 
* CE 3 is refined into CE [12] 
* CE 5 is refined into CE [13] 
* CE 4 is refined into CE [14,15] 


### Cost equations --> "Loop" of n_eval1___2/3 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [12,13] --> Loop 13 

### Ranking functions of CR n_eval1___2(A,B,C) 
* RF of phase [11]: [A-1]
* RF of phase [12]: [A+1]

#### Partial ranking functions of CR n_eval1___2(A,B,C) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    A-1
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    A+1


### Specialization of cost equations n_start/3 
* CE 2 is refined into CE [16] 


### Cost equations --> "Loop" of n_start/3 
* CEs [16] --> Loop 14 

### Ranking functions of CR n_start(A,B,C) 

#### Partial ranking functions of CR n_start(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [17] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [17] --> Loop 15 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_eval2___1(A,B,C,D,E):
* Chain [[8],10]: 1*it(8)+1
  Such that:it(8) =< -2*B+2*D+2

  with precondition: [C=2,A=D+1,B>=1,E>=2*B,E>=A,2*A>=E+2] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< 2*A-2*B

  with precondition: [C=3,B>=1,A>=B+1] 

* Chain [10]: 1
  with precondition: [C=2,A=D+1,B=E,A>=0,B>=1,B>=A] 

* Chain [9]: 0
  with precondition: [C=3,B>=1] 


#### Cost of chains of n_eval1___2(A,B,C):
* Chain [[12],13]: 2*it(12)+1*s(2)+1
  Such that:it(12) =< A+1
s(2) =< 2*A

  with precondition: [C=3,1>=A,A>=0] 

* Chain [[11],[12],13]: 2*it(11)+3*it(12)+1*s(5)+1
  Such that:it(11) =< A
aux(1) =< 2*A
aux(2) =< 2
it(12) =< aux(2)
s(5) =< it(11)*aux(1)

  with precondition: [C=3,A>=2] 

* Chain [[11],13]: 3*it(11)+1*s(5)+1
  Such that:aux(3) =< 2*A
it(11) =< aux(3)
s(5) =< it(11)*aux(3)

  with precondition: [C=3,A>=2] 

* Chain [13]: 1*s(2)+1
  Such that:s(2) =< 2*A

  with precondition: [C=3] 


#### Cost of chains of n_start(A,B,C):
* Chain [14]: 2*s(18)+2*s(19)+5*s(21)+3*s(22)+1*s(23)+1*s(24)+2
  Such that:s(17) =< 2
s(18) =< A
s(19) =< A+1
s(20) =< 2*A
s(21) =< s(20)
s(22) =< s(17)
s(23) =< s(18)*s(20)
s(24) =< s(21)*s(20)

  with precondition: [] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [15]: 2*s(26)+2*s(27)+5*s(29)+3*s(30)+1*s(31)+1*s(32)+3
  Such that:s(25) =< 2
s(26) =< A
s(27) =< A+1
s(28) =< 2*A
s(29) =< s(28)
s(30) =< s(25)
s(31) =< s(26)*s(28)
s(32) =< s(29)*s(28)

  with precondition: [] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [15] with precondition: [] 
    - Upper bound: nat(A)*2+9+nat(2*A)*nat(A)+nat(2*A)*5+nat(2*A)*nat(2*A)+nat(A+1)*2 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C): nat(A)*2+9+nat(2*A)*nat(A)+nat(2*A)*5+nat(2*A)*nat(2*A)+nat(A+1)*2 
Asymptotic class: n^2 
* Total analysis performed in 128 ms.


-- stats
realtime 0:00.19
usertime 0.15
systime 0.00

