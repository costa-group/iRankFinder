WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_merge___2/5]
1. recursive  : [n_merge___1/3,n_merge___2_loop_cont/4]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_merge___1_loop_cont/2]
4. non_recursive  : [n_merge___3/3]
5. non_recursive  : [n_start/3]
6. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_merge___2/5
1. SCC is partially evaluated into n_merge___1/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_merge___3/3
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_merge___2/5 
* CE 7 is refined into CE [12] 
* CE 5 is refined into CE [13] 
* CE 6 is refined into CE [14] 


### Cost equations --> "Loop" of n_merge___2/5 
* CEs [14] --> Loop 8 
* CEs [12] --> Loop 9 
* CEs [13] --> Loop 10 

### Ranking functions of CR n_merge___2(A,B,C,D,E) 
* RF of phase [8]: [A]

#### Partial ranking functions of CR n_merge___2(A,B,C,D,E) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    A


### Specialization of cost equations n_merge___1/3 
* CE 8 is refined into CE [15] 
* CE 11 is refined into CE [16] 
* CE 9 is refined into CE [17,18] 
* CE 10 is refined into CE [19] 


### Cost equations --> "Loop" of n_merge___1/3 
* CEs [19] --> Loop 11 
* CEs [18] --> Loop 12 
* CEs [17] --> Loop 13 
* CEs [15,16] --> Loop 14 

### Ranking functions of CR n_merge___1(A,B,C) 
* RF of phase [11,12,13]: [B]

#### Partial ranking functions of CR n_merge___1(A,B,C) 
* Partial RF of phase [11,12,13]:
  - RF of loop [11:1,12:1,13:1]:
    B
  - RF of loop [12:1]:
    A/2-1
  - RF of loop [13:1]:
    A-1


### Specialization of cost equations n_merge___3/3 
* CE 2 is refined into CE [20] 
* CE 3 is refined into CE [21,22] 
* CE 4 is refined into CE [23] 


### Cost equations --> "Loop" of n_merge___3/3 
* CEs [20,21,22,23] --> Loop 15 

### Ranking functions of CR n_merge___3(A,B,C) 

#### Partial ranking functions of CR n_merge___3(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [24] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [24] --> Loop 16 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_merge___2(A,B,C,D,E):
* Chain [[8],10]: 1*it(8)+1
  Such that:it(8) =< A-D

  with precondition: [C=2,B=E+1,B>=1,D>=1,A>=D+1] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< A

  with precondition: [C=3,A>=1,B>=1] 

* Chain [10]: 1
  with precondition: [C=2,A=D,B=E+1,A>=1,B>=1] 

* Chain [9]: 0
  with precondition: [C=3,A>=0,B>=1] 


#### Cost of chains of n_merge___1(A,B,C):
* Chain [[11,12,13],14]: 1*it(11)+4*it(12)+2*s(2)+1
  Such that:aux(5) =< A
aux(6) =< B
it(12) =< aux(5)
s(2) =< aux(5)
it(11) =< aux(6)
it(12) =< aux(6)

  with precondition: [C=3,A>=1,B>=1] 

* Chain [14]: 1*s(2)+1
  Such that:s(2) =< A

  with precondition: [C=3] 


#### Cost of chains of n_merge___3(A,B,C):
* Chain [15]: 11*s(12)+12*s(16)+3*s(17)+3
  Such that:aux(9) =< A
aux(10) =< B
s(12) =< aux(9)
s(16) =< aux(9)
s(17) =< aux(10)
s(16) =< aux(10)

  with precondition: [A>=1,B>=1] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [16]: 11*s(31)+12*s(32)+3*s(33)+5
  Such that:s(29) =< A
s(30) =< B
s(31) =< s(29)
s(32) =< s(29)
s(33) =< s(30)
s(32) =< s(30)

  with precondition: [A>=1,B>=1] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [16] with precondition: [A>=1,B>=1] 
    - Upper bound: 23*A+3*B+5 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C): 23*A+3*B+5 
Asymptotic class: n 
* Total analysis performed in 163 ms.


-- stats
realtime 0:00.23
usertime 0.19
systime 0.01

