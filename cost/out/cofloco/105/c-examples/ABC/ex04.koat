MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb3in___3/9]
1. recursive  : [n_evalfbb3in___3_loop_cont/10,n_evalfbb3in___5/9,n_evalfbb5in___6/9]
2. recursive  : [n_evalfbb3in___8/9,n_evalfbb5in___2/9,n_evalfbb5in___6_loop_cont/10,n_evalfbb7in___4/9]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [n_evalfstop___9/5]
5. non_recursive  : [n_evalfbb3in___8_loop_cont/6]
6. recursive  : [n_evalfbb5in___1/9,n_evalfbb7in___7/9]
7. non_recursive  : [n_evalfbb7in___7_loop_cont/6]
8. non_recursive  : [n_evalfbb5in___10/5]
9. non_recursive  : [n_evalfbb7in___11/5]
10. non_recursive  : [n_evalfstart/5]
11. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb3in___3/9
1. SCC is partially evaluated into n_evalfbb5in___6/9
2. SCC is partially evaluated into n_evalfbb3in___8/9
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_evalfbb3in___8_loop_cont/6
6. SCC is partially evaluated into n_evalfbb7in___7/9
7. SCC is partially evaluated into n_evalfbb7in___7_loop_cont/6
8. SCC is partially evaluated into n_evalfbb5in___10/5
9. SCC is partially evaluated into n_evalfbb7in___11/5
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb3in___3/9 
* CE 23 is refined into CE [24] 
* CE 22 is refined into CE [25] 
* CE 21 is refined into CE [26] 


### Cost equations --> "Loop" of n_evalfbb3in___3/9 
* CEs [26] --> Loop 21 
* CEs [24] --> Loop 22 
* CEs [25] --> Loop 23 

### Ranking functions of CR n_evalfbb3in___3(A,B,C,D,E,F,G,H,I) 
* RF of phase [21]: [B-D-1,C-D]

#### Partial ranking functions of CR n_evalfbb3in___3(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    B-D-1
    C-D


### Specialization of cost equations n_evalfbb5in___6/9 
* CE 19 is refined into CE [27] 
* CE 17 is refined into CE [28] 
* CE 20 is refined into CE [29] 
* CE 18 is refined into CE [30,31] 


### Cost equations --> "Loop" of n_evalfbb5in___6/9 
* CEs [31] --> Loop 24 
* CEs [30] --> Loop 25 
* CEs [27] --> Loop 26 
* CEs [28,29] --> Loop 27 

### Ranking functions of CR n_evalfbb5in___6(A,B,C,D,E,F,G,H,I) 
* RF of phase [24]: [B-C,B-D-1]

#### Partial ranking functions of CR n_evalfbb5in___6(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    B-C
    B-D-1


### Specialization of cost equations n_evalfbb3in___8/9 
* CE 8 is refined into CE [32,33,34] 
* CE 6 is refined into CE [35] 
* CE 9 is refined into CE [36] 
* CE 7 is refined into CE [37,38,39] 


### Cost equations --> "Loop" of n_evalfbb3in___8/9 
* CEs [38] --> Loop 28 
* CEs [37] --> Loop 29 
* CEs [39] --> Loop 30 
* CEs [33] --> Loop 31 
* CEs [35,36] --> Loop 32 
* CEs [32] --> Loop 33 
* CEs [34] --> Loop 34 

### Ranking functions of CR n_evalfbb3in___8(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_evalfbb3in___8(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_evalfbb3in___8_loop_cont/6 
* CE 11 is refined into CE [40] 
* CE 10 is refined into CE [41] 


### Cost equations --> "Loop" of n_evalfbb3in___8_loop_cont/6 
* CEs [40] --> Loop 35 
* CEs [41] --> Loop 36 

### Ranking functions of CR n_evalfbb3in___8_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalfbb3in___8_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalfbb7in___7/9 
* CE 14 is refined into CE [42] 
* CE 13 is refined into CE [43] 
* CE 12 is refined into CE [44] 


### Cost equations --> "Loop" of n_evalfbb7in___7/9 
* CEs [44] --> Loop 37 
* CEs [43] --> Loop 38 
* CEs [42] --> Loop 39 

### Ranking functions of CR n_evalfbb7in___7(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_evalfbb7in___7(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_evalfbb7in___7_loop_cont/6 
* CE 15 is refined into CE [45] 
* CE 16 is refined into CE [46] 


### Cost equations --> "Loop" of n_evalfbb7in___7_loop_cont/6 
* CEs [45] --> Loop 40 
* CEs [46] --> Loop 41 

### Ranking functions of CR n_evalfbb7in___7_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalfbb7in___7_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalfbb5in___10/5 
* CE 4 is refined into CE [47,48,49,50,51,52,53,54,55,56,57] 
* CE 5 is refined into CE [58,59,60,61] 


### Cost equations --> "Loop" of n_evalfbb5in___10/5 
* CEs [56,57] --> Loop 42 
* CEs [60,61] --> Loop 43 
* CEs [54,55] --> Loop 44 
* CEs [52,53] --> Loop 45 
* CEs [58,59] --> Loop 46 
* CEs [49,50] --> Loop 47 
* CEs [47,48,51] --> Loop 48 

### Ranking functions of CR n_evalfbb5in___10(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb5in___10(A,B,C,D,E) 


### Specialization of cost equations n_evalfbb7in___11/5 
* CE 2 is refined into CE [62,63,64,65,66,67] 
* CE 3 is refined into CE [68] 


### Cost equations --> "Loop" of n_evalfbb7in___11/5 
* CEs [62,63,68] --> Loop 49 
* CEs [67] --> Loop 50 
* CEs [66] --> Loop 51 
* CEs [65] --> Loop 52 
* CEs [64] --> Loop 53 

### Ranking functions of CR n_evalfbb7in___11(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalfbb7in___11(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [69,70,71,72,73] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [73] --> Loop 54 
* CEs [72] --> Loop 55 
* CEs [71] --> Loop 56 
* CEs [70] --> Loop 57 
* CEs [69] --> Loop 58 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb3in___3(A,B,C,D,E,F,G,H,I):
* Chain [[21],23]: 1*it(21)+1
  Such that:it(21) =< -D+I

  with precondition: [E=2,A=F,B=G,C+1=H,C=I,A>=0,D>=1,B>=C+1,C>=D+1] 

* Chain [[21],22]: 1*it(21)+0
  Such that:it(21) =< C-D

  with precondition: [E=3,A>=0,D>=1,B>=C+1,C>=D+1] 

* Chain [23]: 1
  with precondition: [E=2,D=C,A=F,B=G,D+1=H,D=I,A>=0,D>=1,B>=D+1] 

* Chain [22]: 0
  with precondition: [E=3,A>=0,D>=1,B>=C+1,C>=D] 


#### Cost of chains of n_evalfbb5in___6(A,B,C,D,E,F,G,H,I):
* Chain [27]: 1*s(2)+2
  Such that:s(2) =< C

  with precondition: [E=3,D+1=C,A>=0,D>=0,B>=D+1] 

* Chain [26]: 1
  with precondition: [E=4,C=B,C=D+1,A+1=F,C=G,C=H,C=I+1,A>=0,C>=1] 

* Chain [25,[24],27]: 4*it(24)+1*s(5)+5
  Such that:aux(3) =< B
it(24) =< aux(3)
s(5) =< it(24)*aux(3)

  with precondition: [C=1,D=0,E=3,A>=0,B>=3] 

* Chain [25,[24],26]: 3*it(24)+1*s(5)+4
  Such that:it(24) =< I
aux(1) =< I+1
s(5) =< it(24)*aux(1)

  with precondition: [C=1,D=0,E=4,A+1=F,B=G,B=H,B=I+1,A>=0,B>=3] 

* Chain [25,27]: 1*s(2)+5
  Such that:s(2) =< 2

  with precondition: [C=1,D=0,E=3,A>=0,B>=2] 

* Chain [25,26]: 4
  with precondition: [B=2,C=1,D=0,E=4,G=2,H=2,I=1,A+1=F,A>=0] 


#### Cost of chains of n_evalfbb3in___8(A,B,C,D,E,F,G,H,I):
* Chain [[30]]...: 4*it(30)+0
  with precondition: [A>=0,B=1,C=0,D=0] 

* Chain [[30],34]: 4*it(30)+3
  with precondition: [B=1,C=0,D=0,E=5,A>=0] 

* Chain [[30],32]: 4*it(30)+1*s(11)+5*s(13)+1*s(15)+6
  Such that:s(11) =< 2
aux(4) =< 1
s(13) =< aux(4)
s(15) =< s(13)*aux(4)

  with precondition: [B=1,C=0,D=0,E=3,A>=0] 

* Chain [[29]]...: 7*it(29)+0
  with precondition: [A>=0,B=2,C=0,D=0] 

* Chain [[29],33]: 7*it(29)+6
  with precondition: [B=2,C=0,D=0,E=5,A>=0] 

* Chain [[29],32]: 7*it(29)+5*s(11)+1*s(13)+1*s(15)+6
  Such that:s(13) =< 1
aux(5) =< 2
s(11) =< aux(5)
s(15) =< s(11)*aux(5)

  with precondition: [B=2,C=0,D=0,E=3,A>=0] 

* Chain [[28]]...: 11*it(28)+0
  with precondition: [A>=0,B>=3,C=0,D=0] 

* Chain [[28],32]: 11*it(28)+1*s(11)+1*s(13)+4*s(14)+1*s(15)+6
  Such that:s(13) =< 1
s(11) =< 2
s(12) =< B
s(14) =< s(12)
s(15) =< s(14)*s(12)

  with precondition: [C=0,D=0,E=3,A>=0,B>=3] 

* Chain [[28],31]: 11*it(28)+3*s(25)+1*s(27)+6
  Such that:aux(8) =< B
s(25) =< aux(8)
s(27) =< s(25)*aux(8)

  with precondition: [C=0,D=0,E=5,A>=0,B>=3] 

* Chain [34]: 3
  with precondition: [B=1,C=0,D=0,E=5,A>=0] 

* Chain [33]: 6
  with precondition: [B=2,C=0,D=0,E=5,A>=0] 

* Chain [32]: 1*s(11)+1*s(13)+4*s(14)+1*s(15)+6
  Such that:s(13) =< 1
s(11) =< 2
s(12) =< B
s(14) =< s(12)
s(15) =< s(14)*s(12)

  with precondition: [C=0,D=0,E=3,A>=0,B>=1] 

* Chain [31]: 3*s(25)+1*s(27)+6
  Such that:aux(8) =< B
s(25) =< aux(8)
s(27) =< s(25)*aux(8)

  with precondition: [C=0,D=0,E=5,A>=0,B>=3] 


#### Cost of chains of n_evalfbb3in___8_loop_cont(A,B,C,D,E,F):
* Chain [36]: 0
  with precondition: [A=3] 

* Chain [35]: 0
  with precondition: [A=5] 


#### Cost of chains of n_evalfbb7in___7(A,B,C,D,E,F,G,H,I):
* Chain [[37]]...: 2*it(37)+0
  with precondition: [A>=1,0>=B,C=0] 

* Chain [[37],39]: 2*it(37)+0
  with precondition: [C=0,E=3,0>=B,A>=1] 

* Chain [[37],38]: 2*it(37)+1
  with precondition: [C=0,E=5,0>=B,A>=1] 

* Chain [39]: 0
  with precondition: [C=0,E=3,0>=B,A>=1] 

* Chain [38]: 1
  with precondition: [C=0,E=5,0>=B,A>=1] 


#### Cost of chains of n_evalfbb7in___7_loop_cont(A,B,C,D,E,F):
* Chain [41]: 0
  with precondition: [A=3] 

* Chain [40]: 0
  with precondition: [A=5] 


#### Cost of chains of n_evalfbb5in___10(A,B,C,D,E):
* Chain [48]: 7*s(58)+3*s(59)+14*s(60)+4*s(61)+1*s(62)+27*s(63)+7
  Such that:s(55) =< 1
s(56) =< 2
aux(17) =< B
s(58) =< s(55)
s(59) =< s(56)
s(60) =< aux(17)
s(61) =< s(60)*aux(17)
s(62) =< s(58)*s(55)

  with precondition: [A=0,C=0,B>=1] 

* Chain [47]: 1*aux(18)+0
  with precondition: [A=0,B=2,C=0] 

* Chain [46]: 1*aux(19)+0
  with precondition: [A=0,C=0,0>=B] 

* Chain [45]...: 1*aux(20)+0
  with precondition: [A=0,B=1,C=0] 

* Chain [44]...: 1*aux(21)+0
  with precondition: [A=0,B=2,C=0] 

* Chain [43]...: 1*aux(22)+0
  with precondition: [A=0,C=0,0>=B] 

* Chain [42]...: 1*aux(23)+0
  with precondition: [A=0,C=0,B>=3] 


#### Cost of chains of n_evalfbb7in___11(A,B,C,D,E):
* Chain [53]...: 1*s(95)+1
  with precondition: [A=0,B=1] 

* Chain [52]...: 1*s(96)+1
  with precondition: [A=0,B=2] 

* Chain [51]...: 1*s(97)+1
  with precondition: [A=0,0>=B] 

* Chain [50]...: 1*s(98)+1
  with precondition: [A=0,B>=3] 

* Chain [49]: 7*s(102)+3*s(103)+14*s(104)+4*s(105)+1*s(106)+29*s(107)+8
  Such that:s(99) =< 1
s(100) =< 2
s(101) =< B
s(102) =< s(99)
s(103) =< s(100)
s(104) =< s(101)
s(105) =< s(104)*s(101)
s(106) =< s(102)*s(99)

  with precondition: [A=0] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [58]: 7*s(112)+3*s(113)+14*s(114)+4*s(115)+1*s(116)+29*s(117)+10
  Such that:s(109) =< 1
s(110) =< 2
s(111) =< B
s(112) =< s(109)
s(113) =< s(110)
s(114) =< s(111)
s(115) =< s(114)*s(111)
s(116) =< s(112)*s(109)

  with precondition: [] 

* Chain [57]...: 1*s(118)+3
  with precondition: [B=1] 

* Chain [56]...: 1*s(119)+3
  with precondition: [B=2] 

* Chain [55]...: 1*s(120)+3
  with precondition: [0>=B] 

* Chain [54]...: 1*s(121)+3
  with precondition: [B>=3] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [58] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [57]... with precondition: [B=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [56]... with precondition: [B=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [55]... with precondition: [0>=B] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [54]... with precondition: [B>=3] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of pyRinit(A,B,C,D,E): inf 
Asymptotic class: infinity 
* Total analysis performed in 785 ms.


-- stats
realtime 0:00.87
usertime 0.84
systime 0.00

