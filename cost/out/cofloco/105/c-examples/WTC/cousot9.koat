MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalcousot9bb3in___2/7,n_evalcousot9bbin___1/7]
1. recursive  : [n_evalcousot9bb3in___2_loop_cont/8,n_evalcousot9bb3in___4/7,n_evalcousot9bb3in___7/7,n_evalcousot9bbin___3/7,n_evalcousot9bbin___5/7]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalcousot9stop___9/4]
4. non_recursive  : [n_evalcousot9bb3in___7_loop_cont/5]
5. recursive  : [n_evalcousot9bb3in___8/7,n_evalcousot9bbin___6/7]
6. non_recursive  : [n_evalcousot9bb3in___8_loop_cont/5]
7. non_recursive  : [n_evalcousot9bbin___10/4]
8. non_recursive  : [n_evalcousot9bb3in___11/4]
9. non_recursive  : [n_evalcousot9start/4]
10. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalcousot9bb3in___2/7
1. SCC is partially evaluated into n_evalcousot9bb3in___7/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalcousot9bb3in___7_loop_cont/5
5. SCC is partially evaluated into n_evalcousot9bb3in___8/7
6. SCC is partially evaluated into n_evalcousot9bb3in___8_loop_cont/5
7. SCC is partially evaluated into n_evalcousot9bbin___10/4
8. SCC is partially evaluated into n_evalcousot9bb3in___11/4
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalcousot9bb3in___2/7 
* CE 19 is refined into CE [20] 
* CE 17 is refined into CE [21] 
* CE 18 is refined into CE [22] 


### Cost equations --> "Loop" of n_evalcousot9bb3in___2/7 
* CEs [22] --> Loop 19 
* CEs [20] --> Loop 20 
* CEs [21] --> Loop 21 

### Ranking functions of CR n_evalcousot9bb3in___2(A,B,C,D,E,F,G) 
* RF of phase [19]: [A]

#### Partial ranking functions of CR n_evalcousot9bb3in___2(A,B,C,D,E,F,G) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    A


### Specialization of cost equations n_evalcousot9bb3in___7/7 
* CE 7 is refined into CE [23] 
* CE 9 is refined into CE [24] 
* CE 8 is refined into CE [25] 
* CE 6 is refined into CE [26,27] 


### Cost equations --> "Loop" of n_evalcousot9bb3in___7/7 
* CEs [27] --> Loop 22 
* CEs [26] --> Loop 23 
* CEs [23,24] --> Loop 24 
* CEs [25] --> Loop 25 

### Ranking functions of CR n_evalcousot9bb3in___7(A,B,C,D,E,F,G) 
* RF of phase [22]: [B]

#### Partial ranking functions of CR n_evalcousot9bb3in___7(A,B,C,D,E,F,G) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    B


### Specialization of cost equations n_evalcousot9bb3in___7_loop_cont/5 
* CE 10 is refined into CE [28] 
* CE 11 is refined into CE [29] 


### Cost equations --> "Loop" of n_evalcousot9bb3in___7_loop_cont/5 
* CEs [28] --> Loop 26 
* CEs [29] --> Loop 27 

### Ranking functions of CR n_evalcousot9bb3in___7_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalcousot9bb3in___7_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalcousot9bb3in___8/7 
* CE 14 is refined into CE [30] 
* CE 13 is refined into CE [31] 
* CE 12 is refined into CE [32] 


### Cost equations --> "Loop" of n_evalcousot9bb3in___8/7 
* CEs [32] --> Loop 28 
* CEs [30] --> Loop 29 
* CEs [31] --> Loop 30 

### Ranking functions of CR n_evalcousot9bb3in___8(A,B,C,D,E,F,G) 
* RF of phase [28]: [A]

#### Partial ranking functions of CR n_evalcousot9bb3in___8(A,B,C,D,E,F,G) 
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    A


### Specialization of cost equations n_evalcousot9bb3in___8_loop_cont/5 
* CE 16 is refined into CE [33,34,35,36] 
* CE 15 is refined into CE [37] 


### Cost equations --> "Loop" of n_evalcousot9bb3in___8_loop_cont/5 
* CEs [33,34,35,36] --> Loop 31 
* CEs [37] --> Loop 32 

### Ranking functions of CR n_evalcousot9bb3in___8_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalcousot9bb3in___8_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalcousot9bbin___10/4 
* CE 5 is refined into CE [38,39,40] 
* CE 4 is refined into CE [41,42,43,44] 


### Cost equations --> "Loop" of n_evalcousot9bbin___10/4 
* CEs [42] --> Loop 33 
* CEs [41,43,44] --> Loop 34 
* CEs [38,39,40] --> Loop 35 

### Ranking functions of CR n_evalcousot9bbin___10(A,B,C,D) 

#### Partial ranking functions of CR n_evalcousot9bbin___10(A,B,C,D) 


### Specialization of cost equations n_evalcousot9bb3in___11/4 
* CE 2 is refined into CE [45,46] 
* CE 3 is refined into CE [47] 


### Cost equations --> "Loop" of n_evalcousot9bb3in___11/4 
* CEs [46] --> Loop 36 
* CEs [47] --> Loop 37 
* CEs [45] --> Loop 38 

### Ranking functions of CR n_evalcousot9bb3in___11(A,B,C,D) 

#### Partial ranking functions of CR n_evalcousot9bb3in___11(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [48,49,50] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [48,50] --> Loop 39 
* CEs [49] --> Loop 40 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalcousot9bb3in___2(A,B,C,D,E,F,G):
* Chain [[19],21]: 2*it(19)+2
  Such that:it(19) =< A

  with precondition: [D=3,C=E,B=F+1,C=G,A>=1,B>=1,C>=A+2,C>=B+1] 

* Chain [[19],20]: 2*it(19)+0
  Such that:it(19) =< A

  with precondition: [D=2,A>=1,B>=1,C>=A+2,C>=B+1] 

* Chain [21]: 2
  with precondition: [A=0,D=3,C=E,B=F+1,C=G,B>=1,C>=B+1] 

* Chain [20]: 0
  with precondition: [D=2,A>=0,B>=1,C>=A+2,C>=B+1] 


#### Cost of chains of n_evalcousot9bb3in___7(A,B,C,D,E,F,G):
* Chain [[22],25]: 6*it(22)+2*s(4)+1
  Such that:it(22) =< B
aux(1) =< C
s(4) =< it(22)*aux(1)

  with precondition: [D=4,A=C,A>=3,B>=1,A>=B+1] 

* Chain [[22],24]: 6*it(22)+2*s(4)+2*s(5)+4
  Such that:it(22) =< B
aux(2) =< C
s(5) =< aux(2)
s(4) =< it(22)*aux(2)

  with precondition: [D=2,A=C,A>=3,B>=1,A>=B+1] 

* Chain [25]: 1
  with precondition: [B=0,D=4,A=C,A>=1] 

* Chain [24]: 2*s(5)+4
  Such that:s(5) =< C

  with precondition: [D=2] 

* Chain [23,25]: 7
  with precondition: [A=2,B=1,C=2,D=4] 

* Chain [23,24]: 2*s(5)+10
  Such that:s(5) =< 2

  with precondition: [A=2,B=1,C=2,D=2] 


#### Cost of chains of n_evalcousot9bb3in___7_loop_cont(A,B,C,D,E):
* Chain [27]: 0
  with precondition: [A=2] 

* Chain [26]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalcousot9bb3in___8(A,B,C,D,E,F,G):
* Chain [[28],30]: 2*it(28)+2
  Such that:it(28) =< A

  with precondition: [D=3,B=C,B=E,B=F+1,B=G,A>=1,B>=1] 

* Chain [[28],29]: 2*it(28)+0
  Such that:it(28) =< A

  with precondition: [D=2,B=C,A>=1,B>=1] 

* Chain [30]: 2
  with precondition: [A=0,D=3,C=B,C=E,C=F+1,C=G,C>=1] 

* Chain [29]: 0
  with precondition: [D=2,C=B,A>=0,C>=1] 


#### Cost of chains of n_evalcousot9bb3in___8_loop_cont(A,B,C,D,E):
* Chain [32]: 0
  with precondition: [A=2] 

* Chain [31]: 2*s(13)+12*s(14)+4*s(16)+4*s(17)+10
  Such that:s(13) =< 2
aux(4) =< C
aux(5) =< D
s(14) =< aux(4)
s(16) =< aux(5)
s(17) =< s(14)*aux(5)

  with precondition: [A=3] 


#### Cost of chains of n_evalcousot9bbin___10(A,B,C,D):
* Chain [35]: 4*s(21)+16*s(24)+4*s(26)+4*s(27)+16*s(32)+4*s(34)+13
  Such that:aux(7) =< B
aux(6) =< C
aux(8) =< 2
aux(9) =< A
s(21) =< aux(8)
s(27) =< aux(9)
s(24) =< aux(6)
s(26) =< s(24)*aux(6)
s(32) =< aux(7)
s(34) =< s(32)*aux(7)

  with precondition: [C=B,A>=1,C>=1] 

* Chain [34]: 2*s(35)+10*s(36)+2*s(39)+6*s(40)+2*s(42)+11
  Such that:s(35) =< 2
aux(10) =< B
aux(11) =< C
s(36) =< aux(10)
s(39) =< s(36)*aux(10)
s(40) =< aux(11)
s(42) =< s(40)*aux(11)

  with precondition: [C=B,0>=A,C>=1] 

* Chain [33]: 8
  with precondition: [B=2,C=2,0>=A] 


#### Cost of chains of n_evalcousot9bb3in___11(A,B,C,D):
* Chain [38]: 2*s(50)+16*s(53)+4*s(54)+12
  Such that:s(50) =< 2
aux(12) =< C
s(53) =< aux(12)
s(54) =< s(53)*aux(12)

  with precondition: [C=B,0>=A,C>=1] 

* Chain [37]: 1
  with precondition: [C=B,0>=C] 

* Chain [36]: 4*s(61)+4*s(62)+32*s(63)+8*s(64)+14
  Such that:s(59) =< 2
s(60) =< A
aux(13) =< B
s(61) =< s(59)
s(62) =< s(60)
s(63) =< aux(13)
s(64) =< s(63)*aux(13)

  with precondition: [C=B,A>=1,C>=1] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [40]: 3
  with precondition: [0>=C] 

* Chain [39]: 6*s(67)+48*s(69)+12*s(70)+4*s(75)+16
  Such that:aux(14) =< 2
aux(15) =< C
s(67) =< aux(14)
s(69) =< aux(15)
s(70) =< s(69)*aux(15)

  with precondition: [C>=1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [40] with precondition: [0>=C] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [39] with precondition: [C>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of pyRinit(A,B,C,D): inf 
Asymptotic class: infinity 
* Total analysis performed in 422 ms.


-- stats
realtime 0:00.51
usertime 0.47
systime 0.00

