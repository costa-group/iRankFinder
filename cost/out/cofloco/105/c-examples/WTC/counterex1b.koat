MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [exit_location/1]
1. non_recursive  : [n_evalfstop___18/7]
2. non_recursive  : [n_evalfbb2in___15_loop_cont/8]
3. recursive  : [n_evalfbb6in___11/13,n_evalfbb7in___9/13]
4. recursive  : [n_evalfbb2in___5/13,n_evalfbb3in___4/13]
5. recursive  : [n_evalfbb2in___5_loop_cont/14,n_evalfbb2in___8/13,n_evalfbb3in___7/13,n_evalfbb6in___11_loop_cont/14,n_evalfbb6in___6/13,n_evalfbb7in___13/13,n_evalfbb8in___10/13]
6. recursive  : [n_evalfbb2in___3/13,n_evalfbb3in___2/13,n_evalfbb6in___1/13,n_evalfbb8in___12/13]
7. recursive  : [n_evalfbb2in___15/13,n_evalfbb3in___14/13,n_evalfbb6in___16/13,n_evalfbb7in___13_loop_cont/14,n_evalfbb8in___12_loop_cont/14]
8. non_recursive  : [n_evalfbb3in___17/7]
9. non_recursive  : [n_evalfbb2in___19/7]
10. non_recursive  : [n_evalfbb8in___20/7]
11. non_recursive  : [n_evalfstart/7]
12. non_recursive  : [pyRinit/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into n_evalfbb2in___15_loop_cont/8
3. SCC is partially evaluated into n_evalfbb6in___11/13
4. SCC is partially evaluated into n_evalfbb2in___5/13
5. SCC is partially evaluated into n_evalfbb7in___13/13
6. SCC is partially evaluated into n_evalfbb8in___12/13
7. SCC is partially evaluated into n_evalfbb2in___15/13
8. SCC is partially evaluated into n_evalfbb3in___17/7
9. SCC is partially evaluated into n_evalfbb2in___19/7
10. SCC is partially evaluated into n_evalfbb8in___20/7
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into pyRinit/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb2in___15_loop_cont/8 
* CE 32 is refined into CE [68] 
* CE 31 is refined into CE [69] 


### Cost equations --> "Loop" of n_evalfbb2in___15_loop_cont/8 
* CEs [68] --> Loop 38 
* CEs [69] --> Loop 39 

### Ranking functions of CR n_evalfbb2in___15_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR n_evalfbb2in___15_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations n_evalfbb6in___11/13 
* CE 60 is refined into CE [70] 
* CE 62 is refined into CE [71] 
* CE 63 is refined into CE [72] 
* CE 61 is refined into CE [73] 


### Cost equations --> "Loop" of n_evalfbb6in___11/13 
* CEs [73] --> Loop 40 
* CEs [70] --> Loop 41 
* CEs [71] --> Loop 42 
* CEs [72] --> Loop 43 

### Ranking functions of CR n_evalfbb6in___11(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [40]: [-E+F+1]

#### Partial ranking functions of CR n_evalfbb6in___11(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [40]:
  - RF of loop [40:1]:
    -E+F+1


### Specialization of cost equations n_evalfbb2in___5/13 
* CE 67 is refined into CE [74] 
* CE 64 is refined into CE [75] 
* CE 66 is refined into CE [76] 
* CE 65 is refined into CE [77] 


### Cost equations --> "Loop" of n_evalfbb2in___5/13 
* CEs [77] --> Loop 44 
* CEs [74] --> Loop 45 
* CEs [75] --> Loop 46 
* CEs [76] --> Loop 47 

### Ranking functions of CR n_evalfbb2in___5(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [44]: [C+1]

#### Partial ranking functions of CR n_evalfbb2in___5(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [44]:
  - RF of loop [44:1]:
    C+1


### Specialization of cost equations n_evalfbb7in___13/13 
* CE 22 is refined into CE [78,79] 
* CE 19 is refined into CE [80,81] 
* CE 20 is refined into CE [82] 
* CE 21 is refined into CE [83] 
* CE 25 is refined into CE [84] 
* CE 23 is refined into CE [85,86] 
* CE 24 is refined into CE [87] 
* CE 13 is refined into CE [88,89] 
* CE 14 is refined into CE [90] 
* CE 15 is refined into CE [91,92] 
* CE 16 is refined into CE [93] 
* CE 17 is refined into CE [94,95,96,97,98,99,100,101] 
* CE 18 is refined into CE [102,103,104,105] 


### Cost equations --> "Loop" of n_evalfbb7in___13/13 
* CEs [93] --> Loop 48 
* CEs [90] --> Loop 49 
* CEs [101] --> Loop 50 
* CEs [92] --> Loop 51 
* CEs [89] --> Loop 52 
* CEs [100] --> Loop 53 
* CEs [105] --> Loop 54 
* CEs [104] --> Loop 55 
* CEs [96] --> Loop 56 
* CEs [97] --> Loop 57 
* CEs [91] --> Loop 58 
* CEs [88] --> Loop 59 
* CEs [99] --> Loop 60 
* CEs [103] --> Loop 61 
* CEs [95] --> Loop 62 
* CEs [98] --> Loop 63 
* CEs [102] --> Loop 64 
* CEs [94] --> Loop 65 
* CEs [79] --> Loop 66 
* CEs [78] --> Loop 67 
* CEs [82] --> Loop 68 
* CEs [80,81,83,84] --> Loop 69 
* CEs [85,86,87] --> Loop 70 

### Ranking functions of CR n_evalfbb7in___13(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65]: [B,D+1]

#### Partial ranking functions of CR n_evalfbb7in___13(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65]:
  - RF of loop [48:1,49:1,50:1,51:1,52:1,53:1,54:1,55:1,56:1,57:1,58:1,59:1,60:1,61:1,62:1,63:1,64:1,65:1]:
    B
    D+1
  - RF of loop [51:1,52:1]:
    -C/2+F/2-1/2 depends on loops [50:1,54:1,55:1,57:1,60:1,61:1,62:1,64:1] 
    -E/2+F/2-1/2 depends on loops [50:1,54:1,55:1,57:1,60:1,61:1,62:1,64:1] 
  - RF of loop [52:1]:
    -C/2-1 depends on loops [50:1,54:1,55:1,57:1,60:1,61:1,62:1,64:1] 
    -E/2-1 depends on loops [50:1,54:1,55:1,57:1,60:1,61:1,62:1,64:1] 
  - RF of loop [53:1]:
    -C+F-1 depends on loops [50:1,54:1,55:1,57:1,60:1,61:1,62:1,64:1] 
    -E+F-1 depends on loops [50:1,54:1,55:1,57:1,60:1,61:1,62:1,64:1] 
  - RF of loop [54:1]:
    C/2-1/2 depends on loops [50:1,51:1,52:1,53:1,58:1,59:1,60:1,63:1] 
    E/2-1/2 depends on loops [50:1,51:1,52:1,53:1,58:1,59:1,60:1,63:1] 
  - RF of loop [55:1,57:1]:
    C depends on loops [50:1,51:1,52:1,53:1,58:1,59:1,60:1,63:1] 
    E depends on loops [50:1,51:1,52:1,53:1,58:1,59:1,60:1,63:1] 
  - RF of loop [58:1,59:1]:
    -C+F depends on loops [50:1,54:1,55:1,57:1,60:1,61:1,62:1,64:1] 
    -E+F depends on loops [50:1,54:1,55:1,57:1,60:1,61:1,62:1,64:1] 
  - RF of loop [59:1,63:1]:
    -C-1 depends on loops [50:1,54:1,55:1,57:1,60:1,61:1,62:1,64:1] 
    -E-1 depends on loops [50:1,54:1,55:1,57:1,60:1,61:1,62:1,64:1] 
  - RF of loop [61:1]:
    C/2 depends on loops [50:1,51:1,52:1,53:1,58:1,59:1,60:1,63:1] 
    E/2 depends on loops [50:1,51:1,52:1,53:1,58:1,59:1,60:1,63:1] 
  - RF of loop [62:1,64:1]:
    C+1 depends on loops [50:1,51:1,52:1,53:1,58:1,59:1,60:1,63:1] 
    E+1 depends on loops [50:1,51:1,52:1,53:1,58:1,59:1,60:1,63:1] 


### Specialization of cost equations n_evalfbb8in___12/13 
* CE 28 is refined into CE [106] 
* CE 30 is refined into CE [107] 
* CE 29 is refined into CE [108] 
* CE 27 is refined into CE [109] 
* CE 26 is refined into CE [110] 


### Cost equations --> "Loop" of n_evalfbb8in___12/13 
* CEs [109] --> Loop 71 
* CEs [110] --> Loop 72 
* CEs [106] --> Loop 73 
* CEs [107] --> Loop 74 
* CEs [108] --> Loop 75 

### Ranking functions of CR n_evalfbb8in___12(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [71]: [B+1,D+1]
* RF of phase [72]: [B+1,D+1]

#### Partial ranking functions of CR n_evalfbb8in___12(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [71]:
  - RF of loop [71:1]:
    B+1
    D+1
* Partial RF of phase [72]:
  - RF of loop [72:1]:
    B+1
    D+1


### Specialization of cost equations n_evalfbb2in___15/13 
* CE 39 is refined into CE [111,112] 
* CE 37 is refined into CE [113,114,115,116,117,118,119,120] 
* CE 45 is refined into CE [121,122] 
* CE 38 is refined into CE [123,124,125,126,127,128,129,130] 
* CE 46 is refined into CE [131,132] 
* CE 40 is refined into CE [133,134] 
* CE 34 is refined into CE [135,136,137,138] 
* CE 48 is refined into CE [139] 
* CE 33 is refined into CE [140,141,142,143] 
* CE 35 is refined into CE [144] 
* CE 36 is refined into CE [145] 
* CE 47 is refined into CE [146] 
* CE 50 is refined into CE [147] 
* CE 43 is refined into CE [148,149] 
* CE 41 is refined into CE [150,151,152,153,154,155,156,157] 
* CE 49 is refined into CE [158] 
* CE 42 is refined into CE [159,160,161,162,163,164,165,166] 
* CE 44 is discarded (unfeasible) 


### Cost equations --> "Loop" of n_evalfbb2in___15/13 
* CEs [149] --> Loop 76 
* CEs [158] --> Loop 77 
* CEs [151,153,154,155,156,157] --> Loop 78 
* CEs [148] --> Loop 79 
* CEs [152] --> Loop 80 
* CEs [150] --> Loop 81 
* CEs [161] --> Loop 82 
* CEs [160,162,163,164,165,166] --> Loop 83 
* CEs [159] --> Loop 84 
* CEs [112] --> Loop 85 
* CEs [114,116,117,118,119,120,122] --> Loop 86 
* CEs [134] --> Loop 87 
* CEs [145] --> Loop 88 
* CEs [124,126,127,128,129,130,132] --> Loop 89 
* CEs [135,136,137,138,139,140,141,142,143,144,146,147] --> Loop 90 
* CEs [111] --> Loop 91 
* CEs [113,115,121] --> Loop 92 
* CEs [133] --> Loop 93 
* CEs [123,125,131] --> Loop 94 

### Ranking functions of CR n_evalfbb2in___15(A,B,C,D,E,F,G,H,I,J,K,L,M) 

#### Partial ranking functions of CR n_evalfbb2in___15(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [76,77,78,79,80,81,82,83,84]:
  - RF of loop [76:1,77:1,79:1]:
    C+1 depends on loops [78:1,80:1,82:1,83:1] 
  - RF of loop [76:1,78:1,83:1]:
    B/2-1/2
  - RF of loop [76:1,79:1]:
    A depends on loops [78:1,80:1,82:1,83:1] 
    A-F-1 depends on loops [78:1,80:1,82:1,83:1] 
    C-F depends on loops [78:1,80:1,82:1,83:1] 
  - RF of loop [79:1,80:1,81:1,82:1,84:1]:
    B
  - RF of loop [80:1]:
    -C+F depends on loops [76:1,77:1,79:1] 
  - RF of loop [82:1]:
    -C depends on loops [76:1,77:1,79:1] 


### Specialization of cost equations n_evalfbb3in___17/7 
* CE 51 is refined into CE [167,168,169,170] 
* CE 52 is refined into CE [171] 
* CE 53 is refined into CE [172,173,174,175,176,177,178,179] 
* CE 54 is refined into CE [180,181] 
* CE 55 is refined into CE [182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197] 
* CE 56 is refined into CE [198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217] 
* CE 57 is refined into CE [218,219] 
* CE 58 is refined into CE [220] 
* CE 59 is refined into CE [221,222,223,224,225,226,227,228,229,230] 


### Cost equations --> "Loop" of n_evalfbb3in___17/7 
* CEs [228] --> Loop 95 
* CEs [167] --> Loop 96 
* CEs [201,205,207,211,215,217,230] --> Loop 97 
* CEs [172,174,218] --> Loop 98 
* CEs [224] --> Loop 99 
* CEs [204,209,214] --> Loop 100 
* CEs [198,203,208,213,226] --> Loop 101 
* CEs [173,182,183,184,185,199,200,210,223,227] --> Loop 102 
* CEs [222] --> Loop 103 
* CEs [168,169,170,171,175,176,177,178,179,180,181,186,187,188,189,190,191,192,193,194,195,196,197,202,206,212,216,219,220,221,225,229] --> Loop 104 

### Ranking functions of CR n_evalfbb3in___17(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_evalfbb3in___17(A,B,C,D,E,F,G) 


### Specialization of cost equations n_evalfbb2in___19/7 
* CE 12 is refined into CE [231,232,233,234,235,236,237] 
* CE 5 is refined into CE [238] 
* CE 7 is refined into CE [239,240] 
* CE 9 is discarded (unfeasible) 
* CE 4 is refined into CE [241,242,243,244] 
* CE 6 is refined into CE [245,246,247,248,249,250,251,252,253,254,255,256] 
* CE 8 is refined into CE [257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288] 
* CE 10 is refined into CE [289,290] 
* CE 11 is refined into CE [291] 


### Cost equations --> "Loop" of n_evalfbb2in___19/7 
* CEs [237] --> Loop 105 
* CEs [236] --> Loop 106 
* CEs [246] --> Loop 107 
* CEs [268,269,272,273,276,277,280,281,284,285,288] --> Loop 108 
* CEs [265] --> Loop 109 
* CEs [235] --> Loop 110 
* CEs [234] --> Loop 111 
* CEs [238,239,240] --> Loop 112 
* CEs [245,248,289] --> Loop 113 
* CEs [233] --> Loop 114 
* CEs [231,232] --> Loop 115 
* CEs [241,242,243,244,247,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,267,270,271,274,275,278,279,282,283,286,287,290,291] --> Loop 116 

### Ranking functions of CR n_evalfbb2in___19(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_evalfbb2in___19(A,B,C,D,E,F,G) 


### Specialization of cost equations n_evalfbb8in___20/7 
* CE 2 is refined into CE [292,293,294,295,296,297,298,299,300,301] 
* CE 3 is refined into CE [302] 


### Cost equations --> "Loop" of n_evalfbb8in___20/7 
* CEs [301] --> Loop 117 
* CEs [302] --> Loop 118 
* CEs [300] --> Loop 119 
* CEs [299] --> Loop 120 
* CEs [298] --> Loop 121 
* CEs [297] --> Loop 122 
* CEs [293,296] --> Loop 123 
* CEs [295] --> Loop 124 
* CEs [292,294] --> Loop 125 

### Ranking functions of CR n_evalfbb8in___20(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_evalfbb8in___20(A,B,C,D,E,F,G) 


### Specialization of cost equations pyRinit/7 
* CE 1 is refined into CE [303,304,305,306,307,308,309] 


### Cost equations --> "Loop" of pyRinit/7 
* CEs [309] --> Loop 126 
* CEs [307] --> Loop 127 
* CEs [308] --> Loop 128 
* CEs [303,306] --> Loop 129 
* CEs [304,305] --> Loop 130 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb2in___15_loop_cont(A,B,C,D,E,F,G,H):
* Chain [39]: 0
  with precondition: [A=3] 

* Chain [38]: 0
  with precondition: [A=6] 


#### Cost of chains of n_evalfbb6in___11(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[40],43]: 2*it(40)+0
  Such that:it(40) =< -E+F+1

  with precondition: [G=3,D+1=B,D+1>=0,A>=C,E>=C+1,F>=E] 

* Chain [[40],42]: 2*it(40)+1
  Such that:it(40) =< -E+L

  with precondition: [G=4,B=D+1,F+1=H,B=I+1,C=J,B=K+1,F+1=L,F=M,B>=0,A>=C,E>=C+1,F>=E] 

* Chain [[40],41]: 2*it(40)+2
  Such that:it(40) =< -E+L

  with precondition: [G=5,B=D+1,B=I+1,C=J,B=K+1,H=L,F=M,B>=0,A>=C,E>=C+1,H>=E+1,F>=H] 

* Chain [43]: 0
  with precondition: [G=3,D+1=B,D+1>=0,A>=C,E>=C+1,F+1>=E] 

* Chain [42]: 1
  with precondition: [G=4,D+1=B,E=F+1,E=H,D=I,C=J,D=K,E=L,E=M+1,D+1>=0,A>=C,E>=C+1] 

* Chain [41]: 2
  with precondition: [G=5,D+1=B,E=H,D=I,C=J,D=K,E=L,F=M,D+1>=0,A>=C,E>=C+1,F>=E] 


#### Cost of chains of n_evalfbb2in___5(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[44],47]: 2*it(44)+1
  Such that:it(44) =< C+1

  with precondition: [G=2,J+1=0,L+1=0,B=D,A=E,A=H,B=I,B=K+1,F=M,B>=0,C>=0,F>=A,A>=C+1] 

* Chain [[44],46]: 2*it(44)+2
  Such that:it(44) =< C-L

  with precondition: [G=2,B=D,A=E,A=H,B=I,B=K+1,J=L,F=M,B>=0,J>=0,F>=A,A>=C+1,C>=J+1] 

* Chain [[44],45]: 2*it(44)+0
  Such that:it(44) =< C+1

  with precondition: [G=3,B=D,A=E,B>=0,C>=0,F>=A,A>=C+1] 

* Chain [47]: 1
  with precondition: [C+1=0,G=2,J+1=0,L+1=0,E=A,D=B,E=H,D=I,D=K+1,F=M,D>=0,E>=0,F>=E] 

* Chain [46]: 2
  with precondition: [G=2,E=A,D=B,E=H,D=I,C=J,D=K+1,C=L,F=M,C>=0,D>=0,E>=C+1,F>=E] 

* Chain [45]: 0
  with precondition: [G=3,E=A,D=B,C+1>=0,D>=0,E>=C+1,F>=E] 


#### Cost of chains of n_evalfbb7in___13(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],70]: 129*it(48)+4*it([70])+22*s(28)+2*s(29)+2*s(36)+0
  Such that:it([70]) =< 1
aux(1492) =< B
aux(1502) =< D+1
aux(1510) =< F
it(48) =< aux(1492)
it(48) =< aux(1502)
aux(1005) =< aux(1510)
s(29) =< it(48)*aux(1510)
s(36) =< it(48)*aux(1005)

  with precondition: [G=6,D+1=B,C=E,D>=0,A>=C,F>=C] 

* Chain [[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],69]: 129*it(48)+6*it([69])+24*s(28)+2*s(29)+2*s(36)+2*s(45)+2*s(47)+0
  Such that:it([69]) =< 1
aux(2298) =< B
aux(2308) =< D+1
aux(2316) =< F
it(48) =< aux(2298)
it(48) =< aux(2308)
aux(1954) =< aux(2316)+1
aux(1782) =< aux(2316)
s(29) =< it(48)*aux(2316)
s(47) =< it([69])*aux(1782)
s(45) =< it([69])*aux(1954)
s(36) =< it(48)*aux(1782)

  with precondition: [G=3,D+1=B,C=E,D>=0,A>=C,F>=C] 

* Chain [[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],68]: 129*it(48)+20*s(28)+2*s(29)+2*s(36)+2*s(49)+4
  Such that:aux(2317) =< B
aux(2318) =< F
s(49) =< aux(2318)
it(48) =< aux(2317)
aux(267) =< aux(2318)
s(29) =< it(48)*aux(2318)
s(36) =< it(48)*aux(267)

  with precondition: [G=3,D+1=B,C=E,D>=1,F>=0,A>=C,F>=C] 

* Chain [[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],67]: 129*it(48)+20*s(28)+2*s(29)+2*s(36)+2
  Such that:aux(733) =< F
aux(2319) =< D+1
aux(2320) =< D-K
it(48) =< aux(2319)
it(48) =< aux(2320)
aux(267) =< aux(733)
s(29) =< it(48)*aux(733)
s(36) =< it(48)*aux(267)

  with precondition: [G=4,D+1=B,C=E,F+1=H,F=J,I=K,F+1=L,F=M,I+1>=0,A>=C,F>=C,D>=I+1] 

* Chain [[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],66]: 129*it(48)+20*s(28)+2*s(29)+2*s(36)+2*s(50)+2
  Such that:aux(733) =< F
s(50) =< F-J
aux(2321) =< D+1
aux(2322) =< D-K
it(48) =< aux(2321)
it(48) =< aux(2322)
aux(267) =< aux(733)
s(29) =< it(48)*aux(733)
s(36) =< it(48)*aux(267)

  with precondition: [G=4,D+1=B,C=E,F+1=H,I=K,F+1=L,F=M,I+1>=0,A>=C,F>=C,D>=I+1,F>=J+1] 

* Chain [70]: 2*s(3)+4
  Such that:s(3) =< -E+F

  with precondition: [B=0,D+1=0,G=6,E=C,A>=E,F>=E] 

* Chain [69]: 2*s(41)+2*s(42)+2*s(43)+2*s(44)+6
  Such that:s(42) =< -C+F
s(44) =< -E+F
s(41) =< E+1
s(43) =< F

  with precondition: [G=3,D+1=B,E=C,D+1>=0,A>=E,F>=E] 

* Chain [68]: 2*s(49)+4
  Such that:s(49) =< C

  with precondition: [G=3,D+1=B,E=C,D>=0,E>=0,A>=E,F>=E] 

* Chain [67]: 2
  with precondition: [G=4,D+1=B,E=C,E=F,E+1=H,D=I,E=J,D=K,E+1=L,E=M,D+1>=0,A>=E] 

* Chain [66]: 2*s(50)+2
  Such that:s(50) =< -E+F

  with precondition: [G=4,D+1=B,E=C,F+1=H,D=I,E=J,D=K,F+1=L,F=M,D+1>=0,A>=E,F>=E+1] 


#### Cost of chains of n_evalfbb8in___12(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[72],75]: 3*it(72)+1
  Such that:it(72) =< D+1

  with precondition: [G=6,B=D,A=E,0>=A+1,B>=0,A>=C,A>=F+1] 

* Chain [[72],74]: 3*it(72)+0
  Such that:it(72) =< D+1

  with precondition: [G=3,B=D,A=E,0>=A+1,B>=0,A>=C,A>=F+1] 

* Chain [[71],75]: 4*it(71)+1
  Such that:it(71) =< D+1

  with precondition: [G=6,B=D,A=E,A>=0,B>=0,A>=C,A>=F+1] 

* Chain [[71],74]: 4*it(71)+0
  Such that:it(71) =< B+1

  with precondition: [G=3,B=D,A=E,A>=0,B>=0,A>=C,A>=F+1] 

* Chain [[71],73]: 4*it(71)+3
  Such that:it(71) =< B-K

  with precondition: [G=7,B=D,A=E,A=H,A=J+1,I=K,A=L,F=M,A>=0,I>=0,A>=C,A>=F+1,B>=I+1] 

* Chain [75]: 1
  with precondition: [B+1=0,D+1=0,G=6,A=E,A>=C,A>=F+1] 

* Chain [74]: 0
  with precondition: [G=3] 

* Chain [73]: 3
  with precondition: [G=7,B=D,A=E,A=H,B=I,A=J+1,B=K,A=L,F=M,A>=0,B>=0,A>=C,A>=F+1] 


#### Cost of chains of n_evalfbb2in___15(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[76,77,78,79,80,81,82,83,84],94]: 6*it(76)+174*it(77)+15*it(78)+72*it(79)+4*s(78)+2*s(198)+516*s(199)+4*s(200)+4*s(201)+4*s(203)+4*s(204)+2*s(210)+516*s(211)+2*s(212)+2*s(213)+6*s(215)+6*s(216)+6
  Such that:aux(2382) =< B+F
s(125) =< F
aux(2325) =< F+1
aux(2465) =< B
aux(2466) =< B/2
s(78) =< aux(2325)
it(78) =< aux(2465)
it(79) =< aux(2465)
it(76) =< aux(2466)
it(78) =< aux(2466)
aux(2420) =< s(125)+1
aux(2433) =< aux(2465)
aux(2389) =< s(125)
s(198) =< it(78)*aux(2382)
s(206) =< it(78)*aux(2465)
s(210) =< it(78)*aux(2420)
s(220) =< it(78)*aux(2433)
s(211) =< s(220)
s(211) =< aux(2465)
s(128) =< aux(2420)
s(212) =< s(211)*aux(2420)
s(213) =< s(211)*s(128)
s(189) =< aux(2389)
s(215) =< s(211)*aux(2389)
s(216) =< s(211)*s(189)
s(199) =< s(206)
s(199) =< aux(2465)
s(200) =< s(199)*aux(2420)
s(201) =< s(199)*s(128)
s(203) =< s(199)*s(125)
s(204) =< s(199)*aux(2389)

  with precondition: [G=6,B>=0,C+1>=0,F+1>=0,A>=C+1,B+C>=0] 

* Chain [[76,77,78,79,80,81,82,83,84],93]: 6*it(76)+174*it(77)+15*it(78)+72*it(79)+2*s(198)+516*s(199)+4*s(200)+4*s(201)+4*s(203)+4*s(204)+2*s(210)+516*s(211)+2*s(212)+2*s(213)+6*s(215)+6*s(216)+3
  Such that:aux(2382) =< B+F
s(125) =< F
aux(2467) =< B
aux(2468) =< B/2
it(78) =< aux(2467)
it(79) =< aux(2467)
it(76) =< aux(2468)
it(78) =< aux(2468)
aux(2420) =< s(125)+1
aux(2433) =< aux(2467)
aux(2389) =< s(125)
s(198) =< it(78)*aux(2382)
s(206) =< it(78)*aux(2467)
s(210) =< it(78)*aux(2420)
s(220) =< it(78)*aux(2433)
s(211) =< s(220)
s(211) =< aux(2467)
s(128) =< aux(2420)
s(212) =< s(211)*aux(2420)
s(213) =< s(211)*s(128)
s(189) =< aux(2389)
s(215) =< s(211)*aux(2389)
s(216) =< s(211)*s(189)
s(199) =< s(206)
s(199) =< aux(2467)
s(200) =< s(199)*aux(2420)
s(201) =< s(199)*s(128)
s(203) =< s(199)*s(125)
s(204) =< s(199)*aux(2389)

  with precondition: [G=6,0>=F+2,B>=0,C>=0,A>=C+1] 

* Chain [[76,77,78,79,80,81,82,83,84],92]: 6*it(76)+174*it(77)+15*it(78)+72*it(79)+2*s(198)+516*s(199)+4*s(200)+4*s(201)+4*s(203)+4*s(204)+2*s(210)+516*s(211)+2*s(212)+2*s(213)+6*s(215)+6*s(216)+4*s(221)+7
  Such that:aux(2382) =< B+F
aux(2470) =< B
aux(2471) =< B/2
aux(2472) =< F
s(221) =< aux(2472)
it(78) =< aux(2470)
it(79) =< aux(2470)
it(76) =< aux(2471)
it(78) =< aux(2471)
aux(2420) =< aux(2472)+1
aux(2433) =< aux(2470)
aux(2389) =< aux(2472)
s(198) =< it(78)*aux(2382)
s(206) =< it(78)*aux(2470)
s(210) =< it(78)*aux(2420)
s(220) =< it(78)*aux(2433)
s(211) =< s(220)
s(211) =< aux(2470)
s(128) =< aux(2420)
s(212) =< s(211)*aux(2420)
s(213) =< s(211)*s(128)
s(189) =< aux(2389)
s(215) =< s(211)*aux(2389)
s(216) =< s(211)*s(189)
s(199) =< s(206)
s(199) =< aux(2470)
s(200) =< s(199)*aux(2420)
s(201) =< s(199)*s(128)
s(203) =< s(199)*aux(2472)
s(204) =< s(199)*aux(2389)

  with precondition: [G=6,B>=0,C+1>=0,F>=0,A>=C+1,C+2*B>=1] 

* Chain [[76,77,78,79,80,81,82,83,84],91]: 6*it(76)+174*it(77)+15*it(78)+72*it(79)+2*s(198)+516*s(199)+4*s(200)+4*s(201)+4*s(203)+4*s(204)+2*s(210)+516*s(211)+2*s(212)+2*s(213)+6*s(215)+6*s(216)+4
  Such that:aux(2382) =< B+F
s(125) =< F
aux(2473) =< B
aux(2474) =< B/2
it(78) =< aux(2473)
it(79) =< aux(2473)
it(76) =< aux(2474)
it(78) =< aux(2474)
aux(2420) =< s(125)+1
aux(2433) =< aux(2473)
aux(2389) =< s(125)
s(198) =< it(78)*aux(2382)
s(206) =< it(78)*aux(2473)
s(210) =< it(78)*aux(2420)
s(220) =< it(78)*aux(2433)
s(211) =< s(220)
s(211) =< aux(2473)
s(128) =< aux(2420)
s(212) =< s(211)*aux(2420)
s(213) =< s(211)*s(128)
s(189) =< aux(2389)
s(215) =< s(211)*aux(2389)
s(216) =< s(211)*s(189)
s(199) =< s(206)
s(199) =< aux(2473)
s(200) =< s(199)*aux(2420)
s(201) =< s(199)*s(128)
s(203) =< s(199)*s(125)
s(204) =< s(199)*aux(2389)

  with precondition: [G=6,B>=0,C>=1,A>=C+1,C>=F+2] 

* Chain [[76,77,78,79,80,81,82,83,84],90]: 6*it(76)+352*it(77)+15*it(78)+1167*it(79)+21*it([90])+2*s(198)+516*s(199)+4*s(200)+4*s(201)+4*s(203)+4*s(204)+516*s(211)+2*s(212)+2*s(213)+6*s(215)+6*s(216)+6*s(318)+16*s(319)+16*s(320)+8*s(323)+4*s(324)+4*s(325)+6*s(326)+0
  Such that:aux(2538) =< B+F
aux(2492) =< F
aux(2618) =< 1
aux(2621) =< B
aux(2622) =< B/2
it([90]) =< aux(2618)
it(78) =< aux(2621)
it(79) =< aux(2621)
it(76) =< aux(2622)
it(78) =< aux(2622)
aux(2562) =< aux(2492)+1
aux(2543) =< aux(2492)
aux(2541) =< aux(2538)
aux(2572) =< aux(2621)
it(76) =< it([90])* (1/2)+aux(2622)
it(78) =< it([90])* (1/2)+aux(2622)
s(331) =< it([90])*aux(2562)
s(330) =< it([90])*aux(2543)
s(332) =< it([90])*aux(2541)
s(220) =< it(78)*aux(2572)
s(198) =< it(78)*aux(2538)
s(206) =< it(78)*aux(2621)
s(326) =< s(332)
s(318) =< s(331)
s(323) =< s(330)
s(319) =< it(79)*aux(2492)
s(324) =< it([90])*aux(2543)
s(325) =< it([90])*aux(2562)
s(320) =< it(79)*aux(2543)
s(211) =< s(220)
s(211) =< aux(2621)
s(128) =< aux(2562)
s(212) =< s(211)*aux(2562)
s(213) =< s(211)*s(128)
s(131) =< aux(2543)
s(215) =< s(211)*aux(2543)
s(216) =< s(211)*s(131)
s(199) =< s(206)
s(199) =< aux(2621)
s(200) =< s(199)*aux(2562)
s(201) =< s(199)*s(128)
s(203) =< s(199)*aux(2543)
s(204) =< s(199)*s(131)

  with precondition: [G=3,B>=0,C+1>=0,A>=C+1,B+C>=0] 

* Chain [[76,77,78,79,80,81,82,83,84],89]: 21*it(76)+280*it(77)+733*it(79)+2*s(198)+516*s(199)+4*s(200)+4*s(201)+4*s(203)+4*s(204)+2*s(210)+516*s(211)+2*s(212)+2*s(213)+6*s(215)+6*s(216)+2*s(335)+10*s(342)+10*s(343)+4*s(373)+5
  Such that:s(373) =< 1
aux(2382) =< B+F
aux(2457) =< B/2
s(335) =< F+1
aux(2633) =< B
aux(2634) =< F
it(79) =< aux(2633)
aux(2389) =< aux(2634)
s(342) =< it(79)*aux(2634)
s(343) =< it(79)*aux(2389)
it(76) =< aux(2633)
it(76) =< aux(2457)
aux(2420) =< aux(2634)+1
aux(2433) =< aux(2633)
s(198) =< it(76)*aux(2382)
s(206) =< it(76)*aux(2633)
s(210) =< it(76)*aux(2420)
s(220) =< it(76)*aux(2433)
s(211) =< s(220)
s(211) =< aux(2633)
s(128) =< aux(2420)
s(212) =< s(211)*aux(2420)
s(213) =< s(211)*s(128)
s(189) =< aux(2389)
s(215) =< s(211)*aux(2389)
s(216) =< s(211)*s(189)
s(199) =< s(206)
s(199) =< aux(2633)
s(200) =< s(199)*aux(2420)
s(201) =< s(199)*s(128)
s(203) =< s(199)*aux(2634)
s(204) =< s(199)*aux(2389)

  with precondition: [G=6,B>=1,C+1>=0,F+1>=0,A>=C+1,B+C>=1] 

* Chain [[76,77,78,79,80,81,82,83,84],88]: 21*it(76)+174*it(77)+79*it(79)+2*s(198)+516*s(199)+4*s(200)+4*s(201)+4*s(203)+4*s(204)+2*s(210)+516*s(211)+2*s(212)+2*s(213)+6*s(215)+6*s(216)+2
  Such that:aux(2382) =< B+F
aux(2457) =< B/2
s(125) =< F
aux(2636) =< B
it(79) =< aux(2636)
it(76) =< aux(2636)
it(76) =< aux(2457)
aux(2420) =< s(125)+1
aux(2433) =< aux(2636)
aux(2389) =< s(125)
s(198) =< it(76)*aux(2382)
s(206) =< it(76)*aux(2636)
s(210) =< it(76)*aux(2420)
s(220) =< it(76)*aux(2433)
s(211) =< s(220)
s(211) =< aux(2636)
s(128) =< aux(2420)
s(212) =< s(211)*aux(2420)
s(213) =< s(211)*s(128)
s(189) =< aux(2389)
s(215) =< s(211)*aux(2389)
s(216) =< s(211)*s(189)
s(199) =< s(206)
s(199) =< aux(2636)
s(200) =< s(199)*aux(2420)
s(201) =< s(199)*s(128)
s(203) =< s(199)*s(125)
s(204) =< s(199)*aux(2389)

  with precondition: [G=3,0>=F+2,B>=0,C>=0,A>=C+1] 

* Chain [[76,77,78,79,80,81,82,83,84],87]: 21*it(76)+174*it(77)+75*it(79)+2*s(198)+516*s(199)+4*s(200)+4*s(201)+4*s(203)+4*s(204)+2*s(210)+516*s(211)+2*s(212)+2*s(213)+6*s(215)+6*s(216)+3
  Such that:aux(2382) =< B+F
aux(2457) =< B/2
s(125) =< F
aux(2637) =< B
it(79) =< aux(2637)
it(76) =< aux(2637)
it(76) =< aux(2457)
aux(2420) =< s(125)+1
aux(2433) =< aux(2637)
aux(2389) =< s(125)
s(198) =< it(76)*aux(2382)
s(206) =< it(76)*aux(2637)
s(210) =< it(76)*aux(2420)
s(220) =< it(76)*aux(2433)
s(211) =< s(220)
s(211) =< aux(2637)
s(128) =< aux(2420)
s(212) =< s(211)*aux(2420)
s(213) =< s(211)*s(128)
s(189) =< aux(2389)
s(215) =< s(211)*aux(2389)
s(216) =< s(211)*s(189)
s(199) =< s(206)
s(199) =< aux(2637)
s(200) =< s(199)*aux(2420)
s(201) =< s(199)*s(128)
s(203) =< s(199)*s(125)
s(204) =< s(199)*aux(2389)

  with precondition: [G=6,0>=F+2,B>=1,C>=0,A>=C+1] 

* Chain [[76,77,78,79,80,81,82,83,84],86]: 21*it(76)+280*it(77)+733*it(79)+2*s(198)+516*s(199)+4*s(200)+4*s(201)+4*s(203)+4*s(204)+2*s(210)+516*s(211)+2*s(212)+2*s(213)+6*s(215)+6*s(216)+2*s(386)+10*s(393)+10*s(394)+4*s(424)+6
  Such that:s(424) =< 1
aux(2382) =< B+F
aux(2457) =< B/2
aux(2645) =< B
aux(2646) =< F
s(386) =< aux(2646)
it(79) =< aux(2645)
aux(2389) =< aux(2646)
s(393) =< it(79)*aux(2646)
s(394) =< it(79)*aux(2389)
it(76) =< aux(2645)
it(76) =< aux(2457)
aux(2420) =< aux(2646)+1
aux(2433) =< aux(2645)
s(198) =< it(76)*aux(2382)
s(206) =< it(76)*aux(2645)
s(210) =< it(76)*aux(2420)
s(220) =< it(76)*aux(2433)
s(211) =< s(220)
s(211) =< aux(2645)
s(128) =< aux(2420)
s(212) =< s(211)*aux(2420)
s(213) =< s(211)*s(128)
s(189) =< aux(2389)
s(215) =< s(211)*aux(2389)
s(216) =< s(211)*s(189)
s(199) =< s(206)
s(199) =< aux(2645)
s(200) =< s(199)*aux(2420)
s(201) =< s(199)*s(128)
s(203) =< s(199)*aux(2646)
s(204) =< s(199)*aux(2389)

  with precondition: [G=6,B>=1,C+1>=0,F>=0,A>=C+1,C+2*B>=3] 

* Chain [[76,77,78,79,80,81,82,83,84],85]: 21*it(76)+174*it(77)+76*it(79)+2*s(198)+516*s(199)+4*s(200)+4*s(201)+4*s(203)+4*s(204)+2*s(210)+516*s(211)+2*s(212)+2*s(213)+6*s(215)+6*s(216)+4
  Such that:aux(2382) =< B+F
aux(2457) =< B/2
s(125) =< F
aux(2647) =< B
it(79) =< aux(2647)
it(76) =< aux(2647)
it(76) =< aux(2457)
aux(2420) =< s(125)+1
aux(2433) =< aux(2647)
aux(2389) =< s(125)
s(198) =< it(76)*aux(2382)
s(206) =< it(76)*aux(2647)
s(210) =< it(76)*aux(2420)
s(220) =< it(76)*aux(2433)
s(211) =< s(220)
s(211) =< aux(2647)
s(128) =< aux(2420)
s(212) =< s(211)*aux(2420)
s(213) =< s(211)*s(128)
s(189) =< aux(2389)
s(215) =< s(211)*aux(2389)
s(216) =< s(211)*s(189)
s(199) =< s(206)
s(199) =< aux(2647)
s(200) =< s(199)*aux(2420)
s(201) =< s(199)*s(128)
s(203) =< s(199)*s(125)
s(204) =< s(199)*aux(2389)

  with precondition: [G=6,B>=1,C>=1,A>=C+1,C>=F+2] 

* Chain [94]: 4*s(78)+6
  Such that:aux(2325) =< F+1
s(78) =< aux(2325)

  with precondition: [B=0,C+1=0,G=6,A>=0,F+1>=0] 

* Chain [93]: 3
  with precondition: [B=0,C+1=0,G=6,0>=F+2,A>=0] 

* Chain [92]: 4*s(221)+7
  Such that:aux(2469) =< -C+F
s(221) =< aux(2469)

  with precondition: [B=0,G=6,C>=0,A>=C+1,F>=C] 

* Chain [91]: 4
  with precondition: [B=0,G=6,C>=0,A>=C+1,C>=F+1] 

* Chain [90]: 1095*s(223)+6*s(225)+16*s(233)+16*s(234)+172*s(235)+12*s(249)+8*s(257)+4*s(262)+4*s(263)+6*s(271)+2*s(299)+2*s(302)+9
  Such that:s(299) =< C
s(302) =< C+1
aux(2489) =< 1
aux(2490) =< B
aux(2491) =< -C+F
aux(2492) =< F
aux(2493) =< F+1
s(249) =< aux(2489)
s(271) =< aux(2491)
s(225) =< aux(2493)
s(257) =< aux(2492)
s(223) =< aux(2490)
s(259) =< aux(2492)+1
s(232) =< aux(2492)
s(233) =< s(223)*aux(2492)
s(262) =< s(249)*s(232)
s(263) =< s(249)*s(259)
s(234) =< s(223)*s(232)

  with precondition: [G=3] 

* Chain [89]: 661*s(334)+2*s(335)+10*s(342)+10*s(343)+106*s(344)+4*s(373)+5
  Such that:s(373) =< 1
s(335) =< F+1
aux(2631) =< B
aux(2632) =< F
s(334) =< aux(2631)
s(341) =< aux(2632)
s(342) =< s(334)*aux(2632)
s(343) =< s(334)*s(341)

  with precondition: [C+1=0,G=6,A>=0,B>=1,F+1>=0] 

* Chain [88]: 7*s(382)+2
  Such that:aux(2635) =< B
s(382) =< aux(2635)

  with precondition: [C+1=0,G=3,0>=F+2,A>=0,B>=0] 

* Chain [87]: 3*s(384)+3
  Such that:s(384) =< B

  with precondition: [C+1=0,G=6,0>=F+2,A>=0,B>=1] 

* Chain [86]: 661*s(385)+2*s(386)+10*s(393)+10*s(394)+106*s(395)+4*s(424)+6
  Such that:s(424) =< 1
s(386) =< -C+F
aux(2643) =< B
aux(2644) =< F
s(385) =< aux(2643)
s(392) =< aux(2644)
s(393) =< s(385)*aux(2644)
s(394) =< s(385)*s(392)

  with precondition: [G=6,B>=1,C>=0,A>=C+1,F>=C] 

* Chain [85]: 4*s(433)+4
  Such that:s(433) =< B

  with precondition: [G=6,B>=1,C>=0,A>=C+1,C>=F+1] 


#### Cost of chains of n_evalfbb3in___17(A,B,C,D,E,F,G):
* Chain [104]: 8*s(754)+38059*s(755)+502*s(762)+502*s(763)+13770*s(764)+8*s(819)+379*s(827)+102*s(829)+124*s(834)+207*s(835)+22*s(838)+22*s(840)+5676*s(842)+22*s(844)+22*s(845)+66*s(847)+66*s(848)+5676*s(849)+44*s(850)+44*s(851)+44*s(852)+44*s(853)+24*s(854)+45*s(888)+18*s(889)+6*s(895)+54*s(897)+54*s(898)+72*s(899)+74*s(901)+74*s(902)+1548*s(904)+6*s(905)+6*s(906)+18*s(907)+18*s(908)+1548*s(909)+12*s(910)+12*s(911)+12*s(912)+12*s(913)+56*s(938)+56*s(940)+14448*s(942)+56*s(944)+56*s(945)+168*s(947)+168*s(948)+14448*s(949)+112*s(950)+112*s(951)+112*s(952)+112*s(953)+126*s(989)+12*s(996)+3096*s(1005)+12*s(1006)+12*s(1007)+36*s(1008)+36*s(1009)+3096*s(1010)+24*s(1011)+24*s(1012)+24*s(1013)+24*s(1014)+6*s(1480)+12*s(1536)+8*s(1569)+6*s(1625)+2*s(1671)+16
  Such that:s(1568) =< -A+F+1
s(1671) =< A+1
aux(2709) =< 1
aux(2710) =< -A+F
aux(2711) =< A
aux(2712) =< B
aux(2713) =< B+F
aux(2714) =< B/2
aux(2715) =< -C+F
aux(2716) =< -C+F+1
aux(2717) =< C
aux(2718) =< F
aux(2719) =< F+1
s(827) =< aux(2709)
s(754) =< aux(2710)
s(1569) =< aux(2711)
s(755) =< aux(2712)
s(819) =< aux(2715)
s(1480) =< aux(2717)
s(829) =< aux(2719)
s(761) =< aux(2718)
s(762) =< s(755)*aux(2718)
s(763) =< s(755)*s(761)
s(834) =< aux(2718)
s(835) =< aux(2712)
s(835) =< aux(2714)
s(836) =< aux(2718)+1
s(837) =< aux(2712)
s(838) =< s(835)*aux(2713)
s(839) =< s(835)*aux(2712)
s(840) =< s(835)*s(836)
s(841) =< s(835)*s(837)
s(842) =< s(841)
s(842) =< aux(2712)
s(843) =< s(836)
s(844) =< s(842)*s(836)
s(845) =< s(842)*s(843)
s(846) =< s(761)
s(847) =< s(842)*s(761)
s(848) =< s(842)*s(846)
s(849) =< s(839)
s(849) =< aux(2712)
s(850) =< s(849)*s(836)
s(851) =< s(849)*s(843)
s(852) =< s(849)*aux(2718)
s(853) =< s(849)*s(761)
s(854) =< aux(2714)
s(888) =< aux(2712)
s(889) =< aux(2714)
s(888) =< aux(2714)
s(890) =< aux(2713)
s(889) =< s(827)* (1/2)+aux(2714)
s(888) =< s(827)* (1/2)+aux(2714)
s(891) =< s(827)*s(836)
s(892) =< s(827)*s(761)
s(893) =< s(827)*s(890)
s(894) =< s(888)*s(837)
s(895) =< s(888)*aux(2713)
s(896) =< s(888)*aux(2712)
s(897) =< s(893)
s(898) =< s(891)
s(899) =< s(892)
s(901) =< s(827)*s(761)
s(902) =< s(827)*s(836)
s(904) =< s(894)
s(904) =< aux(2712)
s(905) =< s(904)*s(836)
s(906) =< s(904)*s(843)
s(907) =< s(904)*s(761)
s(908) =< s(904)*s(846)
s(909) =< s(896)
s(909) =< aux(2712)
s(910) =< s(909)*s(836)
s(911) =< s(909)*s(843)
s(912) =< s(909)*s(761)
s(913) =< s(909)*s(846)
s(938) =< s(755)*aux(2713)
s(939) =< s(755)*aux(2712)
s(940) =< s(755)*s(836)
s(941) =< s(755)*s(837)
s(942) =< s(941)
s(942) =< aux(2712)
s(944) =< s(942)*s(836)
s(945) =< s(942)*s(843)
s(947) =< s(942)*s(761)
s(948) =< s(942)*s(846)
s(949) =< s(939)
s(949) =< aux(2712)
s(950) =< s(949)*s(836)
s(951) =< s(949)*s(843)
s(952) =< s(949)*aux(2718)
s(953) =< s(949)*s(761)
s(989) =< aux(2712)
s(989) =< s(827)* (1/2)+aux(2712)
s(995) =< s(989)*s(837)
s(996) =< s(989)*aux(2713)
s(997) =< s(989)*aux(2712)
s(1005) =< s(995)
s(1005) =< aux(2712)
s(1006) =< s(1005)*s(836)
s(1007) =< s(1005)*s(843)
s(1008) =< s(1005)*s(761)
s(1009) =< s(1005)*s(846)
s(1010) =< s(997)
s(1010) =< aux(2712)
s(1011) =< s(1010)*s(836)
s(1012) =< s(1010)*s(843)
s(1013) =< s(1010)*s(761)
s(1014) =< s(1010)*s(846)
s(1536) =< aux(2716)
s(1625) =< s(1568)

  with precondition: [C=A,B>=0,C>=0] 

* Chain [103]: 4*s(1775)+7
  Such that:s(1774) =< F+1
s(1775) =< s(1774)

  with precondition: [A=0,B=0,C=0,F+1>=0] 

* Chain [102]: 16917*s(1776)+130*s(1784)+14*s(1786)+62*s(1789)+62*s(1790)+16*s(1791)+237*s(1792)+10*s(1795)+10*s(1797)+6708*s(1799)+10*s(1801)+10*s(1802)+30*s(1804)+30*s(1805)+6708*s(1806)+20*s(1807)+20*s(1808)+20*s(1809)+20*s(1810)+36*s(1811)+6572*s(1812)+15*s(1844)+6*s(1845)+2*s(1851)+6*s(1853)+6*s(1854)+8*s(1855)+8*s(1857)+8*s(1858)+516*s(1860)+2*s(1861)+2*s(1862)+6*s(1863)+6*s(1864)+516*s(1865)+4*s(1866)+4*s(1867)+4*s(1868)+4*s(1869)+14*s(1884)+62*s(1887)+62*s(1888)+16*s(1889)+10*s(1893)+10*s(1895)+4644*s(1897)+10*s(1899)+10*s(1900)+30*s(1902)+30*s(1903)+4644*s(1904)+20*s(1905)+20*s(1906)+20*s(1907)+20*s(1908)+21*s(1943)+2*s(1950)+6*s(1952)+6*s(1953)+8*s(1954)+8*s(1956)+8*s(1957)+516*s(1959)+2*s(1960)+2*s(1961)+6*s(1962)+6*s(1963)+516*s(1964)+4*s(1965)+4*s(1966)+4*s(1967)+4*s(1968)+12*s(1983)+20*s(1984)+100*s(1987)+100*s(1988)+18*s(1989)+16*s(1993)+16*s(1995)+16*s(1999)+16*s(2000)+48*s(2002)+48*s(2003)+32*s(2005)+32*s(2006)+32*s(2007)+32*s(2008)+6*s(2020)+8*s(2030)+8*s(2032)+8*s(2036)+8*s(2037)+24*s(2039)+24*s(2040)+16*s(2042)+16*s(2043)+16*s(2044)+16*s(2045)+16
  Such that:s(2016) =< -C+F+1
aux(2727) =< 1
aux(2728) =< -A+F+1
aux(2729) =< A
aux(2730) =< A+1
aux(2731) =< A+B
aux(2732) =< B
aux(2733) =< B+C
aux(2734) =< B+F
aux(2735) =< B/2
aux(2736) =< C
aux(2737) =< C+1
aux(2738) =< F
aux(2739) =< F+1
s(1784) =< aux(2727)
s(1776) =< aux(2732)
s(1984) =< aux(2739)
s(1786) =< aux(2730)
s(1788) =< aux(2729)
s(1789) =< s(1776)*aux(2729)
s(1790) =< s(1776)*s(1788)
s(1791) =< aux(2729)
s(1792) =< aux(2732)
s(1792) =< aux(2735)
s(1793) =< aux(2729)+1
s(1794) =< aux(2732)
s(1795) =< s(1792)*aux(2731)
s(1796) =< s(1792)*aux(2732)
s(1797) =< s(1792)*s(1793)
s(1798) =< s(1792)*s(1794)
s(1799) =< s(1798)
s(1799) =< aux(2732)
s(1800) =< s(1793)
s(1801) =< s(1799)*s(1793)
s(1802) =< s(1799)*s(1800)
s(1803) =< s(1788)
s(1804) =< s(1799)*s(1788)
s(1805) =< s(1799)*s(1803)
s(1806) =< s(1796)
s(1806) =< aux(2732)
s(1807) =< s(1806)*s(1793)
s(1808) =< s(1806)*s(1800)
s(1809) =< s(1806)*aux(2729)
s(1810) =< s(1806)*s(1788)
s(1811) =< aux(2735)
s(1844) =< aux(2732)
s(1845) =< aux(2735)
s(1844) =< aux(2735)
s(1846) =< aux(2731)
s(1845) =< s(1784)* (1/2)+aux(2735)
s(1844) =< s(1784)* (1/2)+aux(2735)
s(1847) =< s(1784)*s(1793)
s(1848) =< s(1784)*s(1788)
s(1849) =< s(1784)*s(1846)
s(1850) =< s(1844)*s(1794)
s(1851) =< s(1844)*aux(2731)
s(1852) =< s(1844)*aux(2732)
s(1853) =< s(1849)
s(1854) =< s(1847)
s(1855) =< s(1848)
s(1857) =< s(1784)*s(1788)
s(1858) =< s(1784)*s(1793)
s(1860) =< s(1850)
s(1860) =< aux(2732)
s(1861) =< s(1860)*s(1793)
s(1862) =< s(1860)*s(1800)
s(1863) =< s(1860)*s(1788)
s(1864) =< s(1860)*s(1803)
s(1865) =< s(1852)
s(1865) =< aux(2732)
s(1866) =< s(1865)*s(1793)
s(1867) =< s(1865)*s(1800)
s(1868) =< s(1865)*s(1788)
s(1869) =< s(1865)*s(1803)
s(1884) =< aux(2737)
s(1886) =< aux(2736)
s(1887) =< s(1776)*aux(2736)
s(1888) =< s(1776)*s(1886)
s(1889) =< aux(2736)
s(1891) =< aux(2736)+1
s(1893) =< s(1776)*aux(2733)
s(1894) =< s(1776)*aux(2732)
s(1895) =< s(1776)*s(1891)
s(1896) =< s(1776)*s(1794)
s(1897) =< s(1896)
s(1897) =< aux(2732)
s(1898) =< s(1891)
s(1899) =< s(1897)*s(1891)
s(1900) =< s(1897)*s(1898)
s(1901) =< s(1886)
s(1902) =< s(1897)*s(1886)
s(1903) =< s(1897)*s(1901)
s(1904) =< s(1894)
s(1904) =< aux(2732)
s(1905) =< s(1904)*s(1891)
s(1906) =< s(1904)*s(1898)
s(1907) =< s(1904)*aux(2736)
s(1908) =< s(1904)*s(1886)
s(1943) =< aux(2732)
s(1945) =< aux(2733)
s(1943) =< s(1784)* (1/2)+aux(2732)
s(1946) =< s(1784)*s(1891)
s(1947) =< s(1784)*s(1886)
s(1948) =< s(1784)*s(1945)
s(1949) =< s(1943)*s(1794)
s(1950) =< s(1943)*aux(2733)
s(1951) =< s(1943)*aux(2732)
s(1952) =< s(1948)
s(1953) =< s(1946)
s(1954) =< s(1947)
s(1956) =< s(1784)*s(1886)
s(1957) =< s(1784)*s(1891)
s(1959) =< s(1949)
s(1959) =< aux(2732)
s(1960) =< s(1959)*s(1891)
s(1961) =< s(1959)*s(1898)
s(1962) =< s(1959)*s(1886)
s(1963) =< s(1959)*s(1901)
s(1964) =< s(1951)
s(1964) =< aux(2732)
s(1965) =< s(1964)*s(1891)
s(1966) =< s(1964)*s(1898)
s(1967) =< s(1964)*s(1886)
s(1968) =< s(1964)*s(1901)
s(1983) =< aux(2728)
s(1986) =< aux(2738)
s(1987) =< s(1776)*aux(2738)
s(1988) =< s(1776)*s(1986)
s(1989) =< aux(2738)
s(1991) =< aux(2738)+1
s(1993) =< s(1792)*aux(2734)
s(1995) =< s(1792)*s(1991)
s(1998) =< s(1991)
s(1999) =< s(1799)*s(1991)
s(2000) =< s(1799)*s(1998)
s(2001) =< s(1986)
s(2002) =< s(1799)*s(1986)
s(2003) =< s(1799)*s(2001)
s(2005) =< s(1806)*s(1991)
s(2006) =< s(1806)*s(1998)
s(2007) =< s(1806)*aux(2738)
s(2008) =< s(1806)*s(1986)
s(2020) =< s(2016)
s(2030) =< s(1776)*aux(2734)
s(2032) =< s(1776)*s(1991)
s(2036) =< s(1897)*s(1991)
s(2037) =< s(1897)*s(1998)
s(2039) =< s(1897)*s(1986)
s(2040) =< s(1897)*s(2001)
s(2042) =< s(1904)*s(1991)
s(2043) =< s(1904)*s(1998)
s(2044) =< s(1904)*aux(2738)
s(2045) =< s(1904)*s(1986)

  with precondition: [C=A,B>=0,C>=0,F+1>=0,B+C>=1] 

* Chain [101]: 17*s(2093)+8
  Such that:aux(2741) =< B
s(2093) =< aux(2741)

  with precondition: [A=0,C=0,0>=F+2,B>=1] 

* Chain [100]: 8*s(2098)+1330*s(2102)+212*s(2106)+11
  Such that:aux(2745) =< 1
aux(2746) =< B
s(2098) =< aux(2745)
s(2102) =< aux(2746)

  with precondition: [A=0,C=0,F+1=0,B>=2] 

* Chain [99]: 5
  with precondition: [B=0,C=A,C>=1,C>=F+2] 

* Chain [98]: 4*s(2120)+6
  Such that:aux(2747) =< -C+F
s(2120) =< aux(2747)

  with precondition: [B=0,C=A,C>=0,F>=C] 

* Chain [97]: 360*s(2126)+36*s(2127)+4*s(2131)+4*s(2133)+1032*s(2135)+4*s(2137)+4*s(2138)+12*s(2140)+12*s(2141)+1032*s(2142)+8*s(2143)+8*s(2144)+8*s(2145)+8*s(2146)+6*s(2147)+696*s(2148)+4*s(2161)+4*s(2163)+1032*s(2165)+4*s(2167)+4*s(2168)+12*s(2170)+12*s(2171)+1032*s(2172)+8*s(2173)+8*s(2174)+8*s(2175)+8*s(2176)+9
  Such that:s(2124) =< B/2
aux(2750) =< B
aux(2751) =< B+F
aux(2752) =< F
s(2126) =< aux(2750)
s(2127) =< aux(2750)
s(2127) =< s(2124)
s(2128) =< aux(2752)+1
s(2129) =< aux(2750)
s(2130) =< aux(2752)
s(2131) =< s(2127)*aux(2751)
s(2132) =< s(2127)*aux(2750)
s(2133) =< s(2127)*s(2128)
s(2134) =< s(2127)*s(2129)
s(2135) =< s(2134)
s(2135) =< aux(2750)
s(2136) =< s(2128)
s(2137) =< s(2135)*s(2128)
s(2138) =< s(2135)*s(2136)
s(2139) =< s(2130)
s(2140) =< s(2135)*s(2130)
s(2141) =< s(2135)*s(2139)
s(2142) =< s(2132)
s(2142) =< aux(2750)
s(2143) =< s(2142)*s(2128)
s(2144) =< s(2142)*s(2136)
s(2145) =< s(2142)*aux(2752)
s(2146) =< s(2142)*s(2130)
s(2147) =< s(2124)
s(2161) =< s(2126)*aux(2751)
s(2162) =< s(2126)*aux(2750)
s(2163) =< s(2126)*s(2128)
s(2164) =< s(2126)*s(2129)
s(2165) =< s(2164)
s(2165) =< aux(2750)
s(2167) =< s(2165)*s(2128)
s(2168) =< s(2165)*s(2136)
s(2170) =< s(2165)*s(2130)
s(2171) =< s(2165)*s(2139)
s(2172) =< s(2162)
s(2172) =< aux(2750)
s(2173) =< s(2172)*s(2128)
s(2174) =< s(2172)*s(2136)
s(2175) =< s(2172)*aux(2752)
s(2176) =< s(2172)*s(2130)

  with precondition: [C=A,B>=1,C>=1,C>=F+2] 

* Chain [96]: 7*s(2182)+4
  Such that:aux(2753) =< B
s(2182) =< aux(2753)

  with precondition: [C=A,C=F,B>=0,C>=0] 

* Chain [95]: 147*s(2188)+36*s(2189)+4*s(2193)+4*s(2195)+1032*s(2197)+4*s(2199)+4*s(2200)+12*s(2202)+12*s(2203)+1032*s(2204)+8*s(2205)+8*s(2206)+8*s(2207)+8*s(2208)+6*s(2209)+348*s(2210)+4
  Such that:s(2184) =< B
s(2185) =< B+F
s(2186) =< B/2
s(2187) =< F
s(2188) =< s(2184)
s(2189) =< s(2184)
s(2189) =< s(2186)
s(2190) =< s(2187)+1
s(2191) =< s(2184)
s(2192) =< s(2187)
s(2193) =< s(2189)*s(2185)
s(2194) =< s(2189)*s(2184)
s(2195) =< s(2189)*s(2190)
s(2196) =< s(2189)*s(2191)
s(2197) =< s(2196)
s(2197) =< s(2184)
s(2198) =< s(2190)
s(2199) =< s(2197)*s(2190)
s(2200) =< s(2197)*s(2198)
s(2201) =< s(2192)
s(2202) =< s(2197)*s(2192)
s(2203) =< s(2197)*s(2201)
s(2204) =< s(2194)
s(2204) =< s(2184)
s(2205) =< s(2204)*s(2190)
s(2206) =< s(2204)*s(2198)
s(2207) =< s(2204)*s(2187)
s(2208) =< s(2204)*s(2192)
s(2209) =< s(2186)

  with precondition: [C=A,0>=F+2,B>=0,C>=1] 


#### Cost of chains of n_evalfbb2in___19(A,B,C,D,E,F,G):
* Chain [116]: 41315*s(2494)+6*s(2496)+408*s(2504)+408*s(2505)+14310*s(2506)+12*s(2521)+378*s(2589)+186*s(2597)+10*s(2600)+10*s(2602)+5160*s(2604)+10*s(2606)+10*s(2607)+5160*s(2611)+20*s(2612)+20*s(2613)+24*s(2616)+30*s(2649)+12*s(2650)+2*s(2656)+12*s(2658)+12*s(2659)+16*s(2663)+1032*s(2665)+2*s(2666)+2*s(2667)+1032*s(2670)+4*s(2671)+4*s(2672)+10*s(2710)+10*s(2712)+15480*s(2714)+10*s(2716)+10*s(2717)+15480*s(2721)+20*s(2722)+20*s(2723)+126*s(2760)+2*s(2767)+3096*s(2776)+2*s(2777)+2*s(2778)+3096*s(2781)+4*s(2782)+4*s(2783)+84*s(2810)+100*s(2815)+10*s(2819)+10*s(2821)+10*s(2825)+10*s(2826)+30*s(2828)+30*s(2829)+20*s(2831)+20*s(2832)+20*s(2833)+20*s(2834)+2*s(2876)+36*s(2878)+36*s(2879)+48*s(2880)+50*s(2882)+50*s(2883)+2*s(2886)+2*s(2887)+6*s(2888)+6*s(2889)+4*s(2891)+4*s(2892)+4*s(2893)+4*s(2894)+50*s(2919)+50*s(2921)+50*s(2925)+50*s(2926)+150*s(2928)+150*s(2929)+100*s(2931)+100*s(2932)+100*s(2933)+100*s(2934)+10*s(2977)+10*s(2987)+10*s(2988)+30*s(2989)+30*s(2990)+20*s(2992)+20*s(2993)+20*s(2994)+20*s(2995)+129*s(3347)+2*s(3349)+2*s(3350)+4*s(3352)+2*s(3471)+2*s(3474)+16
  Such that:s(3471) =< A
s(3474) =< A+1
aux(2816) =< 1
aux(2817) =< -A+F
aux(2818) =< B
aux(2819) =< B+F
aux(2820) =< B/2
aux(2821) =< -C+F
aux(2822) =< F
aux(2823) =< F+1
s(2589) =< aux(2816)
s(2521) =< aux(2817)
s(2494) =< aux(2818)
s(2496) =< aux(2821)
s(2597) =< aux(2818)
s(2597) =< aux(2820)
s(2598) =< 1
s(2599) =< aux(2818)
s(2600) =< s(2597)*aux(2818)
s(2601) =< s(2597)*aux(2818)
s(2602) =< s(2597)*s(2598)
s(2603) =< s(2597)*s(2599)
s(2604) =< s(2603)
s(2604) =< aux(2818)
s(2605) =< s(2598)
s(2606) =< s(2604)*s(2598)
s(2607) =< s(2604)*s(2605)
s(2611) =< s(2601)
s(2611) =< aux(2818)
s(2612) =< s(2611)*s(2598)
s(2613) =< s(2611)*s(2605)
s(2616) =< aux(2820)
s(2649) =< aux(2818)
s(2650) =< aux(2820)
s(2649) =< aux(2820)
s(2650) =< s(2589)* (1/2)+aux(2820)
s(2649) =< s(2589)* (1/2)+aux(2820)
s(2652) =< s(2589)*s(2598)
s(2654) =< s(2589)*s(2599)
s(2655) =< s(2649)*s(2599)
s(2656) =< s(2649)*aux(2818)
s(2657) =< s(2649)*aux(2818)
s(2658) =< s(2654)
s(2659) =< s(2652)
s(2663) =< s(2589)*s(2598)
s(2665) =< s(2655)
s(2665) =< aux(2818)
s(2666) =< s(2665)*s(2598)
s(2667) =< s(2665)*s(2605)
s(2670) =< s(2657)
s(2670) =< aux(2818)
s(2671) =< s(2670)*s(2598)
s(2672) =< s(2670)*s(2605)
s(2710) =< s(2494)*aux(2818)
s(2711) =< s(2494)*aux(2818)
s(2712) =< s(2494)*s(2598)
s(2713) =< s(2494)*s(2599)
s(2714) =< s(2713)
s(2714) =< aux(2818)
s(2716) =< s(2714)*s(2598)
s(2717) =< s(2714)*s(2605)
s(2721) =< s(2711)
s(2721) =< aux(2818)
s(2722) =< s(2721)*s(2598)
s(2723) =< s(2721)*s(2605)
s(2760) =< aux(2818)
s(2760) =< s(2589)* (1/2)+aux(2818)
s(2766) =< s(2760)*s(2599)
s(2767) =< s(2760)*aux(2818)
s(2768) =< s(2760)*aux(2818)
s(2776) =< s(2766)
s(2776) =< aux(2818)
s(2777) =< s(2776)*s(2598)
s(2778) =< s(2776)*s(2605)
s(2781) =< s(2768)
s(2781) =< aux(2818)
s(2782) =< s(2781)*s(2598)
s(2783) =< s(2781)*s(2605)
s(2810) =< aux(2823)
s(2503) =< aux(2822)
s(2504) =< s(2494)*aux(2822)
s(2505) =< s(2494)*s(2503)
s(2815) =< aux(2822)
s(2817) =< aux(2822)+1
s(2819) =< s(2597)*aux(2819)
s(2821) =< s(2597)*s(2817)
s(2824) =< s(2817)
s(2825) =< s(2604)*s(2817)
s(2826) =< s(2604)*s(2824)
s(2827) =< s(2503)
s(2828) =< s(2604)*s(2503)
s(2829) =< s(2604)*s(2827)
s(2831) =< s(2611)*s(2817)
s(2832) =< s(2611)*s(2824)
s(2833) =< s(2611)*aux(2822)
s(2834) =< s(2611)*s(2503)
s(2871) =< aux(2819)
s(2872) =< s(2589)*s(2817)
s(2873) =< s(2589)*s(2503)
s(2874) =< s(2589)*s(2871)
s(2876) =< s(2649)*aux(2819)
s(2878) =< s(2874)
s(2879) =< s(2872)
s(2880) =< s(2873)
s(2882) =< s(2589)*s(2503)
s(2883) =< s(2589)*s(2817)
s(2886) =< s(2665)*s(2817)
s(2887) =< s(2665)*s(2824)
s(2888) =< s(2665)*s(2503)
s(2889) =< s(2665)*s(2827)
s(2891) =< s(2670)*s(2817)
s(2892) =< s(2670)*s(2824)
s(2893) =< s(2670)*s(2503)
s(2894) =< s(2670)*s(2827)
s(2919) =< s(2494)*aux(2819)
s(2921) =< s(2494)*s(2817)
s(2925) =< s(2714)*s(2817)
s(2926) =< s(2714)*s(2824)
s(2928) =< s(2714)*s(2503)
s(2929) =< s(2714)*s(2827)
s(2931) =< s(2721)*s(2817)
s(2932) =< s(2721)*s(2824)
s(2933) =< s(2721)*aux(2822)
s(2934) =< s(2721)*s(2503)
s(2977) =< s(2760)*aux(2819)
s(2987) =< s(2776)*s(2817)
s(2988) =< s(2776)*s(2824)
s(2989) =< s(2776)*s(2503)
s(2990) =< s(2776)*s(2827)
s(2992) =< s(2781)*s(2817)
s(2993) =< s(2781)*s(2824)
s(2994) =< s(2781)*s(2503)
s(2995) =< s(2781)*s(2827)
s(3352) =< aux(2819)
s(3347) =< aux(2818)
s(3347) =< aux(2819)
s(3349) =< s(3347)*aux(2822)
s(3350) =< s(3347)*s(2503)

  with precondition: [C=A,0>=C+1,B>=0,F>=C] 

* Chain [115]: 30*s(3505)+517*s(3506)+16*s(3507)+46*s(3508)+56666*s(3509)+126*s(3512)+602*s(3514)+602*s(3515)+142*s(3516)+480*s(3517)+42*s(3520)+42*s(3522)+13416*s(3524)+42*s(3526)+42*s(3527)+126*s(3529)+126*s(3530)+13416*s(3531)+84*s(3532)+84*s(3533)+84*s(3534)+84*s(3535)+66*s(3536)+60*s(3537)+24*s(3538)+6*s(3544)+54*s(3546)+54*s(3547)+72*s(3548)+74*s(3549)+74*s(3550)+2064*s(3551)+6*s(3552)+6*s(3553)+18*s(3554)+18*s(3555)+2064*s(3556)+12*s(3557)+12*s(3558)+12*s(3559)+12*s(3560)+68*s(3561)+68*s(3563)+20124*s(3565)+68*s(3566)+68*s(3567)+204*s(3568)+204*s(3569)+20124*s(3570)+136*s(3571)+136*s(3572)+136*s(3573)+136*s(3574)+147*s(3575)+12*s(3577)+3612*s(3579)+12*s(3580)+12*s(3581)+36*s(3582)+36*s(3583)+3612*s(3584)+24*s(3585)+24*s(3586)+24*s(3587)+24*s(3588)+36*s(3589)+124*s(3592)+124*s(3593)+10*s(3595)+10*s(3596)+10*s(3598)+10*s(3599)+30*s(3601)+30*s(3602)+20*s(3603)+20*s(3604)+20*s(3605)+20*s(3606)+2*s(3611)+12*s(3612)+12*s(3613)+16*s(3614)+16*s(3615)+16*s(3616)+2*s(3617)+2*s(3618)+6*s(3619)+6*s(3620)+4*s(3621)+4*s(3622)+4*s(3623)+4*s(3624)+10*s(3630)+10*s(3631)+10*s(3633)+10*s(3634)+30*s(3636)+30*s(3637)+20*s(3638)+20*s(3639)+20*s(3640)+20*s(3641)+2*s(3646)+2*s(3652)+2*s(3653)+6*s(3654)+6*s(3655)+4*s(3656)+4*s(3657)+4*s(3658)+4*s(3659)+21250*s(3660)+17
  Such that:aux(2824) =< -A+F
aux(2825) =< -A+F+1
aux(2826) =< A
aux(2827) =< A+1
aux(2828) =< A+B
s(3499) =< B+F
s(3500) =< B/2
s(3503) =< F
s(3504) =< F+1
aux(2829) =< 1
aux(2830) =< B
s(3505) =< aux(2827)
s(3506) =< aux(2829)
s(3507) =< aux(2824)
s(3508) =< aux(2826)
s(3509) =< aux(2830)
s(3512) =< s(3504)
s(3513) =< s(3503)
s(3514) =< s(3509)*s(3503)
s(3515) =< s(3509)*s(3513)
s(3516) =< s(3503)
s(3517) =< aux(2830)
s(3517) =< s(3500)
s(3518) =< s(3503)+1
s(3519) =< aux(2830)
s(3520) =< s(3517)*s(3499)
s(3521) =< s(3517)*aux(2830)
s(3522) =< s(3517)*s(3518)
s(3523) =< s(3517)*s(3519)
s(3524) =< s(3523)
s(3524) =< aux(2830)
s(3525) =< s(3518)
s(3526) =< s(3524)*s(3518)
s(3527) =< s(3524)*s(3525)
s(3528) =< s(3513)
s(3529) =< s(3524)*s(3513)
s(3530) =< s(3524)*s(3528)
s(3531) =< s(3521)
s(3531) =< aux(2830)
s(3532) =< s(3531)*s(3518)
s(3533) =< s(3531)*s(3525)
s(3534) =< s(3531)*s(3503)
s(3535) =< s(3531)*s(3513)
s(3536) =< s(3500)
s(3537) =< aux(2830)
s(3538) =< s(3500)
s(3537) =< s(3500)
s(3539) =< s(3499)
s(3538) =< s(3506)* (1/2)+s(3500)
s(3537) =< s(3506)* (1/2)+s(3500)
s(3540) =< s(3506)*s(3518)
s(3541) =< s(3506)*s(3513)
s(3542) =< s(3506)*s(3539)
s(3543) =< s(3537)*s(3519)
s(3544) =< s(3537)*s(3499)
s(3545) =< s(3537)*aux(2830)
s(3546) =< s(3542)
s(3547) =< s(3540)
s(3548) =< s(3541)
s(3549) =< s(3506)*s(3513)
s(3550) =< s(3506)*s(3518)
s(3551) =< s(3543)
s(3551) =< aux(2830)
s(3552) =< s(3551)*s(3518)
s(3553) =< s(3551)*s(3525)
s(3554) =< s(3551)*s(3513)
s(3555) =< s(3551)*s(3528)
s(3556) =< s(3545)
s(3556) =< aux(2830)
s(3557) =< s(3556)*s(3518)
s(3558) =< s(3556)*s(3525)
s(3559) =< s(3556)*s(3513)
s(3560) =< s(3556)*s(3528)
s(3561) =< s(3509)*s(3499)
s(3562) =< s(3509)*aux(2830)
s(3563) =< s(3509)*s(3518)
s(3564) =< s(3509)*s(3519)
s(3565) =< s(3564)
s(3565) =< aux(2830)
s(3566) =< s(3565)*s(3518)
s(3567) =< s(3565)*s(3525)
s(3568) =< s(3565)*s(3513)
s(3569) =< s(3565)*s(3528)
s(3570) =< s(3562)
s(3570) =< aux(2830)
s(3571) =< s(3570)*s(3518)
s(3572) =< s(3570)*s(3525)
s(3573) =< s(3570)*s(3503)
s(3574) =< s(3570)*s(3513)
s(3575) =< aux(2830)
s(3575) =< s(3506)* (1/2)+aux(2830)
s(3576) =< s(3575)*s(3519)
s(3577) =< s(3575)*s(3499)
s(3578) =< s(3575)*aux(2830)
s(3579) =< s(3576)
s(3579) =< aux(2830)
s(3580) =< s(3579)*s(3518)
s(3581) =< s(3579)*s(3525)
s(3582) =< s(3579)*s(3513)
s(3583) =< s(3579)*s(3528)
s(3584) =< s(3578)
s(3584) =< aux(2830)
s(3585) =< s(3584)*s(3518)
s(3586) =< s(3584)*s(3525)
s(3587) =< s(3584)*s(3513)
s(3588) =< s(3584)*s(3528)
s(3589) =< aux(2825)
s(3591) =< aux(2826)
s(3592) =< s(3509)*aux(2826)
s(3593) =< s(3509)*s(3591)
s(3594) =< aux(2826)+1
s(3595) =< s(3517)*aux(2828)
s(3596) =< s(3517)*s(3594)
s(3597) =< s(3594)
s(3598) =< s(3524)*s(3594)
s(3599) =< s(3524)*s(3597)
s(3600) =< s(3591)
s(3601) =< s(3524)*s(3591)
s(3602) =< s(3524)*s(3600)
s(3603) =< s(3531)*s(3594)
s(3604) =< s(3531)*s(3597)
s(3605) =< s(3531)*aux(2826)
s(3606) =< s(3531)*s(3591)
s(3607) =< aux(2828)
s(3608) =< s(3506)*s(3594)
s(3609) =< s(3506)*s(3591)
s(3610) =< s(3506)*s(3607)
s(3611) =< s(3537)*aux(2828)
s(3612) =< s(3610)
s(3613) =< s(3608)
s(3614) =< s(3609)
s(3615) =< s(3506)*s(3591)
s(3616) =< s(3506)*s(3594)
s(3617) =< s(3551)*s(3594)
s(3618) =< s(3551)*s(3597)
s(3619) =< s(3551)*s(3591)
s(3620) =< s(3551)*s(3600)
s(3621) =< s(3556)*s(3594)
s(3622) =< s(3556)*s(3597)
s(3623) =< s(3556)*s(3591)
s(3624) =< s(3556)*s(3600)
s(3630) =< s(3509)*aux(2828)
s(3631) =< s(3509)*s(3594)
s(3633) =< s(3565)*s(3594)
s(3634) =< s(3565)*s(3597)
s(3636) =< s(3565)*s(3591)
s(3637) =< s(3565)*s(3600)
s(3638) =< s(3570)*s(3594)
s(3639) =< s(3570)*s(3597)
s(3640) =< s(3570)*aux(2826)
s(3641) =< s(3570)*s(3591)
s(3646) =< s(3575)*aux(2828)
s(3652) =< s(3579)*s(3594)
s(3653) =< s(3579)*s(3597)
s(3654) =< s(3579)*s(3591)
s(3655) =< s(3579)*s(3600)
s(3656) =< s(3584)*s(3594)
s(3657) =< s(3584)*s(3597)
s(3658) =< s(3584)*s(3591)
s(3659) =< s(3584)*s(3600)

  with precondition: [C=A,B>=0,C>=0] 

* Chain [114]: 17*s(3667)+9
  Such that:s(3666) =< B
s(3667) =< s(3666)

  with precondition: [A=0,C=0,0>=F+2,B>=1] 

* Chain [113]: 4*s(3668)+6
  Such that:aux(2831) =< -C+F
s(3668) =< aux(2831)

  with precondition: [B=0,C=A,0>=C+1,F>=C] 

* Chain [112]: 10*s(3670)+3
  Such that:aux(2833) =< B
s(3670) =< aux(2833)

  with precondition: [C=A,0>=C+1,B>=0,C>=F+1] 

* Chain [111]: 4*s(3674)+7
  Such that:s(3673) =< -C+F
s(3674) =< s(3673)

  with precondition: [B=0,C=A,C>=0,F>=C] 

* Chain [110]: 6
  with precondition: [B=0,C=A,C>=1,C>=F+2] 

* Chain [109]: 2*s(3675)+13
  Such that:s(3675) =< -C

  with precondition: [B=1,F+1=0,C=A,0>=C+2] 

* Chain [108]: 4*s(3678)+24*s(3679)+5022*s(3683)+804*s(3687)+2*s(3692)+13
  Such that:s(3692) =< -A
aux(2853) =< 1
aux(2854) =< B
aux(2855) =< -C
s(3679) =< aux(2853)
s(3683) =< aux(2854)
s(3678) =< aux(2855)

  with precondition: [F+1=0,C=A,0>=C+1,B>=2] 

* Chain [107]: 3*s(3819)+5
  Such that:s(3819) =< B

  with precondition: [C=A,C=F,0>=C+2,B>=1] 

* Chain [106]: 7*s(3821)+5
  Such that:s(3820) =< B
s(3821) =< s(3820)

  with precondition: [C=A,C=F,B>=0,C>=0] 

* Chain [105]: 147*s(3826)+36*s(3827)+4*s(3831)+4*s(3833)+1032*s(3835)+4*s(3837)+4*s(3838)+12*s(3840)+12*s(3841)+1032*s(3842)+8*s(3843)+8*s(3844)+8*s(3845)+8*s(3846)+6*s(3847)+348*s(3848)+5
  Such that:s(3822) =< B
s(3823) =< B+F
s(3824) =< B/2
s(3825) =< F
s(3826) =< s(3822)
s(3827) =< s(3822)
s(3827) =< s(3824)
s(3828) =< s(3825)+1
s(3829) =< s(3822)
s(3830) =< s(3825)
s(3831) =< s(3827)*s(3823)
s(3832) =< s(3827)*s(3822)
s(3833) =< s(3827)*s(3828)
s(3834) =< s(3827)*s(3829)
s(3835) =< s(3834)
s(3835) =< s(3822)
s(3836) =< s(3828)
s(3837) =< s(3835)*s(3828)
s(3838) =< s(3835)*s(3836)
s(3839) =< s(3830)
s(3840) =< s(3835)*s(3830)
s(3841) =< s(3835)*s(3839)
s(3842) =< s(3832)
s(3842) =< s(3822)
s(3843) =< s(3842)*s(3828)
s(3844) =< s(3842)*s(3836)
s(3845) =< s(3842)*s(3825)
s(3846) =< s(3842)*s(3830)
s(3847) =< s(3824)

  with precondition: [C=A,0>=F+2,B>=0,C>=1] 


#### Cost of chains of n_evalfbb8in___20(A,B,C,D,E,F,G):
* Chain [125]: 30*s(4137)+517*s(4138)+20*s(4139)+46*s(4140)+56683*s(4141)+126*s(4142)+602*s(4144)+602*s(4145)+142*s(4146)+480*s(4147)+42*s(4150)+42*s(4152)+13416*s(4154)+42*s(4156)+42*s(4157)+126*s(4159)+126*s(4160)+13416*s(4161)+84*s(4162)+84*s(4163)+84*s(4164)+84*s(4165)+66*s(4166)+60*s(4167)+24*s(4168)+6*s(4174)+54*s(4176)+54*s(4177)+72*s(4178)+74*s(4179)+74*s(4180)+2064*s(4181)+6*s(4182)+6*s(4183)+18*s(4184)+18*s(4185)+2064*s(4186)+12*s(4187)+12*s(4188)+12*s(4189)+12*s(4190)+68*s(4191)+68*s(4193)+20124*s(4195)+68*s(4196)+68*s(4197)+204*s(4198)+204*s(4199)+20124*s(4200)+136*s(4201)+136*s(4202)+136*s(4203)+136*s(4204)+147*s(4205)+12*s(4207)+3612*s(4209)+12*s(4210)+12*s(4211)+36*s(4212)+36*s(4213)+3612*s(4214)+24*s(4215)+24*s(4216)+24*s(4217)+24*s(4218)+36*s(4219)+124*s(4221)+124*s(4222)+10*s(4224)+10*s(4225)+10*s(4227)+10*s(4228)+30*s(4230)+30*s(4231)+20*s(4232)+20*s(4233)+20*s(4234)+20*s(4235)+2*s(4240)+12*s(4241)+12*s(4242)+16*s(4243)+16*s(4244)+16*s(4245)+2*s(4246)+2*s(4247)+6*s(4248)+6*s(4249)+4*s(4250)+4*s(4251)+4*s(4252)+4*s(4253)+10*s(4254)+10*s(4255)+10*s(4256)+10*s(4257)+30*s(4258)+30*s(4259)+20*s(4260)+20*s(4261)+20*s(4262)+20*s(4263)+2*s(4264)+2*s(4265)+2*s(4266)+6*s(4267)+6*s(4268)+4*s(4269)+4*s(4270)+4*s(4271)+4*s(4272)+21250*s(4273)+18
  Such that:s(4126) =< 1
s(4128) =< -A+F+1
s(4129) =< A
s(4130) =< A+1
s(4131) =< A+B
s(4136) =< B
s(4132) =< B+F
s(4133) =< B/2
s(4134) =< F
s(4135) =< F+1
aux(2858) =< -A+F
s(4137) =< s(4130)
s(4138) =< s(4126)
s(4139) =< aux(2858)
s(4140) =< s(4129)
s(4141) =< s(4136)
s(4142) =< s(4135)
s(4143) =< s(4134)
s(4144) =< s(4141)*s(4134)
s(4145) =< s(4141)*s(4143)
s(4146) =< s(4134)
s(4147) =< s(4136)
s(4147) =< s(4133)
s(4148) =< s(4134)+1
s(4149) =< s(4136)
s(4150) =< s(4147)*s(4132)
s(4151) =< s(4147)*s(4136)
s(4152) =< s(4147)*s(4148)
s(4153) =< s(4147)*s(4149)
s(4154) =< s(4153)
s(4154) =< s(4136)
s(4155) =< s(4148)
s(4156) =< s(4154)*s(4148)
s(4157) =< s(4154)*s(4155)
s(4158) =< s(4143)
s(4159) =< s(4154)*s(4143)
s(4160) =< s(4154)*s(4158)
s(4161) =< s(4151)
s(4161) =< s(4136)
s(4162) =< s(4161)*s(4148)
s(4163) =< s(4161)*s(4155)
s(4164) =< s(4161)*s(4134)
s(4165) =< s(4161)*s(4143)
s(4166) =< s(4133)
s(4167) =< s(4136)
s(4168) =< s(4133)
s(4167) =< s(4133)
s(4169) =< s(4132)
s(4168) =< s(4138)* (1/2)+s(4133)
s(4167) =< s(4138)* (1/2)+s(4133)
s(4170) =< s(4138)*s(4148)
s(4171) =< s(4138)*s(4143)
s(4172) =< s(4138)*s(4169)
s(4173) =< s(4167)*s(4149)
s(4174) =< s(4167)*s(4132)
s(4175) =< s(4167)*s(4136)
s(4176) =< s(4172)
s(4177) =< s(4170)
s(4178) =< s(4171)
s(4179) =< s(4138)*s(4143)
s(4180) =< s(4138)*s(4148)
s(4181) =< s(4173)
s(4181) =< s(4136)
s(4182) =< s(4181)*s(4148)
s(4183) =< s(4181)*s(4155)
s(4184) =< s(4181)*s(4143)
s(4185) =< s(4181)*s(4158)
s(4186) =< s(4175)
s(4186) =< s(4136)
s(4187) =< s(4186)*s(4148)
s(4188) =< s(4186)*s(4155)
s(4189) =< s(4186)*s(4143)
s(4190) =< s(4186)*s(4158)
s(4191) =< s(4141)*s(4132)
s(4192) =< s(4141)*s(4136)
s(4193) =< s(4141)*s(4148)
s(4194) =< s(4141)*s(4149)
s(4195) =< s(4194)
s(4195) =< s(4136)
s(4196) =< s(4195)*s(4148)
s(4197) =< s(4195)*s(4155)
s(4198) =< s(4195)*s(4143)
s(4199) =< s(4195)*s(4158)
s(4200) =< s(4192)
s(4200) =< s(4136)
s(4201) =< s(4200)*s(4148)
s(4202) =< s(4200)*s(4155)
s(4203) =< s(4200)*s(4134)
s(4204) =< s(4200)*s(4143)
s(4205) =< s(4136)
s(4205) =< s(4138)* (1/2)+s(4136)
s(4206) =< s(4205)*s(4149)
s(4207) =< s(4205)*s(4132)
s(4208) =< s(4205)*s(4136)
s(4209) =< s(4206)
s(4209) =< s(4136)
s(4210) =< s(4209)*s(4148)
s(4211) =< s(4209)*s(4155)
s(4212) =< s(4209)*s(4143)
s(4213) =< s(4209)*s(4158)
s(4214) =< s(4208)
s(4214) =< s(4136)
s(4215) =< s(4214)*s(4148)
s(4216) =< s(4214)*s(4155)
s(4217) =< s(4214)*s(4143)
s(4218) =< s(4214)*s(4158)
s(4219) =< s(4128)
s(4220) =< s(4129)
s(4221) =< s(4141)*s(4129)
s(4222) =< s(4141)*s(4220)
s(4223) =< s(4129)+1
s(4224) =< s(4147)*s(4131)
s(4225) =< s(4147)*s(4223)
s(4226) =< s(4223)
s(4227) =< s(4154)*s(4223)
s(4228) =< s(4154)*s(4226)
s(4229) =< s(4220)
s(4230) =< s(4154)*s(4220)
s(4231) =< s(4154)*s(4229)
s(4232) =< s(4161)*s(4223)
s(4233) =< s(4161)*s(4226)
s(4234) =< s(4161)*s(4129)
s(4235) =< s(4161)*s(4220)
s(4236) =< s(4131)
s(4237) =< s(4138)*s(4223)
s(4238) =< s(4138)*s(4220)
s(4239) =< s(4138)*s(4236)
s(4240) =< s(4167)*s(4131)
s(4241) =< s(4239)
s(4242) =< s(4237)
s(4243) =< s(4238)
s(4244) =< s(4138)*s(4220)
s(4245) =< s(4138)*s(4223)
s(4246) =< s(4181)*s(4223)
s(4247) =< s(4181)*s(4226)
s(4248) =< s(4181)*s(4220)
s(4249) =< s(4181)*s(4229)
s(4250) =< s(4186)*s(4223)
s(4251) =< s(4186)*s(4226)
s(4252) =< s(4186)*s(4220)
s(4253) =< s(4186)*s(4229)
s(4254) =< s(4141)*s(4131)
s(4255) =< s(4141)*s(4223)
s(4256) =< s(4195)*s(4223)
s(4257) =< s(4195)*s(4226)
s(4258) =< s(4195)*s(4220)
s(4259) =< s(4195)*s(4229)
s(4260) =< s(4200)*s(4223)
s(4261) =< s(4200)*s(4226)
s(4262) =< s(4200)*s(4129)
s(4263) =< s(4200)*s(4220)
s(4264) =< s(4205)*s(4131)
s(4265) =< s(4209)*s(4223)
s(4266) =< s(4209)*s(4226)
s(4267) =< s(4209)*s(4220)
s(4268) =< s(4209)*s(4229)
s(4269) =< s(4214)*s(4223)
s(4270) =< s(4214)*s(4226)
s(4271) =< s(4214)*s(4220)
s(4272) =< s(4214)*s(4229)

  with precondition: [A>=0,B>=0] 

* Chain [124]: 7
  with precondition: [B=0,A>=1,A>=F+2] 

* Chain [123]: 2*s(4278)+2*s(4279)+378*s(4286)+22*s(4287)+41315*s(4288)+186*s(4290)+10*s(4293)+10*s(4295)+5160*s(4297)+10*s(4299)+10*s(4300)+5160*s(4301)+20*s(4302)+20*s(4303)+24*s(4304)+30*s(4305)+12*s(4306)+2*s(4310)+12*s(4312)+12*s(4313)+16*s(4314)+1032*s(4315)+2*s(4316)+2*s(4317)+1032*s(4318)+4*s(4319)+4*s(4320)+10*s(4321)+10*s(4323)+15480*s(4325)+10*s(4326)+10*s(4327)+15480*s(4328)+20*s(4329)+20*s(4330)+126*s(4331)+2*s(4333)+3096*s(4335)+2*s(4336)+2*s(4337)+3096*s(4338)+4*s(4339)+4*s(4340)+84*s(4341)+408*s(4343)+408*s(4344)+100*s(4345)+10*s(4347)+10*s(4348)+10*s(4350)+10*s(4351)+30*s(4353)+30*s(4354)+20*s(4355)+20*s(4356)+20*s(4357)+20*s(4358)+2*s(4363)+36*s(4364)+36*s(4365)+48*s(4366)+50*s(4367)+50*s(4368)+2*s(4369)+2*s(4370)+6*s(4371)+6*s(4372)+4*s(4373)+4*s(4374)+4*s(4375)+4*s(4376)+50*s(4377)+50*s(4378)+50*s(4379)+50*s(4380)+150*s(4381)+150*s(4382)+100*s(4383)+100*s(4384)+100*s(4385)+100*s(4386)+10*s(4387)+10*s(4388)+10*s(4389)+30*s(4390)+30*s(4391)+20*s(4392)+20*s(4393)+20*s(4394)+20*s(4395)+4*s(4396)+129*s(4397)+2*s(4398)+2*s(4399)+14310*s(4400)+2*s(4401)+17
  Such that:s(4276) =< 1
s(4401) =< -A
aux(2859) =< -A+F
s(4278) =< A
s(4279) =< A+1
s(4280) =< B
s(4281) =< B+F
s(4282) =< B/2
s(4283) =< F
s(4284) =< F+1
s(4286) =< s(4276)
s(4287) =< aux(2859)
s(4288) =< s(4280)
s(4290) =< s(4280)
s(4290) =< s(4282)
s(4291) =< 1
s(4292) =< s(4280)
s(4293) =< s(4290)*s(4280)
s(4294) =< s(4290)*s(4280)
s(4295) =< s(4290)*s(4291)
s(4296) =< s(4290)*s(4292)
s(4297) =< s(4296)
s(4297) =< s(4280)
s(4298) =< s(4291)
s(4299) =< s(4297)*s(4291)
s(4300) =< s(4297)*s(4298)
s(4301) =< s(4294)
s(4301) =< s(4280)
s(4302) =< s(4301)*s(4291)
s(4303) =< s(4301)*s(4298)
s(4304) =< s(4282)
s(4305) =< s(4280)
s(4306) =< s(4282)
s(4305) =< s(4282)
s(4306) =< s(4286)* (1/2)+s(4282)
s(4305) =< s(4286)* (1/2)+s(4282)
s(4307) =< s(4286)*s(4291)
s(4308) =< s(4286)*s(4292)
s(4309) =< s(4305)*s(4292)
s(4310) =< s(4305)*s(4280)
s(4311) =< s(4305)*s(4280)
s(4312) =< s(4308)
s(4313) =< s(4307)
s(4314) =< s(4286)*s(4291)
s(4315) =< s(4309)
s(4315) =< s(4280)
s(4316) =< s(4315)*s(4291)
s(4317) =< s(4315)*s(4298)
s(4318) =< s(4311)
s(4318) =< s(4280)
s(4319) =< s(4318)*s(4291)
s(4320) =< s(4318)*s(4298)
s(4321) =< s(4288)*s(4280)
s(4322) =< s(4288)*s(4280)
s(4323) =< s(4288)*s(4291)
s(4324) =< s(4288)*s(4292)
s(4325) =< s(4324)
s(4325) =< s(4280)
s(4326) =< s(4325)*s(4291)
s(4327) =< s(4325)*s(4298)
s(4328) =< s(4322)
s(4328) =< s(4280)
s(4329) =< s(4328)*s(4291)
s(4330) =< s(4328)*s(4298)
s(4331) =< s(4280)
s(4331) =< s(4286)* (1/2)+s(4280)
s(4332) =< s(4331)*s(4292)
s(4333) =< s(4331)*s(4280)
s(4334) =< s(4331)*s(4280)
s(4335) =< s(4332)
s(4335) =< s(4280)
s(4336) =< s(4335)*s(4291)
s(4337) =< s(4335)*s(4298)
s(4338) =< s(4334)
s(4338) =< s(4280)
s(4339) =< s(4338)*s(4291)
s(4340) =< s(4338)*s(4298)
s(4341) =< s(4284)
s(4342) =< s(4283)
s(4343) =< s(4288)*s(4283)
s(4344) =< s(4288)*s(4342)
s(4345) =< s(4283)
s(4346) =< s(4283)+1
s(4347) =< s(4290)*s(4281)
s(4348) =< s(4290)*s(4346)
s(4349) =< s(4346)
s(4350) =< s(4297)*s(4346)
s(4351) =< s(4297)*s(4349)
s(4352) =< s(4342)
s(4353) =< s(4297)*s(4342)
s(4354) =< s(4297)*s(4352)
s(4355) =< s(4301)*s(4346)
s(4356) =< s(4301)*s(4349)
s(4357) =< s(4301)*s(4283)
s(4358) =< s(4301)*s(4342)
s(4359) =< s(4281)
s(4360) =< s(4286)*s(4346)
s(4361) =< s(4286)*s(4342)
s(4362) =< s(4286)*s(4359)
s(4363) =< s(4305)*s(4281)
s(4364) =< s(4362)
s(4365) =< s(4360)
s(4366) =< s(4361)
s(4367) =< s(4286)*s(4342)
s(4368) =< s(4286)*s(4346)
s(4369) =< s(4315)*s(4346)
s(4370) =< s(4315)*s(4349)
s(4371) =< s(4315)*s(4342)
s(4372) =< s(4315)*s(4352)
s(4373) =< s(4318)*s(4346)
s(4374) =< s(4318)*s(4349)
s(4375) =< s(4318)*s(4342)
s(4376) =< s(4318)*s(4352)
s(4377) =< s(4288)*s(4281)
s(4378) =< s(4288)*s(4346)
s(4379) =< s(4325)*s(4346)
s(4380) =< s(4325)*s(4349)
s(4381) =< s(4325)*s(4342)
s(4382) =< s(4325)*s(4352)
s(4383) =< s(4328)*s(4346)
s(4384) =< s(4328)*s(4349)
s(4385) =< s(4328)*s(4283)
s(4386) =< s(4328)*s(4342)
s(4387) =< s(4331)*s(4281)
s(4388) =< s(4335)*s(4346)
s(4389) =< s(4335)*s(4349)
s(4390) =< s(4335)*s(4342)
s(4391) =< s(4335)*s(4352)
s(4392) =< s(4338)*s(4346)
s(4393) =< s(4338)*s(4349)
s(4394) =< s(4338)*s(4342)
s(4395) =< s(4338)*s(4352)
s(4396) =< s(4281)
s(4397) =< s(4280)
s(4397) =< s(4281)
s(4398) =< s(4397)*s(4283)
s(4399) =< s(4397)*s(4342)

  with precondition: [0>=A+1,B>=0,F>=A] 

* Chain [122]: 6*s(4402)+24*s(4406)+5022*s(4407)+804*s(4409)+14
  Such that:s(4403) =< 1
s(4404) =< B
aux(2860) =< -A
s(4402) =< aux(2860)
s(4406) =< s(4403)
s(4407) =< s(4404)

  with precondition: [F+1=0,0>=A+1,B>=2] 

* Chain [121]: 3*s(4410)+6
  Such that:s(4410) =< B

  with precondition: [A=F,0>=A+2,B>=1] 

* Chain [120]: 7*s(4412)+6
  Such that:s(4411) =< B
s(4412) =< s(4411)

  with precondition: [A=F,A>=0,B>=0] 

* Chain [119]: 10*s(4414)+4
  Such that:s(4413) =< B
s(4414) =< s(4413)

  with precondition: [0>=A+1,B>=0,A>=F+1] 

* Chain [118]: 1
  with precondition: [0>=B+1] 

* Chain [117]: 147*s(4419)+36*s(4420)+4*s(4424)+4*s(4426)+1032*s(4428)+4*s(4430)+4*s(4431)+12*s(4433)+12*s(4434)+1032*s(4435)+8*s(4436)+8*s(4437)+8*s(4438)+8*s(4439)+6*s(4440)+348*s(4441)+6
  Such that:s(4415) =< B
s(4416) =< B+F
s(4417) =< B/2
s(4418) =< F
s(4419) =< s(4415)
s(4420) =< s(4415)
s(4420) =< s(4417)
s(4421) =< s(4418)+1
s(4422) =< s(4415)
s(4423) =< s(4418)
s(4424) =< s(4420)*s(4416)
s(4425) =< s(4420)*s(4415)
s(4426) =< s(4420)*s(4421)
s(4427) =< s(4420)*s(4422)
s(4428) =< s(4427)
s(4428) =< s(4415)
s(4429) =< s(4421)
s(4430) =< s(4428)*s(4421)
s(4431) =< s(4428)*s(4429)
s(4432) =< s(4423)
s(4433) =< s(4428)*s(4423)
s(4434) =< s(4428)*s(4432)
s(4435) =< s(4425)
s(4435) =< s(4415)
s(4436) =< s(4435)*s(4421)
s(4437) =< s(4435)*s(4429)
s(4438) =< s(4435)*s(4418)
s(4439) =< s(4435)*s(4423)
s(4440) =< s(4417)

  with precondition: [0>=F+2,A>=1,B>=0] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G):
* Chain [130]: 2*s(4722)+2*s(4723)+8*s(4731)+402*s(4732)+46340*s(4733)+22*s(4734)+186*s(4735)+10*s(4738)+10*s(4740)+5160*s(4742)+10*s(4744)+10*s(4745)+5160*s(4746)+20*s(4747)+20*s(4748)+24*s(4749)+30*s(4750)+12*s(4751)+2*s(4755)+12*s(4757)+12*s(4758)+16*s(4759)+1032*s(4760)+2*s(4761)+2*s(4762)+1032*s(4763)+4*s(4764)+4*s(4765)+10*s(4766)+10*s(4768)+15480*s(4770)+10*s(4771)+10*s(4772)+15480*s(4773)+20*s(4774)+20*s(4775)+126*s(4776)+2*s(4778)+3096*s(4780)+2*s(4781)+2*s(4782)+3096*s(4783)+4*s(4784)+4*s(4785)+84*s(4786)+408*s(4788)+408*s(4789)+100*s(4790)+10*s(4792)+10*s(4793)+10*s(4795)+10*s(4796)+30*s(4798)+30*s(4799)+20*s(4800)+20*s(4801)+20*s(4802)+20*s(4803)+2*s(4808)+36*s(4809)+36*s(4810)+48*s(4811)+50*s(4812)+50*s(4813)+2*s(4814)+2*s(4815)+6*s(4816)+6*s(4817)+4*s(4818)+4*s(4819)+4*s(4820)+4*s(4821)+50*s(4822)+50*s(4823)+50*s(4824)+50*s(4825)+150*s(4826)+150*s(4827)+100*s(4828)+100*s(4829)+100*s(4830)+100*s(4831)+10*s(4832)+10*s(4833)+10*s(4834)+30*s(4835)+30*s(4836)+20*s(4837)+20*s(4838)+20*s(4839)+20*s(4840)+4*s(4841)+129*s(4842)+2*s(4843)+2*s(4844)+15114*s(4845)+19
  Such that:s(4728) =< 1
s(4724) =< A+F
s(4725) =< A/2
s(4729) =< -B
s(4721) =< -B+F
s(4722) =< B
s(4723) =< B+1
s(4726) =< F
s(4727) =< F+1
aux(2864) =< A
s(4733) =< aux(2864)
s(4731) =< s(4729)
s(4732) =< s(4728)
s(4734) =< s(4721)
s(4735) =< aux(2864)
s(4735) =< s(4725)
s(4736) =< 1
s(4737) =< aux(2864)
s(4738) =< s(4735)*aux(2864)
s(4739) =< s(4735)*aux(2864)
s(4740) =< s(4735)*s(4736)
s(4741) =< s(4735)*s(4737)
s(4742) =< s(4741)
s(4742) =< aux(2864)
s(4743) =< s(4736)
s(4744) =< s(4742)*s(4736)
s(4745) =< s(4742)*s(4743)
s(4746) =< s(4739)
s(4746) =< aux(2864)
s(4747) =< s(4746)*s(4736)
s(4748) =< s(4746)*s(4743)
s(4749) =< s(4725)
s(4750) =< aux(2864)
s(4751) =< s(4725)
s(4750) =< s(4725)
s(4751) =< s(4732)* (1/2)+s(4725)
s(4750) =< s(4732)* (1/2)+s(4725)
s(4752) =< s(4732)*s(4736)
s(4753) =< s(4732)*s(4737)
s(4754) =< s(4750)*s(4737)
s(4755) =< s(4750)*aux(2864)
s(4756) =< s(4750)*aux(2864)
s(4757) =< s(4753)
s(4758) =< s(4752)
s(4759) =< s(4732)*s(4736)
s(4760) =< s(4754)
s(4760) =< aux(2864)
s(4761) =< s(4760)*s(4736)
s(4762) =< s(4760)*s(4743)
s(4763) =< s(4756)
s(4763) =< aux(2864)
s(4764) =< s(4763)*s(4736)
s(4765) =< s(4763)*s(4743)
s(4766) =< s(4733)*aux(2864)
s(4767) =< s(4733)*aux(2864)
s(4768) =< s(4733)*s(4736)
s(4769) =< s(4733)*s(4737)
s(4770) =< s(4769)
s(4770) =< aux(2864)
s(4771) =< s(4770)*s(4736)
s(4772) =< s(4770)*s(4743)
s(4773) =< s(4767)
s(4773) =< aux(2864)
s(4774) =< s(4773)*s(4736)
s(4775) =< s(4773)*s(4743)
s(4776) =< aux(2864)
s(4776) =< s(4732)* (1/2)+aux(2864)
s(4777) =< s(4776)*s(4737)
s(4778) =< s(4776)*aux(2864)
s(4779) =< s(4776)*aux(2864)
s(4780) =< s(4777)
s(4780) =< aux(2864)
s(4781) =< s(4780)*s(4736)
s(4782) =< s(4780)*s(4743)
s(4783) =< s(4779)
s(4783) =< aux(2864)
s(4784) =< s(4783)*s(4736)
s(4785) =< s(4783)*s(4743)
s(4786) =< s(4727)
s(4787) =< s(4726)
s(4788) =< s(4733)*s(4726)
s(4789) =< s(4733)*s(4787)
s(4790) =< s(4726)
s(4791) =< s(4726)+1
s(4792) =< s(4735)*s(4724)
s(4793) =< s(4735)*s(4791)
s(4794) =< s(4791)
s(4795) =< s(4742)*s(4791)
s(4796) =< s(4742)*s(4794)
s(4797) =< s(4787)
s(4798) =< s(4742)*s(4787)
s(4799) =< s(4742)*s(4797)
s(4800) =< s(4746)*s(4791)
s(4801) =< s(4746)*s(4794)
s(4802) =< s(4746)*s(4726)
s(4803) =< s(4746)*s(4787)
s(4804) =< s(4724)
s(4805) =< s(4732)*s(4791)
s(4806) =< s(4732)*s(4787)
s(4807) =< s(4732)*s(4804)
s(4808) =< s(4750)*s(4724)
s(4809) =< s(4807)
s(4810) =< s(4805)
s(4811) =< s(4806)
s(4812) =< s(4732)*s(4787)
s(4813) =< s(4732)*s(4791)
s(4814) =< s(4760)*s(4791)
s(4815) =< s(4760)*s(4794)
s(4816) =< s(4760)*s(4787)
s(4817) =< s(4760)*s(4797)
s(4818) =< s(4763)*s(4791)
s(4819) =< s(4763)*s(4794)
s(4820) =< s(4763)*s(4787)
s(4821) =< s(4763)*s(4797)
s(4822) =< s(4733)*s(4724)
s(4823) =< s(4733)*s(4791)
s(4824) =< s(4770)*s(4791)
s(4825) =< s(4770)*s(4794)
s(4826) =< s(4770)*s(4787)
s(4827) =< s(4770)*s(4797)
s(4828) =< s(4773)*s(4791)
s(4829) =< s(4773)*s(4794)
s(4830) =< s(4773)*s(4726)
s(4831) =< s(4773)*s(4787)
s(4832) =< s(4776)*s(4724)
s(4833) =< s(4780)*s(4791)
s(4834) =< s(4780)*s(4794)
s(4835) =< s(4780)*s(4787)
s(4836) =< s(4780)*s(4797)
s(4837) =< s(4783)*s(4791)
s(4838) =< s(4783)*s(4794)
s(4839) =< s(4783)*s(4787)
s(4840) =< s(4783)*s(4797)
s(4841) =< s(4724)
s(4842) =< aux(2864)
s(4842) =< s(4724)
s(4843) =< s(4842)*s(4726)
s(4844) =< s(4842)*s(4787)

  with precondition: [0>=B+1,A>=0,F>=B] 

* Chain [129]: 30*s(4858)+517*s(4859)+20*s(4860)+46*s(4861)+56690*s(4862)+126*s(4863)+602*s(4865)+602*s(4866)+142*s(4867)+480*s(4868)+42*s(4871)+42*s(4873)+13416*s(4875)+42*s(4877)+42*s(4878)+126*s(4880)+126*s(4881)+13416*s(4882)+84*s(4883)+84*s(4884)+84*s(4885)+84*s(4886)+66*s(4887)+60*s(4888)+24*s(4889)+6*s(4895)+54*s(4897)+54*s(4898)+72*s(4899)+74*s(4900)+74*s(4901)+2064*s(4902)+6*s(4903)+6*s(4904)+18*s(4905)+18*s(4906)+2064*s(4907)+12*s(4908)+12*s(4909)+12*s(4910)+12*s(4911)+68*s(4912)+68*s(4914)+20124*s(4916)+68*s(4917)+68*s(4918)+204*s(4919)+204*s(4920)+20124*s(4921)+136*s(4922)+136*s(4923)+136*s(4924)+136*s(4925)+147*s(4926)+12*s(4928)+3612*s(4930)+12*s(4931)+12*s(4932)+36*s(4933)+36*s(4934)+3612*s(4935)+24*s(4936)+24*s(4937)+24*s(4938)+24*s(4939)+36*s(4940)+124*s(4942)+124*s(4943)+10*s(4945)+10*s(4946)+10*s(4948)+10*s(4949)+30*s(4951)+30*s(4952)+20*s(4953)+20*s(4954)+20*s(4955)+20*s(4956)+2*s(4961)+12*s(4962)+12*s(4963)+16*s(4964)+16*s(4965)+16*s(4966)+2*s(4967)+2*s(4968)+6*s(4969)+6*s(4970)+4*s(4971)+4*s(4972)+4*s(4973)+4*s(4974)+10*s(4975)+10*s(4976)+10*s(4977)+10*s(4978)+30*s(4979)+30*s(4980)+20*s(4981)+20*s(4982)+20*s(4983)+20*s(4984)+2*s(4985)+2*s(4986)+2*s(4987)+6*s(4988)+6*s(4989)+4*s(4990)+4*s(4991)+4*s(4992)+4*s(4993)+21250*s(4994)+20
  Such that:s(4847) =< 1
s(4852) =< A+B
s(4854) =< A+F
s(4855) =< A/2
s(4848) =< -B+F
s(4849) =< -B+F+1
s(4850) =< B
s(4851) =< B+1
s(4856) =< F
s(4857) =< F+1
aux(2865) =< A
s(4858) =< s(4851)
s(4859) =< s(4847)
s(4860) =< s(4848)
s(4861) =< s(4850)
s(4862) =< aux(2865)
s(4863) =< s(4857)
s(4864) =< s(4856)
s(4865) =< s(4862)*s(4856)
s(4866) =< s(4862)*s(4864)
s(4867) =< s(4856)
s(4868) =< aux(2865)
s(4868) =< s(4855)
s(4869) =< s(4856)+1
s(4870) =< aux(2865)
s(4871) =< s(4868)*s(4854)
s(4872) =< s(4868)*aux(2865)
s(4873) =< s(4868)*s(4869)
s(4874) =< s(4868)*s(4870)
s(4875) =< s(4874)
s(4875) =< aux(2865)
s(4876) =< s(4869)
s(4877) =< s(4875)*s(4869)
s(4878) =< s(4875)*s(4876)
s(4879) =< s(4864)
s(4880) =< s(4875)*s(4864)
s(4881) =< s(4875)*s(4879)
s(4882) =< s(4872)
s(4882) =< aux(2865)
s(4883) =< s(4882)*s(4869)
s(4884) =< s(4882)*s(4876)
s(4885) =< s(4882)*s(4856)
s(4886) =< s(4882)*s(4864)
s(4887) =< s(4855)
s(4888) =< aux(2865)
s(4889) =< s(4855)
s(4888) =< s(4855)
s(4890) =< s(4854)
s(4889) =< s(4859)* (1/2)+s(4855)
s(4888) =< s(4859)* (1/2)+s(4855)
s(4891) =< s(4859)*s(4869)
s(4892) =< s(4859)*s(4864)
s(4893) =< s(4859)*s(4890)
s(4894) =< s(4888)*s(4870)
s(4895) =< s(4888)*s(4854)
s(4896) =< s(4888)*aux(2865)
s(4897) =< s(4893)
s(4898) =< s(4891)
s(4899) =< s(4892)
s(4900) =< s(4859)*s(4864)
s(4901) =< s(4859)*s(4869)
s(4902) =< s(4894)
s(4902) =< aux(2865)
s(4903) =< s(4902)*s(4869)
s(4904) =< s(4902)*s(4876)
s(4905) =< s(4902)*s(4864)
s(4906) =< s(4902)*s(4879)
s(4907) =< s(4896)
s(4907) =< aux(2865)
s(4908) =< s(4907)*s(4869)
s(4909) =< s(4907)*s(4876)
s(4910) =< s(4907)*s(4864)
s(4911) =< s(4907)*s(4879)
s(4912) =< s(4862)*s(4854)
s(4913) =< s(4862)*aux(2865)
s(4914) =< s(4862)*s(4869)
s(4915) =< s(4862)*s(4870)
s(4916) =< s(4915)
s(4916) =< aux(2865)
s(4917) =< s(4916)*s(4869)
s(4918) =< s(4916)*s(4876)
s(4919) =< s(4916)*s(4864)
s(4920) =< s(4916)*s(4879)
s(4921) =< s(4913)
s(4921) =< aux(2865)
s(4922) =< s(4921)*s(4869)
s(4923) =< s(4921)*s(4876)
s(4924) =< s(4921)*s(4856)
s(4925) =< s(4921)*s(4864)
s(4926) =< aux(2865)
s(4926) =< s(4859)* (1/2)+aux(2865)
s(4927) =< s(4926)*s(4870)
s(4928) =< s(4926)*s(4854)
s(4929) =< s(4926)*aux(2865)
s(4930) =< s(4927)
s(4930) =< aux(2865)
s(4931) =< s(4930)*s(4869)
s(4932) =< s(4930)*s(4876)
s(4933) =< s(4930)*s(4864)
s(4934) =< s(4930)*s(4879)
s(4935) =< s(4929)
s(4935) =< aux(2865)
s(4936) =< s(4935)*s(4869)
s(4937) =< s(4935)*s(4876)
s(4938) =< s(4935)*s(4864)
s(4939) =< s(4935)*s(4879)
s(4940) =< s(4849)
s(4941) =< s(4850)
s(4942) =< s(4862)*s(4850)
s(4943) =< s(4862)*s(4941)
s(4944) =< s(4850)+1
s(4945) =< s(4868)*s(4852)
s(4946) =< s(4868)*s(4944)
s(4947) =< s(4944)
s(4948) =< s(4875)*s(4944)
s(4949) =< s(4875)*s(4947)
s(4950) =< s(4941)
s(4951) =< s(4875)*s(4941)
s(4952) =< s(4875)*s(4950)
s(4953) =< s(4882)*s(4944)
s(4954) =< s(4882)*s(4947)
s(4955) =< s(4882)*s(4850)
s(4956) =< s(4882)*s(4941)
s(4957) =< s(4852)
s(4958) =< s(4859)*s(4944)
s(4959) =< s(4859)*s(4941)
s(4960) =< s(4859)*s(4957)
s(4961) =< s(4888)*s(4852)
s(4962) =< s(4960)
s(4963) =< s(4958)
s(4964) =< s(4959)
s(4965) =< s(4859)*s(4941)
s(4966) =< s(4859)*s(4944)
s(4967) =< s(4902)*s(4944)
s(4968) =< s(4902)*s(4947)
s(4969) =< s(4902)*s(4941)
s(4970) =< s(4902)*s(4950)
s(4971) =< s(4907)*s(4944)
s(4972) =< s(4907)*s(4947)
s(4973) =< s(4907)*s(4941)
s(4974) =< s(4907)*s(4950)
s(4975) =< s(4862)*s(4852)
s(4976) =< s(4862)*s(4944)
s(4977) =< s(4916)*s(4944)
s(4978) =< s(4916)*s(4947)
s(4979) =< s(4916)*s(4941)
s(4980) =< s(4916)*s(4950)
s(4981) =< s(4921)*s(4944)
s(4982) =< s(4921)*s(4947)
s(4983) =< s(4921)*s(4850)
s(4984) =< s(4921)*s(4941)
s(4985) =< s(4926)*s(4852)
s(4986) =< s(4930)*s(4944)
s(4987) =< s(4930)*s(4947)
s(4988) =< s(4930)*s(4941)
s(4989) =< s(4930)*s(4950)
s(4990) =< s(4935)*s(4944)
s(4991) =< s(4935)*s(4947)
s(4992) =< s(4935)*s(4941)
s(4993) =< s(4935)*s(4950)

  with precondition: [A>=0,B>=0] 

* Chain [128]: 3
  with precondition: [0>=A+1] 

* Chain [127]: 10*s(4998)+6
  Such that:s(4997) =< A
s(4998) =< s(4997)

  with precondition: [0>=B+1,A>=0,B>=F+1] 

* Chain [126]: 147*s(5003)+36*s(5004)+4*s(5008)+4*s(5010)+1032*s(5012)+4*s(5014)+4*s(5015)+12*s(5017)+12*s(5018)+1032*s(5019)+8*s(5020)+8*s(5021)+8*s(5022)+8*s(5023)+6*s(5024)+348*s(5025)+8
  Such that:s(4999) =< A
s(5000) =< A+F
s(5001) =< A/2
s(5002) =< F
s(5003) =< s(4999)
s(5004) =< s(4999)
s(5004) =< s(5001)
s(5005) =< s(5002)+1
s(5006) =< s(4999)
s(5007) =< s(5002)
s(5008) =< s(5004)*s(5000)
s(5009) =< s(5004)*s(4999)
s(5010) =< s(5004)*s(5005)
s(5011) =< s(5004)*s(5006)
s(5012) =< s(5011)
s(5012) =< s(4999)
s(5013) =< s(5005)
s(5014) =< s(5012)*s(5005)
s(5015) =< s(5012)*s(5013)
s(5016) =< s(5007)
s(5017) =< s(5012)*s(5007)
s(5018) =< s(5012)*s(5016)
s(5019) =< s(5009)
s(5019) =< s(4999)
s(5020) =< s(5019)*s(5005)
s(5021) =< s(5019)*s(5013)
s(5022) =< s(5019)*s(5002)
s(5023) =< s(5019)*s(5007)
s(5024) =< s(5001)

  with precondition: [0>=F+2,A>=0,B>=1] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G): 
-------------------------------------
* Chain [130] with precondition: [0>=B+1,A>=0,F>=B] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [129] with precondition: [A>=0,B>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [128] with precondition: [0>=A+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [127] with precondition: [0>=B+1,A>=0,B>=F+1] 
    - Upper bound: 10*A+6 
    - Complexity: n 
* Chain [126] with precondition: [0>=F+2,A>=0,B>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of pyRinit(A,B,C,D,E,F,G): inf 
Asymptotic class: infinity 
* Total analysis performed in 62280 ms.


-- stats
realtime 1:05.83
usertime 64.64
systime 0.41

