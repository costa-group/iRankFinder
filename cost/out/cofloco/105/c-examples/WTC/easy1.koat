WORST_CASE(?,O(1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evaleasy1bb3in___3/5,n_evaleasy1bbin___4/5]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_evaleasy1stop___5/3]
3. non_recursive  : [n_evaleasy1bbin___4_loop_cont/4]
4. non_recursive  : [n_evaleasy1bb3in___10/3]
5. recursive  : [n_evaleasy1bb3in___7/5,n_evaleasy1bbin___6/5]
6. non_recursive  : [n_evaleasy1bb3in___7_loop_cont/4]
7. non_recursive  : [n_evaleasy1bbin___8/3]
8. non_recursive  : [n_evaleasy1bb3in___11/3]
9. recursive  : [n_evaleasy1bb3in___1/5,n_evaleasy1bbin___2/5]
10. non_recursive  : [n_evaleasy1bbin___2_loop_cont/4]
11. non_recursive  : [n_evaleasy1bb3in___9/3]
12. non_recursive  : [n_evaleasy1bbin___12/3]
13. non_recursive  : [n_evaleasy1bb3in___13/3]
14. non_recursive  : [n_evaleasy1start/3]
15. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evaleasy1bbin___4/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evaleasy1bbin___4_loop_cont/4
4. SCC is partially evaluated into n_evaleasy1bb3in___10/3
5. SCC is partially evaluated into n_evaleasy1bb3in___7/5
6. SCC is partially evaluated into n_evaleasy1bb3in___7_loop_cont/4
7. SCC is partially evaluated into n_evaleasy1bbin___8/3
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into n_evaleasy1bbin___2/5
10. SCC is partially evaluated into n_evaleasy1bbin___2_loop_cont/4
11. SCC is partially evaluated into n_evaleasy1bb3in___9/3
12. SCC is partially evaluated into n_evaleasy1bbin___12/3
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evaleasy1bbin___4/5 
* CE 10 is refined into CE [23] 
* CE 8 is refined into CE [24] 
* CE 9 is refined into CE [25] 


### Cost equations --> "Loop" of n_evaleasy1bbin___4/5 
* CEs [25] --> Loop 23 
* CEs [23] --> Loop 24 
* CEs [24] --> Loop 25 

### Ranking functions of CR n_evaleasy1bbin___4(A,B,C,D,E) 
* RF of phase [23]: [-A/2+19]

#### Partial ranking functions of CR n_evaleasy1bbin___4(A,B,C,D,E) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    -A/2+19


### Specialization of cost equations n_evaleasy1bbin___4_loop_cont/4 
* CE 12 is refined into CE [26] 
* CE 11 is refined into CE [27] 


### Cost equations --> "Loop" of n_evaleasy1bbin___4_loop_cont/4 
* CEs [26] --> Loop 26 
* CEs [27] --> Loop 27 

### Ranking functions of CR n_evaleasy1bbin___4_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evaleasy1bbin___4_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evaleasy1bb3in___10/3 
* CE 5 is refined into CE [28,29] 


### Cost equations --> "Loop" of n_evaleasy1bb3in___10/3 
* CEs [28,29] --> Loop 28 

### Ranking functions of CR n_evaleasy1bb3in___10(A,B,C) 

#### Partial ranking functions of CR n_evaleasy1bb3in___10(A,B,C) 


### Specialization of cost equations n_evaleasy1bb3in___7/5 
* CE 15 is refined into CE [30] 
* CE 14 is refined into CE [31] 
* CE 13 is refined into CE [32] 


### Cost equations --> "Loop" of n_evaleasy1bb3in___7/5 
* CEs [32] --> Loop 29 
* CEs [30] --> Loop 30 
* CEs [31] --> Loop 31 

### Ranking functions of CR n_evaleasy1bb3in___7(A,B,C,D,E) 
* RF of phase [29]: [-A+40]

#### Partial ranking functions of CR n_evaleasy1bb3in___7(A,B,C,D,E) 
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    -A+40


### Specialization of cost equations n_evaleasy1bb3in___7_loop_cont/4 
* CE 17 is refined into CE [33] 
* CE 16 is refined into CE [34] 


### Cost equations --> "Loop" of n_evaleasy1bb3in___7_loop_cont/4 
* CEs [33] --> Loop 32 
* CEs [34] --> Loop 33 

### Ranking functions of CR n_evaleasy1bb3in___7_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evaleasy1bb3in___7_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evaleasy1bbin___8/3 
* CE 6 is refined into CE [35,36] 


### Cost equations --> "Loop" of n_evaleasy1bbin___8/3 
* CEs [35,36] --> Loop 34 

### Ranking functions of CR n_evaleasy1bbin___8(A,B,C) 

#### Partial ranking functions of CR n_evaleasy1bbin___8(A,B,C) 


### Specialization of cost equations n_evaleasy1bbin___2/5 
* CE 20 is refined into CE [37] 
* CE 18 is refined into CE [38] 
* CE 19 is refined into CE [39] 


### Cost equations --> "Loop" of n_evaleasy1bbin___2/5 
* CEs [39] --> Loop 35 
* CEs [37] --> Loop 36 
* CEs [38] --> Loop 37 

### Ranking functions of CR n_evaleasy1bbin___2(A,B,C,D,E) 
* RF of phase [35]: [-A/2+19]

#### Partial ranking functions of CR n_evaleasy1bbin___2(A,B,C,D,E) 
* Partial RF of phase [35]:
  - RF of loop [35:1]:
    -A/2+19


### Specialization of cost equations n_evaleasy1bbin___2_loop_cont/4 
* CE 22 is refined into CE [40] 
* CE 21 is refined into CE [41] 


### Cost equations --> "Loop" of n_evaleasy1bbin___2_loop_cont/4 
* CEs [40] --> Loop 38 
* CEs [41] --> Loop 39 

### Ranking functions of CR n_evaleasy1bbin___2_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evaleasy1bbin___2_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evaleasy1bb3in___9/3 
* CE 7 is refined into CE [42,43] 


### Cost equations --> "Loop" of n_evaleasy1bb3in___9/3 
* CEs [42,43] --> Loop 40 

### Ranking functions of CR n_evaleasy1bb3in___9(A,B,C) 

#### Partial ranking functions of CR n_evaleasy1bb3in___9(A,B,C) 


### Specialization of cost equations n_evaleasy1bbin___12/3 
* CE 4 is refined into CE [44] 
* CE 2 is refined into CE [45] 
* CE 3 is refined into CE [46] 


### Cost equations --> "Loop" of n_evaleasy1bbin___12/3 
* CEs [44] --> Loop 41 
* CEs [45] --> Loop 42 
* CEs [46] --> Loop 43 

### Ranking functions of CR n_evaleasy1bbin___12(A,B,C) 

#### Partial ranking functions of CR n_evaleasy1bbin___12(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [47,48,49] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [49] --> Loop 44 
* CEs [48] --> Loop 45 
* CEs [47] --> Loop 46 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_evaleasy1bbin___4(A,B,C,D,E):
* Chain [[23],25]: 2*it(23)+2
  Such that:it(23) =< -A/2+19

  with precondition: [C=2,37>=A,0>=B+1,A>=2] 

* Chain [[23],24]: 2*it(23)+0
  Such that:it(23) =< -A/2+19

  with precondition: [C=3,37>=A,0>=B+1,A>=2] 

* Chain [24]: 0
  with precondition: [C=3,0>=B+1,A>=2] 


#### Cost of chains of n_evaleasy1bbin___4_loop_cont(A,B,C,D):
* Chain [27]: 0
  with precondition: [A=2] 

* Chain [26]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evaleasy1bb3in___10(A,B,C):
* Chain [28]: 75
  with precondition: [A=2,0>=B+1] 


#### Cost of chains of n_evaleasy1bb3in___7(A,B,C,D,E):
* Chain [[29],31]: 2*it(29)+1
  Such that:it(29) =< -A+40

  with precondition: [B=0,C=2,39>=A,A>=2] 

* Chain [[29],30]: 2*it(29)+0
  Such that:it(29) =< -A+40

  with precondition: [B=0,C=3,39>=A,A>=2] 

* Chain [30]: 0
  with precondition: [B=0,C=3,A>=2] 


#### Cost of chains of n_evaleasy1bb3in___7_loop_cont(A,B,C,D):
* Chain [33]: 0
  with precondition: [A=2] 

* Chain [32]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evaleasy1bbin___8(A,B,C):
* Chain [34]: 154
  with precondition: [A=1,B=0] 


#### Cost of chains of n_evaleasy1bbin___2(A,B,C,D,E):
* Chain [[35],37]: 2*it(35)+2
  Such that:it(35) =< -A/2+19

  with precondition: [C=2,37>=A,A>=2,B>=1] 

* Chain [[35],36]: 2*it(35)+0
  Such that:it(35) =< -A/2+19

  with precondition: [C=3,37>=A,A>=2,B>=1] 

* Chain [36]: 0
  with precondition: [C=3,A>=2,B>=1] 


#### Cost of chains of n_evaleasy1bbin___2_loop_cont(A,B,C,D):
* Chain [39]: 0
  with precondition: [A=2] 

* Chain [38]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evaleasy1bb3in___9(A,B,C):
* Chain [40]: 75
  with precondition: [A=2,B>=1] 


#### Cost of chains of n_evaleasy1bbin___12(A,B,C):
* Chain [43]: 156
  with precondition: [A=0,B=0] 

* Chain [42]: 76
  with precondition: [A=0,0>=B+1] 

* Chain [41]: 76
  with precondition: [A=0,B>=1] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [46]: 159
  with precondition: [B=0] 

* Chain [45]: 79
  with precondition: [0>=B+1] 

* Chain [44]: 79
  with precondition: [B>=1] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [46] with precondition: [B=0] 
    - Upper bound: 159 
    - Complexity: constant 
* Chain [45] with precondition: [0>=B+1] 
    - Upper bound: 79 
    - Complexity: constant 
* Chain [44] with precondition: [B>=1] 
    - Upper bound: 79 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C): 159 
Asymptotic class: constant 
* Total analysis performed in 226 ms.


-- stats
realtime 0:00.27
usertime 0.27
systime 0.00

