WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalinsertsortbb2in___1/9,n_evalinsertsortbb3in___2/9]
1. recursive  : [n_evalinsertsortbb2in___4/9,n_evalinsertsortbb3in___2_loop_cont/10,n_evalinsertsortbb5in___5/9]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalinsertsortstop___3/5]
4. non_recursive  : [n_evalinsertsortbb5in___5_loop_cont/6]
5. non_recursive  : [n_evalinsertsortstart/5]
6. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalinsertsortbb3in___2/9
1. SCC is partially evaluated into n_evalinsertsortbb5in___5/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalinsertsortbb5in___5_loop_cont/6
5. SCC is partially evaluated into n_evalinsertsortstart/5
6. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalinsertsortbb3in___2/9 
* CE 12 is refined into CE [13] 
* CE 11 is refined into CE [14] 
* CE 9 is refined into CE [15] 
* CE 10 is refined into CE [16] 


### Cost equations --> "Loop" of n_evalinsertsortbb3in___2/9 
* CEs [16] --> Loop 12 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

### Ranking functions of CR n_evalinsertsortbb3in___2(A,B,C,D,E,F,G,H,I) 
* RF of phase [12]: [D]

#### Partial ranking functions of CR n_evalinsertsortbb3in___2(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    D


### Specialization of cost equations n_evalinsertsortbb5in___5/9 
* CE 5 is refined into CE [17] 
* CE 3 is refined into CE [18] 
* CE 6 is refined into CE [19] 
* CE 4 is refined into CE [20,21,22,23] 


### Cost equations --> "Loop" of n_evalinsertsortbb5in___5/9 
* CEs [23] --> Loop 16 
* CEs [22] --> Loop 17 
* CEs [21] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [17] --> Loop 20 
* CEs [18,19] --> Loop 21 

### Ranking functions of CR n_evalinsertsortbb5in___5(A,B,C,D,E,F,G,H,I) 
* RF of phase [16,17,18]: [-A+B]

#### Partial ranking functions of CR n_evalinsertsortbb5in___5(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [16,17,18]:
  - RF of loop [16:1,17:1,18:1]:
    -A+B


### Specialization of cost equations n_evalinsertsortbb5in___5_loop_cont/6 
* CE 7 is refined into CE [24] 
* CE 8 is refined into CE [25] 


### Cost equations --> "Loop" of n_evalinsertsortbb5in___5_loop_cont/6 
* CEs [24] --> Loop 22 
* CEs [25] --> Loop 23 

### Ranking functions of CR n_evalinsertsortbb5in___5_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalinsertsortbb5in___5_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalinsertsortstart/5 
* CE 2 is refined into CE [26,27,28,29] 


### Cost equations --> "Loop" of n_evalinsertsortstart/5 
* CEs [26,27,28,29] --> Loop 24 

### Ranking functions of CR n_evalinsertsortstart(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalinsertsortstart(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [30] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [30] --> Loop 25 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalinsertsortbb3in___2(A,B,C,D,E,F,G,H,I):
* Chain [[12],15]: 2*it(12)+2
  Such that:it(12) =< D

  with precondition: [E=2,I+1=0,A+1=F,B=G,C=H,D>=1,B>=A+1,A>=D+1] 

* Chain [[12],14]: 2*it(12)+1
  Such that:it(12) =< D-I

  with precondition: [E=2,A+1=F,B=G,C=H,I>=0,B>=A+1,A>=D+1,D>=I+1] 

* Chain [[12],13]: 2*it(12)+0
  Such that:it(12) =< D

  with precondition: [E=3,D>=1,B>=A+1,A>=D+1] 

* Chain [15]: 2
  with precondition: [D=0,E=2,I+1=0,H=C,A+1=F,B=G,A>=1,B>=A+1] 

* Chain [14]: 1
  with precondition: [E=2,H=C,A+1=F,B=G,D=I,D>=0,B>=A+1,A>=D+1] 

* Chain [13]: 0
  with precondition: [E=3,D>=0,B>=A+1,A>=D+1] 


#### Cost of chains of n_evalinsertsortbb5in___5(A,B,C,D,E,F,G,H,I):
* Chain [[16,17,18],21]: 10*it(16)+2*s(2)+2*s(7)+2*s(8)+2
  Such that:aux(5) =< -A+B
aux(6) =< B
s(2) =< aux(6)
it(16) =< aux(5)
aux(2) =< aux(6)
s(7) =< it(16)*aux(6)
s(8) =< it(16)*aux(2)

  with precondition: [E=3,A>=1,B>=A+1] 

* Chain [[16,17,18],20]: 10*it(16)+2*s(7)+2*s(8)+1
  Such that:aux(1) =< B
aux(7) =< -A+B
it(16) =< aux(7)
aux(2) =< aux(1)
s(7) =< it(16)*aux(1)
s(8) =< it(16)*aux(2)

  with precondition: [E=4,A>=1,B>=A+1] 

* Chain [21]: 2*s(2)+2
  Such that:s(2) =< A

  with precondition: [E=3,A>=1] 

* Chain [20]: 1
  with precondition: [E=4,A>=1,A>=B] 

* Chain [19,[16,17,18],21]: 12*it(16)+2*s(7)+2*s(8)+6
  Such that:aux(8) =< B
it(16) =< aux(8)
aux(2) =< aux(8)
s(7) =< it(16)*aux(8)
s(8) =< it(16)*aux(2)

  with precondition: [A=1,E=3,B>=3] 

* Chain [19,[16,17,18],20]: 10*it(16)+2*s(7)+2*s(8)+5
  Such that:aux(9) =< B
it(16) =< aux(9)
aux(2) =< aux(9)
s(7) =< it(16)*aux(9)
s(8) =< it(16)*aux(2)

  with precondition: [A=1,E=4,B>=3] 

* Chain [19,21]: 2*s(2)+6
  Such that:s(2) =< 2

  with precondition: [A=1,E=3,B>=2] 

* Chain [19,20]: 5
  with precondition: [A=1,B=2,E=4] 


#### Cost of chains of n_evalinsertsortbb5in___5_loop_cont(A,B,C,D,E,F):
* Chain [23]: 0
  with precondition: [A=3] 

* Chain [22]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalinsertsortstart(A,B,C,D,E):
* Chain [24]: 44*s(31)+8*s(33)+8*s(34)+2*s(35)+2*s(37)+7
  Such that:s(37) =< 1
s(35) =< 2
aux(13) =< B
s(31) =< aux(13)
s(32) =< aux(13)
s(33) =< s(31)*aux(13)
s(34) =< s(31)*s(32)

  with precondition: [] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [25]: 2*s(51)+2*s(52)+44*s(54)+8*s(56)+8*s(57)+8
  Such that:s(51) =< 1
s(52) =< 2
s(53) =< B
s(54) =< s(53)
s(55) =< s(53)
s(56) =< s(54)*s(53)
s(57) =< s(54)*s(55)

  with precondition: [] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [25] with precondition: [] 
    - Upper bound: nat(B)*44+14+nat(B)*16*nat(B) 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D,E): nat(B)*44+14+nat(B)*16*nat(B) 
Asymptotic class: n^2 
* Total analysis performed in 411 ms.


-- stats
realtime 0:00.47
usertime 0.44
systime 0.01

