WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [exit_location/1]
1. non_recursive  : [n_evalEx4stop___1/5]
2. non_recursive  : [n_evalEx4bb2in___2_loop_cont/6]
3. recursive  : [n_evalEx4bb2in___8/9,n_evalEx4bb3in___6/9]
4. recursive  : [n_evalEx4bb2in___3/9,n_evalEx4bb2in___8_loop_cont/10,n_evalEx4bb3in___10/9,n_evalEx4bb4in___4/9,n_evalEx4bb4in___7/9]
5. recursive  : [n_evalEx4bb2in___2/9,n_evalEx4bb4in___9/9]
6. non_recursive  : [n_evalEx4bb4in___5/5]
7. non_recursive  : [n_evalEx4bb3in___10_loop_cont/6]
8. non_recursive  : [n_evalEx4bb2in___11/5]
9. non_recursive  : [n_evalEx4bb4in___12/5]
10. non_recursive  : [n_evalEx4start/5]
11. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into n_evalEx4bb2in___2_loop_cont/6
3. SCC is partially evaluated into n_evalEx4bb2in___8/9
4. SCC is partially evaluated into n_evalEx4bb3in___10/9
5. SCC is partially evaluated into n_evalEx4bb4in___9/9
6. SCC is partially evaluated into n_evalEx4bb4in___5/5
7. SCC is partially evaluated into n_evalEx4bb3in___10_loop_cont/6
8. SCC is partially evaluated into n_evalEx4bb2in___11/5
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalEx4bb2in___2_loop_cont/6 
* CE 14 is refined into CE [21] 
* CE 13 is refined into CE [22] 


### Cost equations --> "Loop" of n_evalEx4bb2in___2_loop_cont/6 
* CEs [21] --> Loop 19 
* CEs [22] --> Loop 20 

### Ranking functions of CR n_evalEx4bb2in___2_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalEx4bb2in___2_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalEx4bb2in___8/9 
* CE 18 is refined into CE [23] 
* CE 15 is refined into CE [24] 
* CE 17 is refined into CE [25] 
* CE 16 is refined into CE [26] 


### Cost equations --> "Loop" of n_evalEx4bb2in___8/9 
* CEs [26] --> Loop 21 
* CEs [24] --> Loop 22 
* CEs [23] --> Loop 23 
* CEs [25] --> Loop 24 

### Ranking functions of CR n_evalEx4bb2in___8(A,B,C,D,E,F,G,H,I) 
* RF of phase [21]: [D]

#### Partial ranking functions of CR n_evalEx4bb2in___8(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    D


### Specialization of cost equations n_evalEx4bb3in___10/9 
* CE 7 is refined into CE [27] 
* CE 4 is refined into CE [28] 
* CE 8 is refined into CE [29] 
* CE 5 is refined into CE [30,31] 
* CE 6 is refined into CE [32,33] 


### Cost equations --> "Loop" of n_evalEx4bb3in___10/9 
* CEs [33] --> Loop 25 
* CEs [32] --> Loop 26 
* CEs [27] --> Loop 27 
* CEs [28,29] --> Loop 28 
* CEs [31] --> Loop 29 
* CEs [30] --> Loop 30 

### Ranking functions of CR n_evalEx4bb3in___10(A,B,C,D,E,F,G,H,I) 
* RF of phase [25,26]: [B-1]

#### Partial ranking functions of CR n_evalEx4bb3in___10(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [25,26]:
  - RF of loop [25:1]:
    B/2-1
  - RF of loop [26:1]:
    B-1
    D-1


### Specialization of cost equations n_evalEx4bb4in___9/9 
* CE 12 is refined into CE [34] 


### Cost equations --> "Loop" of n_evalEx4bb4in___9/9 
* CEs [34] --> Loop 31 

### Ranking functions of CR n_evalEx4bb4in___9(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_evalEx4bb4in___9(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_evalEx4bb4in___5/5 
* CE 19 is refined into CE [35] 
* CE 20 is refined into CE [36] 


### Cost equations --> "Loop" of n_evalEx4bb4in___5/5 
* CEs [35,36] --> Loop 32 

### Ranking functions of CR n_evalEx4bb4in___5(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalEx4bb4in___5(A,B,C,D,E) 


### Specialization of cost equations n_evalEx4bb3in___10_loop_cont/6 
* CE 10 is refined into CE [37] 
* CE 9 is refined into CE [38] 
* CE 11 is refined into CE [39] 


### Cost equations --> "Loop" of n_evalEx4bb3in___10_loop_cont/6 
* CEs [37] --> Loop 33 
* CEs [38] --> Loop 34 
* CEs [39] --> Loop 35 

### Ranking functions of CR n_evalEx4bb3in___10_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalEx4bb3in___10_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalEx4bb2in___11/5 
* CE 2 is refined into CE [40,41,42,43] 
* CE 3 is refined into CE [44] 


### Cost equations --> "Loop" of n_evalEx4bb2in___11/5 
* CEs [44] --> Loop 36 
* CEs [40,41,42,43] --> Loop 37 

### Ranking functions of CR n_evalEx4bb2in___11(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalEx4bb2in___11(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [45,46] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [46] --> Loop 38 
* CEs [45] --> Loop 39 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalEx4bb2in___2_loop_cont(A,B,C,D,E,F):
* Chain [20]: 0
  with precondition: [A=3] 

* Chain [19]: 0
  with precondition: [A=5] 


#### Cost of chains of n_evalEx4bb2in___8(A,B,C,D,E,F,G,H,I):
* Chain [[21],24]: 2*it(21)+1
  Such that:it(21) =< D

  with precondition: [A=1,C=1,E=2,F=1,G=0,H=1,I=0,D>=1,B>=D+1] 

* Chain [[21],23]: 2*it(21)+0
  Such that:it(21) =< D

  with precondition: [A=1,C=1,E=3,D>=1,B>=D+1] 

* Chain [[21],22]: 2*it(21)+2
  Such that:it(21) =< D-I

  with precondition: [A=1,C=1,E=4,F=1,H=1,G=I,G>=1,B>=D+1,D>=G+1] 

* Chain [24]: 1
  with precondition: [A=1,C=1,D=0,E=2,F=1,G=0,H=1,I=0,B>=1] 

* Chain [23]: 0
  with precondition: [A=1,C=1,E=3,D>=0,B>=D+1] 

* Chain [22]: 2
  with precondition: [A=1,C=1,E=4,F=1,H=1,D=G,D=I,D>=1,B>=D+1] 


#### Cost of chains of n_evalEx4bb3in___10(A,B,C,D,E,F,G,H,I):
* Chain [[25,26],30]: 5*it(25)+7*it(26)+2
  Such that:it(25) =< B/2
aux(5) =< B
it(25) =< aux(5)
it(26) =< aux(5)

  with precondition: [A=1,C=0,E=2,F=1,G=0,H=1,I=0,B=D,B>=2] 

* Chain [[25,26],29]: 14*it(25)+2
  Such that:aux(6) =< D
it(25) =< aux(6)

  with precondition: [A=1,C=0,E=2,F=1,G=0,H=1,I=0,B=D,B>=3] 

* Chain [[25,26],28]: 14*it(25)+1
  Such that:aux(7) =< D
it(25) =< aux(7)

  with precondition: [A=1,C=0,E=3,B=D,B>=2] 

* Chain [[25,26],27]: 5*it(25)+7*it(26)+2
  Such that:it(25) =< D/2
aux(8) =< D
it(25) =< aux(8)
it(26) =< aux(8)

  with precondition: [A=1,C=0,E=5,B=D,B>=2] 

* Chain [30]: 2
  with precondition: [A=1,B=1,C=0,D=1,E=2,F=1,G=0,H=1,I=0] 

* Chain [29]: 2*s(5)+2
  Such that:s(5) =< D

  with precondition: [A=1,C=0,E=2,F=1,G=0,H=1,I=0,D=B,D>=2] 

* Chain [28]: 2*s(6)+1
  Such that:s(6) =< D

  with precondition: [A=1,C=0,E=3,D=B,D>=1] 

* Chain [27]: 2
  with precondition: [A=1,C=0,E=5,D=B,D>=1] 


#### Cost of chains of n_evalEx4bb4in___9(A,B,C,D,E,F,G,H,I):
* Chain [31]: 1
  with precondition: [A=0,C=0,E=5,D=B,0>=D] 


#### Cost of chains of n_evalEx4bb4in___5(A,B,C,D,E):
* Chain [32]: 3
  with precondition: [A=1,B=0,C=1,D=0] 


#### Cost of chains of n_evalEx4bb3in___10_loop_cont(A,B,C,D,E,F):
* Chain [35]: 3
  with precondition: [A=2,B=1,C=0,D=1,E=0] 

* Chain [34]: 0
  with precondition: [A=3] 

* Chain [33]: 0
  with precondition: [A=5] 


#### Cost of chains of n_evalEx4bb2in___11(A,B,C,D,E):
* Chain [37]: 10*s(20)+46*s(22)+6
  Such that:aux(12) =< D
aux(13) =< D/2
s(20) =< aux(13)
s(22) =< aux(12)
s(20) =< aux(12)

  with precondition: [A=1,C=0,D=B,D>=1] 

* Chain [36]: 2
  with precondition: [A=1,C=0,D=B,0>=D] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [39]: 5
  with precondition: [0>=A] 

* Chain [38]: 10*s(31)+46*s(32)+9
  Such that:s(29) =< A
s(30) =< A/2
s(31) =< s(30)
s(32) =< s(29)
s(31) =< s(29)

  with precondition: [A>=1] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [39] with precondition: [0>=A] 
    - Upper bound: 5 
    - Complexity: constant 
* Chain [38] with precondition: [A>=1] 
    - Upper bound: 51*A+9 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E): nat(A)*46+4+nat(A/2)*10+5 
Asymptotic class: n 
* Total analysis performed in 524 ms.


-- stats
realtime 0:00.60
usertime 0.57
systime 0.00

