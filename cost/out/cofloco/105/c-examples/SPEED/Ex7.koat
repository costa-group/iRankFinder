WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalEx7bb3in___4/7,n_evalEx7bbin___3/7]
1. recursive  : [n_evalEx7bb3in___4_loop_cont/8,n_evalEx7bb3in___6/7,n_evalEx7bb3in___8/7,n_evalEx7bbin___2/7,n_evalEx7bbin___5/7,n_evalEx7bbin___7/7]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalEx7stop___1/4]
4. non_recursive  : [n_evalEx7bb3in___8_loop_cont/5]
5. non_recursive  : [n_evalEx7bbin___9/4]
6. non_recursive  : [n_evalEx7bb3in___10/4]
7. non_recursive  : [n_evalEx7start/4]
8. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalEx7bb3in___4/7
1. SCC is partially evaluated into n_evalEx7bb3in___8/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalEx7bb3in___8_loop_cont/5
5. SCC is partially evaluated into n_evalEx7bbin___9/4
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalEx7bb3in___4/7 
* CE 11 is refined into CE [12] 
* CE 10 is refined into CE [13] 
* CE 9 is refined into CE [14] 


### Cost equations --> "Loop" of n_evalEx7bb3in___4/7 
* CEs [14] --> Loop 11 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

### Ranking functions of CR n_evalEx7bb3in___4(A,B,C,D,E,F,G) 
* RF of phase [11]: [A-C,B-C-1]

#### Partial ranking functions of CR n_evalEx7bb3in___4(A,B,C,D,E,F,G) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    A-C
    B-C-1


### Specialization of cost equations n_evalEx7bb3in___8/7 
* CE 3 is refined into CE [15] 
* CE 6 is refined into CE [16] 
* CE 4 is refined into CE [17,18] 
* CE 5 is refined into CE [19] 


### Cost equations --> "Loop" of n_evalEx7bb3in___8/7 
* CEs [19] --> Loop 14 
* CEs [15,16] --> Loop 15 
* CEs [18] --> Loop 16 
* CEs [17] --> Loop 17 

### Ranking functions of CR n_evalEx7bb3in___8(A,B,C,D,E,F,G) 
* RF of phase [14]: [B-C+1]

#### Partial ranking functions of CR n_evalEx7bb3in___8(A,B,C,D,E,F,G) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    B-C+1


### Specialization of cost equations n_evalEx7bb3in___8_loop_cont/5 
* CE 7 is refined into CE [20] 
* CE 8 is refined into CE [21] 


### Cost equations --> "Loop" of n_evalEx7bb3in___8_loop_cont/5 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 

### Ranking functions of CR n_evalEx7bb3in___8_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalEx7bb3in___8_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalEx7bbin___9/4 
* CE 2 is refined into CE [22,23,24,25,26] 


### Cost equations --> "Loop" of n_evalEx7bbin___9/4 
* CEs [24] --> Loop 20 
* CEs [23] --> Loop 21 
* CEs [22,25,26] --> Loop 22 

### Ranking functions of CR n_evalEx7bbin___9(A,B,C,D) 

#### Partial ranking functions of CR n_evalEx7bbin___9(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [27] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [27] --> Loop 23 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalEx7bb3in___4(A,B,C,D,E,F,G):
* Chain [[11],13]: 2*it(11)+1
  Such that:it(11) =< A-C

  with precondition: [D=3,C>=1,B>=A+1,A>=C+1] 

* Chain [[11],12]: 2*it(11)+0
  Such that:it(11) =< A-C

  with precondition: [D=4,C>=1,B>=A+1,A>=C+1] 

* Chain [13]: 1
  with precondition: [D=3,C=A,C>=1,B>=C+1] 

* Chain [12]: 0
  with precondition: [D=4,C>=1,B>=A+1,A>=C] 


#### Cost of chains of n_evalEx7bb3in___8(A,B,C,D,E,F,G):
* Chain [[14],17]: 2*it(14)+5
  Such that:it(14) =< B-C+1

  with precondition: [A=1,D=3,C>=3,B>=C] 

* Chain [[14],16]: 2*it(14)+2*s(2)+5
  Such that:s(2) =< A
it(14) =< B-C+1

  with precondition: [D=3,A>=2,C>=A+2,B>=C] 

* Chain [[14],15]: 2*it(14)+2*s(3)+4
  Such that:s(3) =< A
it(14) =< B-C+1

  with precondition: [D=4,A>=1,C>=A+2,B>=C] 

* Chain [17]: 5
  with precondition: [A=1,D=3,C=B+1,C>=3] 

* Chain [16]: 2*s(2)+5
  Such that:s(2) =< A

  with precondition: [D=3,C=B+1,A>=2,C>=A+2] 

* Chain [15]: 2*s(3)+4
  Such that:s(3) =< A

  with precondition: [D=4,A>=1,C>=A+2,B+1>=C] 


#### Cost of chains of n_evalEx7bb3in___8_loop_cont(A,B,C,D,E):
* Chain [19]: 0
  with precondition: [A=3] 

* Chain [18]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalEx7bbin___9(A,B,C,D):
* Chain [22]: 6*s(7)+4*s(8)+6
  Such that:aux(2) =< B-C
aux(3) =< C
s(8) =< aux(2)
s(7) =< aux(3)

  with precondition: [C=A+1,C>=2,B>=C] 

* Chain [21]: 2*s(12)+6
  Such that:s(12) =< B

  with precondition: [A=1,C=2,B>=3] 

* Chain [20]: 2*s(13)+6
  Such that:s(13) =< C

  with precondition: [A+1=B,A+1=C,A>=2] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [23]: 2*s(20)+8*s(23)+4*s(24)+9
  Such that:s(21) =< -A+B
s(22) =< A+1
s(20) =< B
s(23) =< s(22)
s(24) =< s(21)

  with precondition: [A>=1,B>=A+1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [23] with precondition: [A>=1,B>=A+1] 
    - Upper bound: 4*A+6*B+17 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): 4*A+6*B+17 
Asymptotic class: n 
* Total analysis performed in 273 ms.


-- stats
realtime 0:00.34
usertime 0.32
systime 0.00

