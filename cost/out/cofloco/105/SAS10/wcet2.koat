WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_lbl82___10/17]
1. non_recursive  : [exit_location/1]
2. recursive  : [n_lbl82___6/17]
3. recursive  : [n_lbl82___6_loop_cont/18,n_lbl82___7/17,n_lbl82___8/17,n_lbl92___9/17]
4. non_recursive  : [n_stop___12/9]
5. non_recursive  : [n_lbl92___9_loop_cont/10]
6. non_recursive  : [n_lbl82___10_loop_cont/10]
7. non_recursive  : [n_lbl82___11/9]
8. non_recursive  : [n_lbl82___14/9]
9. recursive  : [n_lbl82___2/17]
10. non_recursive  : [n_lbl92___1/9]
11. non_recursive  : [n_lbl82___2_loop_cont/10]
12. non_recursive  : [n_lbl82___3/9]
13. non_recursive  : [n_lbl82___5/9]
14. recursive  : [n_lbl92___4/17]
15. non_recursive  : [n_lbl92___4_loop_cont/10]
16. non_recursive  : [n_lbl92___13/9]
17. non_recursive  : [n_start___15/9]
18. non_recursive  : [n_start0/9]
19. non_recursive  : [pyRinit/9]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_lbl82___10/17
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into n_lbl82___6/17
3. SCC is partially evaluated into n_lbl92___9/17
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_lbl92___9_loop_cont/10
6. SCC is partially evaluated into n_lbl82___10_loop_cont/10
7. SCC is partially evaluated into n_lbl82___11/9
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into n_lbl82___2/17
10. SCC is partially evaluated into n_lbl92___1/9
11. SCC is partially evaluated into n_lbl82___2_loop_cont/10
12. SCC is partially evaluated into n_lbl82___3/9
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into n_lbl92___4/17
15. SCC is partially evaluated into n_lbl92___4_loop_cont/10
16. SCC is partially evaluated into n_lbl92___13/9
17. SCC is partially evaluated into n_start___15/9
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into pyRinit/9

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_lbl82___10/17 
* CE 10 is refined into CE [35] 
* CE 9 is refined into CE [36] 
* CE 8 is refined into CE [37] 


### Cost equations --> "Loop" of n_lbl82___10/17 
* CEs [37] --> Loop 33 
* CEs [35] --> Loop 34 
* CEs [36] --> Loop 35 

### Ranking functions of CR n_lbl82___10(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [33]: [-B+9,-F+10]

#### Partial ranking functions of CR n_lbl82___10(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [33]:
  - RF of loop [33:1]:
    -B+9
    -F+10


### Specialization of cost equations n_lbl82___6/17 
* CE 32 is refined into CE [38] 
* CE 31 is refined into CE [39] 
* CE 30 is refined into CE [40] 


### Cost equations --> "Loop" of n_lbl82___6/17 
* CEs [40] --> Loop 36 
* CEs [38] --> Loop 37 
* CEs [39] --> Loop 38 

### Ranking functions of CR n_lbl82___6(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [36]: [-B+9,-F+10]

#### Partial ranking functions of CR n_lbl82___6(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [36]:
  - RF of loop [36:1]:
    -B+9
    -F+10


### Specialization of cost equations n_lbl92___9/17 
* CE 21 is refined into CE [41] 
* CE 19 is refined into CE [42] 
* CE 22 is refined into CE [43] 
* CE 20 is refined into CE [44] 


### Cost equations --> "Loop" of n_lbl92___9/17 
* CEs [44] --> Loop 39 
* CEs [41] --> Loop 40 
* CEs [42,43] --> Loop 41 

### Ranking functions of CR n_lbl92___9(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 

#### Partial ranking functions of CR n_lbl92___9(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 


### Specialization of cost equations n_lbl92___9_loop_cont/10 
* CE 23 is refined into CE [45] 
* CE 24 is refined into CE [46] 


### Cost equations --> "Loop" of n_lbl92___9_loop_cont/10 
* CEs [45] --> Loop 42 
* CEs [46] --> Loop 43 

### Ranking functions of CR n_lbl92___9_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR n_lbl92___9_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations n_lbl82___10_loop_cont/10 
* CE 12 is refined into CE [47] 
* CE 11 is refined into CE [48,49,50] 


### Cost equations --> "Loop" of n_lbl82___10_loop_cont/10 
* CEs [47] --> Loop 44 
* CEs [48,49,50] --> Loop 45 

### Ranking functions of CR n_lbl82___10_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR n_lbl82___10_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations n_lbl82___11/9 
* CE 5 is refined into CE [51,52] 


### Cost equations --> "Loop" of n_lbl82___11/9 
* CEs [51,52] --> Loop 46 

### Ranking functions of CR n_lbl82___11(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_lbl82___11(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_lbl82___2/17 
* CE 27 is refined into CE [53] 
* CE 26 is refined into CE [54] 
* CE 25 is refined into CE [55] 


### Cost equations --> "Loop" of n_lbl82___2/17 
* CEs [55] --> Loop 47 
* CEs [53] --> Loop 48 
* CEs [54] --> Loop 49 

### Ranking functions of CR n_lbl82___2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [47]: [-B+9,-F+10]

#### Partial ranking functions of CR n_lbl82___2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [47]:
  - RF of loop [47:1]:
    -B+9
    -F+10


### Specialization of cost equations n_lbl92___1/9 
* CE 33 is refined into CE [56] 
* CE 34 is refined into CE [57,58] 


### Cost equations --> "Loop" of n_lbl92___1/9 
* CEs [56,57,58] --> Loop 50 

### Ranking functions of CR n_lbl92___1(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_lbl92___1(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_lbl82___2_loop_cont/10 
* CE 28 is refined into CE [59] 
* CE 29 is refined into CE [60] 


### Cost equations --> "Loop" of n_lbl82___2_loop_cont/10 
* CEs [59] --> Loop 51 
* CEs [60] --> Loop 52 

### Ranking functions of CR n_lbl82___2_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR n_lbl82___2_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations n_lbl82___3/9 
* CE 13 is refined into CE [61,62] 


### Cost equations --> "Loop" of n_lbl82___3/9 
* CEs [61,62] --> Loop 53 

### Ranking functions of CR n_lbl82___3(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_lbl82___3(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_lbl92___4/17 
* CE 16 is refined into CE [63] 
* CE 14 is refined into CE [64] 
* CE 15 is refined into CE [65] 


### Cost equations --> "Loop" of n_lbl92___4/17 
* CEs [65] --> Loop 54 
* CEs [63] --> Loop 55 
* CEs [64] --> Loop 56 

### Ranking functions of CR n_lbl92___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [54]: [-D+2,-H+3]

#### Partial ranking functions of CR n_lbl92___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [54]:
  - RF of loop [54:1]:
    -D+2
    -H+3


### Specialization of cost equations n_lbl92___4_loop_cont/10 
* CE 17 is refined into CE [66] 
* CE 18 is refined into CE [67] 


### Cost equations --> "Loop" of n_lbl92___4_loop_cont/10 
* CEs [66] --> Loop 57 
* CEs [67] --> Loop 58 

### Ranking functions of CR n_lbl92___4_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR n_lbl92___4_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations n_lbl92___13/9 
* CE 7 is refined into CE [68,69,70] 
* CE 6 is refined into CE [71] 


### Cost equations --> "Loop" of n_lbl92___13/9 
* CEs [71] --> Loop 59 
* CEs [68,69,70] --> Loop 60 

### Ranking functions of CR n_lbl92___13(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_lbl92___13(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_start___15/9 
* CE 4 is refined into CE [72] 
* CE 3 is refined into CE [73,74] 
* CE 2 is refined into CE [75] 


### Cost equations --> "Loop" of n_start___15/9 
* CEs [72] --> Loop 61 
* CEs [74] --> Loop 62 
* CEs [75] --> Loop 63 
* CEs [73] --> Loop 64 

### Ranking functions of CR n_start___15(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_start___15(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations pyRinit/9 
* CE 1 is refined into CE [76,77,78,79] 


### Cost equations --> "Loop" of pyRinit/9 
* CEs [79] --> Loop 65 
* CEs [78] --> Loop 66 
* CEs [77] --> Loop 67 
* CEs [76] --> Loop 68 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 


Computing Bounds
=====================================

#### Cost of chains of n_lbl82___10(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[33],35]: 1*it(33)+1
  Such that:it(33) =< -B+9

  with precondition: [I=2,K=9,O=10,F=B+1,D=E,A=H,A=J,C=L,A=M,D=N,G=P,A+1=Q,4>=A,9>=F,A>=3,F>=3] 

* Chain [[33],34]: 1*it(33)+0
  Such that:it(33) =< -F+10

  with precondition: [I=3,F=B+1,D=E,A=H,4>=A,9>=F,A>=3,F>=3] 

* Chain [34]: 0
  with precondition: [I=3,H=A,F=B+1,E=D,4>=H,F>=3,H>=3] 


#### Cost of chains of n_lbl82___6(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[36],38]: 1*it(36)+1
  Such that:it(36) =< -B+9

  with precondition: [D=3,H=4,I=2,K=9,M=4,O=10,Q=5,F=B+1,A=J,C=L,E=N,G=P,3>=A,9>=F,F>=3] 

* Chain [[36],37]: 1*it(36)+0
  Such that:it(36) =< -F+10

  with precondition: [D=3,H=4,I=3,F=B+1,3>=A,9>=F,F>=3] 

* Chain [37]: 0
  with precondition: [D=3,H=4,I=3,F=B+1,3>=A,F>=3] 


#### Cost of chains of n_lbl92___9(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [41]: 10
  with precondition: [I=3] 

* Chain [40]: 1
  with precondition: [B=9,D=4,F=10,H=5,I=4,4>=A] 

* Chain [39,41]: 1*s(4)+14
  Such that:s(4) =< 7

  with precondition: [B=9,D=3,F=10,H=4,I=3,3>=A] 

* Chain [39,40]: 1*s(4)+5
  Such that:s(4) =< 7

  with precondition: [B=9,D=3,F=10,H=4,I=4,3>=A] 


#### Cost of chains of n_lbl92___9_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [43]: 0
  with precondition: [A=3] 

* Chain [42]: 0
  with precondition: [A=4] 


#### Cost of chains of n_lbl82___10_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [45]: 28
  with precondition: [A=2] 

* Chain [44]: 0
  with precondition: [A=3] 


#### Cost of chains of n_lbl82___11(A,B,C,D,E,F,G,H,I):
* Chain [46]: 44
  with precondition: [B=1,F=2,H=A,E=D,4>=H,H>=3] 


#### Cost of chains of n_lbl82___2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[47],49]: 1*it(47)+1
  Such that:it(47) =< -B+9

  with precondition: [D=2,H=3,I=5,K=9,M=3,O=10,Q=4,F=B+1,A=J,C=L,E=N,G=P,2>=A,9>=F,F>=3] 

* Chain [[47],48]: 1*it(47)+0
  Such that:it(47) =< -F+10

  with precondition: [D=2,H=3,I=3,F=B+1,2>=A,9>=F,F>=3] 

* Chain [48]: 0
  with precondition: [D=2,H=3,I=3,F=B+1,2>=A,F>=3] 


#### Cost of chains of n_lbl92___1(A,B,C,D,E,F,G,H,I):
* Chain [50]: 46
  with precondition: [B=9,D=3,F=10,H=4,2>=A] 


#### Cost of chains of n_lbl82___2_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [52]: 0
  with precondition: [A=3] 

* Chain [51]: 46
  with precondition: [A=5,C=9,E=3,G=10,I=4,2>=B] 


#### Cost of chains of n_lbl82___3(A,B,C,D,E,F,G,H,I):
* Chain [53]: 62
  with precondition: [B=1,D=2,F=2,H=3,2>=A] 


#### Cost of chains of n_lbl92___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[54],56]: 1*it(54)+1
  Such that:it(54) =< -D+2

  with precondition: [F=0,I=6,K=0,M=2,O=1,Q=3,B=C,H=D+1,A=J,B=L,E=N,G=P,2>=H,H>=A+2] 

* Chain [[54],55]: 1*it(54)+0
  Such that:it(54) =< -H+3

  with precondition: [F=0,I=3,B=C,H=D+1,2>=H,H>=A+2] 

* Chain [56]: 1
  with precondition: [D=2,F=0,H=3,I=6,K=0,M=2,O=1,Q=3,C=B,N=E,P=G,A=J,C=L,1>=A] 

* Chain [55]: 0
  with precondition: [F=0,I=3,C=B,H=D+1,3>=H,H>=A+2] 


#### Cost of chains of n_lbl92___4_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [58]: 0
  with precondition: [A=3] 

* Chain [57]: 63
  with precondition: [A=6,C=0,E=2,G=1,I=3,2>=B] 


#### Cost of chains of n_lbl92___13(A,B,C,D,E,F,G,H,I):
* Chain [60]: 1*s(16)+1*s(17)+65
  Such that:s(16) =< -D+1
s(17) =< -H+2

  with precondition: [F=0,D=A,C=B,D+1=H,1>=D] 

* Chain [59]: 64
  with precondition: [A=2,D=2,F=0,H=3,C=B] 


#### Cost of chains of n_start___15(A,B,C,D,E,F,G,H,I):
* Chain [64]: 65
  with precondition: [A=2,H=2,C=B,E=D,G=F] 

* Chain [63]: 46
  with precondition: [H=A,C=B,E=D,G=F,4>=H,H>=3] 

* Chain [62]: 2*s(18)+66
  Such that:aux(4) =< -A+1
s(18) =< aux(4)

  with precondition: [H=A,C=B,E=D,G=F,1>=H] 

* Chain [61]: 1
  with precondition: [H=A,C=B,E=D,G=F,H>=5] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G,H,I):
* Chain [68]: 67
  with precondition: [A=2] 

* Chain [67]: 48
  with precondition: [4>=A,A>=3] 

* Chain [66]: 2*s(21)+68
  Such that:s(20) =< -A+1
s(21) =< s(20)

  with precondition: [1>=A] 

* Chain [65]: 3
  with precondition: [A>=5] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G,H,I): 
-------------------------------------
* Chain [68] with precondition: [A=2] 
    - Upper bound: 67 
    - Complexity: constant 
* Chain [67] with precondition: [4>=A,A>=3] 
    - Upper bound: 48 
    - Complexity: constant 
* Chain [66] with precondition: [1>=A] 
    - Upper bound: -2*A+70 
    - Complexity: n 
* Chain [65] with precondition: [A>=5] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C,D,E,F,G,H,I): max([64,nat(-A+1)*2+65])+3 
Asymptotic class: n 
* Total analysis performed in 1276 ms.


-- stats
realtime 0:01.40
usertime 1.32
systime 0.01

