WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_lbl71___1/13]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_stop___2/7]
3. non_recursive  : [n_lbl71___1_loop_cont/8]
4. non_recursive  : [n_lbl71___3/7]
5. non_recursive  : [n_start___4/7]
6. non_recursive  : [n_start0/7]
7. non_recursive  : [pyRinit/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_lbl71___1/13
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_lbl71___1_loop_cont/8
4. SCC is partially evaluated into n_lbl71___3/7
5. SCC is partially evaluated into n_start___4/7
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_lbl71___1/13 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 


### Cost equations --> "Loop" of n_lbl71___1/13 
* CEs [13] --> Loop 11 
* CEs [11] --> Loop 12 
* CEs [12] --> Loop 13 

### Ranking functions of CR n_lbl71___1(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [11]: [A+C-D,A-E+F,B]

#### Partial ranking functions of CR n_lbl71___1(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    A+C-D
    A-E+F
    B


### Specialization of cost equations n_lbl71___1_loop_cont/8 
* CE 10 is refined into CE [14] 
* CE 9 is refined into CE [15] 


### Cost equations --> "Loop" of n_lbl71___1_loop_cont/8 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

### Ranking functions of CR n_lbl71___1_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR n_lbl71___1_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations n_lbl71___3/7 
* CE 4 is refined into CE [16,17,18] 
* CE 5 is refined into CE [19] 


### Cost equations --> "Loop" of n_lbl71___3/7 
* CEs [16,17,18] --> Loop 16 
* CEs [19] --> Loop 17 

### Ranking functions of CR n_lbl71___3(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_lbl71___3(A,B,C,D,E,F,G) 


### Specialization of cost equations n_start___4/7 
* CE 2 is refined into CE [20,21] 
* CE 3 is refined into CE [22] 


### Cost equations --> "Loop" of n_start___4/7 
* CEs [21] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [20] --> Loop 20 

### Ranking functions of CR n_start___4(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_start___4(A,B,C,D,E,F,G) 


### Specialization of cost equations pyRinit/7 
* CE 1 is refined into CE [23,24,25] 


### Cost equations --> "Loop" of pyRinit/7 
* CEs [25] --> Loop 21 
* CEs [24] --> Loop 22 
* CEs [23] --> Loop 23 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G) 


Computing Bounds
=====================================

#### Cost of chains of n_lbl71___1(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[11],13]: 1*it(11)+1
  Such that:it(11) =< A+C-D

  with precondition: [G=2,A+F=B+E,C+E=D+F,E>=F+2,A+F>=E+1] 

* Chain [[11],12]: 1*it(11)+0
  Such that:it(11) =< A+C-D

  with precondition: [G=3,A+F=B+E,C+E=D+F,E>=F+2,A+F>=E+1] 

* Chain [13]: 1
  with precondition: [B=0,G=2,A+C=D,A+F=E,A>=2] 

* Chain [12]: 0
  with precondition: [G=3,B+D=A+C,B+E=A+F,B>=0,A>=B+2] 


#### Cost of chains of n_lbl71___1_loop_cont(A,B,C,D,E,F,G,H):
* Chain [15]: 0
  with precondition: [A=2] 

* Chain [14]: 0
  with precondition: [A=3] 


#### Cost of chains of n_lbl71___3(A,B,C,D,E,F,G):
* Chain [17]: 1
  with precondition: [A=1,B=0,D=C+1,F+1=E] 

* Chain [16]: 2*s(2)+2
  Such that:aux(1) =< A
s(2) =< aux(1)

  with precondition: [B+1=A,D=C+1,F+1=E,B>=1] 


#### Cost of chains of n_start___4(A,B,C,D,E,F,G):
* Chain [20]: 2
  with precondition: [A=1,B=1,D=C,F=E] 

* Chain [19]: 1
  with precondition: [B=A,D=C,F=E,0>=B] 

* Chain [18]: 2*s(5)+3
  Such that:s(4) =< A
s(5) =< s(4)

  with precondition: [B=A,D=C,F=E,B>=2] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G):
* Chain [23]: 4
  with precondition: [A=1] 

* Chain [22]: 3
  with precondition: [0>=A] 

* Chain [21]: 2*s(7)+5
  Such that:s(6) =< A
s(7) =< s(6)

  with precondition: [A>=2] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G): 
-------------------------------------
* Chain [23] with precondition: [A=1] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [22] with precondition: [0>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [21] with precondition: [A>=2] 
    - Upper bound: 2*A+5 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E,F,G): max([1,nat(A)*2+2])+3 
Asymptotic class: n 
* Total analysis performed in 249 ms.


-- stats
realtime 0:00.32
usertime 0.28
systime 0.01

