WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_lbl131___2/17,n_lbl131___5/17,n_lbl142___3/17]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_stop___6/9]
3. non_recursive  : [n_lbl142___1/9]
4. non_recursive  : [n_lbl142___4/9]
5. non_recursive  : [n_lbl131___5_loop_cont/10]
6. non_recursive  : [n_lbl131___7/9]
7. non_recursive  : [n_lbl131___9/9]
8. non_recursive  : [n_lbl142___8/9]
9. non_recursive  : [n_start___10/9]
10. non_recursive  : [n_start0/9]
11. non_recursive  : [pyRinit/9]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_lbl131___5/17
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_lbl131___5_loop_cont/10
6. SCC is partially evaluated into n_lbl131___7/9
7. SCC is partially evaluated into n_lbl131___9/9
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into n_start___10/9
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into pyRinit/9

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_lbl131___5/17 
* CE 13 is refined into CE [16] 
* CE 10 is refined into CE [17] 
* CE 12 is refined into CE [18] 
* CE 11 is refined into CE [19] 


### Cost equations --> "Loop" of n_lbl131___5/17 
* CEs [18] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [17] --> Loop 18 

### Ranking functions of CR n_lbl131___5(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 

#### Partial ranking functions of CR n_lbl131___5(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [15,16]:
  - RF of loop [15:1]:
    A-E depends on loops [16:1] 
    D-E depends on loops [16:1] 
    -E+G depends on loops [16:1] 
  - RF of loop [16:1]:
    E-2 depends on loops [15:1] 
    G-2


### Specialization of cost equations n_lbl131___5_loop_cont/10 
* CE 15 is refined into CE [20] 
* CE 14 is refined into CE [21] 


### Cost equations --> "Loop" of n_lbl131___5_loop_cont/10 
* CEs [20] --> Loop 19 
* CEs [21] --> Loop 20 

### Ranking functions of CR n_lbl131___5_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR n_lbl131___5_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations n_lbl131___7/9 
* CE 6 is refined into CE [22,23,24] 
* CE 7 is refined into CE [25] 


### Cost equations --> "Loop" of n_lbl131___7/9 
* CEs [22,23,24] --> Loop 21 
* CEs [25] --> Loop 22 

### Ranking functions of CR n_lbl131___7(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_lbl131___7(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_lbl131___9/9 
* CE 8 is refined into CE [26,27,28] 
* CE 9 is refined into CE [29] 


### Cost equations --> "Loop" of n_lbl131___9/9 
* CEs [26,27,28] --> Loop 23 
* CEs [29] --> Loop 24 

### Ranking functions of CR n_lbl131___9(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_lbl131___9(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations n_start___10/9 
* CE 2 is refined into CE [30,31] 
* CE 3 is refined into CE [32,33] 
* CE 5 is refined into CE [34] 
* CE 4 is refined into CE [35] 


### Cost equations --> "Loop" of n_start___10/9 
* CEs [31,33] --> Loop 25 
* CEs [34] --> Loop 26 
* CEs [30,32] --> Loop 27 
* CEs [35] --> Loop 28 

### Ranking functions of CR n_start___10(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_start___10(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations pyRinit/9 
* CE 1 is refined into CE [36,37,38,39] 


### Cost equations --> "Loop" of pyRinit/9 
* CEs [39] --> Loop 29 
* CEs [38] --> Loop 30 
* CEs [37] --> Loop 31 
* CEs [36] --> Loop 32 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 


Computing Bounds
=====================================

#### Cost of chains of n_lbl131___5(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[15,16],18]: 1*it(15)+3*it(16)+3
  Such that:aux(15) =< J
aux(24) =< -E+G
aux(25) =< G
it(16) =< aux(25)
aux(1) =< it(16)*aux(15)
it(15) =< aux(1)+aux(24)

  with precondition: [I=2,N=1,P=0,A=D,A=J,C=L,A=M,F=O,H=Q,E>=2,G>=3,G>=E,A>=G] 

* Chain [[15,16],17]: 1*it(15)+3*it(16)+0
  Such that:aux(15) =< D
aux(26) =< -E+G
aux(27) =< G
it(16) =< aux(27)
aux(1) =< it(16)*aux(15)
it(15) =< aux(1)+aux(26)

  with precondition: [I=3,A=D,E>=2,G>=3,G>=E,A>=G] 

* Chain [18]: 3
  with precondition: [E=2,G=2,I=2,N=1,P=0,D=A,L=C,O=F,Q=H,D=J,D=M,D>=2] 

* Chain [17]: 0
  with precondition: [I=3,D=A,E>=2,G>=E,D>=G] 


#### Cost of chains of n_lbl131___5_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [20]: 2
  with precondition: [A=2,F=1,H=0,B=E,B>=1] 

* Chain [19]: 0
  with precondition: [A=3] 


#### Cost of chains of n_lbl131___7(A,B,C,D,E,F,G,H,I):
* Chain [22]: 3
  with precondition: [A=1,D=1,E=1,G=1] 

* Chain [21]: 6*s(10)+2*s(12)+6
  Such that:aux(30) =< D
s(10) =< aux(30)
s(11) =< s(10)*aux(30)
s(12) =< s(11)+aux(30)

  with precondition: [E=1,D=A,D=G,D>=2] 


#### Cost of chains of n_lbl131___9(A,B,C,D,E,F,G,H,I):
* Chain [24]: 3
  with precondition: [A=1,D=1,E=1,G=1,C=B] 

* Chain [23]: 6*s(22)+2*s(24)+6
  Such that:aux(33) =< D
s(22) =< aux(33)
s(23) =< s(22)*aux(33)
s(24) =< s(23)+aux(33)

  with precondition: [E=1,D=A,C=B,D=G,D>=2] 


#### Cost of chains of n_start___10(A,B,C,D,E,F,G,H,I):
* Chain [28]: 2
  with precondition: [A=0,D=0,C=B,F=E,H=G] 

* Chain [27]: 4
  with precondition: [A=1,D=1,C=B,F=E,H=G] 

* Chain [26]: 1
  with precondition: [D=A,C=B,F=E,H=G,0>=D+1] 

* Chain [25]: 12*s(32)+4*s(34)+7
  Such that:aux(34) =< A
s(32) =< aux(34)
s(33) =< s(32)*aux(34)
s(34) =< s(33)+aux(34)

  with precondition: [D=A,C=B,F=E,H=G,D>=2] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G,H,I):
* Chain [32]: 4
  with precondition: [A=0] 

* Chain [31]: 6
  with precondition: [A=1] 

* Chain [30]: 3
  with precondition: [0>=A+1] 

* Chain [29]: 12*s(40)+4*s(42)+9
  Such that:s(39) =< A
s(40) =< s(39)
s(41) =< s(40)*s(39)
s(42) =< s(41)+s(39)

  with precondition: [A>=2] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G,H,I): 
-------------------------------------
* Chain [32] with precondition: [A=0] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [31] with precondition: [A=1] 
    - Upper bound: 6 
    - Complexity: constant 
* Chain [30] with precondition: [0>=A+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [29] with precondition: [A>=2] 
    - Upper bound: 16*A+9+4*A*A 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D,E,F,G,H,I): max([3,nat(A)*16+6+nat(A)*4*nat(A)])+3 
Asymptotic class: n^2 
* Total analysis performed in 811 ms.


-- stats
realtime 0:00.95
usertime 0.87
systime 0.00

