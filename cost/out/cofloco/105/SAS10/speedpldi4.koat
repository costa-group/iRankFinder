WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_lbl111___1/13]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_stop___4/7]
3. non_recursive  : [n_lbl111___1_loop_cont/8]
4. non_recursive  : [n_lbl111___3/7]
5. recursive  : [n_lbl121___2/13]
6. non_recursive  : [n_lbl121___2_loop_cont/8]
7. non_recursive  : [n_lbl121___5/7]
8. non_recursive  : [n_start___6/7]
9. non_recursive  : [n_start0/7]
10. non_recursive  : [pyRinit/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_lbl111___1/13
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_lbl111___1_loop_cont/8
4. SCC is partially evaluated into n_lbl111___3/7
5. SCC is partially evaluated into n_lbl121___2/13
6. SCC is partially evaluated into n_lbl121___2_loop_cont/8
7. SCC is partially evaluated into n_lbl121___5/7
8. SCC is partially evaluated into n_start___6/7
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into pyRinit/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_lbl111___1/13 
* CE 18 is refined into CE [21] 
* CE 17 is refined into CE [22] 
* CE 16 is refined into CE [23] 


### Cost equations --> "Loop" of n_lbl111___1/13 
* CEs [23] --> Loop 21 
* CEs [21] --> Loop 22 
* CEs [22] --> Loop 23 

### Ranking functions of CR n_lbl111___1(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [21]: [E]

#### Partial ranking functions of CR n_lbl111___1(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    E


### Specialization of cost equations n_lbl111___1_loop_cont/8 
* CE 20 is refined into CE [24] 
* CE 19 is refined into CE [25] 


### Cost equations --> "Loop" of n_lbl111___1_loop_cont/8 
* CEs [24] --> Loop 24 
* CEs [25] --> Loop 25 

### Ranking functions of CR n_lbl111___1_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR n_lbl111___1_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations n_lbl111___3/7 
* CE 7 is refined into CE [26,27,28] 
* CE 8 is refined into CE [29] 


### Cost equations --> "Loop" of n_lbl111___3/7 
* CEs [26,27,28] --> Loop 26 
* CEs [29] --> Loop 27 

### Ranking functions of CR n_lbl111___3(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_lbl111___3(A,B,C,D,E,F,G) 


### Specialization of cost equations n_lbl121___2/13 
* CE 9 is refined into CE [30] 
* CE 12 is refined into CE [31] 
* CE 11 is refined into CE [32] 
* CE 10 is refined into CE [33] 


### Cost equations --> "Loop" of n_lbl121___2/13 
* CEs [33] --> Loop 28 
* CEs [30] --> Loop 29 
* CEs [31] --> Loop 30 
* CEs [32] --> Loop 31 

### Ranking functions of CR n_lbl121___2(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [28]: [-A+E+1,-D+E+1,E]

#### Partial ranking functions of CR n_lbl121___2(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    -A+E+1
    -D+E+1
    E


### Specialization of cost equations n_lbl121___2_loop_cont/8 
* CE 13 is refined into CE [34,35] 
* CE 15 is refined into CE [36] 
* CE 14 is refined into CE [37] 


### Cost equations --> "Loop" of n_lbl121___2_loop_cont/8 
* CEs [35] --> Loop 32 
* CEs [34] --> Loop 33 
* CEs [36] --> Loop 34 
* CEs [37] --> Loop 35 

### Ranking functions of CR n_lbl121___2_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR n_lbl121___2_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations n_lbl121___5/7 
* CE 5 is refined into CE [38,39] 
* CE 6 is refined into CE [40,41,42,43,44,45,46] 


### Cost equations --> "Loop" of n_lbl121___5/7 
* CEs [39] --> Loop 36 
* CEs [41] --> Loop 37 
* CEs [43] --> Loop 38 
* CEs [40,42,44,45,46] --> Loop 39 
* CEs [38] --> Loop 40 

### Ranking functions of CR n_lbl121___5(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_lbl121___5(A,B,C,D,E,F,G) 


### Specialization of cost equations n_start___6/7 
* CE 3 is refined into CE [47] 
* CE 2 is refined into CE [48,49,50,51] 
* CE 4 is refined into CE [52] 


### Cost equations --> "Loop" of n_start___6/7 
* CEs [51] --> Loop 41 
* CEs [47] --> Loop 42 
* CEs [49,50] --> Loop 43 
* CEs [52] --> Loop 44 
* CEs [48] --> Loop 45 

### Ranking functions of CR n_start___6(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_start___6(A,B,C,D,E,F,G) 


### Specialization of cost equations pyRinit/7 
* CE 1 is refined into CE [53,54,55,56,57] 


### Cost equations --> "Loop" of pyRinit/7 
* CEs [57] --> Loop 46 
* CEs [56] --> Loop 47 
* CEs [55] --> Loop 48 
* CEs [54] --> Loop 49 
* CEs [53] --> Loop 50 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G) 


Computing Bounds
=====================================

#### Cost of chains of n_lbl111___1(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[21],23]: 1*it(21)+1
  Such that:it(21) =< E

  with precondition: [G=2,B=C,A=D,E>=1,A>=E+3,B>=A+E+2] 

* Chain [[21],22]: 1*it(21)+0
  Such that:it(21) =< E

  with precondition: [G=3,B=C,A=D,E>=1,A>=E+3,B>=A+E+2] 

* Chain [23]: 1
  with precondition: [E=0,G=2,D=A,C=B,D>=3,C>=D+2] 

* Chain [22]: 0
  with precondition: [G=3,D=A,C=B,E>=0,D>=E+3,C>=D+E+2] 


#### Cost of chains of n_lbl111___1_loop_cont(A,B,C,D,E,F,G,H):
* Chain [25]: 0
  with precondition: [A=2] 

* Chain [24]: 0
  with precondition: [A=3] 


#### Cost of chains of n_lbl111___3(A,B,C,D,E,F,G):
* Chain [27]: 1
  with precondition: [E=0,B=C,A=D,A>=2,B>=A+1] 

* Chain [26]: 2*s(2)+2
  Such that:aux(1) =< E
s(2) =< aux(1)

  with precondition: [B=C,A=D,E>=1,A>=E+2,B>=A+E+1] 


#### Cost of chains of n_lbl121___2(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[28],31]: 1*it(28)+1
  Such that:it(28) =< -A+E+1

  with precondition: [G=2,B=C,A=D,A>=1,E>=A,B>=2*A+E] 

* Chain [[28],30]: 1*it(28)+0
  Such that:it(28) =< -A+E+1

  with precondition: [G=3,B=C,A=D,A>=1,E>=A,B>=2*A+E] 

* Chain [[28],29]: 1*it(28)+1
  Such that:it(28) =< -A+E+1

  with precondition: [G=4,B=C,A=D,A=H,B=I,B=J,A=K,F=M,L>=0,A>=L+2,B>=2*A+E,E>=A+L+1] 

* Chain [31]: 1
  with precondition: [E=0,G=2,D=A,C=B,D>=1,C>=2*D] 

* Chain [30]: 0
  with precondition: [G=3,D=A,C=B,D>=1,E>=0,C>=2*D+E] 

* Chain [29]: 1
  with precondition: [G=4,D=A,C=B,M=F,D=H,C=I,C=J,D=K,E=L+1,E>=1,D>=E+1,C>=2*D+E] 


#### Cost of chains of n_lbl121___2_loop_cont(A,B,C,D,E,F,G,H):
* Chain [35]: 0
  with precondition: [A=2] 

* Chain [34]: 0
  with precondition: [A=3] 

* Chain [33]: 1
  with precondition: [A=4,F=0,C=D,B=E,B>=2,C>=B+1] 

* Chain [32]: 2*s(6)+2
  Such that:s(5) =< F
s(6) =< s(5)

  with precondition: [A=4,C=D,B=E,F>=1,B>=F+2,C>=B+F+1] 


#### Cost of chains of n_lbl121___5(A,B,C,D,E,F,G):
* Chain [40]: 2
  with precondition: [E=1,B=A+1,B=C,B=D+1,B>=3] 

* Chain [39]: 1*s(7)+2*s(9)+1*s(10)+1*s(11)+2*s(13)+4
  Such that:s(7) =< -3*A+C+1
s(12) =< -2*C+3*E
s(11) =< -2*C+3*E+1
s(10) =< -2*D+E+1
s(8) =< -D+E
s(13) =< s(12)
s(9) =< s(8)

  with precondition: [D=A,C=B,C=D+E,D>=1,C>=2*D] 

* Chain [38]: 3
  with precondition: [B=2*A+1,B=2*D+1,B+1=2*E,B=C,B>=5] 

* Chain [37]: 1*s(14)+2
  Such that:s(14) =< -2*D+E+1

  with precondition: [D=A,C=B,C=D+E,D>=1,C>=3*D] 

* Chain [36]: 2*s(16)+3
  Such that:s(15) =< E
s(16) =< s(15)

  with precondition: [D=A,C=B,C=D+E,2*D>=C+1,C>=D+2] 


#### Cost of chains of n_start___6(A,B,C,D,E,F,G):
* Chain [45]: 3
  with precondition: [B=A+1,B=C,B=D+1,F=E,B>=3] 

* Chain [44]: 1
  with precondition: [D=A,C=B,F=E,0>=D] 

* Chain [43]: 3*s(24)+2*s(29)+2*s(30)+1*s(31)+5
  Such that:s(31) =< -3*A+B+1
s(28) =< -2*A+B
s(25) =< B-3*D
aux(2) =< B-3*D+1
s(24) =< aux(2)
s(29) =< s(25)
s(30) =< s(28)

  with precondition: [D=A,C=B,F=E,D>=1,C>=2*D] 

* Chain [42]: 1
  with precondition: [D=A,C=B,F=E,D>=1,D>=C] 

* Chain [41]: 2*s(33)+4
  Such that:s(32) =< -A+B
s(33) =< s(32)

  with precondition: [D=A,C=B,F=E,2*D>=C+1,C>=D+2] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G):
* Chain [50]: 5
  with precondition: [A+1=C,A>=2] 

* Chain [49]: 3
  with precondition: [0>=A] 

* Chain [48]: 4*s(34)+2*s(39)+2*s(40)+7
  Such that:s(36) =< -3*A+C
s(35) =< -2*A+C
aux(3) =< -3*A+C+1
s(34) =< aux(3)
s(39) =< s(36)
s(40) =< s(35)

  with precondition: [A>=1,C>=2*A] 

* Chain [47]: 3
  with precondition: [A>=1,A>=C] 

* Chain [46]: 2*s(42)+6
  Such that:s(41) =< -A+C
s(42) =< s(41)

  with precondition: [C>=A+2,2*A>=C+1] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G): 
-------------------------------------
* Chain [50] with precondition: [A+1=C,A>=2] 
    - Upper bound: 5 
    - Complexity: constant 
* Chain [49] with precondition: [0>=A] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [48] with precondition: [A>=1,C>=2*A] 
    - Upper bound: nat(-3*A+C)*2+7+ (-4*A+2*C)+nat(-3*A+C+1)*4 
    - Complexity: n 
* Chain [47] with precondition: [A>=1,A>=C] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [46] with precondition: [C>=A+2,2*A>=C+1] 
    - Upper bound: -2*A+2*C+6 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E,F,G): max([2,nat(-A+C)*2+3,nat(-3*A+C)*2+4+nat(-2*A+C)*2+nat(-3*A+C+1)*4])+3 
Asymptotic class: n 
* Total analysis performed in 647 ms.


-- stats
realtime 0:00.75
usertime 0.68
systime 0.02

