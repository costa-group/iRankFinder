WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_eval2___3/5]
1. recursive  : [n_eval1___1/5,n_eval2___3_loop_cont/6,n_eval2___5/5]
2. non_recursive  : [exit_location/1]
3. recursive  : [n_eval1___4/3,n_eval2___2/3]
4. non_recursive  : [n_eval1___4_loop_cont/2]
5. non_recursive  : [n_eval2___5_loop_cont/4]
6. non_recursive  : [n_eval1___6/3]
7. non_recursive  : [n_start/3]
8. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_eval2___3/5
1. SCC is partially evaluated into n_eval2___5/5
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_eval1___4/3
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_eval2___5_loop_cont/4
6. SCC is partially evaluated into n_eval1___6/3
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_eval2___3/5 
* CE 11 is refined into CE [14] 
* CE 9 is refined into CE [15] 
* CE 10 is refined into CE [16] 


### Cost equations --> "Loop" of n_eval2___3/5 
* CEs [16] --> Loop 13 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

### Ranking functions of CR n_eval2___3(A,B,C,D,E) 
* RF of phase [13]: [A-B]

#### Partial ranking functions of CR n_eval2___3(A,B,C,D,E) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    A-B


### Specialization of cost equations n_eval2___5/5 
* CE 5 is refined into CE [17] 
* CE 3 is refined into CE [18] 
* CE 6 is refined into CE [19] 
* CE 4 is refined into CE [20,21] 


### Cost equations --> "Loop" of n_eval2___5/5 
* CEs [21] --> Loop 16 
* CEs [20] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [18,19] --> Loop 19 

### Ranking functions of CR n_eval2___5(A,B,C,D,E) 
* RF of phase [16]: [A-2]

#### Partial ranking functions of CR n_eval2___5(A,B,C,D,E) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    A-2


### Specialization of cost equations n_eval1___4/3 
* CE 13 is refined into CE [22] 
* CE 12 is refined into CE [23] 


### Cost equations --> "Loop" of n_eval1___4/3 
* CEs [23] --> Loop 20 
* CEs [22] --> Loop 21 

### Ranking functions of CR n_eval1___4(A,B,C) 

#### Partial ranking functions of CR n_eval1___4(A,B,C) 


### Specialization of cost equations n_eval2___5_loop_cont/4 
* CE 7 is refined into CE [24] 
* CE 8 is refined into CE [25] 


### Cost equations --> "Loop" of n_eval2___5_loop_cont/4 
* CEs [24] --> Loop 22 
* CEs [25] --> Loop 23 

### Ranking functions of CR n_eval2___5_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_eval2___5_loop_cont(A,B,C,D) 


### Specialization of cost equations n_eval1___6/3 
* CE 2 is refined into CE [26,27,28,29] 


### Cost equations --> "Loop" of n_eval1___6/3 
* CEs [29] --> Loop 24 
* CEs [26,27,28] --> Loop 25 

### Ranking functions of CR n_eval1___6(A,B,C) 

#### Partial ranking functions of CR n_eval1___6(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [30] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [30] --> Loop 26 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_eval2___3(A,B,C,D,E):
* Chain [[13],15]: 1*it(13)+1
  Such that:it(13) =< -B+D+1

  with precondition: [C=2,A=D+1,B>=2,E>=2*B,E>=A,2*A>=E+2] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< A-B

  with precondition: [C=3,B>=2,A>=B+1] 

* Chain [15]: 1
  with precondition: [C=2,A=D+1,B=E,B>=A,2*A>=B+2] 

* Chain [14]: 0
  with precondition: [C=3,B>=2,2*A>=B+2] 


#### Cost of chains of n_eval2___5(A,B,C,D,E):
* Chain [[16],19]: 4*it(16)+1*s(5)+1
  Such that:aux(3) =< A
it(16) =< aux(3)
s(5) =< it(16)*aux(3)

  with precondition: [B=1,C=3,A>=3] 

* Chain [[16],17,19]: 3*it(16)+1*s(2)+1*s(5)+4
  Such that:s(2) =< 1
aux(4) =< A
it(16) =< aux(4)
s(5) =< it(16)*aux(4)

  with precondition: [B=1,C=3,A>=3] 

* Chain [[16],17,18]: 3*it(16)+1*s(5)+4
  Such that:aux(5) =< A
it(16) =< aux(5)
s(5) =< it(16)*aux(5)

  with precondition: [B=1,C=4,D=0,E=1,A>=3] 

* Chain [19]: 1*s(2)+1
  Such that:s(2) =< A

  with precondition: [B=1,C=3,A>=0] 

* Chain [18]: 1
  with precondition: [B=1,C=4,E=1,A=D+1,1>=A,A>=0] 

* Chain [17,19]: 1*s(2)+4
  Such that:s(2) =< 1

  with precondition: [A=2,B=1,C=3] 

* Chain [17,18]: 4
  with precondition: [A=2,B=1,C=4,D=0,E=1] 


#### Cost of chains of n_eval1___4(A,B,C):
* Chain [21]: 0
  with precondition: [C=3] 

* Chain [20,21]: 2
  with precondition: [A=0,B=1,C=3] 


#### Cost of chains of n_eval2___5_loop_cont(A,B,C,D):
* Chain [23]: 0
  with precondition: [A=3] 

* Chain [22]: 2
  with precondition: [A=4] 


#### Cost of chains of n_eval1___6(A,B,C):
* Chain [25]: 2*s(17)+11*s(18)+3*s(19)+7
  Such that:s(15) =< 1
aux(8) =< A
s(17) =< s(15)
s(18) =< aux(8)
s(19) =< s(18)*aux(8)

  with precondition: [A>=0] 

* Chain [24]: 4
  with precondition: [1>=A,A>=0] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [26]: 2*s(30)+11*s(31)+3*s(32)+9
  Such that:s(28) =< 1
s(29) =< A
s(30) =< s(28)
s(31) =< s(29)
s(32) =< s(31)*s(29)

  with precondition: [A>=0] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [26] with precondition: [A>=0] 
    - Upper bound: 11*A+11+3*A*A 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C): 11*A+11+3*A*A 
Asymptotic class: n^2 
* Total analysis performed in 206 ms.


-- stats
realtime 0:00.30
usertime 0.24
systime 0.00

