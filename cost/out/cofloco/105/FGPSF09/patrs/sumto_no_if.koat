WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [n_end___2/3]
1. recursive  : [n_sumto___1/5]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_sumto___1_loop_cont/4]
4. non_recursive  : [n_sumto___3/3]
5. non_recursive  : [n_start/3]
6. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is partially evaluated into n_sumto___1/5
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_sumto___1_loop_cont/4
4. SCC is partially evaluated into n_sumto___3/3
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_sumto___1/5 
* CE 6 is refined into CE [9] 
* CE 4 is refined into CE [10] 
* CE 5 is refined into CE [11] 


### Cost equations --> "Loop" of n_sumto___1/5 
* CEs [11] --> Loop 9 
* CEs [9] --> Loop 10 
* CEs [10] --> Loop 11 

### Ranking functions of CR n_sumto___1(A,B,C,D,E) 
* RF of phase [9]: [-A+B+1]

#### Partial ranking functions of CR n_sumto___1(A,B,C,D,E) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -A+B+1


### Specialization of cost equations n_sumto___1_loop_cont/4 
* CE 8 is refined into CE [12] 
* CE 7 is refined into CE [13] 


### Cost equations --> "Loop" of n_sumto___1_loop_cont/4 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

### Ranking functions of CR n_sumto___1_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_sumto___1_loop_cont(A,B,C,D) 


### Specialization of cost equations n_sumto___3/3 
* CE 2 is refined into CE [14] 
* CE 3 is refined into CE [15,16,17] 


### Cost equations --> "Loop" of n_sumto___3/3 
* CEs [14] --> Loop 14 
* CEs [15,16,17] --> Loop 15 

### Ranking functions of CR n_sumto___3(A,B,C) 

#### Partial ranking functions of CR n_sumto___3(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [18,19] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_sumto___1(A,B,C,D,E):
* Chain [[9],11]: 1*it(9)+1
  Such that:it(9) =< -A+B+1

  with precondition: [C=2,B>=A] 

* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< -A+B+1

  with precondition: [C=3,B>=A] 

* Chain [11]: 1
  with precondition: [C=2,B+1=A] 

* Chain [10]: 0
  with precondition: [C=3,B+1>=A] 


#### Cost of chains of n_sumto___1_loop_cont(A,B,C,D):
* Chain [13]: 0
  with precondition: [A=2] 

* Chain [12]: 0
  with precondition: [A=3] 


#### Cost of chains of n_sumto___3(A,B,C):
* Chain [15]: 2*s(2)+2
  Such that:aux(1) =< -A+B
s(2) =< aux(1)

  with precondition: [B>=A] 

* Chain [14]: 1
  with precondition: [A>=B+1] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [17]: 2*s(5)+4
  Such that:s(4) =< -A+B
s(5) =< s(4)

  with precondition: [B>=A] 

* Chain [16]: 3
  with precondition: [A>=B+1] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [17] with precondition: [B>=A] 
    - Upper bound: -2*A+2*B+4 
    - Complexity: n 
* Chain [16] with precondition: [A>=B+1] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C): nat(-A+B)*2+1+3 
Asymptotic class: n 
* Total analysis performed in 73 ms.


-- stats
realtime 0:00.11
usertime 0.10
systime 0.01

