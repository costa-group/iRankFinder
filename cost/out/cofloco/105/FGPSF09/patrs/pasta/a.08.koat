WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_eval___1/3]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_eval___1_loop_cont/2]
3. non_recursive  : [n_eval___2/3]
4. non_recursive  : [n_start/3]
5. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_eval___1/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_eval___2/3
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_eval___1/3 
* CE 4 is refined into CE [5] 
* CE 3 is refined into CE [6] 


### Cost equations --> "Loop" of n_eval___1/3 
* CEs [6] --> Loop 5 
* CEs [5] --> Loop 6 

### Ranking functions of CR n_eval___1(A,B,C) 
* RF of phase [5]: [A-B]

#### Partial ranking functions of CR n_eval___1(A,B,C) 
* Partial RF of phase [5]:
  - RF of loop [5:1]:
    A-B


### Specialization of cost equations n_eval___2/3 
* CE 2 is refined into CE [7] 


### Cost equations --> "Loop" of n_eval___2/3 
* CEs [7] --> Loop 7 

### Ranking functions of CR n_eval___2(A,B,C) 

#### Partial ranking functions of CR n_eval___2(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [8] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [8] --> Loop 8 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_eval___1(A,B,C):
* Chain [[5],6]: 1*it(5)+0
  Such that:it(5) =< A-B

  with precondition: [C=2,A>=B+1] 

* Chain [6]: 0
  with precondition: [C=2,A>=B] 


#### Cost of chains of n_eval___2(A,B,C):
* Chain [7]: 1*s(2)+1
  Such that:s(2) =< A-B

  with precondition: [A>=B+1] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [8]: 1*s(3)+3
  Such that:s(3) =< A-B

  with precondition: [A>=B+1] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [8] with precondition: [A>=B+1] 
    - Upper bound: A-B+3 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C): A-B+3 
Asymptotic class: n 
* Total analysis performed in 40 ms.


-- stats
realtime 0:00.07
usertime 0.07
systime 0.00

