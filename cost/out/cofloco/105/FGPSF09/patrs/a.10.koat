WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_eval___1/3]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_eval___1_loop_cont/2]
3. recursive  : [n_eval___2/3]
4. non_recursive  : [n_eval___2_loop_cont/2]
5. non_recursive  : [n_eval___3/3]
6. non_recursive  : [n_start/3]
7. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_eval___1/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_eval___2/3
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_eval___3/3
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_eval___1/3 
* CE 5 is refined into CE [8] 
* CE 4 is refined into CE [9] 


### Cost equations --> "Loop" of n_eval___1/3 
* CEs [9] --> Loop 8 
* CEs [8] --> Loop 9 

### Ranking functions of CR n_eval___1(A,B,C) 
* RF of phase [8]: [-A+B]

#### Partial ranking functions of CR n_eval___1(A,B,C) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    -A+B


### Specialization of cost equations n_eval___2/3 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 


### Cost equations --> "Loop" of n_eval___2/3 
* CEs [11] --> Loop 10 
* CEs [10] --> Loop 11 

### Ranking functions of CR n_eval___2(A,B,C) 
* RF of phase [10]: [A-B]

#### Partial ranking functions of CR n_eval___2(A,B,C) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    A-B


### Specialization of cost equations n_eval___3/3 
* CE 3 is refined into CE [12] 
* CE 2 is refined into CE [13] 


### Cost equations --> "Loop" of n_eval___3/3 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

### Ranking functions of CR n_eval___3(A,B,C) 

#### Partial ranking functions of CR n_eval___3(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [14,15] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [15] --> Loop 14 
* CEs [14] --> Loop 15 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_eval___1(A,B,C):
* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< -A+B

  with precondition: [C=2,B>=A+1] 

* Chain [9]: 0
  with precondition: [C=2,B>=A] 


#### Cost of chains of n_eval___2(A,B,C):
* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< A-B

  with precondition: [C=2,A>=B+1] 

* Chain [11]: 0
  with precondition: [C=2,A>=B] 


#### Cost of chains of n_eval___3(A,B,C):
* Chain [13]: 1*s(3)+1
  Such that:s(3) =< -A+B

  with precondition: [B>=A+1] 

* Chain [12]: 1*s(4)+1
  Such that:s(4) =< A-B

  with precondition: [A>=B+1] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [15]: 1*s(5)+3
  Such that:s(5) =< -A+B

  with precondition: [B>=A+1] 

* Chain [14]: 1*s(6)+3
  Such that:s(6) =< A-B

  with precondition: [A>=B+1] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [15] with precondition: [B>=A+1] 
    - Upper bound: -A+B+3 
    - Complexity: n 
* Chain [14] with precondition: [A>=B+1] 
    - Upper bound: A-B+3 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C): max([nat(-A+B),nat(A-B)])+3 
Asymptotic class: n 
* Total analysis performed in 66 ms.


-- stats
realtime 0:00.11
usertime 0.10
systime 0.00

