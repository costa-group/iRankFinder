WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_eval2___2/7]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_eval1___1/4]
3. non_recursive  : [n_eval2___2_loop_cont/5]
4. non_recursive  : [n_eval2___3/4]
5. non_recursive  : [n_eval1___4/4]
6. non_recursive  : [n_start/4]
7. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_eval2___2/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_eval2___2_loop_cont/5
4. SCC is partially evaluated into n_eval2___3/4
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_eval2___2/7 
* CE 5 is refined into CE [8] 
* CE 3 is refined into CE [9] 
* CE 4 is refined into CE [10] 


### Cost equations --> "Loop" of n_eval2___2/7 
* CEs [10] --> Loop 8 
* CEs [8] --> Loop 9 
* CEs [9] --> Loop 10 

### Ranking functions of CR n_eval2___2(A,B,C,D,E,F,G) 
* RF of phase [8]: [A-B,-B+C]

#### Partial ranking functions of CR n_eval2___2(A,B,C,D,E,F,G) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    A-B
    -B+C


### Specialization of cost equations n_eval2___2_loop_cont/5 
* CE 7 is refined into CE [11] 
* CE 6 is refined into CE [12] 


### Cost equations --> "Loop" of n_eval2___2_loop_cont/5 
* CEs [11] --> Loop 11 
* CEs [12] --> Loop 12 

### Ranking functions of CR n_eval2___2_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_eval2___2_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_eval2___3/4 
* CE 2 is refined into CE [13,14,15] 


### Cost equations --> "Loop" of n_eval2___3/4 
* CEs [13,14,15] --> Loop 13 

### Ranking functions of CR n_eval2___3(A,B,C,D) 

#### Partial ranking functions of CR n_eval2___3(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [16] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [16] --> Loop 14 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_eval2___2(A,B,C,D,E,F,G):
* Chain [[8],10]: 1*it(8)+1
  Such that:it(8) =< A-F

  with precondition: [D=2,A=C,B=E,B=F,B=G,A>=B+1] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< A-B

  with precondition: [D=3,A=C,A>=B+1] 

* Chain [10]: 1
  with precondition: [D=2,A=B,A=C,A=E,A=F,A=G] 

* Chain [9]: 0
  with precondition: [D=3,C=A,C>=B] 


#### Cost of chains of n_eval2___2_loop_cont(A,B,C,D,E):
* Chain [12]: 0
  with precondition: [A=2] 

* Chain [11]: 0
  with precondition: [A=3] 


#### Cost of chains of n_eval2___3(A,B,C,D):
* Chain [13]: 2*s(2)+2
  Such that:aux(1) =< A-B
s(2) =< aux(1)

  with precondition: [C=A,C>=B+1] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [14]: 2*s(5)+5
  Such that:s(4) =< A-B
s(5) =< s(4)

  with precondition: [A=C,A>=B+1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [14] with precondition: [A=C,A>=B+1] 
    - Upper bound: 2*A-2*B+5 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): 2*A-2*B+5 
Asymptotic class: n 
* Total analysis performed in 103 ms.


-- stats
realtime 0:00.17
usertime 0.13
systime 0.00

