WORST_CASE(?,O(1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalndloopbbin___2/3]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_evalndloopstop___1/2]
3. non_recursive  : [n_evalndloopbbin___2_loop_cont/3]
4. non_recursive  : [n_evalndloopbbin___3/2]
5. non_recursive  : [n_evalndloopstart/2]
6. non_recursive  : [pyRinit/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalndloopbbin___2/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalndloopbbin___2_loop_cont/3
4. SCC is partially evaluated into n_evalndloopbbin___3/2
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into pyRinit/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalndloopbbin___2/3 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11] 


### Cost equations --> "Loop" of n_evalndloopbbin___2/3 
* CEs [11] --> Loop 8 
* CEs [9] --> Loop 9 
* CEs [10] --> Loop 10 

### Ranking functions of CR n_evalndloopbbin___2(A,B,C) 
* RF of phase [8]: [-A+9]

#### Partial ranking functions of CR n_evalndloopbbin___2(A,B,C) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    -A+9


### Specialization of cost equations n_evalndloopbbin___2_loop_cont/3 
* CE 8 is refined into CE [12] 
* CE 7 is refined into CE [13] 


### Cost equations --> "Loop" of n_evalndloopbbin___2_loop_cont/3 
* CEs [12] --> Loop 11 
* CEs [13] --> Loop 12 

### Ranking functions of CR n_evalndloopbbin___2_loop_cont(A,B,C) 

#### Partial ranking functions of CR n_evalndloopbbin___2_loop_cont(A,B,C) 


### Specialization of cost equations n_evalndloopbbin___3/2 
* CE 2 is refined into CE [14,15] 
* CE 3 is refined into CE [16] 


### Cost equations --> "Loop" of n_evalndloopbbin___3/2 
* CEs [14,15,16] --> Loop 13 

### Ranking functions of CR n_evalndloopbbin___3(A,B) 

#### Partial ranking functions of CR n_evalndloopbbin___3(A,B) 


### Specialization of cost equations pyRinit/2 
* CE 1 is refined into CE [17] 


### Cost equations --> "Loop" of pyRinit/2 
* CEs [17] --> Loop 14 

### Ranking functions of CR pyRinit(A,B) 

#### Partial ranking functions of CR pyRinit(A,B) 


Computing Bounds
=====================================

#### Cost of chains of n_evalndloopbbin___2(A,B,C):
* Chain [[8],10]: 1*it(8)+1
  Such that:it(8) =< -A+9

  with precondition: [B=2,8>=A,A>=1] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< -A+9

  with precondition: [B=3,8>=A,A>=1] 

* Chain [10]: 1
  with precondition: [B=2,9>=A,A>=1] 

* Chain [9]: 0
  with precondition: [B=3,A>=1] 


#### Cost of chains of n_evalndloopbbin___2_loop_cont(A,B,C):
* Chain [12]: 0
  with precondition: [A=2] 

* Chain [11]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalndloopbbin___3(A,B):
* Chain [13]: 18
  with precondition: [A=0] 


#### Cost of chains of pyRinit(A,B):
* Chain [14]: 20
  with precondition: [] 


Closed-form bounds of pyRinit(A,B): 
-------------------------------------
* Chain [14] with precondition: [] 
    - Upper bound: 20 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B): 20 
Asymptotic class: constant 
* Total analysis performed in 82 ms.


-- stats
realtime 0:00.20
usertime 0.12
systime 0.01

