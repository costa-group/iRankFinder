WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalinsertsortbb2in___3/9,n_evalinsertsortbb3in___1/9]
1. recursive  : [n_evalinsertsortbb2in___3_loop_cont/10,n_evalinsertsortbb2in___6/9,n_evalinsertsortbb3in___4/9,n_evalinsertsortbb5in___2/9]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalinsertsortstop___5/5]
4. non_recursive  : [n_evalinsertsortbb2in___6_loop_cont/6]
5. non_recursive  : [n_evalinsertsortbb5in___7/5]
6. non_recursive  : [n_evalinsertsortstart/5]
7. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalinsertsortbb2in___3/9
1. SCC is partially evaluated into n_evalinsertsortbb2in___6/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalinsertsortbb2in___6_loop_cont/6
5. SCC is partially evaluated into n_evalinsertsortbb5in___7/5
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalinsertsortbb2in___3/9 
* CE 15 is refined into CE [16] 
* CE 12 is refined into CE [17] 
* CE 14 is refined into CE [18] 
* CE 13 is refined into CE [19] 


### Cost equations --> "Loop" of n_evalinsertsortbb2in___3/9 
* CEs [19] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [18] --> Loop 16 

### Ranking functions of CR n_evalinsertsortbb2in___3(A,B,C,D,E,F,G,H,I) 
* RF of phase [13]: [D+1]

#### Partial ranking functions of CR n_evalinsertsortbb2in___3(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    D+1


### Specialization of cost equations n_evalinsertsortbb2in___6/9 
* CE 5 is refined into CE [20] 
* CE 6 is refined into CE [21,22,23,24] 
* CE 8 is refined into CE [25] 
* CE 9 is refined into CE [26] 
* CE 4 is refined into CE [27] 
* CE 7 is refined into CE [28,29,30,31] 


### Cost equations --> "Loop" of n_evalinsertsortbb2in___6/9 
* CEs [27,28,29,30,31] --> Loop 17 
* CEs [25,26] --> Loop 18 
* CEs [20,21,22,23,24] --> Loop 19 

### Ranking functions of CR n_evalinsertsortbb2in___6(A,B,C,D,E,F,G,H,I) 
* RF of phase [17]: [-A+B-1,B-D-2]

#### Partial ranking functions of CR n_evalinsertsortbb2in___6(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    -A+B-1
    B-D-2


### Specialization of cost equations n_evalinsertsortbb2in___6_loop_cont/6 
* CE 11 is refined into CE [32] 
* CE 10 is refined into CE [33] 


### Cost equations --> "Loop" of n_evalinsertsortbb2in___6_loop_cont/6 
* CEs [32] --> Loop 20 
* CEs [33] --> Loop 21 

### Ranking functions of CR n_evalinsertsortbb2in___6_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalinsertsortbb2in___6_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalinsertsortbb5in___7/5 
* CE 2 is refined into CE [34,35,36] 
* CE 3 is refined into CE [37] 


### Cost equations --> "Loop" of n_evalinsertsortbb5in___7/5 
* CEs [37] --> Loop 22 
* CEs [34,35,36] --> Loop 23 

### Ranking functions of CR n_evalinsertsortbb5in___7(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalinsertsortbb5in___7(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [38,39] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [39] --> Loop 24 
* CEs [38] --> Loop 25 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalinsertsortbb2in___3(A,B,C,D,E,F,G,H,I):
* Chain [[13],16]: 2*it(13)+1
  Such that:it(13) =< D+1

  with precondition: [E=2,I+1=0,A+1=F,B=G,C=H,D>=0,B>=A+1,A>=D+2] 

* Chain [[13],15]: 2*it(13)+2
  Such that:it(13) =< D-I

  with precondition: [E=2,A+1=F,B=G,C=H,I>=0,B>=A+1,A>=D+2,D>=I+1] 

* Chain [[13],14]: 2*it(13)+0
  Such that:it(13) =< D+1

  with precondition: [E=3,D>=0,B>=A+1,A>=D+2] 

* Chain [16]: 1
  with precondition: [D+1=0,E=2,I+1=0,H=C,A+1=F,B=G,A>=1,B>=A+1] 

* Chain [15]: 2
  with precondition: [E=2,H=C,A+1=F,B=G,D=I,D>=0,B>=A+1,A>=D+2] 

* Chain [14]: 0
  with precondition: [E=3,D+1>=0,B>=A+1,A>=D+2] 


#### Cost of chains of n_evalinsertsortbb2in___6(A,B,C,D,E,F,G,H,I):
* Chain [[17],19]: 5*it(17)+4*s(2)+4*s(8)+5
  Such that:it(17) =< B-D
aux(4) =< B
s(2) =< aux(4)
s(9) =< it(17)*aux(4)
s(8) =< s(9)

  with precondition: [E=4,A=D+1,A>=1,B>=A+2] 

* Chain [[17],18]: 5*it(17)+4*s(8)+2*s(10)+2
  Such that:it(17) =< B-D
aux(5) =< B
s(10) =< aux(5)
s(9) =< it(17)*aux(5)
s(8) =< s(9)

  with precondition: [E=3,A=D+1,A>=1,B>=A+2] 

* Chain [19]: 4*s(2)+5
  Such that:aux(1) =< D
s(2) =< aux(1)

  with precondition: [E=4,A+1=B,A=D+1,A>=1] 

* Chain [18]: 2*s(10)+2
  Such that:s(10) =< A

  with precondition: [E=3,D+1=A,D>=0,B>=D+2] 


#### Cost of chains of n_evalinsertsortbb2in___6_loop_cont(A,B,C,D,E,F):
* Chain [21]: 0
  with precondition: [A=3] 

* Chain [20]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalinsertsortbb5in___7(A,B,C,D,E):
* Chain [23]: 2*s(17)+16*s(19)+8*s(22)+6
  Such that:s(17) =< 1
aux(8) =< B
s(19) =< aux(8)
s(21) =< s(19)*aux(8)
s(22) =< s(21)

  with precondition: [A=1,B>=2] 

* Chain [22]: 1
  with precondition: [A=1,1>=B] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [25]: 3
  with precondition: [1>=B] 

* Chain [24]: 2*s(30)+16*s(32)+8*s(34)+8
  Such that:s(30) =< 1
s(31) =< B
s(32) =< s(31)
s(33) =< s(32)*s(31)
s(34) =< s(33)

  with precondition: [B>=2] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [25] with precondition: [1>=B] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [24] with precondition: [B>=2] 
    - Upper bound: 16*B+10+8*B*B 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D,E): nat(B)*16+7+nat(B)*8*nat(B)+3 
Asymptotic class: n^2 
* Total analysis performed in 417 ms.


-- stats
realtime 0:00.59
usertime 0.48
systime 0.00

