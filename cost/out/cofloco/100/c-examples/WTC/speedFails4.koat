WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalspeedFails4bb3in___2/9,n_evalspeedFails4bb6in___1/9]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_evalspeedFails4stop___4/5]
3. non_recursive  : [n_evalspeedFails4bb3in___2_loop_cont/6]
4. non_recursive  : [n_evalspeedFails4bb6in___6/5]
5. recursive  : [n_evalspeedFails4bb3in___5/9,n_evalspeedFails4bb6in___3/9]
6. non_recursive  : [n_evalspeedFails4bb3in___5_loop_cont/6]
7. non_recursive  : [n_evalspeedFails4bb6in___7/5]
8. non_recursive  : [n_evalspeedFails4entryin___8/5]
9. non_recursive  : [n_evalspeedFails4start/5]
10. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalspeedFails4bb3in___2/9
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalspeedFails4bb3in___2_loop_cont/6
4. SCC is partially evaluated into n_evalspeedFails4bb6in___6/5
5. SCC is partially evaluated into n_evalspeedFails4bb3in___5/9
6. SCC is partially evaluated into n_evalspeedFails4bb3in___5_loop_cont/6
7. SCC is partially evaluated into n_evalspeedFails4bb6in___7/5
8. SCC is partially evaluated into n_evalspeedFails4entryin___8/5
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalspeedFails4bb3in___2/9 
* CE 10 is refined into CE [18] 
* CE 8 is refined into CE [19] 
* CE 9 is refined into CE [20] 


### Cost equations --> "Loop" of n_evalspeedFails4bb3in___2/9 
* CEs [20] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [18] --> Loop 20 

### Ranking functions of CR n_evalspeedFails4bb3in___2(A,B,C,D,E,F,G,H,I) 
* RF of phase [18]: [B-D]

#### Partial ranking functions of CR n_evalspeedFails4bb3in___2(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    B-D


### Specialization of cost equations n_evalspeedFails4bb3in___2_loop_cont/6 
* CE 12 is refined into CE [21] 
* CE 11 is refined into CE [22] 


### Cost equations --> "Loop" of n_evalspeedFails4bb3in___2_loop_cont/6 
* CEs [21] --> Loop 21 
* CEs [22] --> Loop 22 

### Ranking functions of CR n_evalspeedFails4bb3in___2_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalspeedFails4bb3in___2_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalspeedFails4bb6in___6/5 
* CE 4 is refined into CE [23,24,25] 
* CE 5 is refined into CE [26] 


### Cost equations --> "Loop" of n_evalspeedFails4bb6in___6/5 
* CEs [26] --> Loop 23 
* CEs [23,24,25] --> Loop 24 

### Ranking functions of CR n_evalspeedFails4bb6in___6(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalspeedFails4bb6in___6(A,B,C,D,E) 


### Specialization of cost equations n_evalspeedFails4bb3in___5/9 
* CE 15 is refined into CE [27] 
* CE 13 is refined into CE [28] 
* CE 14 is refined into CE [29] 


### Cost equations --> "Loop" of n_evalspeedFails4bb3in___5/9 
* CEs [29] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [27] --> Loop 27 

### Ranking functions of CR n_evalspeedFails4bb3in___5(A,B,C,D,E,F,G,H,I) 
* RF of phase [25]: [B-D]

#### Partial ranking functions of CR n_evalspeedFails4bb3in___5(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    B-D


### Specialization of cost equations n_evalspeedFails4bb3in___5_loop_cont/6 
* CE 17 is refined into CE [30] 
* CE 16 is refined into CE [31] 


### Cost equations --> "Loop" of n_evalspeedFails4bb3in___5_loop_cont/6 
* CEs [30] --> Loop 28 
* CEs [31] --> Loop 29 

### Ranking functions of CR n_evalspeedFails4bb3in___5_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalspeedFails4bb3in___5_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalspeedFails4bb6in___7/5 
* CE 6 is refined into CE [32,33,34] 
* CE 7 is refined into CE [35] 


### Cost equations --> "Loop" of n_evalspeedFails4bb6in___7/5 
* CEs [35] --> Loop 30 
* CEs [32,33,34] --> Loop 31 

### Ranking functions of CR n_evalspeedFails4bb6in___7(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalspeedFails4bb6in___7(A,B,C,D,E) 


### Specialization of cost equations n_evalspeedFails4entryin___8/5 
* CE 3 is refined into CE [36,37] 
* CE 2 is refined into CE [38,39] 


### Cost equations --> "Loop" of n_evalspeedFails4entryin___8/5 
* CEs [36] --> Loop 32 
* CEs [37] --> Loop 33 
* CEs [38] --> Loop 34 
* CEs [39] --> Loop 35 

### Ranking functions of CR n_evalspeedFails4entryin___8(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalspeedFails4entryin___8(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [40,41,42,43] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [43] --> Loop 36 
* CEs [42] --> Loop 37 
* CEs [41] --> Loop 38 
* CEs [40] --> Loop 39 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalspeedFails4bb3in___2(A,B,C,D,E,F,G,H,I):
* Chain [[18],20]: 2*it(18)+0
  Such that:it(18) =< B-D

  with precondition: [A+1=0,E=2,0>=C,B>=D+1] 

* Chain [[18],19]: 2*it(18)+2
  Such that:it(18) =< B-D

  with precondition: [A+1=0,E=3,0>=C,B>=D+1] 

* Chain [20]: 0
  with precondition: [A+1=0,E=2,0>=C,B>=D] 

* Chain [19]: 2
  with precondition: [A+1=0,E=3,D=B,0>=C] 


#### Cost of chains of n_evalspeedFails4bb3in___2_loop_cont(A,B,C,D,E,F):
* Chain [22]: 0
  with precondition: [A=2] 

* Chain [21]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalspeedFails4bb6in___6(A,B,C,D,E):
* Chain [24]: 4*s(2)+3
  Such that:aux(1) =< B-D
s(2) =< aux(1)

  with precondition: [A+1=0,0>=C,B>=D] 

* Chain [23]: 1
  with precondition: [A+1=0,0>=C,D>=B+1] 


#### Cost of chains of n_evalspeedFails4bb3in___5(A,B,C,D,E,F,G,H,I):
* Chain [[25],27]: 2*it(25)+0
  Such that:it(25) =< B-D

  with precondition: [A=1,E=2,C>=1,B>=D+1] 

* Chain [[25],26]: 2*it(25)+2
  Such that:it(25) =< B-D

  with precondition: [A=1,E=3,C>=1,B>=D+1] 

* Chain [27]: 0
  with precondition: [A=1,E=2,C>=1,B>=D] 

* Chain [26]: 2
  with precondition: [A=1,E=3,D=B,C>=1] 


#### Cost of chains of n_evalspeedFails4bb3in___5_loop_cont(A,B,C,D,E,F):
* Chain [29]: 0
  with precondition: [A=2] 

* Chain [28]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalspeedFails4bb6in___7(A,B,C,D,E):
* Chain [31]: 4*s(5)+3
  Such that:aux(2) =< B-D
s(5) =< aux(2)

  with precondition: [A=1,C>=1,B>=D] 

* Chain [30]: 1
  with precondition: [A=1,C>=1,D>=B+1] 


#### Cost of chains of n_evalspeedFails4entryin___8(A,B,C,D,E):
* Chain [35]: 4*s(8)+4
  Such that:s(7) =< -B+C
s(8) =< s(7)

  with precondition: [0>=A,C>=B] 

* Chain [34]: 2
  with precondition: [0>=A,B>=C+1] 

* Chain [33]: 4*s(10)+4
  Such that:s(9) =< -B+C
s(10) =< s(9)

  with precondition: [A>=1,C>=B] 

* Chain [32]: 2
  with precondition: [A>=1,B>=C+1] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [39]: 4*s(12)+6
  Such that:s(11) =< -B+C
s(12) =< s(11)

  with precondition: [0>=A,C>=B] 

* Chain [38]: 4
  with precondition: [0>=A,B>=C+1] 

* Chain [37]: 4*s(14)+6
  Such that:s(13) =< -B+C
s(14) =< s(13)

  with precondition: [A>=1,C>=B] 

* Chain [36]: 4
  with precondition: [A>=1,B>=C+1] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [39] with precondition: [0>=A,C>=B] 
    - Upper bound: -4*B+4*C+6 
    - Complexity: n 
* Chain [38] with precondition: [0>=A,B>=C+1] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [37] with precondition: [A>=1,C>=B] 
    - Upper bound: -4*B+4*C+6 
    - Complexity: n 
* Chain [36] with precondition: [A>=1,B>=C+1] 
    - Upper bound: 4 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C,D,E): nat(-B+C)*4+2+4 
Asymptotic class: n 
* Total analysis performed in 263 ms.


-- stats
realtime 0:00.31
usertime 0.30
systime 0.00

