WORST_CASE(?,O(1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evaleasy1bb3in___6/5,n_evaleasy1bbin___1/5]
1. non_recursive  : [exit_location/1]
2. recursive  : [n_evaleasy1bb3in___3/5,n_evaleasy1bbin___2/5]
3. non_recursive  : [n_evaleasy1stop___4/3]
4. non_recursive  : [n_evaleasy1bb3in___3_loop_cont/4]
5. non_recursive  : [n_evaleasy1bb3in___6_loop_cont/4]
6. non_recursive  : [n_evaleasy1bbin___5/3]
7. non_recursive  : [n_evaleasy1bb3in___7/3]
8. non_recursive  : [n_evaleasy1bbin___8/3]
9. non_recursive  : [n_evaleasy1bb3in___9/3]
10. non_recursive  : [n_evaleasy1start/3]
11. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evaleasy1bb3in___6/5
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into n_evaleasy1bb3in___3/5
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evaleasy1bb3in___3_loop_cont/4
5. SCC is partially evaluated into n_evaleasy1bb3in___6_loop_cont/4
6. SCC is partially evaluated into n_evaleasy1bbin___5/3
7. SCC is partially evaluated into n_evaleasy1bb3in___7/3
8. SCC is partially evaluated into n_evaleasy1bbin___8/3
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evaleasy1bb3in___6/5 
* CE 9 is refined into CE [20] 
* CE 8 is refined into CE [21] 
* CE 7 is refined into CE [22] 
* CE 5 is refined into CE [23] 
* CE 6 is refined into CE [24] 


### Cost equations --> "Loop" of n_evaleasy1bb3in___6/5 
* CEs [23] --> Loop 20 
* CEs [24] --> Loop 21 
* CEs [20] --> Loop 22 
* CEs [21] --> Loop 23 
* CEs [22] --> Loop 24 

### Ranking functions of CR n_evaleasy1bb3in___6(A,B,C,D,E) 
* RF of phase [20]: [-A/2+20]
* RF of phase [21]: [-A/2+20]

#### Partial ranking functions of CR n_evaleasy1bb3in___6(A,B,C,D,E) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    -A/2+20
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    -A/2+20


### Specialization of cost equations n_evaleasy1bb3in___3/5 
* CE 16 is refined into CE [25] 
* CE 15 is refined into CE [26] 
* CE 14 is refined into CE [27] 


### Cost equations --> "Loop" of n_evaleasy1bb3in___3/5 
* CEs [27] --> Loop 25 
* CEs [25] --> Loop 26 
* CEs [26] --> Loop 27 

### Ranking functions of CR n_evaleasy1bb3in___3(A,B,C,D,E) 
* RF of phase [25]: [-A+40]

#### Partial ranking functions of CR n_evaleasy1bb3in___3(A,B,C,D,E) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    -A+40


### Specialization of cost equations n_evaleasy1bb3in___3_loop_cont/4 
* CE 18 is refined into CE [28] 
* CE 17 is refined into CE [29] 


### Cost equations --> "Loop" of n_evaleasy1bb3in___3_loop_cont/4 
* CEs [28] --> Loop 28 
* CEs [29] --> Loop 29 

### Ranking functions of CR n_evaleasy1bb3in___3_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evaleasy1bb3in___3_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evaleasy1bb3in___6_loop_cont/4 
* CE 12 is refined into CE [30,31,32] 
* CE 11 is refined into CE [33] 
* CE 10 is refined into CE [34] 


### Cost equations --> "Loop" of n_evaleasy1bb3in___6_loop_cont/4 
* CEs [30,31,32] --> Loop 30 
* CEs [33] --> Loop 31 
* CEs [34] --> Loop 32 

### Ranking functions of CR n_evaleasy1bb3in___6_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evaleasy1bb3in___6_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evaleasy1bbin___5/3 
* CE 19 is refined into CE [35,36] 


### Cost equations --> "Loop" of n_evaleasy1bbin___5/3 
* CEs [35,36] --> Loop 33 

### Ranking functions of CR n_evaleasy1bbin___5(A,B,C) 

#### Partial ranking functions of CR n_evaleasy1bbin___5(A,B,C) 


### Specialization of cost equations n_evaleasy1bb3in___7/3 
* CE 13 is refined into CE [37] 


### Cost equations --> "Loop" of n_evaleasy1bb3in___7/3 
* CEs [37] --> Loop 34 

### Ranking functions of CR n_evaleasy1bb3in___7(A,B,C) 

#### Partial ranking functions of CR n_evaleasy1bb3in___7(A,B,C) 


### Specialization of cost equations n_evaleasy1bbin___8/3 
* CE 3 is refined into CE [38,39,40] 
* CE 2 is refined into CE [41,42] 
* CE 4 is refined into CE [43] 


### Cost equations --> "Loop" of n_evaleasy1bbin___8/3 
* CEs [38,39,40] --> Loop 35 
* CEs [41,42] --> Loop 36 
* CEs [43] --> Loop 37 

### Ranking functions of CR n_evaleasy1bbin___8(A,B,C) 

#### Partial ranking functions of CR n_evaleasy1bbin___8(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [44,45,46] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [46] --> Loop 38 
* CEs [45] --> Loop 39 
* CEs [44] --> Loop 40 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_evaleasy1bb3in___6(A,B,C,D,E):
* Chain [[21],23]: 2*it(21)+1
  Such that:it(21) =< -A/2+20

  with precondition: [C=2,39>=A,0>=B+1,A>=2] 

* Chain [[21],22]: 2*it(21)+0
  Such that:it(21) =< -A/2+20

  with precondition: [C=3,39>=A,0>=B+1,A>=2] 

* Chain [[20],23]: 2*it(20)+1
  Such that:it(20) =< -A/2+20

  with precondition: [C=2,39>=A,A>=2,B>=1] 

* Chain [[20],22]: 2*it(20)+0
  Such that:it(20) =< -A/2+20

  with precondition: [C=3,39>=A,A>=2,B>=1] 

* Chain [24]: 2
  with precondition: [A=2,B=0,C=4,D=3,E=0] 

* Chain [22]: 0
  with precondition: [C=3,A>=2] 


#### Cost of chains of n_evaleasy1bb3in___3(A,B,C,D,E):
* Chain [[25],27]: 2*it(25)+1
  Such that:it(25) =< -A+40

  with precondition: [B=0,C=2,39>=A,A>=2] 

* Chain [[25],26]: 2*it(25)+0
  Such that:it(25) =< -A+40

  with precondition: [B=0,C=3,39>=A,A>=2] 

* Chain [27]: 1
  with precondition: [B=0,C=2,A>=40] 

* Chain [26]: 0
  with precondition: [C=3] 


#### Cost of chains of n_evaleasy1bb3in___3_loop_cont(A,B,C,D):
* Chain [29]: 0
  with precondition: [A=2] 

* Chain [28]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evaleasy1bb3in___6_loop_cont(A,B,C,D):
* Chain [32]: 0
  with precondition: [A=2] 

* Chain [31]: 0
  with precondition: [A=3] 

* Chain [30]: 4*s(3)+1
  Such that:aux(1) =< -B+40
s(3) =< aux(1)

  with precondition: [A=4] 


#### Cost of chains of n_evaleasy1bbin___5(A,B,C):
* Chain [33]: 154
  with precondition: [A=1,B=0] 


#### Cost of chains of n_evaleasy1bb3in___7(A,B,C):
* Chain [34]: 155
  with precondition: [A=1,B=0] 


#### Cost of chains of n_evaleasy1bbin___8(A,B,C):
* Chain [37]: 156
  with precondition: [A=0,B=0] 

* Chain [36]: 78
  with precondition: [A=0,0>=B+1] 

* Chain [35]: 116
  with precondition: [A=0,B>=1] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [40]: 159
  with precondition: [B=0] 

* Chain [39]: 81
  with precondition: [0>=B+1] 

* Chain [38]: 119
  with precondition: [B>=1] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [40] with precondition: [B=0] 
    - Upper bound: 159 
    - Complexity: constant 
* Chain [39] with precondition: [0>=B+1] 
    - Upper bound: 81 
    - Complexity: constant 
* Chain [38] with precondition: [B>=1] 
    - Upper bound: 119 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C): 159 
Asymptotic class: constant 
* Total analysis performed in 216 ms.


-- stats
realtime 0:00.47
usertime 0.25
systime 0.01

