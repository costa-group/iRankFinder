WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalrsdbb1in___2/7,n_evalrsdbb4in___4/7]
1. recursive  : [n_evalrsdbb1in___1/7,n_evalrsdbb4in___3/7,n_evalrsdbb4in___4_loop_cont/8]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalrsdstop___6/4]
4. non_recursive  : [n_evalrsdbb4in___3_loop_cont/5]
5. non_recursive  : [n_evalrsdbb1in___5/4]
6. non_recursive  : [n_evalrsdbb4in___7/4]
7. non_recursive  : [n_evalrsdentryin___8/4]
8. non_recursive  : [n_evalrsdstart/4]
9. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalrsdbb4in___4/7
1. SCC is partially evaluated into n_evalrsdbb4in___3/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalrsdbb4in___3_loop_cont/5
5. SCC is partially evaluated into n_evalrsdbb1in___5/4
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into n_evalrsdentryin___8/4
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalrsdbb4in___4/7 
* CE 11 is refined into CE [20] 
* CE 10 is refined into CE [21] 
* CE 9 is refined into CE [22] 
* CE 8 is refined into CE [23] 


### Cost equations --> "Loop" of n_evalrsdbb4in___4/7 
* CEs [23] --> Loop 15 
* CEs [20] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [22] --> Loop 18 

### Ranking functions of CR n_evalrsdbb4in___4(A,B,C,D,E,F,G) 
* RF of phase [15]: [-A+C+1,-B/2+C+1/2,C]

#### Partial ranking functions of CR n_evalrsdbb4in___4(A,B,C,D,E,F,G) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    -A+C+1
    -B/2+C+1/2
    C


### Specialization of cost equations n_evalrsdbb4in___3/7 
* CE 14 is refined into CE [24] 
* CE 19 is refined into CE [25] 
* CE 15 is refined into CE [26,27] 
* CE 18 is refined into CE [28] 
* CE 16 is refined into CE [29] 
* CE 17 is refined into CE [30] 


### Cost equations --> "Loop" of n_evalrsdbb4in___3/7 
* CEs [29,30] --> Loop 19 
* CEs [24,25] --> Loop 20 
* CEs [27] --> Loop 21 
* CEs [26] --> Loop 22 
* CEs [28] --> Loop 23 

### Ranking functions of CR n_evalrsdbb4in___3(A,B,C,D,E,F,G) 
* RF of phase [19]: [-A+B+1,-A+C+1,B,C]

#### Partial ranking functions of CR n_evalrsdbb4in___3(A,B,C,D,E,F,G) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    -A+B+1
    -A+C+1
    B
    C


### Specialization of cost equations n_evalrsdbb4in___3_loop_cont/5 
* CE 13 is refined into CE [31] 
* CE 12 is refined into CE [32] 


### Cost equations --> "Loop" of n_evalrsdbb4in___3_loop_cont/5 
* CEs [31] --> Loop 24 
* CEs [32] --> Loop 25 

### Ranking functions of CR n_evalrsdbb4in___3_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalrsdbb4in___3_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalrsdbb1in___5/4 
* CE 4 is refined into CE [33] 
* CE 5 is refined into CE [34,35] 
* CE 6 is refined into CE [36,37] 
* CE 7 is refined into CE [38,39,40] 


### Cost equations --> "Loop" of n_evalrsdbb1in___5/4 
* CEs [33,34,35,36,37,38,39,40] --> Loop 26 

### Ranking functions of CR n_evalrsdbb1in___5(A,B,C,D) 

#### Partial ranking functions of CR n_evalrsdbb1in___5(A,B,C,D) 


### Specialization of cost equations n_evalrsdentryin___8/4 
* CE 2 is refined into CE [41] 
* CE 3 is refined into CE [42] 


### Cost equations --> "Loop" of n_evalrsdentryin___8/4 
* CEs [41] --> Loop 27 
* CEs [42] --> Loop 28 

### Ranking functions of CR n_evalrsdentryin___8(A,B,C,D) 

#### Partial ranking functions of CR n_evalrsdentryin___8(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [43,44] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [44] --> Loop 29 
* CEs [43] --> Loop 30 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalrsdbb4in___4(A,B,C,D,E,F,G):
* Chain [[15],18]: 2*it(15)+2
  Such that:it(15) =< -A+C

  with precondition: [D=2,G+1=B,A=E,G=F,C>=A+1,G>=C,2*A>=G+1] 

* Chain [[15],17]: 2*it(15)+1
  Such that:it(15) =< -A+C+1

  with precondition: [D=3,C>=A,2*A>=B,B>=C+1] 

* Chain [[15],16]: 2*it(15)+0
  Such that:it(15) =< -B/2+C+1/2

  with precondition: [D=4,C>=A,2*A>=B,B>=C+1] 

* Chain [18]: 2
  with precondition: [D=2,A=E,B=F+1,B=G+1,C>=A,2*A>=B,B>=C+1] 

* Chain [17]: 1
  with precondition: [D=3,C+1=A,2*C+2>=B,B>=C+1] 

* Chain [16]: 0
  with precondition: [D=4,C+1>=A,2*A>=B,B>=C+1] 


#### Cost of chains of n_evalrsdbb4in___3(A,B,C,D,E,F,G):
* Chain [[19],23]: 4*it(19)+2*s(5)+1
  Such that:aux(1) =< -A+C
it(19) =< -A+C+1
s(5) =< it(19)*aux(1)

  with precondition: [D=3,B=C,B>=A,2*A>=B+1] 

* Chain [[19],22]: 4*it(19)+2*s(5)+3
  Such that:aux(2) =< -A+C
it(19) =< aux(2)
s(5) =< it(19)*aux(2)

  with precondition: [D=3,B=C,B>=A+1,2*A>=B+1] 

* Chain [[19],21]: 6*it(19)+2*s(5)+3
  Such that:aux(3) =< -A+C
it(19) =< aux(3)
s(5) =< it(19)*aux(3)

  with precondition: [D=3,B=C,B>=A+2,2*A>=B+1] 

* Chain [[19],20]: 6*it(19)+2*s(5)+2
  Such that:aux(1) =< -A+C
aux(4) =< C
it(19) =< aux(4)
s(5) =< it(19)*aux(1)

  with precondition: [D=4,B=C,B>=A,2*A>=B+1] 

* Chain [23]: 1
  with precondition: [D=3,A=B+1,A=C+1,A>=0] 

* Chain [22]: 3
  with precondition: [D=3,A=B,A=C,A>=1] 

* Chain [21]: 2*s(6)+3
  Such that:s(6) =< -A+C

  with precondition: [D=3,B=C,B>=A+1,2*A>=B+1] 

* Chain [20]: 2*s(7)+2
  Such that:s(7) =< B/2

  with precondition: [D=4] 


#### Cost of chains of n_evalrsdbb4in___3_loop_cont(A,B,C,D,E):
* Chain [25]: 0
  with precondition: [A=3] 

* Chain [24]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalrsdbb1in___5(A,B,C,D):
* Chain [26]: 2*s(23)+4*s(24)+38*s(25)+12*s(29)+6*s(35)+2*s(36)+6*s(45)+2*s(46)+6
  Such that:s(34) =< 2*A
s(23) =< B/2
s(44) =< C
aux(10) =< A
aux(11) =< C/2
s(24) =< aux(11)
s(25) =< aux(10)
s(29) =< s(25)*aux(10)
s(35) =< s(34)
s(36) =< s(35)*aux(10)
s(45) =< s(44)
s(46) =< s(45)*aux(11)

  with precondition: [2*A=B,2*A=C,A>=0] 


#### Cost of chains of n_evalrsdentryin___8(A,B,C,D):
* Chain [28]: 1
  with precondition: [0>=A+1] 

* Chain [27]: 44*s(48)+12*s(54)+12*s(55)+4*s(56)+8
  Such that:aux(12) =< A
aux(13) =< 2*A
s(48) =< aux(12)
s(54) =< s(48)*aux(12)
s(55) =< aux(13)
s(56) =< s(55)*aux(12)

  with precondition: [A>=0] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [30]: 3
  with precondition: [0>=A+1] 

* Chain [29]: 44*s(61)+12*s(62)+12*s(63)+4*s(64)+10
  Such that:s(59) =< A
s(60) =< 2*A
s(61) =< s(59)
s(62) =< s(61)*s(59)
s(63) =< s(60)
s(64) =< s(63)*s(59)

  with precondition: [A>=0] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [30] with precondition: [0>=A+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [29] with precondition: [A>=0] 
    - Upper bound: 44*A+10+12*A*A+4*A* (2*A)+24*A 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D): nat(A)*44+7+nat(A)*12*nat(A)+nat(A)*4*nat(2*A)+nat(2*A)*12+3 
Asymptotic class: n^2 
* Total analysis performed in 446 ms.


-- stats
realtime 0:00.66
usertime 0.49
systime 0.01

