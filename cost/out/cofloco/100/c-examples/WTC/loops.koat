WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalloopsbb1in___4/5,n_evalloopsbb6in___2/5]
1. recursive  : [n_evalloopsbb4in___1/5]
2. recursive  : [n_evalloopsbb1in___4_loop_cont/6,n_evalloopsbb4in___1_loop_cont/6,n_evalloopsbb4in___3/5,n_evalloopsbb6in___6/5]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [n_evalloopsstop___5/3]
5. non_recursive  : [n_evalloopsbb6in___6_loop_cont/4]
6. non_recursive  : [n_evalloopsentryin___7/3]
7. non_recursive  : [n_evalloopsstart/3]
8. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalloopsbb1in___4/5
1. SCC is partially evaluated into n_evalloopsbb4in___1/5
2. SCC is partially evaluated into n_evalloopsbb6in___6/5
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_evalloopsbb6in___6_loop_cont/4
6. SCC is partially evaluated into n_evalloopsentryin___7/3
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalloopsbb1in___4/5 
* CE 14 is refined into CE [18] 
* CE 13 is refined into CE [19] 
* CE 11 is refined into CE [20] 
* CE 12 is refined into CE [21] 


### Cost equations --> "Loop" of n_evalloopsbb1in___4/5 
* CEs [21] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [19] --> Loop 18 
* CEs [20] --> Loop 19 

### Ranking functions of CR n_evalloopsbb1in___4(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalloopsbb1in___4(A,B,C,D,E) 


### Specialization of cost equations n_evalloopsbb4in___1/5 
* CE 16 is refined into CE [22] 
* CE 17 is refined into CE [23] 
* CE 15 is refined into CE [24] 


### Cost equations --> "Loop" of n_evalloopsbb4in___1/5 
* CEs [24] --> Loop 20 
* CEs [22] --> Loop 21 
* CEs [23] --> Loop 22 

### Ranking functions of CR n_evalloopsbb4in___1(A,B,C,D,E) 
* RF of phase [20]: [A-B]

#### Partial ranking functions of CR n_evalloopsbb4in___1(A,B,C,D,E) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    A-B


### Specialization of cost equations n_evalloopsbb6in___6/5 
* CE 4 is refined into CE [25,26] 
* CE 5 is refined into CE [27] 
* CE 7 is refined into CE [28] 
* CE 8 is refined into CE [29] 
* CE 6 is refined into CE [30,31] 


### Cost equations --> "Loop" of n_evalloopsbb6in___6/5 
* CEs [31] --> Loop 23 
* CEs [30] --> Loop 24 
* CEs [27,28,29] --> Loop 25 
* CEs [26] --> Loop 26 
* CEs [25] --> Loop 27 

### Ranking functions of CR n_evalloopsbb6in___6(A,B,C,D,E) 
* RF of phase [23]: [A-2]

#### Partial ranking functions of CR n_evalloopsbb6in___6(A,B,C,D,E) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    A-2


### Specialization of cost equations n_evalloopsbb6in___6_loop_cont/4 
* CE 10 is refined into CE [32] 
* CE 9 is refined into CE [33] 


### Cost equations --> "Loop" of n_evalloopsbb6in___6_loop_cont/4 
* CEs [32] --> Loop 28 
* CEs [33] --> Loop 29 

### Ranking functions of CR n_evalloopsbb6in___6_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evalloopsbb6in___6_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evalloopsentryin___7/3 
* CE 2 is refined into CE [34,35,36,37,38] 
* CE 3 is refined into CE [39] 


### Cost equations --> "Loop" of n_evalloopsentryin___7/3 
* CEs [39] --> Loop 30 
* CEs [37] --> Loop 31 
* CEs [35] --> Loop 32 
* CEs [34,36,38] --> Loop 33 

### Ranking functions of CR n_evalloopsentryin___7(A,B,C) 

#### Partial ranking functions of CR n_evalloopsentryin___7(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [40,41,42] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [42] --> Loop 34 
* CEs [40,41] --> Loop 35 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_evalloopsbb1in___4(A,B,C,D,E):
* Chain [19]: 2
  with precondition: [A=0,C=4] 

* Chain [18]: 1
  with precondition: [C=2,E=1,A=D,A>=2] 

* Chain [17]: 0
  with precondition: [C=3,A>=0] 

* Chain [16,19]: 4
  with precondition: [A=1,C=4] 

* Chain [16,17]: 2
  with precondition: [A=1,C=3] 


#### Cost of chains of n_evalloopsbb4in___1(A,B,C,D,E):
* Chain [[20],22]: 1*it(20)+0
  Such that:it(20) =< A-B

  with precondition: [C=3,B>=2,A>=B+1] 

* Chain [[20],21]: 1*it(20)+1
  Such that:it(20) =< -B+D+1

  with precondition: [C=5,A=D+1,B>=2,E>=2*B,E>=A,2*A>=E+2] 

* Chain [22]: 0
  with precondition: [C=3,B>=2,2*A>=B+2] 

* Chain [21]: 1
  with precondition: [C=5,A=D+1,B=E,B>=A,2*A>=B+2] 


#### Cost of chains of n_evalloopsbb6in___6(A,B,C,D,E):
* Chain [[23],25]: 5*it(23)+1*s(5)+3
  Such that:aux(3) =< A
it(23) =< aux(3)
s(5) =< it(23)*aux(3)

  with precondition: [C=3,A>=3] 

* Chain [[23],24,26]: 4*it(23)+1*s(5)+9
  Such that:aux(4) =< A
it(23) =< aux(4)
s(5) =< it(23)*aux(4)

  with precondition: [C=4,A>=3] 

* Chain [[23],24,25]: 4*it(23)+1*s(2)+1*s(5)+7
  Such that:s(2) =< 1
aux(5) =< A
it(23) =< aux(5)
s(5) =< it(23)*aux(5)

  with precondition: [C=3,A>=3] 

* Chain [27]: 3
  with precondition: [A=0,C=4] 

* Chain [26]: 5
  with precondition: [A=1,C=4] 

* Chain [25]: 1*s(2)+3
  Such that:s(2) =< A

  with precondition: [C=3,A>=0] 

* Chain [24,26]: 9
  with precondition: [A=2,C=4] 

* Chain [24,25]: 1*s(2)+7
  Such that:s(2) =< 1

  with precondition: [A=2,C=3] 


#### Cost of chains of n_evalloopsbb6in___6_loop_cont(A,B,C,D):
* Chain [29]: 0
  with precondition: [A=3] 

* Chain [28]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalloopsentryin___7(A,B,C):
* Chain [33]: 2*s(17)+14*s(18)+3*s(19)+10
  Such that:s(15) =< 1
aux(8) =< A
s(17) =< s(15)
s(18) =< aux(8)
s(19) =< s(18)*aux(8)

  with precondition: [A>=0] 

* Chain [32]: 6
  with precondition: [A=1] 

* Chain [31]: 10
  with precondition: [A=2] 

* Chain [30]: 1
  with precondition: [0>=A+1] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [35]: 2*s(30)+14*s(31)+3*s(32)+12
  Such that:s(28) =< 1
s(29) =< A
s(30) =< s(28)
s(31) =< s(29)
s(32) =< s(31)*s(29)

  with precondition: [A>=0] 

* Chain [34]: 3
  with precondition: [0>=A+1] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [35] with precondition: [A>=0] 
    - Upper bound: 14*A+14+3*A*A 
    - Complexity: n^2 
* Chain [34] with precondition: [0>=A+1] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C): nat(A)*14+11+nat(A)*3*nat(A)+3 
Asymptotic class: n^2 
* Total analysis performed in 273 ms.


-- stats
realtime 0:00.36
usertime 0.31
systime 0.00

