WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb6in___2/13,n_evalfbb7in___1/13]
1. recursive  : [n_evalfbb6in___2_loop_cont/14,n_evalfbb6in___6/13,n_evalfbb7in___4/13,n_evalfbb9in___3/13]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalfstop___5/7]
4. non_recursive  : [n_evalfbb6in___6_loop_cont/8]
5. non_recursive  : [n_evalfbb9in___7/7]
6. non_recursive  : [n_evalfstart/7]
7. non_recursive  : [pyRinit/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb6in___2/13
1. SCC is partially evaluated into n_evalfbb6in___6/13
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalfbb6in___6_loop_cont/8
5. SCC is partially evaluated into n_evalfbb9in___7/7
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb6in___2/13 
* CE 17 is refined into CE [18] 
* CE 14 is refined into CE [19] 
* CE 16 is refined into CE [20] 
* CE 15 is refined into CE [21] 


### Cost equations --> "Loop" of n_evalfbb6in___2/13 
* CEs [21] --> Loop 15 
* CEs [18] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [20] --> Loop 18 

### Ranking functions of CR n_evalfbb6in___2(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [15]: [-B/2+D/2+1/2,-B/2+F/2,-C/2+D/2,-C/2+F/2-1/2,D/2-1/2,D/2-E/2,-E/2+F/2-1/2,F/2-1]

#### Partial ranking functions of CR n_evalfbb6in___2(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    -B/2+D/2+1/2
    -B/2+F/2
    -C/2+D/2
    -C/2+F/2-1/2
    D/2-1/2
    D/2-E/2
    -E/2+F/2-1/2
    F/2-1


### Specialization of cost equations n_evalfbb6in___6/13 
* CE 5 is refined into CE [22] 
* CE 6 is refined into CE [23,24,25,26] 
* CE 9 is refined into CE [27] 
* CE 8 is refined into CE [28] 
* CE 11 is refined into CE [29] 
* CE 10 is refined into CE [30] 
* CE 4 is refined into CE [31] 
* CE 7 is refined into CE [32,33,34,35] 


### Cost equations --> "Loop" of n_evalfbb6in___6/13 
* CEs [30] --> Loop 19 
* CEs [31] --> Loop 20 
* CEs [35] --> Loop 21 
* CEs [34] --> Loop 22 
* CEs [33] --> Loop 23 
* CEs [32] --> Loop 24 
* CEs [22,23,24,25,26] --> Loop 25 
* CEs [27] --> Loop 26 
* CEs [28,29] --> Loop 27 

### Ranking functions of CR n_evalfbb6in___6(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [19,20,21,22,23,24]: [-A/2+D/2-1,B/2-3/2,C/2-1]

#### Partial ranking functions of CR n_evalfbb6in___6(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [19,20,21,22,23,24]:
  - RF of loop [19:1]:
    -A+1 depends on loops [21:1,22:1,23:1,24:1] 
    B-D depends on loops [21:1,22:1,23:1,24:1] 
    C-D+1 depends on loops [21:1,22:1,23:1,24:1] 
    D-2
  - RF of loop [19:1,20:1,21:1,22:1,23:1,24:1]:
    B/2-3/2
    C/2-1
  - RF of loop [20:1]:
    D-3
  - RF of loop [20:1,21:1,22:1,23:1,24:1]:
    -A/2+D/2-1
  - RF of loop [21:1]:
    A/3-4/3 depends on loops [19:1,20:1] 
  - RF of loop [22:1]:
    A/3-2/3 depends on loops [19:1,20:1] 
  - RF of loop [23:1]:
    A-2 depends on loops [19:1,20:1] 
    -B+D-1 depends on loops [19:1,20:1] 
    -C+D-2 depends on loops [19:1,20:1] 
    D/3-5/3
  - RF of loop [24:1]:
    A depends on loops [19:1,20:1] 
    -B+D+1 depends on loops [19:1,20:1] 
    -C+D depends on loops [19:1,20:1] 
    D/3-1


### Specialization of cost equations n_evalfbb6in___6_loop_cont/8 
* CE 13 is refined into CE [36] 
* CE 12 is refined into CE [37] 


### Cost equations --> "Loop" of n_evalfbb6in___6_loop_cont/8 
* CEs [36] --> Loop 28 
* CEs [37] --> Loop 29 

### Ranking functions of CR n_evalfbb6in___6_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR n_evalfbb6in___6_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations n_evalfbb9in___7/7 
* CE 2 is refined into CE [38,39,40] 
* CE 3 is refined into CE [41] 


### Cost equations --> "Loop" of n_evalfbb9in___7/7 
* CEs [41] --> Loop 30 
* CEs [38,39,40] --> Loop 31 

### Ranking functions of CR n_evalfbb9in___7(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_evalfbb9in___7(A,B,C,D,E,F,G) 


### Specialization of cost equations pyRinit/7 
* CE 1 is refined into CE [42,43] 


### Cost equations --> "Loop" of pyRinit/7 
* CEs [43] --> Loop 32 
* CEs [42] --> Loop 33 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb6in___2(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[15],18]: 2*it(15)+1
  Such that:it(15) =< D/2-I/2

  with precondition: [G=2,B=C+1,F=D+1,B=E+1,B=I+2,B=J+1,B=L+1,B+H=K+2,B+H=M+1,1>=H,B>=2,H>=0,F>=B+H+1,A+B>=F+2] 

* Chain [[15],17]: 2*it(15)+2
  Such that:it(15) =< D/2-M/2+1/2

  with precondition: [G=2,B=C+1,F=D+1,B=E+1,B=I+2,B=J+1,B=L+1,B+H=K+2,B+H=M+1,B>=2,H>=2,F>=B+H+1,A+B>=F+2] 

* Chain [[15],16]: 2*it(15)+0
  Such that:it(15) =< -B/2+F/2

  with precondition: [G=3,B=C+1,F=D+1,B=E+1,B>=2,F>=B+1,A+B>=F+2] 

* Chain [18]: 1
  with precondition: [G=2,B=C+1,F=D+1,B=E+1,B=I+2,B=J+1,F=K+1,B=L+1,F=M,F+1=B+H,B>=2,F+1>=B,B>=F,A+B>=F+2] 

* Chain [17]: 2
  with precondition: [G=2,B=C+1,F=D+1,B=E+1,B=I+2,B=J+1,F=K+1,B=L+1,F=M,F+1=B+H,B>=2,F>=B+1,A+B>=F+2] 

* Chain [16]: 0
  with precondition: [G=3,B=C+1,F=D+1,B=E+1,B>=2,F+1>=B,A+B>=F+2] 


#### Cost of chains of n_evalfbb6in___6(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[19,20,21,22,23,24],27]: 10*it(19)+4*it(22)+5*it(23)+4*it(24)+4*s(2)+2*s(7)+2
  Such that:aux(49) =< A+C+1
aux(23) =< A/2+C/4
aux(69) =< A/3+C/3
aux(61) =< C/2+1/2
aux(71) =< A
aux(72) =< A+C
aux(73) =< A+C/2
aux(74) =< C/2
s(2) =< aux(73)
it(22) =< aux(49)
it(23) =< aux(49)
it(22) =< aux(72)
it(23) =< aux(72)
it(24) =< aux(72)
it(19) =< aux(74)
it(22) =< aux(74)
it(23) =< aux(74)
it(24) =< aux(74)
it(23) =< aux(73)
it(24) =< aux(73)
it(19) =< aux(61)
it(22) =< aux(61)
it(23) =< aux(61)
it(24) =< aux(61)
it(19) =< aux(72)
it(23) =< aux(69)
it(24) =< aux(69)
it(23) =< it(19)+it(19)+aux(71)
it(24) =< it(19)+it(19)+aux(71)
it(22) =< it(19)+it(19)+aux(71)
s(7) =< it(19)+it(19)+aux(71)
s(7) =< it(19)*aux(23)

  with precondition: [G=3,C+1=B,A+C=D,A>=0,C>=3] 

* Chain [[19,20,21,22,23,24],26]: 10*it(19)+4*it(22)+5*it(23)+4*it(24)+2*s(7)+2*s(8)+2
  Such that:aux(57) =< -B/2+D
aux(56) =< -B/2+D+1/2
aux(23) =< -B/4+D/2+1/4
aux(49) =< D+1
aux(75) =< -B+D+1
aux(76) =< B/2
aux(77) =< D
aux(78) =< D/3
it(22) =< aux(49)
it(23) =< aux(49)
it(22) =< aux(77)
it(23) =< aux(77)
it(24) =< aux(77)
it(19) =< aux(76)
it(22) =< aux(76)
it(23) =< aux(76)
it(24) =< aux(76)
it(23) =< aux(56)
s(8) =< aux(56)
it(23) =< aux(57)
it(24) =< aux(57)
s(8) =< aux(57)
it(19) =< aux(77)
it(23) =< aux(78)
it(24) =< aux(78)
it(23) =< it(19)+it(19)+aux(75)
it(24) =< it(19)+it(19)+aux(75)
it(22) =< it(19)+it(19)+aux(75)
s(7) =< it(19)+it(19)+aux(75)
s(7) =< it(19)*aux(23)

  with precondition: [G=4,A+B=D+1,A+C=D,A>=0,D>=A+3,A+D>=5] 

* Chain [[19,20,21,22,23,24],25]: 10*it(19)+4*it(22)+5*it(23)+4*it(24)+2*s(7)+2*s(8)+4*s(9)+5
  Such that:aux(49) =< A+C+1
aux(23) =< A/2+C/4
aux(69) =< A/3+C/3
aux(61) =< C/2+1/2
aux(80) =< A
aux(81) =< A+C
aux(82) =< A+C/2
aux(83) =< C/2
s(9) =< aux(81)
it(22) =< aux(49)
it(23) =< aux(49)
it(22) =< aux(81)
it(23) =< aux(81)
it(24) =< aux(81)
it(19) =< aux(83)
it(22) =< aux(83)
it(23) =< aux(83)
it(24) =< aux(83)
it(23) =< aux(82)
s(8) =< aux(82)
it(24) =< aux(82)
it(19) =< aux(61)
it(22) =< aux(61)
it(23) =< aux(61)
it(24) =< aux(61)
it(19) =< aux(81)
it(23) =< aux(69)
it(24) =< aux(69)
it(23) =< it(19)+it(19)+aux(80)
it(24) =< it(19)+it(19)+aux(80)
it(22) =< it(19)+it(19)+aux(80)
s(7) =< it(19)+it(19)+aux(80)
s(7) =< it(19)*aux(23)

  with precondition: [G=4,A+B=D+1,A+C=D,A>=0,D>=A+3] 

* Chain [27]: 2*s(2)+2
  Such that:s(2) =< -C/2+D/2

  with precondition: [G=3,C+1=B,A+C=D,C>=1,D>=C] 

* Chain [25]: 4*s(9)+5
  Such that:aux(79) =< -B/2+D/2
s(9) =< aux(79)

  with precondition: [G=4,C+1=B,A+C=D,2>=C,C>=1,D>=C+1] 


#### Cost of chains of n_evalfbb6in___6_loop_cont(A,B,C,D,E,F,G,H):
* Chain [29]: 0
  with precondition: [A=3] 

* Chain [28]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalfbb9in___7(A,B,C,D,E,F,G):
* Chain [31]: 6*s(61)+4*s(64)+4*s(65)+9*s(66)+10*s(68)+2*s(69)+4*s(88)+8*s(89)+18*s(90)+20*s(92)+4*s(93)+4*s(94)+6
  Such that:s(55) =< A
aux(84) =< 2*A
s(60) =< 2/3*A
s(58) =< 3/2*A
s(59) =< 3/4*A
aux(86) =< B
aux(87) =< 2*B
aux(88) =< B/2
aux(89) =< 2/3*B
aux(90) =< 3/2*B
aux(91) =< 3/4*B
aux(92) =< A/2
s(61) =< aux(92)
s(64) =< s(58)
s(65) =< aux(84)
s(66) =< aux(84)
s(68) =< aux(92)
s(65) =< aux(92)
s(66) =< aux(92)
s(66) =< s(58)
s(68) =< aux(84)
s(66) =< s(60)
s(66) =< s(68)+s(68)+s(55)
s(65) =< s(68)+s(68)+s(55)
s(69) =< s(68)+s(68)+s(55)
s(69) =< s(68)*s(59)
s(88) =< aux(87)
s(89) =< aux(87)
s(90) =< aux(87)
s(92) =< aux(88)
s(89) =< aux(88)
s(90) =< aux(88)
s(90) =< aux(90)
s(93) =< aux(90)
s(92) =< aux(87)
s(90) =< aux(89)
s(90) =< s(92)+s(92)+aux(86)
s(89) =< s(92)+s(92)+aux(86)
s(94) =< s(92)+s(92)+aux(86)
s(94) =< s(92)*aux(91)

  with precondition: [B=A,B>=2] 

* Chain [30]: 1
  with precondition: [B=A,1>=B] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G):
* Chain [33]: 3
  with precondition: [1>=B] 

* Chain [32]: 6*s(113)+8*s(114)+12*s(115)+27*s(116)+30*s(117)+6*s(118)+4*s(119)+8
  Such that:aux(93) =< B
aux(94) =< 2*B
aux(95) =< B/2
aux(96) =< 2/3*B
aux(97) =< 3/2*B
aux(98) =< 3/4*B
s(113) =< aux(95)
s(114) =< aux(97)
s(115) =< aux(94)
s(116) =< aux(94)
s(117) =< aux(95)
s(115) =< aux(95)
s(116) =< aux(95)
s(116) =< aux(97)
s(117) =< aux(94)
s(116) =< aux(96)
s(116) =< s(117)+s(117)+aux(93)
s(115) =< s(117)+s(117)+aux(93)
s(118) =< s(117)+s(117)+aux(93)
s(118) =< s(117)*aux(98)
s(119) =< aux(94)

  with precondition: [B>=2] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G): 
-------------------------------------
* Chain [33] with precondition: [1>=B] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [32] with precondition: [B>=2] 
    - Upper bound: 128*B+8 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D,E,F,G): nat(B)*6+5+nat(2*B)*43+nat(3/2*B)*8+nat(B/2)*48+3 
Asymptotic class: n 
* Total analysis performed in 1824 ms.


-- stats
realtime 0:02.28
usertime 1.98
systime 0.00

