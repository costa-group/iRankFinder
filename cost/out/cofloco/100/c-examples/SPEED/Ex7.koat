WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalEx7bb3in___2/7,n_evalEx7bb3in___6/7,n_evalEx7bbin___1/7,n_evalEx7bbin___4/7,n_evalEx7bbin___5/7]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_evalEx7stop___3/4]
3. non_recursive  : [n_evalEx7bb3in___6_loop_cont/5]
4. non_recursive  : [n_evalEx7bbin___7/4]
5. non_recursive  : [n_evalEx7bb3in___8/4]
6. non_recursive  : [n_evalEx7start/4]
7. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalEx7bb3in___6/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalEx7bb3in___6_loop_cont/5
4. SCC is partially evaluated into n_evalEx7bbin___7/4
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalEx7bb3in___6/7 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 
* CE 3 is refined into CE [12] 
* CE 5 is refined into CE [13] 
* CE 4 is refined into CE [14] 


### Cost equations --> "Loop" of n_evalEx7bb3in___6/7 
* CEs [13] --> Loop 10 
* CEs [12] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [10] --> Loop 13 
* CEs [11] --> Loop 14 

### Ranking functions of CR n_evalEx7bb3in___6(A,B,C,D,E,F,G) 
* RF of phase [10]: [A-C,B-C-1]
* RF of phase [11]: [B-C+1]

#### Partial ranking functions of CR n_evalEx7bb3in___6(A,B,C,D,E,F,G) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    A-C
    B-C-1
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    B-C+1


### Specialization of cost equations n_evalEx7bb3in___6_loop_cont/5 
* CE 9 is refined into CE [15] 
* CE 8 is refined into CE [16] 


### Cost equations --> "Loop" of n_evalEx7bb3in___6_loop_cont/5 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR n_evalEx7bb3in___6_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalEx7bb3in___6_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalEx7bbin___7/4 
* CE 2 is refined into CE [17,18,19,20,21] 


### Cost equations --> "Loop" of n_evalEx7bbin___7/4 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [17,20,21] --> Loop 19 

### Ranking functions of CR n_evalEx7bbin___7(A,B,C,D) 

#### Partial ranking functions of CR n_evalEx7bbin___7(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [22] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [22] --> Loop 20 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalEx7bb3in___6(A,B,C,D,E,F,G):
* Chain [[11],13]: 2*it(11)+0
  Such that:it(11) =< B-C+1

  with precondition: [D=3,A>=1,C>=A+2,B>=C] 

* Chain [[11],12,[10],14]: 2*it(10)+2*it(11)+5
  Such that:it(10) =< A
it(11) =< B-C+1

  with precondition: [D=2,A>=2,C>=A+2,B>=C] 

* Chain [[11],12,[10],13]: 2*it(10)+2*it(11)+4
  Such that:it(10) =< A
it(11) =< B-C+1

  with precondition: [D=3,A>=2,C>=A+2,B>=C] 

* Chain [[11],12,14]: 2*it(11)+5
  Such that:it(11) =< B-C+1

  with precondition: [A=1,D=2,C>=3,B>=C] 

* Chain [[11],12,13]: 2*it(11)+4
  Such that:it(11) =< B-C+1

  with precondition: [D=3,A>=1,C>=A+2,B>=C] 

* Chain [13]: 0
  with precondition: [D=3,A>=1,C>=1,B>=A+1,B+1>=C] 

* Chain [12,[10],14]: 2*it(10)+5
  Such that:it(10) =< A

  with precondition: [D=2,B+1=C,A>=2,B>=A+1] 

* Chain [12,[10],13]: 2*it(10)+4
  Such that:it(10) =< A

  with precondition: [D=3,B+1=C,A>=2,B>=A+1] 

* Chain [12,14]: 5
  with precondition: [A=1,D=2,B+1=C,B>=2] 

* Chain [12,13]: 4
  with precondition: [D=3,B+1=C,A>=1,B>=A+1] 


#### Cost of chains of n_evalEx7bb3in___6_loop_cont(A,B,C,D,E):
* Chain [16]: 0
  with precondition: [A=2] 

* Chain [15]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalEx7bbin___7(A,B,C,D):
* Chain [19]: 6*s(6)+8*s(7)+6
  Such that:aux(3) =< B-C
aux(4) =< C
s(7) =< aux(3)
s(6) =< aux(4)

  with precondition: [C=A+1,C>=2,B>=C] 

* Chain [18]: 2*s(12)+6
  Such that:s(12) =< B

  with precondition: [A=1,C=2,B>=3] 

* Chain [17]: 2*s(13)+6
  Such that:s(13) =< C

  with precondition: [A+1=B,A+1=C,A>=2] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [20]: 2*s(20)+8*s(23)+8*s(24)+9
  Such that:s(21) =< -A+B
s(22) =< A+1
s(20) =< B
s(23) =< s(22)
s(24) =< s(21)

  with precondition: [A>=1,B>=A+1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [20] with precondition: [A>=1,B>=A+1] 
    - Upper bound: 10*B+17 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): 10*B+17 
Asymptotic class: n 
* Total analysis performed in 269 ms.


-- stats
realtime 0:00.33
usertime 0.31
systime 0.00

