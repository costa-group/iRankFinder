WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalfbb3in___6/5,n_evalfbb4in___5/5,n_evalfbbin___4/5]
1. non_recursive  : [exit_location/1]
2. recursive  : [n_evalfbb3in___3/5,n_evalfbb4in___2/5,n_evalfbbin___1/5]
3. non_recursive  : [n_evalfstop___7/3]
4. non_recursive  : [n_evalfbb3in___3_loop_cont/4]
5. non_recursive  : [n_evalfbb3in___6_loop_cont/4]
6. non_recursive  : [n_evalfbbin___8/3]
7. non_recursive  : [n_evalfbb4in___9/3]
8. non_recursive  : [n_evalfbb3in___10/3]
9. non_recursive  : [n_evalfstart/3]
10. non_recursive  : [pyRinit/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalfbb3in___6/5
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into n_evalfbb3in___3/5
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalfbb3in___3_loop_cont/4
5. SCC is partially evaluated into n_evalfbb3in___6_loop_cont/4
6. SCC is partially evaluated into n_evalfbbin___8/3
7. SCC is partially evaluated into n_evalfbb4in___9/3
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into pyRinit/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalfbb3in___6/5 
* CE 6 is refined into CE [19] 
* CE 9 is refined into CE [20] 
* CE 5 is refined into CE [21] 
* CE 8 is refined into CE [22] 
* CE 7 is refined into CE [23] 


### Cost equations --> "Loop" of n_evalfbb3in___6/5 
* CEs [23] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [20] --> Loop 20 
* CEs [21] --> Loop 21 
* CEs [22] --> Loop 22 

### Ranking functions of CR n_evalfbb3in___6(A,B,C,D,E) 
* RF of phase [18]: [A,A-B+1]

#### Partial ranking functions of CR n_evalfbb3in___6(A,B,C,D,E) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    A
    A-B+1


### Specialization of cost equations n_evalfbb3in___3/5 
* CE 16 is refined into CE [24] 
* CE 13 is refined into CE [25] 
* CE 15 is refined into CE [26] 
* CE 14 is refined into CE [27] 


### Cost equations --> "Loop" of n_evalfbb3in___3/5 
* CEs [27] --> Loop 23 
* CEs [24] --> Loop 24 
* CEs [25] --> Loop 25 
* CEs [26] --> Loop 26 

### Ranking functions of CR n_evalfbb3in___3(A,B,C,D,E) 
* RF of phase [23]: [A]

#### Partial ranking functions of CR n_evalfbb3in___3(A,B,C,D,E) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    A


### Specialization of cost equations n_evalfbb3in___3_loop_cont/4 
* CE 18 is refined into CE [28] 
* CE 17 is refined into CE [29] 


### Cost equations --> "Loop" of n_evalfbb3in___3_loop_cont/4 
* CEs [28] --> Loop 27 
* CEs [29] --> Loop 28 

### Ranking functions of CR n_evalfbb3in___3_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evalfbb3in___3_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evalfbb3in___6_loop_cont/4 
* CE 12 is refined into CE [30,31,32] 
* CE 11 is refined into CE [33] 
* CE 10 is refined into CE [34] 


### Cost equations --> "Loop" of n_evalfbb3in___6_loop_cont/4 
* CEs [30,31,32] --> Loop 29 
* CEs [33] --> Loop 30 
* CEs [34] --> Loop 31 

### Ranking functions of CR n_evalfbb3in___6_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR n_evalfbb3in___6_loop_cont(A,B,C,D) 


### Specialization of cost equations n_evalfbbin___8/3 
* CE 4 is refined into CE [35,36,37,38] 


### Cost equations --> "Loop" of n_evalfbbin___8/3 
* CEs [35,36,37,38] --> Loop 32 

### Ranking functions of CR n_evalfbbin___8(A,B,C) 

#### Partial ranking functions of CR n_evalfbbin___8(A,B,C) 


### Specialization of cost equations n_evalfbb4in___9/3 
* CE 2 is refined into CE [39] 
* CE 3 is refined into CE [40] 


### Cost equations --> "Loop" of n_evalfbb4in___9/3 
* CEs [39,40] --> Loop 33 

### Ranking functions of CR n_evalfbb4in___9(A,B,C) 

#### Partial ranking functions of CR n_evalfbb4in___9(A,B,C) 


### Specialization of cost equations pyRinit/3 
* CE 1 is refined into CE [41] 


### Cost equations --> "Loop" of pyRinit/3 
* CEs [41] --> Loop 34 

### Ranking functions of CR pyRinit(A,B,C) 

#### Partial ranking functions of CR pyRinit(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of n_evalfbb3in___6(A,B,C,D,E):
* Chain [[18],22]: 3*it(18)+1
  Such that:it(18) =< A-B+1

  with precondition: [C=2,B>=1,A>=B] 

* Chain [[18],21]: 3*it(18)+2
  Such that:it(18) =< A-B+1

  with precondition: [C=2,B>=1,A>=B+1] 

* Chain [[18],20]: 3*it(18)+0
  Such that:it(18) =< A-B+1

  with precondition: [C=3,B>=1,A>=B] 

* Chain [[18],19]: 3*it(18)+3
  Such that:it(18) =< A-E+1

  with precondition: [C=4,B=E,D>=0,B>=D+2,A>=B+D+1] 

* Chain [21]: 2
  with precondition: [C=2,A>=1,B>=1] 

* Chain [20]: 0
  with precondition: [C=3,A>=0,B>=1] 

* Chain [19]: 3
  with precondition: [C=4,A=D+1,B=E,A>=1,B>=A+1] 


#### Cost of chains of n_evalfbb3in___3(A,B,C,D,E):
* Chain [[23],26]: 3*it(23)+1
  Such that:it(23) =< A

  with precondition: [C=2,A>=1,B>=A+2] 

* Chain [[23],25]: 3*it(23)+2
  Such that:it(23) =< A

  with precondition: [C=2,A>=2,B>=A+2] 

* Chain [[23],24]: 3*it(23)+0
  Such that:it(23) =< A

  with precondition: [C=3,A>=1,B>=A+2] 

* Chain [26]: 1
  with precondition: [A=0,C=2,B>=2] 

* Chain [25]: 2
  with precondition: [C=2,A>=1,B>=A+2] 

* Chain [24]: 0
  with precondition: [C=3] 


#### Cost of chains of n_evalfbb3in___3_loop_cont(A,B,C,D):
* Chain [28]: 0
  with precondition: [A=2] 

* Chain [27]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalfbb3in___6_loop_cont(A,B,C,D):
* Chain [31]: 0
  with precondition: [A=2] 

* Chain [30]: 0
  with precondition: [A=3] 

* Chain [29]: 9*s(8)+2
  Such that:aux(3) =< B
s(8) =< aux(3)

  with precondition: [A=4] 


#### Cost of chains of n_evalfbbin___8(A,B,C):
* Chain [32]: 12*s(11)+9*s(14)+9*s(17)+6
  Such that:s(16) =< A-2*B
s(13) =< A-B
aux(4) =< A-2*B+1
s(11) =< aux(4)
s(17) =< s(16)
s(14) =< s(13)

  with precondition: [B>=1,A>=B+1] 


#### Cost of chains of n_evalfbb4in___9(A,B,C):
* Chain [33]: 12*s(21)+9*s(22)+9*s(23)+7
  Such that:s(18) =< A-2*B
s(20) =< A-2*B+1
s(19) =< A-B
s(21) =< s(20)
s(22) =< s(18)
s(23) =< s(19)

  with precondition: [B>=1,A>=B+1] 


#### Cost of chains of pyRinit(A,B,C):
* Chain [34]: 12*s(27)+9*s(28)+9*s(29)+10
  Such that:s(24) =< -2*A+B
s(25) =< -2*A+B+1
s(26) =< -A+B
s(27) =< s(25)
s(28) =< s(24)
s(29) =< s(26)

  with precondition: [A>=1,B>=A+1] 


Closed-form bounds of pyRinit(A,B,C): 
-------------------------------------
* Chain [34] with precondition: [A>=1,B>=A+1] 
    - Upper bound: -9*A+9*B+10+nat(-2*A+B)*9+nat(-2*A+B+1)*12 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C): -9*A+9*B+10+nat(-2*A+B)*9+nat(-2*A+B+1)*12 
Asymptotic class: n 
* Total analysis performed in 199 ms.


-- stats
realtime 0:00.24
usertime 0.23
systime 0.00

