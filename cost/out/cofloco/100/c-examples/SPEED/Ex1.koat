WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalEx1bb1in___1/9,n_evalEx1bb4in___5/9]
1. recursive  : [n_evalEx1bb1in___2/9,n_evalEx1bb4in___3/9]
2. recursive  : [n_evalEx1bb1in___4/9,n_evalEx1bb4in___6/9]
3. recursive  : [n_evalEx1bb1in___8/9,n_evalEx1bb4in___10/9,n_evalEx1bb4in___3_loop_cont/10,n_evalEx1bb4in___5_loop_cont/10,n_evalEx1bb4in___6_loop_cont/10,n_evalEx1bb6in___7/9]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [n_evalEx1stop___9/5]
6. non_recursive  : [n_evalEx1bb4in___10_loop_cont/6]
7. non_recursive  : [n_evalEx1bb6in___11/5]
8. non_recursive  : [n_evalEx1start/5]
9. non_recursive  : [pyRinit/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalEx1bb4in___5/9
1. SCC is partially evaluated into n_evalEx1bb4in___3/9
2. SCC is partially evaluated into n_evalEx1bb4in___6/9
3. SCC is partially evaluated into n_evalEx1bb4in___10/9
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into n_evalEx1bb4in___10_loop_cont/6
7. SCC is partially evaluated into n_evalEx1bb6in___11/5
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into pyRinit/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalEx1bb4in___5/9 
* CE 21 is refined into CE [32] 
* CE 23 is refined into CE [33] 
* CE 22 is refined into CE [34] 
* CE 20 is refined into CE [35] 


### Cost equations --> "Loop" of n_evalEx1bb4in___5/9 
* CEs [35] --> Loop 22 
* CEs [32] --> Loop 23 
* CEs [33] --> Loop 24 
* CEs [34] --> Loop 25 

### Ranking functions of CR n_evalEx1bb4in___5(A,B,C,D,E,F,G,H,I) 
* RF of phase [22]: [-A+D-1,-C+D,D-1]

#### Partial ranking functions of CR n_evalEx1bb4in___5(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    -A+D-1
    -C+D
    D-1


### Specialization of cost equations n_evalEx1bb4in___3/9 
* CE 27 is refined into CE [36] 
* CE 26 is refined into CE [37] 
* CE 24 is refined into CE [38] 
* CE 25 is refined into CE [39] 


### Cost equations --> "Loop" of n_evalEx1bb4in___3/9 
* CEs [38] --> Loop 26 
* CEs [39] --> Loop 27 
* CEs [36] --> Loop 28 
* CEs [37] --> Loop 29 

### Ranking functions of CR n_evalEx1bb4in___3(A,B,C,D,E,F,G,H,I) 
* RF of phase [26,27]: [-C+D]

#### Partial ranking functions of CR n_evalEx1bb4in___3(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [26,27]:
  - RF of loop [26:1]:
    -A+D-2
    D-2
  - RF of loop [26:1,27:1]:
    -C+D
  - RF of loop [27:1]:
    B-C-1


### Specialization of cost equations n_evalEx1bb4in___6/9 
* CE 29 is refined into CE [40] 
* CE 31 is refined into CE [41] 
* CE 30 is refined into CE [42] 
* CE 28 is refined into CE [43] 


### Cost equations --> "Loop" of n_evalEx1bb4in___6/9 
* CEs [43] --> Loop 30 
* CEs [40] --> Loop 31 
* CEs [41] --> Loop 32 
* CEs [42] --> Loop 33 

### Ranking functions of CR n_evalEx1bb4in___6(A,B,C,D,E,F,G,H,I) 
* RF of phase [30]: [B-C,-C+D]

#### Partial ranking functions of CR n_evalEx1bb4in___6(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [30]:
  - RF of loop [30:1]:
    B-C
    -C+D


### Specialization of cost equations n_evalEx1bb4in___10/9 
* CE 6 is refined into CE [44,45] 
* CE 7 is discarded (unfeasible) 
* CE 12 is discarded (unfeasible) 
* CE 13 is discarded (unfeasible) 
* CE 16 is refined into CE [46] 
* CE 4 is refined into CE [47] 
* CE 9 is refined into CE [48,49] 
* CE 10 is refined into CE [50] 
* CE 15 is refined into CE [51,52] 
* CE 17 is refined into CE [53] 
* CE 5 is discarded (unfeasible) 
* CE 8 is refined into CE [54,55,56,57] 
* CE 11 is refined into CE [58,59] 
* CE 14 is refined into CE [60,61,62,63] 


### Cost equations --> "Loop" of n_evalEx1bb4in___10/9 
* CEs [54,60] --> Loop 34 
* CEs [59] --> Loop 35 
* CEs [55,56,57,61,62,63] --> Loop 36 
* CEs [58] --> Loop 37 
* CEs [44] --> Loop 38 
* CEs [45] --> Loop 39 
* CEs [46] --> Loop 40 
* CEs [47,48,49,50,51,52,53] --> Loop 41 

### Ranking functions of CR n_evalEx1bb4in___10(A,B,C,D,E,F,G,H,I) 
* RF of phase [35,36]: [-A+B-2,B-C-1]

#### Partial ranking functions of CR n_evalEx1bb4in___10(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [35,36]:
  - RF of loop [35:1]:
    -A+B-2
    -A+D-2
    B-C-1
    -C+D-1
  - RF of loop [36:1]:
    -A/2+B/2-3/2
    B-3
    B/2-C/2-1


### Specialization of cost equations n_evalEx1bb4in___10_loop_cont/6 
* CE 19 is refined into CE [64] 
* CE 18 is refined into CE [65] 


### Cost equations --> "Loop" of n_evalEx1bb4in___10_loop_cont/6 
* CEs [64] --> Loop 42 
* CEs [65] --> Loop 43 

### Ranking functions of CR n_evalEx1bb4in___10_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR n_evalEx1bb4in___10_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations n_evalEx1bb6in___11/5 
* CE 2 is refined into CE [66,67,68,69,70] 
* CE 3 is refined into CE [71] 


### Cost equations --> "Loop" of n_evalEx1bb6in___11/5 
* CEs [71] --> Loop 44 
* CEs [67] --> Loop 45 
* CEs [68] --> Loop 46 
* CEs [66,69,70] --> Loop 47 

### Ranking functions of CR n_evalEx1bb6in___11(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalEx1bb6in___11(A,B,C,D,E) 


### Specialization of cost equations pyRinit/5 
* CE 1 is refined into CE [72,73,74] 


### Cost equations --> "Loop" of pyRinit/5 
* CEs [74] --> Loop 48 
* CEs [72,73] --> Loop 49 

### Ranking functions of CR pyRinit(A,B,C,D,E) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of n_evalEx1bb4in___5(A,B,C,D,E,F,G,H,I):
* Chain [[22],25]: 2*it(22)+1
  Such that:it(22) =< D-I

  with precondition: [E=2,A+1=C,A+1=F,A+1=G,A+1=H,A+1=I,A>=0,D>=A+2,B>=D+1] 

* Chain [[22],24]: 2*it(22)+0
  Such that:it(22) =< -A+D

  with precondition: [E=3,C=A+1,C>=1,D>=C+1,B>=D+1] 

* Chain [[22],23]: 2*it(22)+2
  Such that:it(22) =< D-I

  with precondition: [E=4,A+1=C,A=F,B=G,A+2=H,A>=0,I>=A+2,B>=D+1,D>=I+1] 

* Chain [25]: 1
  with precondition: [E=2,C=A+1,C=D,C=F,C=G,C=H,C=I,C>=1,B>=C+1] 

* Chain [24]: 0
  with precondition: [E=3,C=A+1,C>=1,D>=C,B>=D+1] 

* Chain [23]: 2
  with precondition: [E=4,C=A+1,C=F+1,B=G,C+1=H,D=I,C>=1,D>=C+1,B>=D+1] 


#### Cost of chains of n_evalEx1bb4in___3(A,B,C,D,E,F,G,H,I):
* Chain [[26,27],29]: 2*it(26)+2*it(27)+1
  Such that:it(27) =< -C+I
it(26) =< D-I
aux(3) =< -C+D
it(26) =< aux(3)
it(27) =< aux(3)

  with precondition: [E=2,A+1=F,G=H,G=I,A>=0,C>=A+2,D>=C+1,G>=C,B>=D+1,D>=G] 

* Chain [[26,27],28]: 4*it(26)+0
  Such that:aux(4) =< -C+D
it(26) =< aux(4)

  with precondition: [E=3,A>=0,C>=A+2,D>=C+1,B>=D+1] 

* Chain [29]: 1
  with precondition: [E=2,C=D,A+1=F,C=G,C=H,C=I,A>=0,C>=A+2,B>=C+1] 

* Chain [28]: 0
  with precondition: [E=3] 


#### Cost of chains of n_evalEx1bb4in___6(A,B,C,D,E,F,G,H,I):
* Chain [[30],33]: 2*it(30)+1
  Such that:it(30) =< -C+I

  with precondition: [E=2,B=D,A+1=F,B=G,B=H,B=I,A>=0,C>=A+2,B>=C+1] 

* Chain [[30],32]: 2*it(30)+0
  Such that:it(30) =< B-C

  with precondition: [E=3,B=D,A>=0,C>=A+2,B>=C+1] 

* Chain [[30],31]: 2*it(30)+2
  Such that:it(30) =< -C+H

  with precondition: [E=4,B=D,A=F,B=G,B=I+1,A>=0,C>=A+2,H>=C+1,B>=H+1] 

* Chain [33]: 1
  with precondition: [E=2,B=C,B=D,A+1=F,B=G,B=H,B=I,A>=0,B>=A+2] 

* Chain [32]: 0
  with precondition: [E=3,D=B,A>=0,C>=A+2,D>=C] 

* Chain [31]: 2
  with precondition: [E=4,D=B,A=F,D=G,C=H,D=I+1,A>=0,C>=A+2,D>=C+1] 


#### Cost of chains of n_evalEx1bb4in___10(A,B,C,D,E,F,G,H,I):
* Chain [[35,36],41]: 38*it(35)+2*s(48)+10*s(49)+8*s(50)+2*s(55)+4
  Such that:aux(29) =< -A+D
it(35) =< aux(29)
aux(20) =< aux(29)-2
s(57) =< it(35)*aux(29)
s(48) =< it(35)*aux(29)
s(55) =< it(35)*aux(20)
s(50) =< aux(29)
s(49) =< s(57)
s(50) =< s(57)

  with precondition: [E=3,C=A+1,B=D,C>=1,B>=C+2] 

* Chain [[35,36],40]: 8*it(35)+6*it(36)+2*s(48)+10*s(49)+8*s(50)+2*s(55)+2
  Such that:it(36) =< -A/2+D/2
aux(30) =< -A+D
it(35) =< aux(30)
it(36) =< aux(30)
aux(20) =< aux(30)-2
s(57) =< it(36)*aux(30)
s(48) =< it(35)*aux(30)
s(55) =< it(36)*aux(20)
s(50) =< aux(30)
s(49) =< s(57)
s(50) =< s(57)

  with precondition: [E=5,C=A+1,B=D,C>=1,B>=C+3] 

* Chain [[35,36],39]: 16*it(35)+2*s(48)+10*s(49)+8*s(50)+2*s(55)+4
  Such that:aux(31) =< -A+D
it(35) =< aux(31)
aux(20) =< aux(31)-2
s(57) =< it(35)*aux(31)
s(48) =< it(35)*aux(31)
s(55) =< it(35)*aux(20)
s(50) =< aux(31)
s(49) =< s(57)
s(50) =< s(57)

  with precondition: [E=5,C=A+1,B=D,C>=1,B>=C+3] 

* Chain [[35,36],38]: 14*it(35)+2*s(48)+10*s(49)+8*s(50)+2*s(55)+4
  Such that:aux(32) =< -A+D
it(35) =< aux(32)
aux(20) =< aux(32)-2
s(57) =< it(35)*aux(32)
s(48) =< it(35)*aux(32)
s(55) =< it(35)*aux(20)
s(50) =< aux(32)
s(49) =< s(57)
s(50) =< s(57)

  with precondition: [E=5,C=A+1,B=D,C>=1,B>=C+2] 

* Chain [[35,36],37,41]: 14*it(35)+2*s(48)+10*s(49)+8*s(50)+2*s(55)+8
  Such that:aux(34) =< -A+D
it(35) =< aux(34)
aux(20) =< aux(34)-2
s(57) =< it(35)*aux(34)
s(48) =< it(35)*aux(34)
s(55) =< it(35)*aux(20)
s(50) =< aux(34)
s(49) =< s(57)
s(50) =< s(57)

  with precondition: [E=3,C=A+1,B=D,C>=1,B>=C+2] 

* Chain [[35,36],37,40]: 14*it(35)+2*s(48)+10*s(49)+8*s(50)+2*s(55)+6
  Such that:aux(35) =< -A+D
it(35) =< aux(35)
aux(20) =< aux(35)-2
s(57) =< it(35)*aux(35)
s(48) =< it(35)*aux(35)
s(55) =< it(35)*aux(20)
s(50) =< aux(35)
s(49) =< s(57)
s(50) =< s(57)

  with precondition: [E=5,C=A+1,B=D,C>=1,B>=C+2] 

* Chain [[35,36],34,41]: 14*it(35)+2*s(48)+10*s(49)+8*s(50)+2*s(55)+10
  Such that:aux(37) =< -A+D
it(35) =< aux(37)
aux(20) =< aux(37)-2
s(57) =< it(35)*aux(37)
s(48) =< it(35)*aux(37)
s(55) =< it(35)*aux(20)
s(50) =< aux(37)
s(49) =< s(57)
s(50) =< s(57)

  with precondition: [E=3,C=A+1,B=D,C>=1,B>=C+3] 

* Chain [[35,36],34,40]: 14*it(35)+2*s(48)+10*s(49)+8*s(50)+2*s(55)+8
  Such that:aux(38) =< -A+D
it(35) =< aux(38)
aux(20) =< aux(38)-2
s(57) =< it(35)*aux(38)
s(48) =< it(35)*aux(38)
s(55) =< it(35)*aux(20)
s(50) =< aux(38)
s(49) =< s(57)
s(50) =< s(57)

  with precondition: [E=5,C=A+1,B=D,C>=1,B>=C+3] 

* Chain [41]: 14*s(5)+10*s(7)+4
  Such that:aux(7) =< B-C
aux(8) =< -C+D
s(7) =< aux(7)
s(5) =< aux(8)

  with precondition: [E=3,C=A+1,D=B,C>=1,D>=C] 

* Chain [40]: 2
  with precondition: [E=5,A+1=B,A+1=C,A+1=D,A>=0] 

* Chain [39]: 2*s(62)+4
  Such that:s(62) =< -C+D

  with precondition: [E=5,C=A+1,D=B,C>=1,D>=C+2] 

* Chain [38]: 4
  with precondition: [E=5,A+2=B,A+1=C,A+2=D,A>=0] 

* Chain [37,41]: 8
  with precondition: [E=3,B=A+2,B=C+1,B=D,B>=2] 

* Chain [37,40]: 6
  with precondition: [E=5,B=A+2,B=C+1,B=D,B>=2] 

* Chain [34,41]: 10
  with precondition: [E=3,B=A+3,B=C+2,B=D,B>=3] 

* Chain [34,40]: 8
  with precondition: [E=5,B=A+3,B=C+2,B=D,B>=3] 


#### Cost of chains of n_evalEx1bb4in___10_loop_cont(A,B,C,D,E,F):
* Chain [43]: 0
  with precondition: [A=3] 

* Chain [42]: 0
  with precondition: [A=5] 


#### Cost of chains of n_evalEx1bb6in___11(A,B,C,D,E):
* Chain [47]: 158*s(136)+16*s(139)+14*s(140)+56*s(141)+70*s(142)+6*s(145)+2*s(156)+8*s(157)+10*s(158)+11
  Such that:s(145) =< B/2
aux(43) =< B
s(136) =< aux(43)
s(137) =< aux(43)-2
s(138) =< s(136)*aux(43)
s(139) =< s(136)*aux(43)
s(140) =< s(136)*s(137)
s(141) =< aux(43)
s(142) =< s(138)
s(141) =< s(138)
s(145) =< aux(43)
s(155) =< s(145)*aux(43)
s(156) =< s(145)*s(137)
s(157) =< aux(43)
s(158) =< s(155)
s(157) =< s(155)

  with precondition: [A=0,B>=1] 

* Chain [46]: 7
  with precondition: [A=0,B=2] 

* Chain [45]: 11
  with precondition: [A=0,B=3] 

* Chain [44]: 1
  with precondition: [A=0,0>=B] 


#### Cost of chains of pyRinit(A,B,C,D,E):
* Chain [49]: 6*s(173)+158*s(174)+16*s(177)+14*s(178)+56*s(179)+70*s(180)+2*s(182)+8*s(183)+10*s(184)+13
  Such that:s(172) =< A
s(173) =< A/2
s(174) =< s(172)
s(175) =< s(172)-2
s(176) =< s(174)*s(172)
s(177) =< s(174)*s(172)
s(178) =< s(174)*s(175)
s(179) =< s(172)
s(180) =< s(176)
s(179) =< s(176)
s(173) =< s(172)
s(181) =< s(173)*s(172)
s(182) =< s(173)*s(175)
s(183) =< s(172)
s(184) =< s(181)
s(183) =< s(181)

  with precondition: [A>=1] 

* Chain [48]: 3
  with precondition: [0>=A] 


Closed-form bounds of pyRinit(A,B,C,D,E): 
-------------------------------------
* Chain [49] with precondition: [A>=1] 
    - Upper bound: 222*A+13+86*A*A+A/2* (10*A)+nat(A-2)*14*A+A/2* (nat(A-2)*2)+3*A 
    - Complexity: n^2 
* Chain [48] with precondition: [0>=A] 
    - Upper bound: 3 
    - Complexity: constant 

### Maximum cost of pyRinit(A,B,C,D,E): nat(A)*222+10+nat(A)*86*nat(A)+nat(A)*10*nat(A/2)+nat(nat(A)+ -2)*14*nat(A)+nat(nat(A)+ -2)*2*nat(A/2)+nat(A/2)*6+3 
Asymptotic class: n^2 
* Total analysis performed in 1681 ms.


-- stats
realtime 0:01.85
usertime 1.78
systime 0.01

