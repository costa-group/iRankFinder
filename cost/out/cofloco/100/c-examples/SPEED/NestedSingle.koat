WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalNestedSinglebb2in___3/7,n_evalNestedSinglebb3in___1/7]
1. recursive  : [n_evalNestedSinglebb2in___3_loop_cont/8,n_evalNestedSinglebb2in___6/7,n_evalNestedSinglebb3in___4/7,n_evalNestedSinglebb5in___2/7]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [n_evalNestedSinglestop___5/4]
4. non_recursive  : [n_evalNestedSinglebb2in___6_loop_cont/5]
5. non_recursive  : [n_evalNestedSinglebb5in___7/4]
6. non_recursive  : [n_evalNestedSinglestart/4]
7. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalNestedSinglebb2in___3/7
1. SCC is partially evaluated into n_evalNestedSinglebb2in___6/7
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into n_evalNestedSinglebb2in___6_loop_cont/5
5. SCC is partially evaluated into n_evalNestedSinglebb5in___7/4
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalNestedSinglebb2in___3/7 
* CE 15 is refined into CE [16] 
* CE 12 is refined into CE [17] 
* CE 14 is refined into CE [18] 
* CE 13 is refined into CE [19] 


### Cost equations --> "Loop" of n_evalNestedSinglebb2in___3/7 
* CEs [19] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [18] --> Loop 16 

### Ranking functions of CR n_evalNestedSinglebb2in___3(A,B,C,D,E,F,G) 
* RF of phase [13]: [B-C]

#### Partial ranking functions of CR n_evalNestedSinglebb2in___3(A,B,C,D,E,F,G) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    B-C


### Specialization of cost equations n_evalNestedSinglebb2in___6/7 
* CE 5 is refined into CE [20] 
* CE 6 is refined into CE [21,22,23,24] 
* CE 8 is refined into CE [25] 
* CE 9 is refined into CE [26] 
* CE 4 is refined into CE [27] 
* CE 7 is refined into CE [28,29] 


### Cost equations --> "Loop" of n_evalNestedSinglebb2in___6/7 
* CEs [29] --> Loop 17 
* CEs [28] --> Loop 18 
* CEs [27] --> Loop 19 
* CEs [20,21] --> Loop 20 
* CEs [22,23,24] --> Loop 21 
* CEs [25,26] --> Loop 22 

### Ranking functions of CR n_evalNestedSinglebb2in___6(A,B,C,D,E,F,G) 
* RF of phase [17,18,19]: [-A+B-1]

#### Partial ranking functions of CR n_evalNestedSinglebb2in___6(A,B,C,D,E,F,G) 
* Partial RF of phase [17,18,19]:
  - RF of loop [17:1]:
    -A/3+B/3-1
  - RF of loop [18:1]:
    -A/2+B/2-1
    B/2-C/2-1
  - RF of loop [19:1]:
    -A+B-1
    B-C-1


### Specialization of cost equations n_evalNestedSinglebb2in___6_loop_cont/5 
* CE 11 is refined into CE [30] 
* CE 10 is refined into CE [31] 


### Cost equations --> "Loop" of n_evalNestedSinglebb2in___6_loop_cont/5 
* CEs [30] --> Loop 23 
* CEs [31] --> Loop 24 

### Ranking functions of CR n_evalNestedSinglebb2in___6_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalNestedSinglebb2in___6_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalNestedSinglebb5in___7/4 
* CE 2 is refined into CE [32,33,34] 
* CE 3 is refined into CE [35] 


### Cost equations --> "Loop" of n_evalNestedSinglebb5in___7/4 
* CEs [35] --> Loop 25 
* CEs [32,33,34] --> Loop 26 

### Ranking functions of CR n_evalNestedSinglebb5in___7(A,B,C,D) 

#### Partial ranking functions of CR n_evalNestedSinglebb5in___7(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [36,37] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [37] --> Loop 27 
* CEs [36] --> Loop 28 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalNestedSinglebb2in___3(A,B,C,D,E,F,G):
* Chain [[13],16]: 2*it(13)+1
  Such that:it(13) =< -C+G

  with precondition: [D=2,B+1=E,B=F,B=G,A>=0,C>=A+1,B>=C+1] 

* Chain [[13],15]: 2*it(13)+2
  Such that:it(13) =< -C+G

  with precondition: [D=2,B=F,E=G+1,A>=0,C>=A+1,E>=C+2,B>=E] 

* Chain [[13],14]: 2*it(13)+0
  Such that:it(13) =< B-C

  with precondition: [D=3,A>=0,C>=A+1,B>=C+1] 

* Chain [16]: 1
  with precondition: [D=2,C=B,C+1=E,C=F,C=G,A>=0,C>=A+1] 

* Chain [15]: 2
  with precondition: [D=2,C+1=E,B=F,C=G,A>=0,C>=A+1,B>=C+1] 

* Chain [14]: 0
  with precondition: [D=3,A>=0,C>=A+1,B>=C] 


#### Cost of chains of n_evalNestedSinglebb2in___6(A,B,C,D,E,F,G):
* Chain [[17,18,19],22]: 17*it(17)+2
  Such that:aux(5) =< B-C
it(17) =< aux(5)

  with precondition: [D=3,A=C,A>=0,B>=A+2] 

* Chain [[17,18,19],21]: 19*it(17)+5
  Such that:aux(7) =< B-C
it(17) =< aux(7)

  with precondition: [D=4,A=C,A>=0,B>=A+3] 

* Chain [[17,18,19],20]: 5*it(17)+5*it(18)+5*it(19)+4
  Such that:it(18) =< B/2-C/2
it(17) =< B/3-C/3
aux(8) =< B-C
it(17) =< aux(8)
it(18) =< aux(8)
it(19) =< aux(8)

  with precondition: [D=4,A=C,A>=0,B>=A+2] 

* Chain [22]: 2*s(2)+2
  Such that:s(2) =< -A+B

  with precondition: [D=3,C=A,C>=0,B>=C+1] 

* Chain [21]: 4*s(6)+5
  Such that:aux(6) =< B-C
s(6) =< aux(6)

  with precondition: [D=4,C=A,C>=0,B>=C+2] 

* Chain [20]: 4
  with precondition: [D=4,A+1=B,A=C,A>=0] 


#### Cost of chains of n_evalNestedSinglebb2in___6_loop_cont(A,B,C,D,E):
* Chain [24]: 0
  with precondition: [A=3] 

* Chain [23]: 0
  with precondition: [A=4] 


#### Cost of chains of n_evalNestedSinglebb5in___7(A,B,C,D):
* Chain [26]: 47*s(19)+5*s(22)+5*s(23)+6
  Such that:s(22) =< B/2
s(23) =< B/3
aux(11) =< B
s(19) =< aux(11)
s(23) =< aux(11)
s(22) =< aux(11)

  with precondition: [A=0,B>=1] 

* Chain [25]: 1
  with precondition: [A=0,0>=B] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [28]: 3
  with precondition: [0>=B] 

* Chain [27]: 5*s(26)+5*s(27)+47*s(29)+8
  Such that:s(28) =< B
s(26) =< B/2
s(27) =< B/3
s(29) =< s(28)
s(27) =< s(28)
s(26) =< s(28)

  with precondition: [B>=1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [28] with precondition: [0>=B] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [27] with precondition: [B>=1] 
    - Upper bound: 307/6*B+8 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): nat(B)*47+5+nat(B/2)*5+nat(B/3)*5+3 
Asymptotic class: n 
* Total analysis performed in 417 ms.


-- stats
realtime 0:00.62
usertime 0.45
systime 0.02

