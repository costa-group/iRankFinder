WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_evalcyclicbb3in___3/7,n_evalcyclicbb3in___8/7,n_evalcyclicbb4in___2/7,n_evalcyclicbb4in___6/7,n_evalcyclicbb4in___7/7,n_evalcyclicbbin___1/7,n_evalcyclicbbin___4/7,n_evalcyclicbbin___5/7]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [n_evalcyclicstop___9/4]
3. non_recursive  : [n_evalcyclicbb3in___8_loop_cont/5]
4. non_recursive  : [n_evalcyclicbbin___10/4]
5. non_recursive  : [n_evalcyclicbb4in___11/4]
6. non_recursive  : [n_evalcyclicbb3in___12/4]
7. non_recursive  : [n_evalcyclicstart/4]
8. non_recursive  : [pyRinit/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_evalcyclicbb3in___8/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_evalcyclicbb3in___8_loop_cont/5
4. SCC is partially evaluated into n_evalcyclicbbin___10/4
5. SCC is partially evaluated into n_evalcyclicbb4in___11/4
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_evalcyclicbb3in___8/7 
* CE 13 is refined into CE [16] 
* CE 10 is refined into CE [17] 
* CE 7 is refined into CE [18] 
* CE 12 is refined into CE [19] 
* CE 5 is refined into CE [20] 
* CE 9 is refined into CE [21] 
* CE 6 is refined into CE [22] 
* CE 11 is refined into CE [23] 
* CE 8 is refined into CE [24] 


### Cost equations --> "Loop" of n_evalcyclicbb3in___8/7 
* CEs [23] --> Loop 14 
* CEs [22] --> Loop 15 
* CEs [24] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [18] --> Loop 19 
* CEs [19] --> Loop 20 
* CEs [20,21] --> Loop 21 

### Ranking functions of CR n_evalcyclicbb3in___8(A,B,C,D,E,F,G) 
* RF of phase [14]: [A-C,B-C-1]
* RF of phase [15]: [B-C+1]

#### Partial ranking functions of CR n_evalcyclicbb3in___8(A,B,C,D,E,F,G) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    A-C
    B-C-1
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    B-C+1


### Specialization of cost equations n_evalcyclicbb3in___8_loop_cont/5 
* CE 15 is refined into CE [25] 
* CE 14 is refined into CE [26] 


### Cost equations --> "Loop" of n_evalcyclicbb3in___8_loop_cont/5 
* CEs [25] --> Loop 22 
* CEs [26] --> Loop 23 

### Ranking functions of CR n_evalcyclicbb3in___8_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR n_evalcyclicbb3in___8_loop_cont(A,B,C,D,E) 


### Specialization of cost equations n_evalcyclicbbin___10/4 
* CE 4 is refined into CE [27,28,29] 


### Cost equations --> "Loop" of n_evalcyclicbbin___10/4 
* CEs [27,28,29] --> Loop 24 

### Ranking functions of CR n_evalcyclicbbin___10(A,B,C,D) 

#### Partial ranking functions of CR n_evalcyclicbbin___10(A,B,C,D) 


### Specialization of cost equations n_evalcyclicbb4in___11/4 
* CE 2 is refined into CE [30] 
* CE 3 is refined into CE [31] 


### Cost equations --> "Loop" of n_evalcyclicbb4in___11/4 
* CEs [30,31] --> Loop 25 

### Ranking functions of CR n_evalcyclicbb4in___11(A,B,C,D) 

#### Partial ranking functions of CR n_evalcyclicbb4in___11(A,B,C,D) 


### Specialization of cost equations pyRinit/4 
* CE 1 is refined into CE [32] 


### Cost equations --> "Loop" of pyRinit/4 
* CEs [32] --> Loop 26 

### Ranking functions of CR pyRinit(A,B,C,D) 

#### Partial ranking functions of CR pyRinit(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of n_evalcyclicbb3in___8(A,B,C,D,E,F,G):
* Chain [[15],21]: 3*it(15)+4
  Such that:it(15) =< B-C+1

  with precondition: [D=2,A>=0,C>=A+2,B>=C] 

* Chain [[15],19]: 3*it(15)+5
  Such that:it(15) =< B-C+1

  with precondition: [D=2,A>=1,C>=A+2,B>=C] 

* Chain [[15],17]: 3*it(15)+0
  Such that:it(15) =< B-C+1

  with precondition: [D=3,A>=0,C>=A+2,B>=C] 

* Chain [[15],16,[14],20]: 3*it(14)+3*it(15)+7
  Such that:it(14) =< A
it(15) =< B-C+1

  with precondition: [D=2,A>=2,C>=A+2,B>=C] 

* Chain [[15],16,[14],18]: 3*it(14)+3*it(15)+8
  Such that:it(14) =< A
it(15) =< B-C+1

  with precondition: [D=2,A>=3,C>=A+2,B>=C] 

* Chain [[15],16,[14],17]: 3*it(14)+3*it(15)+6
  Such that:it(14) =< A
it(15) =< B-C+1

  with precondition: [D=3,A>=2,C>=A+2,B>=C] 

* Chain [[15],16,20]: 3*it(15)+7
  Such that:it(15) =< B-C+1

  with precondition: [A=1,D=2,C>=3,B>=C] 

* Chain [[15],16,18]: 3*it(15)+8
  Such that:it(15) =< B-C+1

  with precondition: [D=2,A>=2,C>=A+2,B>=C] 

* Chain [[15],16,17]: 3*it(15)+6
  Such that:it(15) =< B-C+1

  with precondition: [D=3,A>=1,C>=A+2,B>=C] 

* Chain [21]: 4
  with precondition: [D=2,A>=0,C>=A+2,B+1>=C] 

* Chain [19]: 5
  with precondition: [D=2,C=B+1,A>=1,C>=A+2] 

* Chain [17]: 0
  with precondition: [D=3,A>=0,C>=1,B>=A+1,B+1>=C,A+C>=2] 

* Chain [16,[14],20]: 3*it(14)+7
  Such that:it(14) =< A

  with precondition: [D=2,B+1=C,A>=2,B>=A+1] 

* Chain [16,[14],18]: 3*it(14)+8
  Such that:it(14) =< A

  with precondition: [D=2,B+1=C,A>=3,B>=A+1] 

* Chain [16,[14],17]: 3*it(14)+6
  Such that:it(14) =< A

  with precondition: [D=3,B+1=C,A>=2,B>=A+1] 

* Chain [16,20]: 7
  with precondition: [A=1,D=2,B+1=C,B>=2] 

* Chain [16,18]: 8
  with precondition: [D=2,B+1=C,A>=2,B>=A+1] 

* Chain [16,17]: 6
  with precondition: [D=3,B+1=C,A>=1,B>=A+1] 


#### Cost of chains of n_evalcyclicbb3in___8_loop_cont(A,B,C,D,E):
* Chain [23]: 0
  with precondition: [A=2] 

* Chain [22]: 0
  with precondition: [A=3] 


#### Cost of chains of n_evalcyclicbbin___10(A,B,C,D):
* Chain [24]: 18*s(17)+24*s(18)+3*s(19)+9
  Such that:s(19) =< B
aux(5) =< -A+B
aux(6) =< A
s(17) =< aux(6)
s(18) =< aux(5)

  with precondition: [A+1=C,A>=0,B>=A+1] 


#### Cost of chains of n_evalcyclicbb4in___11(A,B,C,D):
* Chain [25]: 3*s(24)+18*s(27)+24*s(28)+10
  Such that:s(24) =< B
s(25) =< B-C+1
s(26) =< C
s(27) =< s(26)
s(28) =< s(25)

  with precondition: [A+1=C,A>=0,B>=A+1] 


#### Cost of chains of pyRinit(A,B,C,D):
* Chain [26]: 3*s(29)+18*s(32)+24*s(33)+13
  Such that:s(30) =< -A+B
s(31) =< A+1
s(29) =< B
s(32) =< s(31)
s(33) =< s(30)

  with precondition: [A>=0,B>=A+1] 


Closed-form bounds of pyRinit(A,B,C,D): 
-------------------------------------
* Chain [26] with precondition: [A>=0,B>=A+1] 
    - Upper bound: -6*A+27*B+31 
    - Complexity: n 

### Maximum cost of pyRinit(A,B,C,D): -6*A+27*B+31 
Asymptotic class: n 
* Total analysis performed in 437 ms.


-- stats
realtime 0:00.59
usertime 0.47
systime 0.00

