WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_lbl101___2/13,n_lbl121___3/13]
1. recursive  : [n_lbl101___4/13,n_lbl121___3_loop_cont/14]
2. non_recursive  : [exit_location/1]
3. recursive  : [n_lbl121___1/13]
4. non_recursive  : [n_stop___5/7]
5. non_recursive  : [n_lbl121___1_loop_cont/8]
6. non_recursive  : [n_lbl101___4_loop_cont/8]
7. non_recursive  : [n_lbl101___7/7]
8. non_recursive  : [n_lbl121___6/7]
9. non_recursive  : [n_start___8/7]
10. non_recursive  : [n_start0/7]
11. non_recursive  : [pyRinit/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_lbl121___3/13
1. SCC is partially evaluated into n_lbl101___4/13
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into n_lbl121___1/13
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_lbl121___1_loop_cont/8
6. SCC is partially evaluated into n_lbl101___4_loop_cont/8
7. SCC is partially evaluated into n_lbl101___7/7
8. SCC is partially evaluated into n_lbl121___6/7
9. SCC is partially evaluated into n_start___8/7
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into pyRinit/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_lbl121___3/13 
* CE 14 is refined into CE [27] 
* CE 12 is refined into CE [28] 
* CE 13 is refined into CE [29] 
* CE 11 is refined into CE [30] 


### Cost equations --> "Loop" of n_lbl121___3/13 
* CEs [30] --> Loop 24 
* CEs [27] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [29] --> Loop 27 

### Ranking functions of CR n_lbl121___3(A,B,C,D,E,F,G,H,I,J,K,L,M) 

#### Partial ranking functions of CR n_lbl121___3(A,B,C,D,E,F,G,H,I,J,K,L,M) 


### Specialization of cost equations n_lbl101___4/13 
* CE 17 is refined into CE [31] 
* CE 21 is refined into CE [32] 
* CE 18 is refined into CE [33] 
* CE 19 is refined into CE [34] 
* CE 20 is refined into CE [35] 


### Cost equations --> "Loop" of n_lbl101___4/13 
* CEs [35] --> Loop 28 
* CEs [34] --> Loop 29 
* CEs [31,32] --> Loop 30 
* CEs [33] --> Loop 31 

### Ranking functions of CR n_lbl101___4(A,B,C,D,E,F,G,H,I,J,K,L,M) 

#### Partial ranking functions of CR n_lbl101___4(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [28,29]:
  - RF of loop [28:1]:
    A/2-B/2 depends on loops [29:1] 
    -B/2+D/2 depends on loops [29:1] 
    -B/2+F/2 depends on loops [29:1] 
  - RF of loop [29:1]:
    D-3


### Specialization of cost equations n_lbl121___1/13 
* CE 24 is refined into CE [36] 
* CE 23 is refined into CE [37] 
* CE 22 is refined into CE [38] 


### Cost equations --> "Loop" of n_lbl121___1/13 
* CEs [38] --> Loop 32 
* CEs [36] --> Loop 33 
* CEs [37] --> Loop 34 

### Ranking functions of CR n_lbl121___1(A,B,C,D,E,F,G,H,I,J,K,L,M) 

#### Partial ranking functions of CR n_lbl121___1(A,B,C,D,E,F,G,H,I,J,K,L,M) 


### Specialization of cost equations n_lbl121___1_loop_cont/8 
* CE 25 is refined into CE [39] 
* CE 26 is refined into CE [40] 


### Cost equations --> "Loop" of n_lbl121___1_loop_cont/8 
* CEs [39] --> Loop 35 
* CEs [40] --> Loop 36 

### Ranking functions of CR n_lbl121___1_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR n_lbl121___1_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations n_lbl101___4_loop_cont/8 
* CE 15 is refined into CE [41] 
* CE 16 is refined into CE [42,43,44] 


### Cost equations --> "Loop" of n_lbl101___4_loop_cont/8 
* CEs [41] --> Loop 37 
* CEs [42,43,44] --> Loop 38 

### Ranking functions of CR n_lbl101___4_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR n_lbl101___4_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations n_lbl101___7/7 
* CE 8 is refined into CE [45,46,47] 
* CE 5 is refined into CE [48] 
* CE 6 is refined into CE [49] 
* CE 7 is discarded (unfeasible) 


### Cost equations --> "Loop" of n_lbl101___7/7 
* CEs [45,46,47] --> Loop 39 
* CEs [48,49] --> Loop 40 

### Ranking functions of CR n_lbl101___7(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_lbl101___7(A,B,C,D,E,F,G) 


### Specialization of cost equations n_lbl121___6/7 
* CE 9 is refined into CE [50,51] 
* CE 10 is refined into CE [52] 


### Cost equations --> "Loop" of n_lbl121___6/7 
* CEs [50,51] --> Loop 41 
* CEs [52] --> Loop 42 

### Ranking functions of CR n_lbl121___6(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_lbl121___6(A,B,C,D,E,F,G) 


### Specialization of cost equations n_start___8/7 
* CE 2 is refined into CE [53,54] 
* CE 4 is refined into CE [55] 
* CE 3 is refined into CE [56,57] 


### Cost equations --> "Loop" of n_start___8/7 
* CEs [54] --> Loop 43 
* CEs [55] --> Loop 44 
* CEs [53] --> Loop 45 
* CEs [57] --> Loop 46 
* CEs [56] --> Loop 47 

### Ranking functions of CR n_start___8(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR n_start___8(A,B,C,D,E,F,G) 


### Specialization of cost equations pyRinit/7 
* CE 1 is refined into CE [58,59,60,61,62] 


### Cost equations --> "Loop" of pyRinit/7 
* CEs [62] --> Loop 48 
* CEs [61] --> Loop 49 
* CEs [60] --> Loop 50 
* CEs [59] --> Loop 51 
* CEs [58] --> Loop 52 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G) 


Computing Bounds
=====================================

#### Cost of chains of n_lbl121___3(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [27]: 1
  with precondition: [B=2,D=1,G=3,I=1,K=0,F=A,J=C,L=E,F=H,F=M,F>=2] 

* Chain [26]: 2
  with precondition: [G=2,I=4,F=A,J=C,L=E,F=H,D=K,F=M,D>=3,2*D>=B,B>=D+1,F>=D+1] 

* Chain [25]: 0
  with precondition: [G=4,F=A,2*D>=B,B>=D+1,F>=D+1] 

* Chain [24,27]: 3
  with precondition: [D=2,G=3,I=1,K=0,A=F,A=H,C=J,E=L,A=M,4>=B,A>=3,B>=3] 

* Chain [24,25]: 2
  with precondition: [D=2,G=4,A=F,4>=B,A>=3,B>=3] 


#### Cost of chains of n_lbl101___4(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[28,29],31]: 1*it(28)+3*it(29)+4
  Such that:aux(2) =< -B/2+D/2
aux(8) =< -B/2+D/2+1/2
aux(13) =< H
aux(26) =< D
it(29) =< aux(26)
aux(1) =< it(29)*aux(13)
it(28) =< aux(1)+aux(2)
it(28) =< aux(1)+aux(8)

  with precondition: [G=3,I=1,K=0,A=F,A=H,C=J,E=L,A=M,B>=4,D>=4,2*D>=B+2,A>=D] 

* Chain [[28,29],30]: 1*it(28)+3*it(29)+3
  Such that:aux(8) =< -5/8*B+5/4*D
aux(2) =< -B/2+D/2
aux(13) =< F
aux(27) =< D
it(29) =< aux(27)
aux(1) =< it(29)*aux(13)
it(28) =< aux(1)+aux(2)
it(28) =< aux(1)+aux(8)

  with precondition: [G=4,A=F,B>=4,D>=4,2*D>=B+2,A>=D] 

* Chain [31]: 4
  with precondition: [B=4,D=3,G=3,I=1,K=0,J=C,L=E,A=F,A=H,A=M,A>=3] 

* Chain [30]: 3
  with precondition: [G=4] 


#### Cost of chains of n_lbl121___1(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [34]: 1
  with precondition: [B=1,D+1=0,G=5,A=F,A>=1] 

* Chain [33]: 0
  with precondition: [G=4] 

* Chain [32,34]: 2
  with precondition: [B=1,D=0,G=5,A=F,A>=2] 

* Chain [32,33]: 1
  with precondition: [B=1,D=0,G=4,A=F,A>=2] 


#### Cost of chains of n_lbl121___1_loop_cont(A,B,C,D,E,F,G,H):
* Chain [36]: 0
  with precondition: [A=4] 

* Chain [35]: 0
  with precondition: [A=5] 


#### Cost of chains of n_lbl101___4_loop_cont(A,B,C,D,E,F,G,H):
* Chain [38]: 2
  with precondition: [A=3] 

* Chain [37]: 0
  with precondition: [A=4] 


#### Cost of chains of n_lbl101___7(A,B,C,D,E,F,G):
* Chain [40]: 4
  with precondition: [A=2,B=2,D=2,F=2] 

* Chain [39]: 3*s(12)+1*s(14)+3*s(19)+1*s(21)+7
  Such that:aux(28) =< A
aux(29) =< A/2
s(16) =< D/2
aux(30) =< F
s(15) =< 5/4*F
s(12) =< aux(28)
s(13) =< s(12)*aux(28)
s(14) =< s(13)+aux(29)
s(19) =< aux(30)
s(20) =< s(19)*aux(30)
s(21) =< s(20)+s(16)
s(21) =< s(20)+s(15)

  with precondition: [B=2,D=A,D=F,D>=3] 


#### Cost of chains of n_lbl121___6(A,B,C,D,E,F,G):
* Chain [42]: 1
  with precondition: [A=0,B=1,D+1=0,F=0] 

* Chain [41]: 2
  with precondition: [A=1,B=1,D=0,F=1] 


#### Cost of chains of n_start___8(A,B,C,D,E,F,G):
* Chain [47]: 2
  with precondition: [A=0,F=0,C=B,E=D] 

* Chain [46]: 3
  with precondition: [A=1,F=1,C=B,E=D] 

* Chain [45]: 5
  with precondition: [A=2,F=2,C=B,E=D] 

* Chain [44]: 1
  with precondition: [F=A,C=B,E=D,0>=F+1] 

* Chain [43]: 6*s(27)+1*s(29)+1*s(32)+8
  Such that:s(26) =< 5/4*F
aux(31) =< F
aux(32) =< F/2
s(27) =< aux(31)
s(28) =< s(27)*aux(31)
s(29) =< s(28)+aux(32)
s(32) =< s(28)+aux(32)
s(32) =< s(28)+s(26)

  with precondition: [F=A,C=B,E=D,F>=3] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G):
* Chain [52]: 4
  with precondition: [A=0] 

* Chain [51]: 5
  with precondition: [A=1] 

* Chain [50]: 7
  with precondition: [A=2] 

* Chain [49]: 3
  with precondition: [0>=A+1] 

* Chain [48]: 6*s(36)+1*s(38)+1*s(39)+10
  Such that:s(34) =< A
s(35) =< A/2
s(33) =< 5/4*A
s(36) =< s(34)
s(37) =< s(36)*s(34)
s(38) =< s(37)+s(35)
s(39) =< s(37)+s(35)
s(39) =< s(37)+s(33)

  with precondition: [A>=3] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G): 
-------------------------------------
* Chain [52] with precondition: [A=0] 
    - Upper bound: 4 
    - Complexity: constant 
* Chain [51] with precondition: [A=1] 
    - Upper bound: 5 
    - Complexity: constant 
* Chain [50] with precondition: [A=2] 
    - Upper bound: 7 
    - Complexity: constant 
* Chain [49] with precondition: [0>=A+1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [48] with precondition: [A>=3] 
    - Upper bound: 6*A+10+2*A*A+A 
    - Complexity: n^2 

### Maximum cost of pyRinit(A,B,C,D,E,F,G): max([4,nat(A)*6+7+nat(A)*2*nat(A)+nat(A/2)*2])+3 
Asymptotic class: n^2 
* Total analysis performed in 817 ms.


-- stats
realtime 0:00.91
usertime 0.88
systime 0.00

