WORST_CASE(?,O(n^3))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [n_c___3/17]
1. recursive  : [n_b___2/17,n_c___3_loop_cont/18,n_c___4/17]
2. recursive  : [n_b___6/17,n_c___4_loop_cont/18,n_d___1/17]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [n_halt___5/9]
5. non_recursive  : [n_b___6_loop_cont/10]
6. non_recursive  : [n_d___7/9]
7. non_recursive  : [n_start0/9]
8. non_recursive  : [pyRinit/9]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into n_c___3/17
1. SCC is partially evaluated into n_c___4/17
2. SCC is partially evaluated into n_b___6/17
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into n_b___6_loop_cont/10
6. SCC is partially evaluated into n_d___7/9
7. SCC is completely evaluated into other SCCs
8. SCC is partially evaluated into pyRinit/9

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations n_c___3/17 
* CE 16 is refined into CE [17] 
* CE 14 is refined into CE [18] 
* CE 15 is refined into CE [19] 


### Cost equations --> "Loop" of n_c___3/17 
* CEs [19] --> Loop 15 
* CEs [17] --> Loop 16 
* CEs [18] --> Loop 17 

### Ranking functions of CR n_c___3(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [15]: [-C+E,E-1]

#### Partial ranking functions of CR n_c___3(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    -C+E
    E-1


### Specialization of cost equations n_c___4/17 
* CE 10 is refined into CE [20,21] 
* CE 12 is refined into CE [22] 
* CE 13 is refined into CE [23] 
* CE 11 is refined into CE [24] 


### Cost equations --> "Loop" of n_c___4/17 
* CEs [24] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [20] --> Loop 20 
* CEs [22,23] --> Loop 21 

### Ranking functions of CR n_c___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [18]: [A-G,B-G,E-G]

#### Partial ranking functions of CR n_c___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    A-G
    B-G
    E-G


### Specialization of cost equations n_b___6/17 
* CE 6 is refined into CE [25] 
* CE 4 is refined into CE [26] 
* CE 7 is refined into CE [27] 
* CE 5 is refined into CE [28] 


### Cost equations --> "Loop" of n_b___6/17 
* CEs [28] --> Loop 22 
* CEs [25] --> Loop 23 
* CEs [26,27] --> Loop 24 

### Ranking functions of CR n_b___6(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [22]: [A-C-1,A-G,B-C-1,B-G]

#### Partial ranking functions of CR n_b___6(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    A-C-1
    A-G
    B-C-1
    B-G


### Specialization of cost equations n_b___6_loop_cont/10 
* CE 9 is refined into CE [29] 
* CE 8 is refined into CE [30] 


### Cost equations --> "Loop" of n_b___6_loop_cont/10 
* CEs [29] --> Loop 25 
* CEs [30] --> Loop 26 

### Ranking functions of CR n_b___6_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR n_b___6_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations n_d___7/9 
* CE 2 is refined into CE [31,32,33] 
* CE 3 is refined into CE [34] 


### Cost equations --> "Loop" of n_d___7/9 
* CEs [31,32,33] --> Loop 27 
* CEs [34] --> Loop 28 

### Ranking functions of CR n_d___7(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR n_d___7(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations pyRinit/9 
* CE 1 is refined into CE [35,36] 


### Cost equations --> "Loop" of pyRinit/9 
* CEs [36] --> Loop 29 
* CEs [35] --> Loop 30 

### Ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR pyRinit(A,B,C,D,E,F,G,H,I) 


Computing Bounds
=====================================

#### Cost of chains of n_c___3(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[15],17]: 1*it(15)+1
  Such that:it(15) =< E-N

  with precondition: [I=2,A=B,A=J,A=K,C=L,D=M,C=N,F=O,G+1=P,H=Q,C>=1,E>=C+1,G>=C+1,A>=E+1,A>=G] 

* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< -C+E

  with precondition: [I=3,A=B,C>=1,E>=C+1,G>=C+1,A>=E+1,A>=G] 

* Chain [17]: 1
  with precondition: [I=2,B=A,M=D,C=E,O=F,Q=H,B=J,B=K,C=L,C=N,G+1=P,C>=1,G>=C+1,B>=G] 

* Chain [16]: 0
  with precondition: [I=3,B=A,C>=1,E>=C,G>=C+1,B>=E+1,B>=G] 


#### Cost of chains of n_c___4(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[18],21]: 3*it(18)+1*s(2)+1*s(5)+1
  Such that:it(18) =< E-G
aux(2) =< -C+E
s(2) =< aux(2)
s(5) =< it(18)*aux(2)

  with precondition: [I=3,A=B,A=E,C>=1,G>=C+1,A>=G+1] 

* Chain [[18],19]: 3*it(18)+1*s(5)+1*s(6)+3
  Such that:it(18) =< -G+K
aux(3) =< K-N
s(6) =< aux(3)
s(5) =< it(18)*aux(3)

  with precondition: [I=4,A=B,A=E,A=J,A=K,C+1=L,D=M,C=N,F=O,A+1=P,H=Q,C>=1,G>=C+1,A>=G+1] 

* Chain [21]: 1*s(2)+1
  Such that:s(2) =< -C+E

  with precondition: [I=3,A=B,A=E,C>=1,G>=C+1,A>=G] 

* Chain [20]: 3
  with precondition: [I=4,B=A,B=C+1,M=D,B=E,O=F,B=G,Q=H,B=J,B=K,B=L,B=N+1,B+1=P,B>=2] 


#### Cost of chains of n_b___6(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[22],24]: 8*it(22)+2*s(14)+1*s(15)+3*s(24)+1*s(25)+1*s(26)+2
  Such that:aux(7) =< A-G
aux(8) =< A-G+1
it(22) =< aux(7)
s(14) =< aux(8)
s(15) =< it(22)*aux(8)
aux(6) =< aux(8)
aux(5) =< aux(8)-1
s(27) =< it(22)*aux(6)
s(24) =< it(22)*aux(5)
s(25) =< s(27)
s(26) =< s(24)*aux(8)

  with precondition: [I=3,A=B,G=C+1,G>=2,A>=G+1] 

* Chain [[22],23]: 5*it(22)+3*s(24)+1*s(25)+1*s(26)+5
  Such that:it(22) =< A-G
s(21) =< A-G+1
aux(6) =< s(21)
aux(5) =< s(21)-1
s(27) =< it(22)*aux(6)
s(24) =< it(22)*aux(5)
s(25) =< s(27)
s(26) =< s(24)*s(21)

  with precondition: [I=5,A=B,G=C+1,G>=2,A>=G+1] 

* Chain [24]: 3*s(12)+2*s(14)+1*s(15)+2
  Such that:s(12) =< A-G
s(13) =< A-G+1
s(14) =< s(13)
s(15) =< s(12)*s(13)

  with precondition: [I=3,B=A,G=C+1,G>=2,B>=G] 

* Chain [23]: 5
  with precondition: [I=5,C+1=A,C+1=B,C+1=G,C>=1] 


#### Cost of chains of n_b___6_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [26]: 0
  with precondition: [A=3] 

* Chain [25]: 0
  with precondition: [A=5] 


#### Cost of chains of n_d___7(A,B,C,D,E,F,G,H,I):
* Chain [28]: 1
  with precondition: [A=1,B=1,C=1,F=E,H=G] 

* Chain [27]: 20*s(45)+2*s(47)+6*s(51)+2*s(52)+2*s(53)+6
  Such that:aux(13) =< A
s(45) =< aux(13)
s(47) =< s(45)*aux(13)
s(48) =< aux(13)
s(49) =< aux(13)-1
s(50) =< s(45)*s(48)
s(51) =< s(45)*s(49)
s(52) =< s(50)
s(53) =< s(51)*aux(13)

  with precondition: [C=1,B=A,F=E,H=G,B>=2] 


#### Cost of chains of pyRinit(A,B,C,D,E,F,G,H,I):
* Chain [30]: 3
  with precondition: [A=1] 

* Chain [29]: 20*s(63)+2*s(64)+6*s(68)+2*s(69)+2*s(70)+8
  Such that:s(62) =< A
s(63) =< s(62)
s(64) =< s(63)*s(62)
s(65) =< s(62)
s(66) =< s(62)-1
s(67) =< s(63)*s(65)
s(68) =< s(63)*s(66)
s(69) =< s(67)
s(70) =< s(68)*s(62)

  with precondition: [A>=2] 


Closed-form bounds of pyRinit(A,B,C,D,E,F,G,H,I): 
-------------------------------------
* Chain [30] with precondition: [A=1] 
    - Upper bound: 3 
    - Complexity: constant 
* Chain [29] with precondition: [A>=2] 
    - Upper bound: 20*A+8+4*A*A+ (A-1)* (2*A)*A+ (6*A-6)*A 
    - Complexity: n^3 

### Maximum cost of pyRinit(A,B,C,D,E,F,G,H,I): 20*A+5+4*A*A+ (A-1)* (2*A)*A+ (6*A-6)*A+3 
Asymptotic class: n^3 
* Total analysis performed in 1046 ms.


-- stats
realtime 0:01.24
usertime 1.10
systime 0.01

