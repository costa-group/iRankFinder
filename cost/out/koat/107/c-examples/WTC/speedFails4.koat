MAYBE

Initial complexity problem:
1:	T:
		(Comp: ?, Cost: 1)    pyRinit(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3))
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(pyRinit(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(Comp: 1, Cost: 1)    pyRinit(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3))
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(pyRinit(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(pyRinit) = 1
	Pol(n_evalspeedFails4start) = 1
	Pol(n_evalspeedFails4bb3in___2) = 1
	Pol(n_evalspeedFails4bb6in___3) = 1
	Pol(n_evalspeedFails4stop___1) = 0
	Pol(n_evalspeedFails4entryin___4) = 1
	Pol(koat_start) = 1
orients all transitions weakly and the transition
	n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
strictly and produces the following problem:
3:	T:
		(Comp: 1, Cost: 1)    pyRinit(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3))
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(pyRinit(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol n_evalspeedFails4bb3in___2: X_2 - X_4 >= 0 /\ -X_1 + 1 >= 0 /\ X_1 + 1 >= 0
  For symbol n_evalspeedFails4bb6in___3: -X_1 + 1 >= 0 /\ X_1 + 1 >= 0


This yielded the following problem:
4:	T:
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(pyRinit(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3))
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 ]
		(Comp: 1, Cost: 1)    pyRinit(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3))
	start location:	koat_start
	leaf cost:	0

By chaining the transition koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(pyRinit(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ] with all transitions in problem 4, the following new transition is obtained:
	koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
We thus obtain the following problem:
5:	T:
		(Comp: 1, Cost: 1)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3))
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 ]
		(Comp: 1, Cost: 1)    pyRinit(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3))
	start location:	koat_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 5:
	pyRinit(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3))
We thus obtain the following problem:
6:	T:
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3))
		(Comp: 1, Cost: 1)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

By chaining the transition koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ] with all transitions in problem 6, the following new transition is obtained:
	koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
We thus obtain the following problem:
7:	T:
		(Comp: 1, Cost: 2)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3))
	start location:	koat_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transition from problem 7:
	n_evalspeedFails4start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3))
We thus obtain the following problem:
8:	T:
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

By chaining the transition n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 ] with all transitions in problem 8, the following new transitions are obtained:
	n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
	n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
We thus obtain the following problem:
9:	T:
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(n_evalspeedFails4bb3in___2) = 1
	Pol(n_evalspeedFails4stop___1) = 0
	Pol(n_evalspeedFails4bb6in___3) = 1
	Pol(n_evalspeedFails4entryin___4) = 1
	Pol(koat_start) = 1
orients all transitions weakly and the transition
	n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
strictly and produces the following problem:
10:	T:
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

By chaining the transition n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 ] with all transitions in problem 10, the following new transitions are obtained:
	n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ Ar_1 - Fresh_6 >= 0 ]
	n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ -Ar_1 + Fresh_6 - 1 >= 0 ]
We thus obtain the following problem:
11:	T:
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ Ar_1 - Fresh_6 >= 0 ]
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ -Ar_1 + Fresh_6 - 1 >= 0 ]
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 11 produces the following problem:
12:	T:
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ Ar_1 - Fresh_6 >= 0 ]
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ -Ar_1 + Fresh_6 - 1 >= 0 ]
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
		(Comp: 2, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(n_evalspeedFails4bb3in___2) = 1
	Pol(n_evalspeedFails4stop___1) = 0
	Pol(n_evalspeedFails4bb6in___3) = 1
	Pol(n_evalspeedFails4entryin___4) = 1
	Pol(koat_start) = 1
orients all transitions weakly and the transition
	n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ -Ar_1 + Fresh_6 - 1 >= 0 ]
strictly and produces the following problem:
13:	T:
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ Ar_1 - Fresh_6 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ -Ar_1 + Fresh_6 - 1 >= 0 ]
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
		(Comp: 2, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

By chaining the transition n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 ] with all transitions in problem 13, the following new transitions are obtained:
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 ]
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ -Ar_2 + Ar_1 - 1 >= 0 ]
We thus obtain the following problem:
14:	T:
		(Comp: 1, Cost: 2)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ -Ar_2 + Ar_1 - 1 >= 0 ]
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ Ar_1 - Fresh_6 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ -Ar_1 + Fresh_6 - 1 >= 0 ]
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
		(Comp: 2, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

By chaining the transition n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(1, Ar_2, Ar_0, Ar_1)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 ] with all transitions in problem 14, the following new transitions are obtained:
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ -Ar_2 + Fresh_9 - 1 >= 0 ]
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_2, Fresh_8, Fresh_9)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 ]
We thus obtain the following problem:
15:	T:
		(Comp: 1, Cost: 4)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ -Ar_2 + Fresh_9 - 1 >= 0 ]
		(Comp: 1, Cost: 4)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_2, Fresh_8, Fresh_9)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ -Ar_2 + Ar_1 - 1 >= 0 ]
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ Ar_1 - Fresh_6 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ -Ar_1 + Fresh_6 - 1 >= 0 ]
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
		(Comp: 2, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

By chaining the transition n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_2, Fresh_8, Fresh_9)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 ] with all transitions in problem 15, the following new transitions are obtained:
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ -Ar_2 + Fresh_9' - 1 >= 0 ]
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7', Ar_2, Fresh_8', Fresh_9')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 ]
We thus obtain the following problem:
16:	T:
		(Comp: 1, Cost: 6)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ -Ar_2 + Fresh_9' - 1 >= 0 ]
		(Comp: 1, Cost: 6)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7', Ar_2, Fresh_8', Fresh_9')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 ]
		(Comp: 1, Cost: 4)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ -Ar_2 + Fresh_9 - 1 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ -Ar_2 + Ar_1 - 1 >= 0 ]
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ Ar_1 - Fresh_6 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ -Ar_1 + Fresh_6 - 1 >= 0 ]
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
		(Comp: 2, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

By chaining the transition n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7', Ar_2, Fresh_8', Fresh_9')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 ] with all transitions in problem 16, the following new transitions are obtained:
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ -Ar_2 + Fresh_9'' - 1 >= 0 ]
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7'', Ar_2, Fresh_8'', Fresh_9'')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 ]
We thus obtain the following problem:
17:	T:
		(Comp: 1, Cost: 8)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ -Ar_2 + Fresh_9'' - 1 >= 0 ]
		(Comp: 1, Cost: 8)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7'', Ar_2, Fresh_8'', Fresh_9'')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 ]
		(Comp: 1, Cost: 6)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ -Ar_2 + Fresh_9' - 1 >= 0 ]
		(Comp: 1, Cost: 4)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ -Ar_2 + Fresh_9 - 1 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ -Ar_2 + Ar_1 - 1 >= 0 ]
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ Ar_1 - Fresh_6 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ -Ar_1 + Fresh_6 - 1 >= 0 ]
		(Comp: ?, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
		(Comp: 1, Cost: 2)    n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
		(Comp: 2, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

By chaining the transition n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7'', Ar_2, Fresh_8'', Fresh_9'')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 ] with all transitions in problem 17, the following new transitions are obtained:
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ -Ar_2 + Fresh_9''' - 1 >= 0 ]
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7''', Ar_2, Fresh_8''', Fresh_9''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 ]
We thus obtain the following problem:
18:	T:
		(Comp: 1, Cost: 10)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ -Ar_2 + Fresh_9''' - 1 >= 0 ]
		(Comp: 1, Cost: 10)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7''', Ar_2, Fresh_8''', Fresh_9''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 ]
		(Comp: 1, Cost: 8)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ -Ar_2 + Fresh_9'' - 1 >= 0 ]
		(Comp: 1, Cost: 6)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ -Ar_2 + Fresh_9' - 1 >= 0 ]
		(Comp: 1, Cost: 4)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ -Ar_2 + Fresh_9 - 1 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ -Ar_2 + Ar_1 - 1 >= 0 ]
		(Comp: ?, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ Ar_1 - Fresh_6 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ -Ar_1 + Fresh_6 - 1 >= 0 ]
		(Comp: ?, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
		(Comp: 2, Cost: 1)     n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)     n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)     koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

By chaining the transition n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7''', Ar_2, Fresh_8''', Fresh_9''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 ] with all transitions in problem 18, the following new transitions are obtained:
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ -Ar_2 + Fresh_9'''' - 1 >= 0 ]
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7'''', Ar_2, Fresh_8'''', Fresh_9'''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 ]
We thus obtain the following problem:
19:	T:
		(Comp: 1, Cost: 12)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ -Ar_2 + Fresh_9'''' - 1 >= 0 ]
		(Comp: 1, Cost: 12)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7'''', Ar_2, Fresh_8'''', Fresh_9'''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 ]
		(Comp: 1, Cost: 10)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ -Ar_2 + Fresh_9''' - 1 >= 0 ]
		(Comp: 1, Cost: 8)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ -Ar_2 + Fresh_9'' - 1 >= 0 ]
		(Comp: 1, Cost: 6)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ -Ar_2 + Fresh_9' - 1 >= 0 ]
		(Comp: 1, Cost: 4)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ -Ar_2 + Fresh_9 - 1 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ -Ar_2 + Ar_1 - 1 >= 0 ]
		(Comp: ?, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ Ar_1 - Fresh_6 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ -Ar_1 + Fresh_6 - 1 >= 0 ]
		(Comp: ?, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
		(Comp: 2, Cost: 1)     n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)     n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)     koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

By chaining the transition n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7'''', Ar_2, Fresh_8'''', Fresh_9'''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 ] with all transitions in problem 19, the following new transitions are obtained:
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ -Ar_2 + Fresh_9''''' - 1 >= 0 ]
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7''''', Ar_2, Fresh_8''''', Fresh_9''''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 ]
We thus obtain the following problem:
20:	T:
		(Comp: 1, Cost: 14)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ -Ar_2 + Fresh_9''''' - 1 >= 0 ]
		(Comp: 1, Cost: 14)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7''''', Ar_2, Fresh_8''''', Fresh_9''''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 ]
		(Comp: 1, Cost: 12)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ -Ar_2 + Fresh_9'''' - 1 >= 0 ]
		(Comp: 1, Cost: 10)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ -Ar_2 + Fresh_9''' - 1 >= 0 ]
		(Comp: 1, Cost: 8)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ -Ar_2 + Fresh_9'' - 1 >= 0 ]
		(Comp: 1, Cost: 6)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ -Ar_2 + Fresh_9' - 1 >= 0 ]
		(Comp: 1, Cost: 4)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ -Ar_2 + Fresh_9 - 1 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ -Ar_2 + Ar_1 - 1 >= 0 ]
		(Comp: ?, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ Ar_1 - Fresh_6 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ -Ar_1 + Fresh_6 - 1 >= 0 ]
		(Comp: ?, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
		(Comp: 2, Cost: 1)     n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)     n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)     koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

By chaining the transition n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7''''', Ar_2, Fresh_8''''', Fresh_9''''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 ] with all transitions in problem 20, the following new transitions are obtained:
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ -Ar_2 + Fresh_9'''''' - 1 >= 0 ]
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7'''''', Ar_2, Fresh_8'''''', Fresh_9'''''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 ]
We thus obtain the following problem:
21:	T:
		(Comp: 1, Cost: 16)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ -Ar_2 + Fresh_9'''''' - 1 >= 0 ]
		(Comp: 1, Cost: 16)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7'''''', Ar_2, Fresh_8'''''', Fresh_9'''''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 ]
		(Comp: 1, Cost: 14)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ -Ar_2 + Fresh_9''''' - 1 >= 0 ]
		(Comp: 1, Cost: 12)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ -Ar_2 + Fresh_9'''' - 1 >= 0 ]
		(Comp: 1, Cost: 10)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ -Ar_2 + Fresh_9''' - 1 >= 0 ]
		(Comp: 1, Cost: 8)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ -Ar_2 + Fresh_9'' - 1 >= 0 ]
		(Comp: 1, Cost: 6)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ -Ar_2 + Fresh_9' - 1 >= 0 ]
		(Comp: 1, Cost: 4)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ -Ar_2 + Fresh_9 - 1 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ -Ar_2 + Ar_1 - 1 >= 0 ]
		(Comp: ?, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ Ar_1 - Fresh_6 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ -Ar_1 + Fresh_6 - 1 >= 0 ]
		(Comp: ?, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
		(Comp: 2, Cost: 1)     n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)     n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)     koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

By chaining the transition n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7'''''', Ar_2, Fresh_8'''''', Fresh_9'''''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 ] with all transitions in problem 21, the following new transitions are obtained:
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ -Ar_2 + Fresh_9''''''' - 1 >= 0 ]
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7''''''', Ar_2, Fresh_8''''''', Fresh_9''''''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ Ar_2 - Fresh_9''''''' >= 0 ]
We thus obtain the following problem:
22:	T:
		(Comp: 1, Cost: 18)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ -Ar_2 + Fresh_9''''''' - 1 >= 0 ]
		(Comp: 1, Cost: 18)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7''''''', Ar_2, Fresh_8''''''', Fresh_9''''''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ Ar_2 - Fresh_9''''''' >= 0 ]
		(Comp: 1, Cost: 16)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ -Ar_2 + Fresh_9'''''' - 1 >= 0 ]
		(Comp: 1, Cost: 14)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ -Ar_2 + Fresh_9''''' - 1 >= 0 ]
		(Comp: 1, Cost: 12)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ -Ar_2 + Fresh_9'''' - 1 >= 0 ]
		(Comp: 1, Cost: 10)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ -Ar_2 + Fresh_9''' - 1 >= 0 ]
		(Comp: 1, Cost: 8)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ -Ar_2 + Fresh_9'' - 1 >= 0 ]
		(Comp: 1, Cost: 6)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ -Ar_2 + Fresh_9' - 1 >= 0 ]
		(Comp: 1, Cost: 4)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ -Ar_2 + Fresh_9 - 1 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ -Ar_2 + Ar_1 - 1 >= 0 ]
		(Comp: ?, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ Ar_1 - Fresh_6 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ -Ar_1 + Fresh_6 - 1 >= 0 ]
		(Comp: ?, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
		(Comp: 2, Cost: 1)     n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)     n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)     koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

By chaining the transition n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7''''''', Ar_2, Fresh_8''''''', Fresh_9''''''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ Ar_2 - Fresh_9''''''' >= 0 ] with all transitions in problem 22, the following new transitions are obtained:
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ Ar_2 - Fresh_9''''''' >= 0 /\ -Fresh_7'''''''' + 1 >= 0 /\ Fresh_7'''''''' + 1 >= 0 /\ Fresh_8'''''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''''' - Fresh_9'''''''' >= 0 /\ Fresh_8''''''' - Fresh_8'''''''' = 0 /\ Fresh_7''''''' - Fresh_7'''''''' = 0 /\ Fresh_9''''''' + Fresh_7'''''''' - Fresh_9'''''''' = 0 /\ -Ar_2 + Fresh_9'''''''' - 1 >= 0 ]
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7'''''''', Ar_2, Fresh_8'''''''', Fresh_9'''''''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ Ar_2 - Fresh_9''''''' >= 0 /\ -Fresh_7'''''''' + 1 >= 0 /\ Fresh_7'''''''' + 1 >= 0 /\ Fresh_8'''''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''''' - Fresh_9'''''''' >= 0 /\ Fresh_8''''''' - Fresh_8'''''''' = 0 /\ Fresh_7''''''' - Fresh_7'''''''' = 0 /\ Fresh_9''''''' + Fresh_7'''''''' - Fresh_9'''''''' = 0 /\ Ar_2 - Fresh_9'''''''' >= 0 ]
We thus obtain the following problem:
23:	T:
		(Comp: 1, Cost: 20)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ Ar_2 - Fresh_9''''''' >= 0 /\ -Fresh_7'''''''' + 1 >= 0 /\ Fresh_7'''''''' + 1 >= 0 /\ Fresh_8'''''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''''' - Fresh_9'''''''' >= 0 /\ Fresh_8''''''' - Fresh_8'''''''' = 0 /\ Fresh_7''''''' - Fresh_7'''''''' = 0 /\ Fresh_9''''''' + Fresh_7'''''''' - Fresh_9'''''''' = 0 /\ -Ar_2 + Fresh_9'''''''' - 1 >= 0 ]
		(Comp: 1, Cost: 20)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7'''''''', Ar_2, Fresh_8'''''''', Fresh_9'''''''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ Ar_2 - Fresh_9''''''' >= 0 /\ -Fresh_7'''''''' + 1 >= 0 /\ Fresh_7'''''''' + 1 >= 0 /\ Fresh_8'''''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''''' - Fresh_9'''''''' >= 0 /\ Fresh_8''''''' - Fresh_8'''''''' = 0 /\ Fresh_7''''''' - Fresh_7'''''''' = 0 /\ Fresh_9''''''' + Fresh_7'''''''' - Fresh_9'''''''' = 0 /\ Ar_2 - Fresh_9'''''''' >= 0 ]
		(Comp: 1, Cost: 18)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ -Ar_2 + Fresh_9''''''' - 1 >= 0 ]
		(Comp: 1, Cost: 16)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ -Ar_2 + Fresh_9'''''' - 1 >= 0 ]
		(Comp: 1, Cost: 14)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ -Ar_2 + Fresh_9''''' - 1 >= 0 ]
		(Comp: 1, Cost: 12)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ -Ar_2 + Fresh_9'''' - 1 >= 0 ]
		(Comp: 1, Cost: 10)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ -Ar_2 + Fresh_9''' - 1 >= 0 ]
		(Comp: 1, Cost: 8)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ -Ar_2 + Fresh_9'' - 1 >= 0 ]
		(Comp: 1, Cost: 6)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ -Ar_2 + Fresh_9' - 1 >= 0 ]
		(Comp: 1, Cost: 4)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ -Ar_2 + Fresh_9 - 1 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ -Ar_2 + Ar_1 - 1 >= 0 ]
		(Comp: ?, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ Ar_1 - Fresh_6 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ -Ar_1 + Fresh_6 - 1 >= 0 ]
		(Comp: ?, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
		(Comp: 2, Cost: 1)     n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)     n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)     koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

By chaining the transition n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7'''''''', Ar_2, Fresh_8'''''''', Fresh_9'''''''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ Ar_2 - Fresh_9''''''' >= 0 /\ -Fresh_7'''''''' + 1 >= 0 /\ Fresh_7'''''''' + 1 >= 0 /\ Fresh_8'''''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''''' - Fresh_9'''''''' >= 0 /\ Fresh_8''''''' - Fresh_8'''''''' = 0 /\ Fresh_7''''''' - Fresh_7'''''''' = 0 /\ Fresh_9''''''' + Fresh_7'''''''' - Fresh_9'''''''' = 0 /\ Ar_2 - Fresh_9'''''''' >= 0 ] with all transitions in problem 23, the following new transitions are obtained:
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ Ar_2 - Fresh_9''''''' >= 0 /\ -Fresh_7'''''''' + 1 >= 0 /\ Fresh_7'''''''' + 1 >= 0 /\ Fresh_8'''''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''''' - Fresh_9'''''''' >= 0 /\ Fresh_8''''''' - Fresh_8'''''''' = 0 /\ Fresh_7''''''' - Fresh_7'''''''' = 0 /\ Fresh_9''''''' + Fresh_7'''''''' - Fresh_9'''''''' = 0 /\ Ar_2 - Fresh_9'''''''' >= 0 /\ -Fresh_7''''''''' + 1 >= 0 /\ Fresh_7''''''''' + 1 >= 0 /\ Fresh_8''''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''''' - Fresh_9''''''''' >= 0 /\ Fresh_8'''''''' - Fresh_8''''''''' = 0 /\ Fresh_7'''''''' - Fresh_7''''''''' = 0 /\ Fresh_9'''''''' + Fresh_7''''''''' - Fresh_9''''''''' = 0 /\ -Ar_2 + Fresh_9''''''''' - 1 >= 0 ]
	n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7''''''''', Ar_2, Fresh_8''''''''', Fresh_9''''''''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ Ar_2 - Fresh_9''''''' >= 0 /\ -Fresh_7'''''''' + 1 >= 0 /\ Fresh_7'''''''' + 1 >= 0 /\ Fresh_8'''''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''''' - Fresh_9'''''''' >= 0 /\ Fresh_8''''''' - Fresh_8'''''''' = 0 /\ Fresh_7''''''' - Fresh_7'''''''' = 0 /\ Fresh_9''''''' + Fresh_7'''''''' - Fresh_9'''''''' = 0 /\ Ar_2 - Fresh_9'''''''' >= 0 /\ -Fresh_7''''''''' + 1 >= 0 /\ Fresh_7''''''''' + 1 >= 0 /\ Fresh_8''''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''''' - Fresh_9''''''''' >= 0 /\ Fresh_8'''''''' - Fresh_8''''''''' = 0 /\ Fresh_7'''''''' - Fresh_7''''''''' = 0 /\ Fresh_9'''''''' + Fresh_7''''''''' - Fresh_9''''''''' = 0 /\ Ar_2 - Fresh_9''''''''' >= 0 ]
We thus obtain the following problem:
24:	T:
		(Comp: 1, Cost: 22)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ Ar_2 - Fresh_9''''''' >= 0 /\ -Fresh_7'''''''' + 1 >= 0 /\ Fresh_7'''''''' + 1 >= 0 /\ Fresh_8'''''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''''' - Fresh_9'''''''' >= 0 /\ Fresh_8''''''' - Fresh_8'''''''' = 0 /\ Fresh_7''''''' - Fresh_7'''''''' = 0 /\ Fresh_9''''''' + Fresh_7'''''''' - Fresh_9'''''''' = 0 /\ Ar_2 - Fresh_9'''''''' >= 0 /\ -Fresh_7''''''''' + 1 >= 0 /\ Fresh_7''''''''' + 1 >= 0 /\ Fresh_8''''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''''' - Fresh_9''''''''' >= 0 /\ Fresh_8'''''''' - Fresh_8''''''''' = 0 /\ Fresh_7'''''''' - Fresh_7''''''''' = 0 /\ Fresh_9'''''''' + Fresh_7''''''''' - Fresh_9''''''''' = 0 /\ -Ar_2 + Fresh_9''''''''' - 1 >= 0 ]
		(Comp: 1, Cost: 22)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7''''''''', Ar_2, Fresh_8''''''''', Fresh_9''''''''')) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ Ar_2 - Fresh_9''''''' >= 0 /\ -Fresh_7'''''''' + 1 >= 0 /\ Fresh_7'''''''' + 1 >= 0 /\ Fresh_8'''''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''''' - Fresh_9'''''''' >= 0 /\ Fresh_8''''''' - Fresh_8'''''''' = 0 /\ Fresh_7''''''' - Fresh_7'''''''' = 0 /\ Fresh_9''''''' + Fresh_7'''''''' - Fresh_9'''''''' = 0 /\ Ar_2 - Fresh_9'''''''' >= 0 /\ -Fresh_7''''''''' + 1 >= 0 /\ Fresh_7''''''''' + 1 >= 0 /\ Fresh_8''''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''''' - Fresh_9''''''''' >= 0 /\ Fresh_8'''''''' - Fresh_8''''''''' = 0 /\ Fresh_7'''''''' - Fresh_7''''''''' = 0 /\ Fresh_9'''''''' + Fresh_7''''''''' - Fresh_9''''''''' = 0 /\ Ar_2 - Fresh_9''''''''' >= 0 ]
		(Comp: 1, Cost: 20)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ Ar_2 - Fresh_9''''''' >= 0 /\ -Fresh_7'''''''' + 1 >= 0 /\ Fresh_7'''''''' + 1 >= 0 /\ Fresh_8'''''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''''' - Fresh_9'''''''' >= 0 /\ Fresh_8''''''' - Fresh_8'''''''' = 0 /\ Fresh_7''''''' - Fresh_7'''''''' = 0 /\ Fresh_9''''''' + Fresh_7'''''''' - Fresh_9'''''''' = 0 /\ -Ar_2 + Fresh_9'''''''' - 1 >= 0 ]
		(Comp: 1, Cost: 18)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ Ar_2 - Fresh_9'''''' >= 0 /\ -Fresh_7''''''' + 1 >= 0 /\ Fresh_7''''''' + 1 >= 0 /\ Fresh_8''''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''''' - Fresh_9''''''' >= 0 /\ Fresh_8'''''' - Fresh_8''''''' = 0 /\ Fresh_7'''''' - Fresh_7''''''' = 0 /\ Fresh_9'''''' + Fresh_7''''''' - Fresh_9''''''' = 0 /\ -Ar_2 + Fresh_9''''''' - 1 >= 0 ]
		(Comp: 1, Cost: 16)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ Ar_2 - Fresh_9''''' >= 0 /\ -Fresh_7'''''' + 1 >= 0 /\ Fresh_7'''''' + 1 >= 0 /\ Fresh_8'''''' - 1 >= 0 /\ Ar_2 + Fresh_7'''''' - Fresh_9'''''' >= 0 /\ Fresh_8''''' - Fresh_8'''''' = 0 /\ Fresh_7''''' - Fresh_7'''''' = 0 /\ Fresh_9''''' + Fresh_7'''''' - Fresh_9'''''' = 0 /\ -Ar_2 + Fresh_9'''''' - 1 >= 0 ]
		(Comp: 1, Cost: 14)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ Ar_2 - Fresh_9'''' >= 0 /\ -Fresh_7''''' + 1 >= 0 /\ Fresh_7''''' + 1 >= 0 /\ Fresh_8''''' - 1 >= 0 /\ Ar_2 + Fresh_7''''' - Fresh_9''''' >= 0 /\ Fresh_8'''' - Fresh_8''''' = 0 /\ Fresh_7'''' - Fresh_7''''' = 0 /\ Fresh_9'''' + Fresh_7''''' - Fresh_9''''' = 0 /\ -Ar_2 + Fresh_9''''' - 1 >= 0 ]
		(Comp: 1, Cost: 12)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ Ar_2 - Fresh_9''' >= 0 /\ -Fresh_7'''' + 1 >= 0 /\ Fresh_7'''' + 1 >= 0 /\ Fresh_8'''' - 1 >= 0 /\ Ar_2 + Fresh_7'''' - Fresh_9'''' >= 0 /\ Fresh_8''' - Fresh_8'''' = 0 /\ Fresh_7''' - Fresh_7'''' = 0 /\ Fresh_9''' + Fresh_7'''' - Fresh_9'''' = 0 /\ -Ar_2 + Fresh_9'''' - 1 >= 0 ]
		(Comp: 1, Cost: 10)    n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ Ar_2 - Fresh_9'' >= 0 /\ -Fresh_7''' + 1 >= 0 /\ Fresh_7''' + 1 >= 0 /\ Fresh_8''' - 1 >= 0 /\ Ar_2 + Fresh_7''' - Fresh_9''' >= 0 /\ Fresh_8'' - Fresh_8''' = 0 /\ Fresh_7'' - Fresh_7''' = 0 /\ Fresh_9'' + Fresh_7''' - Fresh_9''' = 0 /\ -Ar_2 + Fresh_9''' - 1 >= 0 ]
		(Comp: 1, Cost: 8)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ Ar_2 - Fresh_9' >= 0 /\ -Fresh_7'' + 1 >= 0 /\ Fresh_7'' + 1 >= 0 /\ Fresh_8'' - 1 >= 0 /\ Ar_2 + Fresh_7'' - Fresh_9'' >= 0 /\ Fresh_8' - Fresh_8'' = 0 /\ Fresh_7' - Fresh_7'' = 0 /\ Fresh_9' + Fresh_7'' - Fresh_9'' = 0 /\ -Ar_2 + Fresh_9'' - 1 >= 0 ]
		(Comp: 1, Cost: 6)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ Ar_2 - Fresh_9 >= 0 /\ -Fresh_7' + 1 >= 0 /\ Fresh_7' + 1 >= 0 /\ Fresh_8' - 1 >= 0 /\ Ar_2 + Fresh_7' - Fresh_9' >= 0 /\ Fresh_8 - Fresh_8' = 0 /\ Fresh_7 - Fresh_7' = 0 /\ Fresh_9 + Fresh_7' - Fresh_9' = 0 /\ -Ar_2 + Fresh_9' - 1 >= 0 ]
		(Comp: 1, Cost: 4)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ Ar_2 - Ar_1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_2 + Fresh_7 - Fresh_9 >= 0 /\ Ar_0 - Fresh_8 = 0 /\ -Fresh_7 + 1 = 0 /\ Ar_1 + Fresh_7 - Fresh_9 = 0 /\ -Ar_2 + Fresh_9 - 1 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_0 - 1 >= 0 /\ 0 >= 0 /\ 2 >= 0 /\ -Ar_2 + Ar_1 - 1 >= 0 ]
		(Comp: ?, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_4, Ar_1, Fresh_5, Fresh_6)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ Ar_1 - Fresh_6 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_4 + 1 >= 0 /\ Fresh_4 + 1 >= 0 /\ -Fresh_5 >= 0 /\ Ar_1 - Fresh_4 - Fresh_6 >= 0 /\ Ar_2 - Fresh_5 = 0 /\ Ar_0 - Fresh_4 = 0 /\ Ar_3 - Fresh_4 - Fresh_6 = 0 /\ -Ar_1 + Fresh_6 - 1 >= 0 ]
		(Comp: ?, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Fresh_7, Ar_1, Fresh_8, Fresh_9)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ Ar_1 - Fresh_9 >= 0 ]
		(Comp: 1, Cost: 2)     n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ Ar_1 - Ar_3 >= 0 /\ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Fresh_7 + 1 >= 0 /\ Fresh_7 + 1 >= 0 /\ Fresh_8 - 1 >= 0 /\ Ar_1 + Fresh_7 - Fresh_9 >= 0 /\ Ar_2 - Fresh_8 = 0 /\ Ar_0 - Fresh_7 = 0 /\ Ar_3 + Fresh_7 - Fresh_9 = 0 /\ -Ar_1 + Fresh_9 - 1 >= 0 ]
		(Comp: 2, Cost: 1)     n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb3in___2(Ar_0, Ar_1, Ar_2, Ar_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ Ar_1 - Ar_3 >= 0 ]
		(Comp: 1, Cost: 1)     n_evalspeedFails4bb6in___3(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4stop___1(Fresh_0, Fresh_1, Fresh_2, Fresh_3)) [ -Ar_0 + 1 >= 0 /\ Ar_0 + 1 >= 0 /\ -Ar_1 + Ar_3 - 1 >= 0 ]
		(Comp: 1, Cost: 1)     n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4bb6in___3(-1, Ar_2, Ar_0, Ar_1)) [ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 2)     koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(n_evalspeedFails4entryin___4(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Complexity upper bound ?

Time: 3.856 sec (SMT: 2.735 sec)

-- stats
realtime 0:03.88
usertime 3.81
systime 0.03

