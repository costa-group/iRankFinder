WORST_CASE(?, O(n^1))

Initial complexity problem:
1:	T:
		(Comp: ?, Cost: 1)    f(Ar_0, Ar_1) -> Com_1(f(Ar_0 + 1, Ar_1 + 2)) [ Ar_0 >= Ar_1 + 1 ]
		(Comp: ?, Cost: 1)    start(Ar_0, Ar_1) -> Com_1(f(Ar_0, Ar_1))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(Comp: ?, Cost: 1)    f(Ar_0, Ar_1) -> Com_1(f(Ar_0 + 1, Ar_1 + 2)) [ Ar_0 >= Ar_1 + 1 ]
		(Comp: 1, Cost: 1)    start(Ar_0, Ar_1) -> Com_1(f(Ar_0, Ar_1))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(f) = V_1 - V_2
	Pol(start) = V_1 - V_2
	Pol(koat_start) = V_1 - V_2
orients all transitions weakly and the transition
	f(Ar_0, Ar_1) -> Com_1(f(Ar_0 + 1, Ar_1 + 2)) [ Ar_0 >= Ar_1 + 1 ]
strictly and produces the following problem:
3:	T:
		(Comp: Ar_0 + Ar_1, Cost: 1)    f(Ar_0, Ar_1) -> Com_1(f(Ar_0 + 1, Ar_1 + 2)) [ Ar_0 >= Ar_1 + 1 ]
		(Comp: 1, Cost: 1)              start(Ar_0, Ar_1) -> Com_1(f(Ar_0, Ar_1))
		(Comp: 1, Cost: 0)              koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Complexity upper bound Ar_0 + Ar_1 + 1

Time: 0.015 sec (SMT: 0.014 sec)
