WORST_CASE(?, O(n^1))

Initial complexity problem:
1:	T:
		(Comp: ?, Cost: 1)    eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1 + 1)) [ Ar_0 >= Ar_1 + 1 ]
		(Comp: ?, Cost: 1)    eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1 + 1)) [ Ar_1 >= Ar_0 + 1 /\ Ar_0 >= Ar_1 + 1 ]
		(Comp: ?, Cost: 1)    eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0 + 1, Ar_1)) [ Ar_0 >= Ar_1 + 1 /\ Ar_1 >= Ar_0 ]
		(Comp: ?, Cost: 1)    eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0 + 1, Ar_1)) [ Ar_1 >= Ar_0 + 1 /\ Ar_1 >= Ar_0 ]
		(Comp: ?, Cost: 1)    start(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Testing for reachability in the complexity graph removes the following transitions from problem 1:
	eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1 + 1)) [ Ar_1 >= Ar_0 + 1 /\ Ar_0 >= Ar_1 + 1 ]
	eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0 + 1, Ar_1)) [ Ar_0 >= Ar_1 + 1 /\ Ar_1 >= Ar_0 ]
We thus obtain the following problem:
2:	T:
		(Comp: ?, Cost: 1)    eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0 + 1, Ar_1)) [ Ar_1 >= Ar_0 + 1 /\ Ar_1 >= Ar_0 ]
		(Comp: ?, Cost: 1)    eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1 + 1)) [ Ar_0 >= Ar_1 + 1 ]
		(Comp: ?, Cost: 1)    start(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 2 produces the following problem:
3:	T:
		(Comp: ?, Cost: 1)    eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0 + 1, Ar_1)) [ Ar_1 >= Ar_0 + 1 /\ Ar_1 >= Ar_0 ]
		(Comp: ?, Cost: 1)    eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1 + 1)) [ Ar_0 >= Ar_1 + 1 ]
		(Comp: 1, Cost: 1)    start(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval) = V_1 - V_2
and size complexities
	S("koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]", 0-0) = Ar_0
	S("koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]", 0-1) = Ar_1
	S("start(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1))", 0-0) = Ar_0
	S("start(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1))", 0-1) = Ar_1
	S("eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1 + 1)) [ Ar_0 >= Ar_1 + 1 ]", 0-0) = Ar_0
	S("eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1 + 1)) [ Ar_0 >= Ar_1 + 1 ]", 0-1) = ?
	S("eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0 + 1, Ar_1)) [ Ar_1 >= Ar_0 + 1 /\\ Ar_1 >= Ar_0 ]", 0-0) = ?
	S("eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0 + 1, Ar_1)) [ Ar_1 >= Ar_0 + 1 /\\ Ar_1 >= Ar_0 ]", 0-1) = Ar_1
orients the transitions
	eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1 + 1)) [ Ar_0 >= Ar_1 + 1 ]
weakly and the transition
	eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1 + 1)) [ Ar_0 >= Ar_1 + 1 ]
strictly and produces the following problem:
4:	T:
		(Comp: ?, Cost: 1)              eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0 + 1, Ar_1)) [ Ar_1 >= Ar_0 + 1 /\ Ar_1 >= Ar_0 ]
		(Comp: Ar_0 + Ar_1, Cost: 1)    eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1 + 1)) [ Ar_0 >= Ar_1 + 1 ]
		(Comp: 1, Cost: 1)              start(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1))
		(Comp: 1, Cost: 0)              koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval) = -V_1 + V_2 + 1
and size complexities
	S("koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]", 0-0) = Ar_0
	S("koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]", 0-1) = Ar_1
	S("start(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1))", 0-0) = Ar_0
	S("start(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1))", 0-1) = Ar_1
	S("eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1 + 1)) [ Ar_0 >= Ar_1 + 1 ]", 0-0) = Ar_0
	S("eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1 + 1)) [ Ar_0 >= Ar_1 + 1 ]", 0-1) = 2*Ar_0 + 2*Ar_1
	S("eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0 + 1, Ar_1)) [ Ar_1 >= Ar_0 + 1 /\\ Ar_1 >= Ar_0 ]", 0-0) = ?
	S("eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0 + 1, Ar_1)) [ Ar_1 >= Ar_0 + 1 /\\ Ar_1 >= Ar_0 ]", 0-1) = Ar_1
orients the transitions
	eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0 + 1, Ar_1)) [ Ar_1 >= Ar_0 + 1 /\ Ar_1 >= Ar_0 ]
weakly and the transition
	eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0 + 1, Ar_1)) [ Ar_1 >= Ar_0 + 1 /\ Ar_1 >= Ar_0 ]
strictly and produces the following problem:
5:	T:
		(Comp: Ar_0 + Ar_1 + 1, Cost: 1)    eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0 + 1, Ar_1)) [ Ar_1 >= Ar_0 + 1 /\ Ar_1 >= Ar_0 ]
		(Comp: Ar_0 + Ar_1, Cost: 1)        eval(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1 + 1)) [ Ar_0 >= Ar_1 + 1 ]
		(Comp: 1, Cost: 1)                  start(Ar_0, Ar_1) -> Com_1(eval(Ar_0, Ar_1))
		(Comp: 1, Cost: 0)                  koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Complexity upper bound 2*Ar_0 + 2*Ar_1 + 2

Time: 0.033 sec (SMT: 0.028 sec)
