WORST_CASE(?, O(n^1))

Initial complexity problem:
1:	T:
		(Comp: ?, Cost: 1)    eval1(Ar_0, Ar_1, Ar_2) -> Com_1(eval2(Ar_0, Ar_1, Ar_2)) [ Ar_0 >= Ar_1 + 1 ]
		(Comp: ?, Cost: 1)    eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1 + 1, Ar_2)) [ Ar_0 >= Ar_2 + 1 ]
		(Comp: ?, Cost: 1)    eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1, Ar_2 + 1)) [ Ar_0 >= Ar_2 + 1 ]
		(Comp: ?, Cost: 1)    eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0 - 1, Ar_1, Ar_2)) [ Ar_2 >= Ar_0 ]
		(Comp: ?, Cost: 1)    start(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(start(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(Comp: ?, Cost: 1)    eval1(Ar_0, Ar_1, Ar_2) -> Com_1(eval2(Ar_0, Ar_1, Ar_2)) [ Ar_0 >= Ar_1 + 1 ]
		(Comp: ?, Cost: 1)    eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1 + 1, Ar_2)) [ Ar_0 >= Ar_2 + 1 ]
		(Comp: ?, Cost: 1)    eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1, Ar_2 + 1)) [ Ar_0 >= Ar_2 + 1 ]
		(Comp: ?, Cost: 1)    eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0 - 1, Ar_1, Ar_2)) [ Ar_2 >= Ar_0 ]
		(Comp: 1, Cost: 1)    start(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(start(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval1) = V_1 - V_3
	Pol(eval2) = V_1 - V_3
	Pol(start) = V_1 - V_3
	Pol(koat_start) = V_1 - V_3
orients all transitions weakly and the transition
	eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1, Ar_2 + 1)) [ Ar_0 >= Ar_2 + 1 ]
strictly and produces the following problem:
3:	T:
		(Comp: ?, Cost: 1)              eval1(Ar_0, Ar_1, Ar_2) -> Com_1(eval2(Ar_0, Ar_1, Ar_2)) [ Ar_0 >= Ar_1 + 1 ]
		(Comp: ?, Cost: 1)              eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1 + 1, Ar_2)) [ Ar_0 >= Ar_2 + 1 ]
		(Comp: Ar_0 + Ar_2, Cost: 1)    eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1, Ar_2 + 1)) [ Ar_0 >= Ar_2 + 1 ]
		(Comp: ?, Cost: 1)              eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0 - 1, Ar_1, Ar_2)) [ Ar_2 >= Ar_0 ]
		(Comp: 1, Cost: 1)              start(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)              koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(start(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol eval2: X_1 - X_2 - 1 >= 0


This yielded the following problem:
4:	T:
		(Comp: 1, Cost: 0)              koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(start(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
		(Comp: 1, Cost: 1)              start(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)              eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0 - 1, Ar_1, Ar_2)) [ Ar_0 - Ar_1 - 1 >= 0 /\ Ar_2 >= Ar_0 ]
		(Comp: Ar_0 + Ar_2, Cost: 1)    eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1, Ar_2 + 1)) [ Ar_0 - Ar_1 - 1 >= 0 /\ Ar_0 >= Ar_2 + 1 ]
		(Comp: ?, Cost: 1)              eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1 + 1, Ar_2)) [ Ar_0 - Ar_1 - 1 >= 0 /\ Ar_0 >= Ar_2 + 1 ]
		(Comp: ?, Cost: 1)              eval1(Ar_0, Ar_1, Ar_2) -> Com_1(eval2(Ar_0, Ar_1, Ar_2)) [ Ar_0 >= Ar_1 + 1 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(koat_start) = V_1 - V_2
	Pol(start) = V_1 - V_2
	Pol(eval1) = V_1 - V_2
	Pol(eval2) = V_1 - V_2
orients all transitions weakly and the transitions
	eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1 + 1, Ar_2)) [ Ar_0 - Ar_1 - 1 >= 0 /\ Ar_0 >= Ar_2 + 1 ]
	eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0 - 1, Ar_1, Ar_2)) [ Ar_0 - Ar_1 - 1 >= 0 /\ Ar_2 >= Ar_0 ]
strictly and produces the following problem:
5:	T:
		(Comp: 1, Cost: 0)              koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(start(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
		(Comp: 1, Cost: 1)              start(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1, Ar_2))
		(Comp: Ar_0 + Ar_1, Cost: 1)    eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0 - 1, Ar_1, Ar_2)) [ Ar_0 - Ar_1 - 1 >= 0 /\ Ar_2 >= Ar_0 ]
		(Comp: Ar_0 + Ar_2, Cost: 1)    eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1, Ar_2 + 1)) [ Ar_0 - Ar_1 - 1 >= 0 /\ Ar_0 >= Ar_2 + 1 ]
		(Comp: Ar_0 + Ar_1, Cost: 1)    eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1 + 1, Ar_2)) [ Ar_0 - Ar_1 - 1 >= 0 /\ Ar_0 >= Ar_2 + 1 ]
		(Comp: ?, Cost: 1)              eval1(Ar_0, Ar_1, Ar_2) -> Com_1(eval2(Ar_0, Ar_1, Ar_2)) [ Ar_0 >= Ar_1 + 1 ]
	start location:	koat_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 5 produces the following problem:
6:	T:
		(Comp: 1, Cost: 0)                             koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(start(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
		(Comp: 1, Cost: 1)                             start(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1, Ar_2))
		(Comp: Ar_0 + Ar_1, Cost: 1)                   eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0 - 1, Ar_1, Ar_2)) [ Ar_0 - Ar_1 - 1 >= 0 /\ Ar_2 >= Ar_0 ]
		(Comp: Ar_0 + Ar_2, Cost: 1)                   eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1, Ar_2 + 1)) [ Ar_0 - Ar_1 - 1 >= 0 /\ Ar_0 >= Ar_2 + 1 ]
		(Comp: Ar_0 + Ar_1, Cost: 1)                   eval2(Ar_0, Ar_1, Ar_2) -> Com_1(eval1(Ar_0, Ar_1 + 1, Ar_2)) [ Ar_0 - Ar_1 - 1 >= 0 /\ Ar_0 >= Ar_2 + 1 ]
		(Comp: 3*Ar_0 + 2*Ar_1 + Ar_2 + 1, Cost: 1)    eval1(Ar_0, Ar_1, Ar_2) -> Com_1(eval2(Ar_0, Ar_1, Ar_2)) [ Ar_0 >= Ar_1 + 1 ]
	start location:	koat_start
	leaf cost:	0

Complexity upper bound 6*Ar_0 + 4*Ar_1 + 2*Ar_2 + 2

Time: 0.072 sec (SMT: 0.063 sec)
