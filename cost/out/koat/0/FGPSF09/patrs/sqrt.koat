WORST_CASE(?, O(n^1))

Initial complexity problem:
1:	T:
		(Comp: ?, Cost: 1)    sqrt(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(f(0, 1, 1, Ar_3))
		(Comp: ?, Cost: 1)    f(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(f(Ar_0 + 1, Ar_1 + 2, Ar_2 + Ar_1 + 2, Ar_3)) [ Ar_3 >= Ar_2 /\ Ar_1 >= 0 ]
		(Comp: ?, Cost: 1)    f(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(end(Ar_0, Ar_1, Ar_2, Ar_3)) [ Ar_2 >= Ar_3 + 1 ]
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(sqrt(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(Comp: 1, Cost: 1)    sqrt(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(f(0, 1, 1, Ar_3))
		(Comp: ?, Cost: 1)    f(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(f(Ar_0 + 1, Ar_1 + 2, Ar_2 + Ar_1 + 2, Ar_3)) [ Ar_3 >= Ar_2 /\ Ar_1 >= 0 ]
		(Comp: ?, Cost: 1)    f(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(end(Ar_0, Ar_1, Ar_2, Ar_3)) [ Ar_2 >= Ar_3 + 1 ]
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(sqrt(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(sqrt) = 1
	Pol(f) = 1
	Pol(end) = 0
	Pol(koat_start) = 1
orients all transitions weakly and the transition
	f(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(end(Ar_0, Ar_1, Ar_2, Ar_3)) [ Ar_2 >= Ar_3 + 1 ]
strictly and produces the following problem:
3:	T:
		(Comp: 1, Cost: 1)    sqrt(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(f(0, 1, 1, Ar_3))
		(Comp: ?, Cost: 1)    f(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(f(Ar_0 + 1, Ar_1 + 2, Ar_2 + Ar_1 + 2, Ar_3)) [ Ar_3 >= Ar_2 /\ Ar_1 >= 0 ]
		(Comp: 1, Cost: 1)    f(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(end(Ar_0, Ar_1, Ar_2, Ar_3)) [ Ar_2 >= Ar_3 + 1 ]
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(sqrt(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(sqrt) = V_4
	Pol(f) = -V_3 + V_4 + 1
	Pol(end) = -V_3 + V_4
	Pol(koat_start) = V_4
orients all transitions weakly and the transition
	f(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(f(Ar_0 + 1, Ar_1 + 2, Ar_2 + Ar_1 + 2, Ar_3)) [ Ar_3 >= Ar_2 /\ Ar_1 >= 0 ]
strictly and produces the following problem:
4:	T:
		(Comp: 1, Cost: 1)       sqrt(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(f(0, 1, 1, Ar_3))
		(Comp: Ar_3, Cost: 1)    f(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(f(Ar_0 + 1, Ar_1 + 2, Ar_2 + Ar_1 + 2, Ar_3)) [ Ar_3 >= Ar_2 /\ Ar_1 >= 0 ]
		(Comp: 1, Cost: 1)       f(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(end(Ar_0, Ar_1, Ar_2, Ar_3)) [ Ar_2 >= Ar_3 + 1 ]
		(Comp: 1, Cost: 0)       koat_start(Ar_0, Ar_1, Ar_2, Ar_3) -> Com_1(sqrt(Ar_0, Ar_1, Ar_2, Ar_3)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Complexity upper bound Ar_3 + 2

Time: 0.041 sec (SMT: 0.035 sec)
