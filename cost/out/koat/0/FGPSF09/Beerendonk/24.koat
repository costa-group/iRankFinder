WORST_CASE(?, O(n^1))

Initial complexity problem:
1:	T:
		(Comp: ?, Cost: 1)    eval1(Ar_0, Ar_1) -> Com_1(eval2(Ar_0, Ar_1)) [ Ar_0 >= 1 /\ Ar_1 >= 1 /\ Ar_0 >= Ar_1 + 1 ]
		(Comp: ?, Cost: 1)    eval1(Ar_0, Ar_1) -> Com_1(eval3(Ar_0, Ar_1)) [ Ar_0 >= 1 /\ Ar_1 >= 1 /\ Ar_1 >= Ar_0 ]
		(Comp: ?, Cost: 1)    eval2(Ar_0, Ar_1) -> Com_1(eval2(Ar_0 - 1, Ar_1)) [ Ar_0 >= 1 ]
		(Comp: ?, Cost: 1)    eval2(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_0 ]
		(Comp: ?, Cost: 1)    eval3(Ar_0, Ar_1) -> Com_1(eval3(Ar_0, Ar_1 - 1)) [ Ar_1 >= 1 ]
		(Comp: ?, Cost: 1)    eval3(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_1 ]
		(Comp: ?, Cost: 1)    start(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(Comp: 1, Cost: 1)    eval1(Ar_0, Ar_1) -> Com_1(eval2(Ar_0, Ar_1)) [ Ar_0 >= 1 /\ Ar_1 >= 1 /\ Ar_0 >= Ar_1 + 1 ]
		(Comp: 1, Cost: 1)    eval1(Ar_0, Ar_1) -> Com_1(eval3(Ar_0, Ar_1)) [ Ar_0 >= 1 /\ Ar_1 >= 1 /\ Ar_1 >= Ar_0 ]
		(Comp: ?, Cost: 1)    eval2(Ar_0, Ar_1) -> Com_1(eval2(Ar_0 - 1, Ar_1)) [ Ar_0 >= 1 ]
		(Comp: ?, Cost: 1)    eval2(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_0 ]
		(Comp: ?, Cost: 1)    eval3(Ar_0, Ar_1) -> Com_1(eval3(Ar_0, Ar_1 - 1)) [ Ar_1 >= 1 ]
		(Comp: ?, Cost: 1)    eval3(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_1 ]
		(Comp: 1, Cost: 1)    start(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval3) = 1
	Pol(eval1) = 0
	Pol(eval2) = 1
and size complexities
	S("koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]", 0-0) = Ar_0
	S("koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]", 0-1) = Ar_1
	S("start(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1))", 0-0) = Ar_0
	S("start(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1))", 0-1) = Ar_1
	S("eval3(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_1 ]", 0-0) = Ar_0
	S("eval3(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_1 ]", 0-1) = Ar_1
	S("eval3(Ar_0, Ar_1) -> Com_1(eval3(Ar_0, Ar_1 - 1)) [ Ar_1 >= 1 ]", 0-0) = Ar_0
	S("eval3(Ar_0, Ar_1) -> Com_1(eval3(Ar_0, Ar_1 - 1)) [ Ar_1 >= 1 ]", 0-1) = Ar_1
	S("eval2(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_0 ]", 0-0) = Ar_0
	S("eval2(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_0 ]", 0-1) = Ar_1
	S("eval2(Ar_0, Ar_1) -> Com_1(eval2(Ar_0 - 1, Ar_1)) [ Ar_0 >= 1 ]", 0-0) = Ar_0
	S("eval2(Ar_0, Ar_1) -> Com_1(eval2(Ar_0 - 1, Ar_1)) [ Ar_0 >= 1 ]", 0-1) = Ar_1
	S("eval1(Ar_0, Ar_1) -> Com_1(eval3(Ar_0, Ar_1)) [ Ar_0 >= 1 /\\ Ar_1 >= 1 /\\ Ar_1 >= Ar_0 ]", 0-0) = Ar_0
	S("eval1(Ar_0, Ar_1) -> Com_1(eval3(Ar_0, Ar_1)) [ Ar_0 >= 1 /\\ Ar_1 >= 1 /\\ Ar_1 >= Ar_0 ]", 0-1) = Ar_1
	S("eval1(Ar_0, Ar_1) -> Com_1(eval2(Ar_0, Ar_1)) [ Ar_0 >= 1 /\\ Ar_1 >= 1 /\\ Ar_0 >= Ar_1 + 1 ]", 0-0) = Ar_0
	S("eval1(Ar_0, Ar_1) -> Com_1(eval2(Ar_0, Ar_1)) [ Ar_0 >= 1 /\\ Ar_1 >= 1 /\\ Ar_0 >= Ar_1 + 1 ]", 0-1) = Ar_1
orients the transitions
	eval3(Ar_0, Ar_1) -> Com_1(eval3(Ar_0, Ar_1 - 1)) [ Ar_1 >= 1 ]
	eval3(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_1 ]
	eval2(Ar_0, Ar_1) -> Com_1(eval2(Ar_0 - 1, Ar_1)) [ Ar_0 >= 1 ]
	eval2(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_0 ]
weakly and the transitions
	eval3(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_1 ]
	eval2(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_0 ]
strictly and produces the following problem:
3:	T:
		(Comp: 1, Cost: 1)    eval1(Ar_0, Ar_1) -> Com_1(eval2(Ar_0, Ar_1)) [ Ar_0 >= 1 /\ Ar_1 >= 1 /\ Ar_0 >= Ar_1 + 1 ]
		(Comp: 1, Cost: 1)    eval1(Ar_0, Ar_1) -> Com_1(eval3(Ar_0, Ar_1)) [ Ar_0 >= 1 /\ Ar_1 >= 1 /\ Ar_1 >= Ar_0 ]
		(Comp: ?, Cost: 1)    eval2(Ar_0, Ar_1) -> Com_1(eval2(Ar_0 - 1, Ar_1)) [ Ar_0 >= 1 ]
		(Comp: 2, Cost: 1)    eval2(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_0 ]
		(Comp: ?, Cost: 1)    eval3(Ar_0, Ar_1) -> Com_1(eval3(Ar_0, Ar_1 - 1)) [ Ar_1 >= 1 ]
		(Comp: 2, Cost: 1)    eval3(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_1 ]
		(Comp: 1, Cost: 1)    start(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval1) = V_1
	Pol(eval2) = V_1
	Pol(eval3) = V_1
	Pol(start) = V_1
	Pol(koat_start) = V_1
orients all transitions weakly and the transition
	eval2(Ar_0, Ar_1) -> Com_1(eval2(Ar_0 - 1, Ar_1)) [ Ar_0 >= 1 ]
strictly and produces the following problem:
4:	T:
		(Comp: 1, Cost: 1)       eval1(Ar_0, Ar_1) -> Com_1(eval2(Ar_0, Ar_1)) [ Ar_0 >= 1 /\ Ar_1 >= 1 /\ Ar_0 >= Ar_1 + 1 ]
		(Comp: 1, Cost: 1)       eval1(Ar_0, Ar_1) -> Com_1(eval3(Ar_0, Ar_1)) [ Ar_0 >= 1 /\ Ar_1 >= 1 /\ Ar_1 >= Ar_0 ]
		(Comp: Ar_0, Cost: 1)    eval2(Ar_0, Ar_1) -> Com_1(eval2(Ar_0 - 1, Ar_1)) [ Ar_0 >= 1 ]
		(Comp: 2, Cost: 1)       eval2(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_0 ]
		(Comp: ?, Cost: 1)       eval3(Ar_0, Ar_1) -> Com_1(eval3(Ar_0, Ar_1 - 1)) [ Ar_1 >= 1 ]
		(Comp: 2, Cost: 1)       eval3(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_1 ]
		(Comp: 1, Cost: 1)       start(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1))
		(Comp: 1, Cost: 0)       koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(eval1) = V_2
	Pol(eval2) = V_2
	Pol(eval3) = V_2
	Pol(start) = V_2
	Pol(koat_start) = V_2
orients all transitions weakly and the transition
	eval3(Ar_0, Ar_1) -> Com_1(eval3(Ar_0, Ar_1 - 1)) [ Ar_1 >= 1 ]
strictly and produces the following problem:
5:	T:
		(Comp: 1, Cost: 1)       eval1(Ar_0, Ar_1) -> Com_1(eval2(Ar_0, Ar_1)) [ Ar_0 >= 1 /\ Ar_1 >= 1 /\ Ar_0 >= Ar_1 + 1 ]
		(Comp: 1, Cost: 1)       eval1(Ar_0, Ar_1) -> Com_1(eval3(Ar_0, Ar_1)) [ Ar_0 >= 1 /\ Ar_1 >= 1 /\ Ar_1 >= Ar_0 ]
		(Comp: Ar_0, Cost: 1)    eval2(Ar_0, Ar_1) -> Com_1(eval2(Ar_0 - 1, Ar_1)) [ Ar_0 >= 1 ]
		(Comp: 2, Cost: 1)       eval2(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_0 ]
		(Comp: Ar_1, Cost: 1)    eval3(Ar_0, Ar_1) -> Com_1(eval3(Ar_0, Ar_1 - 1)) [ Ar_1 >= 1 ]
		(Comp: 2, Cost: 1)       eval3(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1)) [ 0 >= Ar_1 ]
		(Comp: 1, Cost: 1)       start(Ar_0, Ar_1) -> Com_1(eval1(Ar_0, Ar_1))
		(Comp: 1, Cost: 0)       koat_start(Ar_0, Ar_1) -> Com_1(start(Ar_0, Ar_1)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Complexity upper bound Ar_0 + Ar_1 + 7

Time: 0.044 sec (SMT: 0.036 sec)
