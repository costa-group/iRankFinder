WORST_CASE(?, O(n^1))

Initial complexity problem:
1:	T:
		(Comp: ?, Cost: 1)    evalfstart(Ar_0, Ar_1, Ar_2) -> Com_1(evalfentryin(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    evalfentryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb5in(0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    evalfbb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfreturnin(Ar_0, Ar_1, Ar_2)) [ Ar_0 >= Ar_1 ]
		(Comp: ?, Cost: 1)    evalfbb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb6in(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= Ar_0 + 1 ]
		(Comp: ?, Cost: 1)    evalfbb6in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb2in(Ar_0, Ar_1, Ar_0)) [ 0 >= D + 1 ]
		(Comp: ?, Cost: 1)    evalfbb6in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb2in(Ar_0, Ar_1, Ar_0)) [ D >= 1 ]
		(Comp: ?, Cost: 1)    evalfbb6in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfreturnin(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    evalfbb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb4in(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= Ar_1 ]
		(Comp: ?, Cost: 1)    evalfbb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb3in(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= Ar_2 + 1 ]
		(Comp: ?, Cost: 1)    evalfbb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb1in(Ar_0, Ar_1, Ar_2)) [ 0 >= D + 1 ]
		(Comp: ?, Cost: 1)    evalfbb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb1in(Ar_0, Ar_1, Ar_2)) [ D >= 1 ]
		(Comp: ?, Cost: 1)    evalfbb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb4in(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    evalfbb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb2in(Ar_0, Ar_1, Ar_2 + 1))
		(Comp: ?, Cost: 1)    evalfbb4in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb5in(Ar_2 + 1, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    evalfreturnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalfstop(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalfstart(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(Comp: 1, Cost: 1)    evalfstart(Ar_0, Ar_1, Ar_2) -> Com_1(evalfentryin(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 1)    evalfentryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb5in(0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    evalfbb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfreturnin(Ar_0, Ar_1, Ar_2)) [ Ar_0 >= Ar_1 ]
		(Comp: ?, Cost: 1)    evalfbb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb6in(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= Ar_0 + 1 ]
		(Comp: ?, Cost: 1)    evalfbb6in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb2in(Ar_0, Ar_1, Ar_0)) [ 0 >= D + 1 ]
		(Comp: ?, Cost: 1)    evalfbb6in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb2in(Ar_0, Ar_1, Ar_0)) [ D >= 1 ]
		(Comp: ?, Cost: 1)    evalfbb6in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfreturnin(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    evalfbb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb4in(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= Ar_1 ]
		(Comp: ?, Cost: 1)    evalfbb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb3in(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= Ar_2 + 1 ]
		(Comp: ?, Cost: 1)    evalfbb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb1in(Ar_0, Ar_1, Ar_2)) [ 0 >= D + 1 ]
		(Comp: ?, Cost: 1)    evalfbb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb1in(Ar_0, Ar_1, Ar_2)) [ D >= 1 ]
		(Comp: ?, Cost: 1)    evalfbb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb4in(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    evalfbb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb2in(Ar_0, Ar_1, Ar_2 + 1))
		(Comp: ?, Cost: 1)    evalfbb4in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb5in(Ar_2 + 1, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    evalfreturnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalfstop(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalfstart(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(evalfstart) = 2
	Pol(evalfentryin) = 2
	Pol(evalfbb5in) = 2
	Pol(evalfreturnin) = 1
	Pol(evalfbb6in) = 2
	Pol(evalfbb2in) = 2
	Pol(evalfbb4in) = 2
	Pol(evalfbb3in) = 2
	Pol(evalfbb1in) = 2
	Pol(evalfstop) = 0
	Pol(koat_start) = 2
orients all transitions weakly and the transitions
	evalfreturnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalfstop(Ar_0, Ar_1, Ar_2))
	evalfbb6in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfreturnin(Ar_0, Ar_1, Ar_2))
	evalfbb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfreturnin(Ar_0, Ar_1, Ar_2)) [ Ar_0 >= Ar_1 ]
strictly and produces the following problem:
3:	T:
		(Comp: 1, Cost: 1)    evalfstart(Ar_0, Ar_1, Ar_2) -> Com_1(evalfentryin(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 1)    evalfentryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb5in(0, Ar_1, Ar_2))
		(Comp: 2, Cost: 1)    evalfbb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfreturnin(Ar_0, Ar_1, Ar_2)) [ Ar_0 >= Ar_1 ]
		(Comp: ?, Cost: 1)    evalfbb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb6in(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= Ar_0 + 1 ]
		(Comp: ?, Cost: 1)    evalfbb6in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb2in(Ar_0, Ar_1, Ar_0)) [ 0 >= D + 1 ]
		(Comp: ?, Cost: 1)    evalfbb6in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb2in(Ar_0, Ar_1, Ar_0)) [ D >= 1 ]
		(Comp: 2, Cost: 1)    evalfbb6in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfreturnin(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    evalfbb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb4in(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= Ar_1 ]
		(Comp: ?, Cost: 1)    evalfbb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb3in(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= Ar_2 + 1 ]
		(Comp: ?, Cost: 1)    evalfbb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb1in(Ar_0, Ar_1, Ar_2)) [ 0 >= D + 1 ]
		(Comp: ?, Cost: 1)    evalfbb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb1in(Ar_0, Ar_1, Ar_2)) [ D >= 1 ]
		(Comp: ?, Cost: 1)    evalfbb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb4in(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    evalfbb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb2in(Ar_0, Ar_1, Ar_2 + 1))
		(Comp: ?, Cost: 1)    evalfbb4in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb5in(Ar_2 + 1, Ar_1, Ar_2))
		(Comp: 2, Cost: 1)    evalfreturnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalfstop(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalfstart(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(evalfstart) = 2*V_2 + 2
	Pol(evalfentryin) = 2*V_2 + 2
	Pol(evalfbb5in) = -2*V_1 + 2*V_2 + 2
	Pol(evalfreturnin) = -2*V_1 + 2*V_2
	Pol(evalfbb6in) = -2*V_1 + 2*V_2 + 1
	Pol(evalfbb2in) = 2*V_2 - 2*V_3 + 1
	Pol(evalfbb4in) = 2*V_2 - 2*V_3
	Pol(evalfbb3in) = 2*V_2 - 2*V_3
	Pol(evalfbb1in) = 2*V_2 - 2*V_3 - 1
	Pol(evalfstop) = -2*V_1 + 2*V_2
	Pol(koat_start) = 2*V_2 + 2
orients all transitions weakly and the transitions
	evalfbb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb6in(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= Ar_0 + 1 ]
	evalfbb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb3in(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= Ar_2 + 1 ]
strictly and produces the following problem:
4:	T:
		(Comp: 1, Cost: 1)             evalfstart(Ar_0, Ar_1, Ar_2) -> Com_1(evalfentryin(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 1)             evalfentryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb5in(0, Ar_1, Ar_2))
		(Comp: 2, Cost: 1)             evalfbb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfreturnin(Ar_0, Ar_1, Ar_2)) [ Ar_0 >= Ar_1 ]
		(Comp: 2*Ar_1 + 2, Cost: 1)    evalfbb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb6in(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= Ar_0 + 1 ]
		(Comp: ?, Cost: 1)             evalfbb6in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb2in(Ar_0, Ar_1, Ar_0)) [ 0 >= D + 1 ]
		(Comp: ?, Cost: 1)             evalfbb6in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb2in(Ar_0, Ar_1, Ar_0)) [ D >= 1 ]
		(Comp: 2, Cost: 1)             evalfbb6in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfreturnin(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)             evalfbb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb4in(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= Ar_1 ]
		(Comp: 2*Ar_1 + 2, Cost: 1)    evalfbb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb3in(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= Ar_2 + 1 ]
		(Comp: ?, Cost: 1)             evalfbb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb1in(Ar_0, Ar_1, Ar_2)) [ 0 >= D + 1 ]
		(Comp: ?, Cost: 1)             evalfbb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb1in(Ar_0, Ar_1, Ar_2)) [ D >= 1 ]
		(Comp: ?, Cost: 1)             evalfbb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb4in(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)             evalfbb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb2in(Ar_0, Ar_1, Ar_2 + 1))
		(Comp: ?, Cost: 1)             evalfbb4in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb5in(Ar_2 + 1, Ar_1, Ar_2))
		(Comp: 2, Cost: 1)             evalfreturnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalfstop(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)             koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalfstart(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 4 produces the following problem:
5:	T:
		(Comp: 1, Cost: 1)               evalfstart(Ar_0, Ar_1, Ar_2) -> Com_1(evalfentryin(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 1)               evalfentryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb5in(0, Ar_1, Ar_2))
		(Comp: 2, Cost: 1)               evalfbb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfreturnin(Ar_0, Ar_1, Ar_2)) [ Ar_0 >= Ar_1 ]
		(Comp: 2*Ar_1 + 2, Cost: 1)      evalfbb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb6in(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= Ar_0 + 1 ]
		(Comp: 2*Ar_1 + 2, Cost: 1)      evalfbb6in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb2in(Ar_0, Ar_1, Ar_0)) [ 0 >= D + 1 ]
		(Comp: 2*Ar_1 + 2, Cost: 1)      evalfbb6in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb2in(Ar_0, Ar_1, Ar_0)) [ D >= 1 ]
		(Comp: 2, Cost: 1)               evalfbb6in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfreturnin(Ar_0, Ar_1, Ar_2))
		(Comp: 8*Ar_1 + 8, Cost: 1)      evalfbb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb4in(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= Ar_1 ]
		(Comp: 2*Ar_1 + 2, Cost: 1)      evalfbb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb3in(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= Ar_2 + 1 ]
		(Comp: 2*Ar_1 + 2, Cost: 1)      evalfbb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb1in(Ar_0, Ar_1, Ar_2)) [ 0 >= D + 1 ]
		(Comp: 2*Ar_1 + 2, Cost: 1)      evalfbb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb1in(Ar_0, Ar_1, Ar_2)) [ D >= 1 ]
		(Comp: 2*Ar_1 + 2, Cost: 1)      evalfbb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb4in(Ar_0, Ar_1, Ar_2))
		(Comp: 4*Ar_1 + 4, Cost: 1)      evalfbb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb2in(Ar_0, Ar_1, Ar_2 + 1))
		(Comp: 10*Ar_1 + 10, Cost: 1)    evalfbb4in(Ar_0, Ar_1, Ar_2) -> Com_1(evalfbb5in(Ar_2 + 1, Ar_1, Ar_2))
		(Comp: 2, Cost: 1)               evalfreturnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalfstop(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)               koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalfstart(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Complexity upper bound 36*Ar_1 + 44

Time: 0.058 sec (SMT: 0.046 sec)
