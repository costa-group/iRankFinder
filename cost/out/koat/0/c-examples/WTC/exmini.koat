WORST_CASE(?, O(n^1))

Initial complexity problem:
1:	T:
		(Comp: ?, Cost: 1)    evalexministart(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminientryin(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    evalexminientryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminibb1in(Ar_1, Ar_0, Ar_2))
		(Comp: ?, Cost: 1)    evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminibbin(Ar_0, Ar_1, Ar_2)) [ 100 >= Ar_1 /\ Ar_0 >= Ar_2 ]
		(Comp: ?, Cost: 1)    evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminireturnin(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= 101 ]
		(Comp: ?, Cost: 1)    evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminireturnin(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= Ar_0 + 1 ]
		(Comp: ?, Cost: 1)    evalexminibbin(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminibb1in(Ar_0 - 1, Ar_2, Ar_1 + 1))
		(Comp: ?, Cost: 1)    evalexminireturnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalexministop(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalexministart(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(Comp: 1, Cost: 1)    evalexministart(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminientryin(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 1)    evalexminientryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminibb1in(Ar_1, Ar_0, Ar_2))
		(Comp: ?, Cost: 1)    evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminibbin(Ar_0, Ar_1, Ar_2)) [ 100 >= Ar_1 /\ Ar_0 >= Ar_2 ]
		(Comp: ?, Cost: 1)    evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminireturnin(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= 101 ]
		(Comp: ?, Cost: 1)    evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminireturnin(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= Ar_0 + 1 ]
		(Comp: ?, Cost: 1)    evalexminibbin(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminibb1in(Ar_0 - 1, Ar_2, Ar_1 + 1))
		(Comp: ?, Cost: 1)    evalexminireturnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalexministop(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalexministart(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(evalexministart) = 2
	Pol(evalexminientryin) = 2
	Pol(evalexminibb1in) = 2
	Pol(evalexminibbin) = 2
	Pol(evalexminireturnin) = 1
	Pol(evalexministop) = 0
	Pol(koat_start) = 2
orients all transitions weakly and the transitions
	evalexminireturnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalexministop(Ar_0, Ar_1, Ar_2))
	evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminireturnin(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= Ar_0 + 1 ]
	evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminireturnin(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= 101 ]
strictly and produces the following problem:
3:	T:
		(Comp: 1, Cost: 1)    evalexministart(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminientryin(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 1)    evalexminientryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminibb1in(Ar_1, Ar_0, Ar_2))
		(Comp: ?, Cost: 1)    evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminibbin(Ar_0, Ar_1, Ar_2)) [ 100 >= Ar_1 /\ Ar_0 >= Ar_2 ]
		(Comp: 2, Cost: 1)    evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminireturnin(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= 101 ]
		(Comp: 2, Cost: 1)    evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminireturnin(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= Ar_0 + 1 ]
		(Comp: ?, Cost: 1)    evalexminibbin(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminibb1in(Ar_0 - 1, Ar_2, Ar_1 + 1))
		(Comp: 2, Cost: 1)    evalexminireturnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalexministop(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalexministart(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(evalexministart) = -V_1 + V_2 - V_3 + 101
	Pol(evalexminientryin) = -V_1 + V_2 - V_3 + 101
	Pol(evalexminibb1in) = V_1 - V_2 - V_3 + 101
	Pol(evalexminibbin) = V_1 - V_2 - V_3 + 100
	Pol(evalexminireturnin) = V_1 - V_2 - V_3
	Pol(evalexministop) = V_1 - V_2 - V_3
	Pol(koat_start) = -V_1 + V_2 - V_3 + 101
orients all transitions weakly and the transition
	evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminibbin(Ar_0, Ar_1, Ar_2)) [ 100 >= Ar_1 /\ Ar_0 >= Ar_2 ]
strictly and produces the following problem:
4:	T:
		(Comp: 1, Cost: 1)                           evalexministart(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminientryin(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 1)                           evalexminientryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminibb1in(Ar_1, Ar_0, Ar_2))
		(Comp: Ar_0 + Ar_1 + Ar_2 + 101, Cost: 1)    evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminibbin(Ar_0, Ar_1, Ar_2)) [ 100 >= Ar_1 /\ Ar_0 >= Ar_2 ]
		(Comp: 2, Cost: 1)                           evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminireturnin(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= 101 ]
		(Comp: 2, Cost: 1)                           evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminireturnin(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= Ar_0 + 1 ]
		(Comp: ?, Cost: 1)                           evalexminibbin(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminibb1in(Ar_0 - 1, Ar_2, Ar_1 + 1))
		(Comp: 2, Cost: 1)                           evalexminireturnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalexministop(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)                           koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalexministart(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 4 produces the following problem:
5:	T:
		(Comp: 1, Cost: 1)                           evalexministart(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminientryin(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 1)                           evalexminientryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminibb1in(Ar_1, Ar_0, Ar_2))
		(Comp: Ar_0 + Ar_1 + Ar_2 + 101, Cost: 1)    evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminibbin(Ar_0, Ar_1, Ar_2)) [ 100 >= Ar_1 /\ Ar_0 >= Ar_2 ]
		(Comp: 2, Cost: 1)                           evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminireturnin(Ar_0, Ar_1, Ar_2)) [ Ar_1 >= 101 ]
		(Comp: 2, Cost: 1)                           evalexminibb1in(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminireturnin(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= Ar_0 + 1 ]
		(Comp: Ar_0 + Ar_1 + Ar_2 + 101, Cost: 1)    evalexminibbin(Ar_0, Ar_1, Ar_2) -> Com_1(evalexminibb1in(Ar_0 - 1, Ar_2, Ar_1 + 1))
		(Comp: 2, Cost: 1)                           evalexminireturnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalexministop(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)                           koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalexministart(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Complexity upper bound 2*Ar_0 + 2*Ar_1 + 2*Ar_2 + 210

Time: 0.034 sec (SMT: 0.028 sec)
