WORST_CASE(?, O(n^2))

Initial complexity problem:
1:	T:
		(Comp: ?, Cost: 1)    evalspeedpldi2start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_1, 0, Ar_0)) [ Ar_0 >= 0 /\ Ar_1 >= 1 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_0 + 1 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_1 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 1 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_2 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2)) [ Ar_0 >= Ar_1 + 1 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, 0, Ar_2)) [ Ar_1 >= Ar_0 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, Ar_1 + 1, Ar_2 - 1))
		(Comp: ?, Cost: 1)    evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2stop(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2start(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(Comp: 1, Cost: 1)    evalspeedpldi2start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 1)    evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_1, 0, Ar_0)) [ Ar_0 >= 0 /\ Ar_1 >= 1 ]
		(Comp: 1, Cost: 1)    evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_0 + 1 ]
		(Comp: 1, Cost: 1)    evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_1 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 1 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_2 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2)) [ Ar_0 >= Ar_1 + 1 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, 0, Ar_2)) [ Ar_1 >= Ar_0 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, Ar_1 + 1, Ar_2 - 1))
		(Comp: ?, Cost: 1)    evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2stop(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2start(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(evalspeedpldi2start) = 2
	Pol(evalspeedpldi2entryin) = 2
	Pol(evalspeedpldi2bb5in) = 2
	Pol(evalspeedpldi2returnin) = 1
	Pol(evalspeedpldi2bb2in) = 2
	Pol(evalspeedpldi2bb3in) = 2
	Pol(evalspeedpldi2stop) = 0
	Pol(koat_start) = 2
orients all transitions weakly and the transitions
	evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2stop(Ar_0, Ar_1, Ar_2))
	evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_2 ]
strictly and produces the following problem:
3:	T:
		(Comp: 1, Cost: 1)    evalspeedpldi2start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 1)    evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_1, 0, Ar_0)) [ Ar_0 >= 0 /\ Ar_1 >= 1 ]
		(Comp: 1, Cost: 1)    evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_0 + 1 ]
		(Comp: 1, Cost: 1)    evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_1 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 1 ]
		(Comp: 2, Cost: 1)    evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_2 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2)) [ Ar_0 >= Ar_1 + 1 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, 0, Ar_2)) [ Ar_1 >= Ar_0 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, Ar_1 + 1, Ar_2 - 1))
		(Comp: 2, Cost: 1)    evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2stop(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2start(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Applied AI with 'oct' on problem 3 to obtain the following invariants:
  For symbol evalspeedpldi2bb2in: X_3 - 1 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol evalspeedpldi2bb3in: X_3 - 1 >= 0 /\ X_2 + X_3 - 1 >= 0 /\ X_1 + X_3 - 2 >= 0 /\ X_1 - X_2 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ X_1 - 1 >= 0
  For symbol evalspeedpldi2bb5in: X_3 >= 0 /\ X_2 + X_3 >= 0 /\ X_1 + X_3 - 1 >= 0 /\ X_2 >= 0 /\ X_1 + X_2 - 1 >= 0 /\ X_1 - 1 >= 0


This yielded the following problem:
4:	T:
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2start(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
		(Comp: 2, Cost: 1)    evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2stop(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, Ar_1 + 1, Ar_2 - 1)) [ Ar_2 - 1 >= 0 /\ Ar_1 + Ar_2 - 1 >= 0 /\ Ar_0 + Ar_2 - 2 >= 0 /\ Ar_0 - Ar_1 - 1 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, 0, Ar_2)) [ Ar_2 - 1 >= 0 /\ Ar_1 + Ar_2 - 1 >= 0 /\ Ar_0 + Ar_2 - 2 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_1 >= Ar_0 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2)) [ Ar_2 - 1 >= 0 /\ Ar_1 + Ar_2 - 1 >= 0 /\ Ar_0 + Ar_2 - 2 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_0 >= Ar_1 + 1 ]
		(Comp: 2, Cost: 1)    evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 0 /\ Ar_1 + Ar_2 >= 0 /\ Ar_0 + Ar_2 - 1 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ 0 >= Ar_2 ]
		(Comp: ?, Cost: 1)    evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 0 /\ Ar_1 + Ar_2 >= 0 /\ Ar_0 + Ar_2 - 1 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_2 >= 1 ]
		(Comp: 1, Cost: 1)    evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_1 ]
		(Comp: 1, Cost: 1)    evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_0 + 1 ]
		(Comp: 1, Cost: 1)    evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_1, 0, Ar_0)) [ Ar_0 >= 0 /\ Ar_1 >= 1 ]
		(Comp: 1, Cost: 1)    evalspeedpldi2start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2))
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(koat_start) = V_1 + V_2
	Pol(evalspeedpldi2start) = V_1 + V_2
	Pol(evalspeedpldi2returnin) = V_1 + V_2
	Pol(evalspeedpldi2stop) = V_1 + V_2
	Pol(evalspeedpldi2bb3in) = V_1 + V_2 + V_3
	Pol(evalspeedpldi2bb5in) = V_1 + V_2 + V_3
	Pol(evalspeedpldi2bb2in) = V_1 + V_2 + V_3
	Pol(evalspeedpldi2entryin) = V_1 + V_2
orients all transitions weakly and the transition
	evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, 0, Ar_2)) [ Ar_2 - 1 >= 0 /\ Ar_1 + Ar_2 - 1 >= 0 /\ Ar_0 + Ar_2 - 2 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_1 >= Ar_0 ]
strictly and produces the following problem:
5:	T:
		(Comp: 1, Cost: 0)              koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2start(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
		(Comp: 2, Cost: 1)              evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2stop(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)              evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, Ar_1 + 1, Ar_2 - 1)) [ Ar_2 - 1 >= 0 /\ Ar_1 + Ar_2 - 1 >= 0 /\ Ar_0 + Ar_2 - 2 >= 0 /\ Ar_0 - Ar_1 - 1 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 ]
		(Comp: Ar_0 + Ar_1, Cost: 1)    evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, 0, Ar_2)) [ Ar_2 - 1 >= 0 /\ Ar_1 + Ar_2 - 1 >= 0 /\ Ar_0 + Ar_2 - 2 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_1 >= Ar_0 ]
		(Comp: ?, Cost: 1)              evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2)) [ Ar_2 - 1 >= 0 /\ Ar_1 + Ar_2 - 1 >= 0 /\ Ar_0 + Ar_2 - 2 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_0 >= Ar_1 + 1 ]
		(Comp: 2, Cost: 1)              evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 0 /\ Ar_1 + Ar_2 >= 0 /\ Ar_0 + Ar_2 - 1 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ 0 >= Ar_2 ]
		(Comp: ?, Cost: 1)              evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 0 /\ Ar_1 + Ar_2 >= 0 /\ Ar_0 + Ar_2 - 1 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_2 >= 1 ]
		(Comp: 1, Cost: 1)              evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_1 ]
		(Comp: 1, Cost: 1)              evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_0 + 1 ]
		(Comp: 1, Cost: 1)              evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_1, 0, Ar_0)) [ Ar_0 >= 0 /\ Ar_1 >= 1 ]
		(Comp: 1, Cost: 1)              evalspeedpldi2start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2))
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(evalspeedpldi2bb5in) = 3*V_3 + 1
	Pol(evalspeedpldi2bb2in) = 3*V_3
	Pol(evalspeedpldi2bb3in) = 3*V_3 - 1
and size complexities
	S("evalspeedpldi2start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2))", 0-0) = Ar_0
	S("evalspeedpldi2start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2))", 0-1) = Ar_1
	S("evalspeedpldi2start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2))", 0-2) = Ar_2
	S("evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_1, 0, Ar_0)) [ Ar_0 >= 0 /\\ Ar_1 >= 1 ]", 0-0) = Ar_1
	S("evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_1, 0, Ar_0)) [ Ar_0 >= 0 /\\ Ar_1 >= 1 ]", 0-1) = 0
	S("evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_1, 0, Ar_0)) [ Ar_0 >= 0 /\\ Ar_1 >= 1 ]", 0-2) = Ar_0
	S("evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_0 + 1 ]", 0-0) = Ar_0
	S("evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_0 + 1 ]", 0-1) = Ar_1
	S("evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_0 + 1 ]", 0-2) = Ar_2
	S("evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_1 ]", 0-0) = Ar_0
	S("evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_1 ]", 0-1) = Ar_1
	S("evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_1 ]", 0-2) = Ar_2
	S("evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 0 /\\ Ar_1 + Ar_2 >= 0 /\\ Ar_0 + Ar_2 - 1 >= 0 /\\ Ar_1 >= 0 /\\ Ar_0 + Ar_1 - 1 >= 0 /\\ Ar_0 - 1 >= 0 /\\ Ar_2 >= 1 ]", 0-0) = Ar_1
	S("evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 0 /\\ Ar_1 + Ar_2 >= 0 /\\ Ar_0 + Ar_2 - 1 >= 0 /\\ Ar_1 >= 0 /\\ Ar_0 + Ar_1 - 1 >= 0 /\\ Ar_0 - 1 >= 0 /\\ Ar_2 >= 1 ]", 0-1) = Ar_1
	S("evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 0 /\\ Ar_1 + Ar_2 >= 0 /\\ Ar_0 + Ar_2 - 1 >= 0 /\\ Ar_1 >= 0 /\\ Ar_0 + Ar_1 - 1 >= 0 /\\ Ar_0 - 1 >= 0 /\\ Ar_2 >= 1 ]", 0-2) = Ar_0
	S("evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 0 /\\ Ar_1 + Ar_2 >= 0 /\\ Ar_0 + Ar_2 - 1 >= 0 /\\ Ar_1 >= 0 /\\ Ar_0 + Ar_1 - 1 >= 0 /\\ Ar_0 - 1 >= 0 /\\ 0 >= Ar_2 ]", 0-0) = Ar_1
	S("evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 0 /\\ Ar_1 + Ar_2 >= 0 /\\ Ar_0 + Ar_2 - 1 >= 0 /\\ Ar_1 >= 0 /\\ Ar_0 + Ar_1 - 1 >= 0 /\\ Ar_0 - 1 >= 0 /\\ 0 >= Ar_2 ]", 0-1) = Ar_1
	S("evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 0 /\\ Ar_1 + Ar_2 >= 0 /\\ Ar_0 + Ar_2 - 1 >= 0 /\\ Ar_1 >= 0 /\\ Ar_0 + Ar_1 - 1 >= 0 /\\ Ar_0 - 1 >= 0 /\\ 0 >= Ar_2 ]", 0-2) = 0
	S("evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2)) [ Ar_2 - 1 >= 0 /\\ Ar_1 + Ar_2 - 1 >= 0 /\\ Ar_0 + Ar_2 - 2 >= 0 /\\ Ar_1 >= 0 /\\ Ar_0 + Ar_1 - 1 >= 0 /\\ Ar_0 - 1 >= 0 /\\ Ar_0 >= Ar_1 + 1 ]", 0-0) = Ar_1
	S("evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2)) [ Ar_2 - 1 >= 0 /\\ Ar_1 + Ar_2 - 1 >= 0 /\\ Ar_0 + Ar_2 - 2 >= 0 /\\ Ar_1 >= 0 /\\ Ar_0 + Ar_1 - 1 >= 0 /\\ Ar_0 - 1 >= 0 /\\ Ar_0 >= Ar_1 + 1 ]", 0-1) = Ar_1
	S("evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2)) [ Ar_2 - 1 >= 0 /\\ Ar_1 + Ar_2 - 1 >= 0 /\\ Ar_0 + Ar_2 - 2 >= 0 /\\ Ar_1 >= 0 /\\ Ar_0 + Ar_1 - 1 >= 0 /\\ Ar_0 - 1 >= 0 /\\ Ar_0 >= Ar_1 + 1 ]", 0-2) = Ar_0
	S("evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, 0, Ar_2)) [ Ar_2 - 1 >= 0 /\\ Ar_1 + Ar_2 - 1 >= 0 /\\ Ar_0 + Ar_2 - 2 >= 0 /\\ Ar_1 >= 0 /\\ Ar_0 + Ar_1 - 1 >= 0 /\\ Ar_0 - 1 >= 0 /\\ Ar_1 >= Ar_0 ]", 0-0) = Ar_1
	S("evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, 0, Ar_2)) [ Ar_2 - 1 >= 0 /\\ Ar_1 + Ar_2 - 1 >= 0 /\\ Ar_0 + Ar_2 - 2 >= 0 /\\ Ar_1 >= 0 /\\ Ar_0 + Ar_1 - 1 >= 0 /\\ Ar_0 - 1 >= 0 /\\ Ar_1 >= Ar_0 ]", 0-1) = 0
	S("evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, 0, Ar_2)) [ Ar_2 - 1 >= 0 /\\ Ar_1 + Ar_2 - 1 >= 0 /\\ Ar_0 + Ar_2 - 2 >= 0 /\\ Ar_1 >= 0 /\\ Ar_0 + Ar_1 - 1 >= 0 /\\ Ar_0 - 1 >= 0 /\\ Ar_1 >= Ar_0 ]", 0-2) = Ar_0
	S("evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, Ar_1 + 1, Ar_2 - 1)) [ Ar_2 - 1 >= 0 /\\ Ar_1 + Ar_2 - 1 >= 0 /\\ Ar_0 + Ar_2 - 2 >= 0 /\\ Ar_0 - Ar_1 - 1 >= 0 /\\ Ar_1 >= 0 /\\ Ar_0 + Ar_1 - 1 >= 0 /\\ Ar_0 - 1 >= 0 ]", 0-0) = Ar_1
	S("evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, Ar_1 + 1, Ar_2 - 1)) [ Ar_2 - 1 >= 0 /\\ Ar_1 + Ar_2 - 1 >= 0 /\\ Ar_0 + Ar_2 - 2 >= 0 /\\ Ar_0 - Ar_1 - 1 >= 0 /\\ Ar_1 >= 0 /\\ Ar_0 + Ar_1 - 1 >= 0 /\\ Ar_0 - 1 >= 0 ]", 0-1) = Ar_1
	S("evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, Ar_1 + 1, Ar_2 - 1)) [ Ar_2 - 1 >= 0 /\\ Ar_1 + Ar_2 - 1 >= 0 /\\ Ar_0 + Ar_2 - 2 >= 0 /\\ Ar_0 - Ar_1 - 1 >= 0 /\\ Ar_1 >= 0 /\\ Ar_0 + Ar_1 - 1 >= 0 /\\ Ar_0 - 1 >= 0 ]", 0-2) = Ar_0
	S("evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2stop(Ar_0, Ar_1, Ar_2))", 0-0) = Ar_0 + Ar_1
	S("evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2stop(Ar_0, Ar_1, Ar_2))", 0-1) = Ar_1
	S("evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2stop(Ar_0, Ar_1, Ar_2))", 0-2) = Ar_2
	S("koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2start(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]", 0-0) = Ar_0
	S("koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2start(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]", 0-1) = Ar_1
	S("koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2start(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]", 0-2) = Ar_2
orients the transitions
	evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 0 /\ Ar_1 + Ar_2 >= 0 /\ Ar_0 + Ar_2 - 1 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_2 >= 1 ]
	evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, Ar_1 + 1, Ar_2 - 1)) [ Ar_2 - 1 >= 0 /\ Ar_1 + Ar_2 - 1 >= 0 /\ Ar_0 + Ar_2 - 2 >= 0 /\ Ar_0 - Ar_1 - 1 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 ]
	evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2)) [ Ar_2 - 1 >= 0 /\ Ar_1 + Ar_2 - 1 >= 0 /\ Ar_0 + Ar_2 - 2 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_0 >= Ar_1 + 1 ]
weakly and the transitions
	evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 0 /\ Ar_1 + Ar_2 >= 0 /\ Ar_0 + Ar_2 - 1 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_2 >= 1 ]
	evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, Ar_1 + 1, Ar_2 - 1)) [ Ar_2 - 1 >= 0 /\ Ar_1 + Ar_2 - 1 >= 0 /\ Ar_0 + Ar_2 - 2 >= 0 /\ Ar_0 - Ar_1 - 1 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 ]
	evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2)) [ Ar_2 - 1 >= 0 /\ Ar_1 + Ar_2 - 1 >= 0 /\ Ar_0 + Ar_2 - 2 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_0 >= Ar_1 + 1 ]
strictly and produces the following problem:
6:	T:
		(Comp: 1, Cost: 0)                                             koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2start(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
		(Comp: 2, Cost: 1)                                             evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2stop(Ar_0, Ar_1, Ar_2))
		(Comp: 4*Ar_0 + 3*Ar_0^2 + 3*Ar_0*Ar_1 + Ar_1 + 1, Cost: 1)    evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, Ar_1 + 1, Ar_2 - 1)) [ Ar_2 - 1 >= 0 /\ Ar_1 + Ar_2 - 1 >= 0 /\ Ar_0 + Ar_2 - 2 >= 0 /\ Ar_0 - Ar_1 - 1 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 ]
		(Comp: Ar_0 + Ar_1, Cost: 1)                                   evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_0, 0, Ar_2)) [ Ar_2 - 1 >= 0 /\ Ar_1 + Ar_2 - 1 >= 0 /\ Ar_0 + Ar_2 - 2 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_1 >= Ar_0 ]
		(Comp: 4*Ar_0 + 3*Ar_0^2 + 3*Ar_0*Ar_1 + Ar_1 + 1, Cost: 1)    evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb3in(Ar_0, Ar_1, Ar_2)) [ Ar_2 - 1 >= 0 /\ Ar_1 + Ar_2 - 1 >= 0 /\ Ar_0 + Ar_2 - 2 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_0 >= Ar_1 + 1 ]
		(Comp: 2, Cost: 1)                                             evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 0 /\ Ar_1 + Ar_2 >= 0 /\ Ar_0 + Ar_2 - 1 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ 0 >= Ar_2 ]
		(Comp: 4*Ar_0 + 3*Ar_0^2 + 3*Ar_0*Ar_1 + Ar_1 + 1, Cost: 1)    evalspeedpldi2bb5in(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb2in(Ar_0, Ar_1, Ar_2)) [ Ar_2 >= 0 /\ Ar_1 + Ar_2 >= 0 /\ Ar_0 + Ar_2 - 1 >= 0 /\ Ar_1 >= 0 /\ Ar_0 + Ar_1 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_2 >= 1 ]
		(Comp: 1, Cost: 1)                                             evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_1 ]
		(Comp: 1, Cost: 1)                                             evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2returnin(Ar_0, Ar_1, Ar_2)) [ 0 >= Ar_0 + 1 ]
		(Comp: 1, Cost: 1)                                             evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2bb5in(Ar_1, 0, Ar_0)) [ Ar_0 >= 0 /\ Ar_1 >= 1 ]
		(Comp: 1, Cost: 1)                                             evalspeedpldi2start(Ar_0, Ar_1, Ar_2) -> Com_1(evalspeedpldi2entryin(Ar_0, Ar_1, Ar_2))
	start location:	koat_start
	leaf cost:	0

Complexity upper bound 13*Ar_0 + 9*Ar_0^2 + 9*Ar_0*Ar_1 + 4*Ar_1 + 11

Time: 0.118 sec (SMT: 0.097 sec)
