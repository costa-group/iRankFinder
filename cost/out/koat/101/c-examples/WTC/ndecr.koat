WORST_CASE(?, O(n^1))

Initial complexity problem:
1:	T:
		(Comp: ?, Cost: 1)    pyRinit(Ar_0) -> Com_1(n_evalndecrstart(Ar_0))
		(Comp: ?, Cost: 1)    n_evalndecrbb1in___2(Ar_0) -> Com_1(n_evalndecrbb1in___2(Ar_0 - 1)) [ Ar_0 - 1 >= 0 /\ Ar_0 - 2 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalndecrbb1in___2(Ar_0) -> Com_1(n_evalndecrstop___1(Fresh_1)) [ Ar_0 - 1 >= 0 /\ -Ar_0 + 1 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalndecrbb1in___3(Ar_0) -> Com_1(n_evalndecrbb1in___2(Ar_0 - 1)) [ Ar_0 - 2 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalndecrbb1in___3(Ar_0) -> Com_1(n_evalndecrstop___1(Fresh_0)) [ -Ar_0 + 1 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalndecrstart(Ar_0) -> Com_1(n_evalndecrbb1in___3(Ar_0 - 1))
		(Comp: 1, Cost: 0)    koat_start(Ar_0) -> Com_1(pyRinit(Ar_0)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(Comp: 1, Cost: 1)    pyRinit(Ar_0) -> Com_1(n_evalndecrstart(Ar_0))
		(Comp: ?, Cost: 1)    n_evalndecrbb1in___2(Ar_0) -> Com_1(n_evalndecrbb1in___2(Ar_0 - 1)) [ Ar_0 - 1 >= 0 /\ Ar_0 - 2 >= 0 ]
		(Comp: ?, Cost: 1)    n_evalndecrbb1in___2(Ar_0) -> Com_1(n_evalndecrstop___1(Fresh_1)) [ Ar_0 - 1 >= 0 /\ -Ar_0 + 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalndecrbb1in___3(Ar_0) -> Com_1(n_evalndecrbb1in___2(Ar_0 - 1)) [ Ar_0 - 2 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalndecrbb1in___3(Ar_0) -> Com_1(n_evalndecrstop___1(Fresh_0)) [ -Ar_0 + 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalndecrstart(Ar_0) -> Com_1(n_evalndecrbb1in___3(Ar_0 - 1))
		(Comp: 1, Cost: 0)    koat_start(Ar_0) -> Com_1(pyRinit(Ar_0)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(pyRinit) = 1
	Pol(n_evalndecrstart) = 1
	Pol(n_evalndecrbb1in___2) = 1
	Pol(n_evalndecrstop___1) = 0
	Pol(n_evalndecrbb1in___3) = 1
	Pol(koat_start) = 1
orients all transitions weakly and the transition
	n_evalndecrbb1in___2(Ar_0) -> Com_1(n_evalndecrstop___1(Fresh_1)) [ Ar_0 - 1 >= 0 /\ -Ar_0 + 1 >= 0 ]
strictly and produces the following problem:
3:	T:
		(Comp: 1, Cost: 1)    pyRinit(Ar_0) -> Com_1(n_evalndecrstart(Ar_0))
		(Comp: ?, Cost: 1)    n_evalndecrbb1in___2(Ar_0) -> Com_1(n_evalndecrbb1in___2(Ar_0 - 1)) [ Ar_0 - 1 >= 0 /\ Ar_0 - 2 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalndecrbb1in___2(Ar_0) -> Com_1(n_evalndecrstop___1(Fresh_1)) [ Ar_0 - 1 >= 0 /\ -Ar_0 + 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalndecrbb1in___3(Ar_0) -> Com_1(n_evalndecrbb1in___2(Ar_0 - 1)) [ Ar_0 - 2 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalndecrbb1in___3(Ar_0) -> Com_1(n_evalndecrstop___1(Fresh_0)) [ -Ar_0 + 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_evalndecrstart(Ar_0) -> Com_1(n_evalndecrbb1in___3(Ar_0 - 1))
		(Comp: 1, Cost: 0)    koat_start(Ar_0) -> Com_1(pyRinit(Ar_0)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(n_evalndecrbb1in___2) = V_1
and size complexities
	S("koat_start(Ar_0) -> Com_1(pyRinit(Ar_0)) [ 0 <= 0 ]", 0-0) = Ar_0
	S("n_evalndecrstart(Ar_0) -> Com_1(n_evalndecrbb1in___3(Ar_0 - 1))", 0-0) = Ar_0 + 1
	S("n_evalndecrbb1in___3(Ar_0) -> Com_1(n_evalndecrstop___1(Fresh_0)) [ -Ar_0 + 1 >= 0 ]", 0-0) = ?
	S("n_evalndecrbb1in___3(Ar_0) -> Com_1(n_evalndecrbb1in___2(Ar_0 - 1)) [ Ar_0 - 2 >= 0 ]", 0-0) = Ar_0 + 1
	S("n_evalndecrbb1in___2(Ar_0) -> Com_1(n_evalndecrstop___1(Fresh_1)) [ Ar_0 - 1 >= 0 /\\ -Ar_0 + 1 >= 0 ]", 0-0) = ?
	S("n_evalndecrbb1in___2(Ar_0) -> Com_1(n_evalndecrbb1in___2(Ar_0 - 1)) [ Ar_0 - 1 >= 0 /\\ Ar_0 - 2 >= 0 ]", 0-0) = Ar_0 + 1
	S("pyRinit(Ar_0) -> Com_1(n_evalndecrstart(Ar_0))", 0-0) = Ar_0
orients the transitions
	n_evalndecrbb1in___2(Ar_0) -> Com_1(n_evalndecrbb1in___2(Ar_0 - 1)) [ Ar_0 - 1 >= 0 /\ Ar_0 - 2 >= 0 ]
weakly and the transition
	n_evalndecrbb1in___2(Ar_0) -> Com_1(n_evalndecrbb1in___2(Ar_0 - 1)) [ Ar_0 - 1 >= 0 /\ Ar_0 - 2 >= 0 ]
strictly and produces the following problem:
4:	T:
		(Comp: 1, Cost: 1)           pyRinit(Ar_0) -> Com_1(n_evalndecrstart(Ar_0))
		(Comp: Ar_0 + 1, Cost: 1)    n_evalndecrbb1in___2(Ar_0) -> Com_1(n_evalndecrbb1in___2(Ar_0 - 1)) [ Ar_0 - 1 >= 0 /\ Ar_0 - 2 >= 0 ]
		(Comp: 1, Cost: 1)           n_evalndecrbb1in___2(Ar_0) -> Com_1(n_evalndecrstop___1(Fresh_1)) [ Ar_0 - 1 >= 0 /\ -Ar_0 + 1 >= 0 ]
		(Comp: 1, Cost: 1)           n_evalndecrbb1in___3(Ar_0) -> Com_1(n_evalndecrbb1in___2(Ar_0 - 1)) [ Ar_0 - 2 >= 0 ]
		(Comp: 1, Cost: 1)           n_evalndecrbb1in___3(Ar_0) -> Com_1(n_evalndecrstop___1(Fresh_0)) [ -Ar_0 + 1 >= 0 ]
		(Comp: 1, Cost: 1)           n_evalndecrstart(Ar_0) -> Com_1(n_evalndecrbb1in___3(Ar_0 - 1))
		(Comp: 1, Cost: 0)           koat_start(Ar_0) -> Com_1(pyRinit(Ar_0)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Complexity upper bound Ar_0 + 6

Time: 0.047 sec (SMT: 0.045 sec)

-- stats
realtime 0:00.06
usertime 0.03
systime 0.01

