WORST_CASE(?, O(n^1))

Initial complexity problem:
1:	T:
		(Comp: ?, Cost: 1)    pyRinit(Ar_0, Ar_1, Ar_2) -> Com_1(n_start(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    n_eval___1(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___1(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_0 >= 0 /\ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ -Ar_0 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_0 = 0 /\ Ar_1 - Ar_2 >= 0 ]
		(Comp: ?, Cost: 1)    n_eval___2(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___2(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ -Ar_0 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 ]
		(Comp: ?, Cost: 1)    n_eval___3(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___1(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_0 >= 0 /\ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ -Ar_0 >= 0 ]
		(Comp: ?, Cost: 1)    n_eval___3(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___3(Ar_0 - 1, Ar_1, Ar_2)) [ Ar_0 >= 0 /\ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_0 - 1 >= 0 ]
		(Comp: ?, Cost: 1)    n_eval___4(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___2(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_2 >= 0 /\ -Ar_0 >= 0 ]
		(Comp: ?, Cost: 1)    n_eval___4(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___3(Ar_0 - 1, Ar_1, Ar_2)) [ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_2 >= 0 ]
		(Comp: ?, Cost: 1)    n_start(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___4(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(pyRinit(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Repeatedly propagating knowledge in problem 1 produces the following problem:
2:	T:
		(Comp: 1, Cost: 1)    pyRinit(Ar_0, Ar_1, Ar_2) -> Com_1(n_start(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    n_eval___1(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___1(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_0 >= 0 /\ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ -Ar_0 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_0 = 0 /\ Ar_1 - Ar_2 >= 0 ]
		(Comp: ?, Cost: 1)    n_eval___2(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___2(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ -Ar_0 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 ]
		(Comp: ?, Cost: 1)    n_eval___3(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___1(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_0 >= 0 /\ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ -Ar_0 >= 0 ]
		(Comp: ?, Cost: 1)    n_eval___3(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___3(Ar_0 - 1, Ar_1, Ar_2)) [ Ar_0 >= 0 /\ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_0 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_eval___4(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___2(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_2 >= 0 /\ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 1)    n_eval___4(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___3(Ar_0 - 1, Ar_1, Ar_2)) [ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_2 >= 0 ]
		(Comp: 1, Cost: 1)    n_start(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___4(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(pyRinit(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(pyRinit) = 1
	Pol(n_start) = 1
	Pol(n_eval___1) = 0
	Pol(n_eval___2) = 0
	Pol(n_eval___3) = 1
	Pol(n_eval___4) = 1
	Pol(koat_start) = 1
orients all transitions weakly and the transition
	n_eval___3(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___1(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_0 >= 0 /\ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ -Ar_0 >= 0 ]
strictly and produces the following problem:
3:	T:
		(Comp: 1, Cost: 1)    pyRinit(Ar_0, Ar_1, Ar_2) -> Com_1(n_start(Ar_0, Ar_1, Ar_2))
		(Comp: ?, Cost: 1)    n_eval___1(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___1(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_0 >= 0 /\ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ -Ar_0 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_0 = 0 /\ Ar_1 - Ar_2 >= 0 ]
		(Comp: ?, Cost: 1)    n_eval___2(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___2(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ -Ar_0 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_eval___3(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___1(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_0 >= 0 /\ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ -Ar_0 >= 0 ]
		(Comp: ?, Cost: 1)    n_eval___3(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___3(Ar_0 - 1, Ar_1, Ar_2)) [ Ar_0 >= 0 /\ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_0 - 1 >= 0 ]
		(Comp: 1, Cost: 1)    n_eval___4(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___2(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_2 >= 0 /\ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 1)    n_eval___4(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___3(Ar_0 - 1, Ar_1, Ar_2)) [ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_2 >= 0 ]
		(Comp: 1, Cost: 1)    n_start(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___4(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)    koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(pyRinit(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

A polynomial rank function with
	Pol(pyRinit) = V_1 + V_2
	Pol(n_start) = V_1 + V_2
	Pol(n_eval___1) = V_1 + V_2 + 1
	Pol(n_eval___2) = V_1 + V_2 + 1
	Pol(n_eval___3) = V_1 + V_2
	Pol(n_eval___4) = V_1 + V_2
	Pol(koat_start) = V_1 + V_2
orients all transitions weakly and the transitions
	n_eval___3(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___3(Ar_0 - 1, Ar_1, Ar_2)) [ Ar_0 >= 0 /\ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_0 - 1 >= 0 ]
	n_eval___2(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___2(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ -Ar_0 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 ]
	n_eval___1(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___1(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_0 >= 0 /\ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ -Ar_0 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_0 = 0 /\ Ar_1 - Ar_2 >= 0 ]
strictly and produces the following problem:
4:	T:
		(Comp: 1, Cost: 1)              pyRinit(Ar_0, Ar_1, Ar_2) -> Com_1(n_start(Ar_0, Ar_1, Ar_2))
		(Comp: Ar_0 + Ar_1, Cost: 1)    n_eval___1(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___1(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_0 >= 0 /\ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ -Ar_0 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_0 = 0 /\ Ar_1 - Ar_2 >= 0 ]
		(Comp: Ar_0 + Ar_1, Cost: 1)    n_eval___2(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___2(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ -Ar_0 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 ]
		(Comp: 1, Cost: 1)              n_eval___3(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___1(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_0 >= 0 /\ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ -Ar_0 >= 0 ]
		(Comp: Ar_0 + Ar_1, Cost: 1)    n_eval___3(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___3(Ar_0 - 1, Ar_1, Ar_2)) [ Ar_0 >= 0 /\ Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 >= 0 /\ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_0 - 1 >= 0 ]
		(Comp: 1, Cost: 1)              n_eval___4(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___2(Ar_0, Ar_1 - 1, Ar_2)) [ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_2 >= 0 /\ -Ar_0 >= 0 ]
		(Comp: 1, Cost: 1)              n_eval___4(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___3(Ar_0 - 1, Ar_1, Ar_2)) [ Ar_0 + Ar_1 - Ar_2 - 1 >= 0 /\ Ar_0 - 1 >= 0 /\ Ar_2 >= 0 ]
		(Comp: 1, Cost: 1)              n_start(Ar_0, Ar_1, Ar_2) -> Com_1(n_eval___4(Ar_0, Ar_1, Ar_2))
		(Comp: 1, Cost: 0)              koat_start(Ar_0, Ar_1, Ar_2) -> Com_1(pyRinit(Ar_0, Ar_1, Ar_2)) [ 0 <= 0 ]
	start location:	koat_start
	leaf cost:	0

Complexity upper bound 3*Ar_0 + 3*Ar_1 + 5

Time: 0.153 sec (SMT: 0.134 sec)

-- stats
realtime 0:00.16
usertime 0.12
systime 0.03

