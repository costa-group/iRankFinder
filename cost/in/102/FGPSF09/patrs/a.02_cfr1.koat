(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS pyRinit))
(VAR A B A_P B_P)
(RULES 
  pyRinit(A,B) -> Com_1(n_start(A,B))
  n_eval___1(A,B) -> Com_1(n_eval___1(A_P, B)) :|: -4 + 3 * A -B >= 0 && -2 + A >= 0 && 1 -2 * A + 2 * B >= 0 && A >= 0 && -1 + B >= 0 && -2 -2 * A + 3 * B >= 0 && -4 + 3 * A -B >= 0 && -2 + A >= 0 && 1 -2 * A + 2 * B >= 0 && A >= 0 && -1 + B >= 0 && -2 -2 * A + 3 * B >= 0 && -A + B -1 >= 0 && A >= 0 && A + B -2 * A_P + 2 >= 0 && -A -B + 3 * A_P -4 >= 0
  n_eval___1(A,B) -> Com_1(n_eval___2(A_P, B_P)) :|: -4 + 3 * A -B >= 0 && -2 + A >= 0 && 1 -2 * A + 2 * B >= 0 && A >= 0 && -1 + B >= 0 && -2 -2 * A + 3 * B >= 0 && -4 + 3 * A -B >= 0 && -2 + A >= 0 && 1 -2 * A + 2 * B >= 0 && A >= 0 && -1 + B >= 0 && -2 -2 * A + 3 * B >= 0 && B -A_P -1 >= 0 && A_P >= 0 && B + A_P -2 * B_P >= 0 && -B -A_P + 3 * B_P -1 >= 0 && A -A_P = 0
  n_eval___2(A,B) -> Com_1(n_eval___2(A_P, B_P)) :|: A >= 0 && -1 + B >= 0 && -2 -2 * A + 3 * B >= 0 && A >= 0 && -1 + B >= 0 && -2 -2 * A + 3 * B >= 0 && B -A_P -1 >= 0 && A_P >= 0 && B + A_P -2 * B_P >= 0 && -B -A_P + 3 * B_P -1 >= 0 && A -A_P = 0
  n_eval___2(A,B) -> Com_1(n_eval___3(A_P, B)) :|: A >= 0 && -1 + B >= 0 && -2 -2 * A + 3 * B >= 0 && A >= 0 && -1 + B >= 0 && -2 -2 * A + 3 * B >= 0 && -A + B -1 >= 0 && A >= 0 && A + B -2 * A_P + 2 >= 0 && -A -B + 3 * A_P -4 >= 0
  n_eval___3(A,B) -> Com_1(n_eval___1(A_P, B)) :|: -4 + 3 * A -B >= 0 && -2 + A >= 0 && 1 -2 * A + 2 * B >= 0 && -4 + 3 * A -B >= 0 && -2 + A >= 0 && 1 -2 * A + 2 * B >= 0 && -A + B -1 >= 0 && A >= 0 && A + B -2 * A_P + 2 >= 0 && -A -B + 3 * A_P -4 >= 0
  n_eval___3(A,B) -> Com_1(n_eval___2(A_P, B_P)) :|: -4 + 3 * A -B >= 0 && -2 + A >= 0 && 1 -2 * A + 2 * B >= 0 && -4 + 3 * A -B >= 0 && -2 + A >= 0 && 1 -2 * A + 2 * B >= 0 && B -A_P -1 >= 0 && A_P >= 0 && B + A_P -2 * B_P >= 0 && -B -A_P + 3 * B_P -1 >= 0 && A -A_P = 0
  n_eval___4(A,B) -> Com_1(n_eval___2(A_P, B_P)) :|: B -A_P -1 >= 0 && A_P >= 0 && B + A_P -2 * B_P >= 0 && -B -A_P + 3 * B_P -1 >= 0 && A -A_P = 0
  n_eval___4(A,B) -> Com_1(n_eval___3(A_P, B)) :|: -A + B -1 >= 0 && A >= 0 && A + B -2 * A_P + 2 >= 0 && -A -B + 3 * A_P -4 >= 0
  n_start(A,B) -> Com_1(n_eval___4(A, B))
)
